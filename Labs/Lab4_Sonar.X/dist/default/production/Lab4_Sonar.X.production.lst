

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue May 19 09:38:35 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1,minocg
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F458 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK1
    87  001CAC                     __pidataBANK1:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _matCGRAM
    91  001CAC  08                 	db	8
    92  001CAD  04                 	db	4
    93  001CAE  04                 	db	4
    94  001CAF  0A                 	db	10
    95  001CB0  11                 	db	17
    96  001CB1  1F                 	db	31
    97  001CB2  11                 	db	17
    98  001CB3  00                 	db	0
    99  001CB4  02                 	db	2
   100  001CB5  04                 	db	4
   101  001CB6  0E                 	db	14
   102  001CB7  11                 	db	17
   103  001CB8  1F                 	db	31
   104  001CB9  10                 	db	16
   105  001CBA  0E                 	db	14
   106  001CBB  00                 	db	0
   107  001CBC  02                 	db	2
   108  001CBD  04                 	db	4
   109  001CBE  1F                 	db	31
   110  001CBF  10                 	db	16
   111  001CC0  1E                 	db	30
   112  001CC1  10                 	db	16
   113  001CC2  1F                 	db	31
   114  001CC3  00                 	db	0
   115  001CC4  08                 	db	8
   116  001CC5  04                 	db	4
   117  001CC6  0E                 	db	14
   118  001CC7  11                 	db	17
   119  001CC8  1F                 	db	31
   120  001CC9  10                 	db	16
   121  001CCA  0E                 	db	14
   122  001CCB  00                 	db	0
   123  001CCC  08                 	db	8
   124  001CCD  04                 	db	4
   125  001CCE  1F                 	db	31
   126  001CCF  10                 	db	16
   127  001CD0  1E                 	db	30
   128  001CD1  10                 	db	16
   129  001CD2  1F                 	db	31
   130  001CD3  00                 	db	0
   131  001CD4  04                 	db	4
   132  001CD5  0A                 	db	10
   133  001CD6  0E                 	db	14
   134  001CD7  11                 	db	17
   135  001CD8  1F                 	db	31
   136  001CD9  10                 	db	16
   137  001CDA  0E                 	db	14
   138  001CDB  00                 	db	0
   139  001CDC  08                 	db	8
   140  001CDD  04                 	db	4
   141  001CDE  0E                 	db	14
   142  001CDF  01                 	db	1
   143  001CE0  0F                 	db	15
   144  001CE1  11                 	db	17
   145  001CE2  0F                 	db	15
   146  001CE3  00                 	db	0
   147  001CE4  04                 	db	4
   148  001CE5  0A                 	db	10
   149  001CE6  0E                 	db	14
   150  001CE7  01                 	db	1
   151  001CE8  0F                 	db	15
   152  001CE9  11                 	db	17
   153  001CEA  0F                 	db	15
   154  001CEB  00                 	db	0
   155  0000                     _TMR0	set	4054
   156  0000                     _TMR3	set	4018
   157  0000                     _CCPR1	set	4030
   158  0000                     _TMR1	set	4046
   159  0000                     _TRISB	set	3987
   160  0000                     _PORTBbits	set	3969
   161  0000                     _PORTAbits	set	3968
   162  0000                     _PORTA	set	3968
   163  0000                     _RCONbits	set	4048
   164  0000                     _CCP1CONbits	set	4029
   165  0000                     _T3CONbits	set	4017
   166  0000                     _IPR1bits	set	3999
   167  0000                     _PIE1bits	set	3997
   168  0000                     _PIR1bits	set	3998
   169  0000                     _T1CONbits	set	4045
   170  0000                     _INTCON2bits	set	4081
   171  0000                     _INTCONbits	set	4082
   172  0000                     _TMR0L	set	4054
   173  0000                     _TMR0H	set	4055
   174  0000                     _T0CONbits	set	4053
   175  0000                     _TRISDbits	set	3989
   176  0000                     _TRISCbits	set	3988
   177  0000                     _TRISBbits	set	3987
   178  0000                     _TRISA	set	3986
   179  0000                     _CMCON	set	4020
   180  0000                     _ADCON1	set	4033
   181  0000                     _PORTDbits	set	3971
   182  0000                     _PORTCbits	set	3970
   183                           
   184                           	psect	smallconst
   185  000600                     __psmallconst:
   186                           	opt callstack 0
   187  000600  00                 	db	0
   188  000601                     STR_1:
   189  000601  4C                 	db	76	;'L'
   190  000602  61                 	db	97	;'a'
   191  000603  62                 	db	98	;'b'
   192  000604  34                 	db	52	;'4'
   193  000605  20                 	db	32
   194  000606  53                 	db	83	;'S'
   195  000607  6F                 	db	111	;'o'
   196  000608  6E                 	db	110	;'n'
   197  000609  61                 	db	97	;'a'
   198  00060A  72                 	db	114	;'r'
   199  00060B  20                 	db	32
   200  00060C  32                 	db	50	;'2'
   201  00060D  30                 	db	48	;'0'
   202  00060E  31                 	db	49	;'1'
   203  00060F  39                 	db	57	;'9'
   204  000610  00                 	db	0
   205  000611                     STR_2:
   206  000611  44                 	db	68	;'D'
   207  000612  69                 	db	105	;'i'
   208  000613  73                 	db	115	;'s'
   209  000614  74                 	db	116	;'t'
   210  000615  61                 	db	97	;'a'
   211  000616  6E                 	db	110	;'n'
   212  000617  63                 	db	99	;'c'
   213  000618  65                 	db	101	;'e'
   214  000619  20                 	db	32
   215  00061A  3D                 	db	61	;'='
   216  00061B  20                 	db	32
   217  00061C  25                 	db	37
   218  00061D  64                 	db	100	;'d'
   219  00061E  00                 	db	0
   220  00061F                     STR_3:
   221  00061F  6D                 	db	109	;'m'
   222  000620  6D                 	db	109	;'m'
   223  000621  00                 	db	0
   224                           
   225                           ; #config settings
   226  000622  00                 	db	0	; dummy byte at the end
   227  0000                     
   228                           	psect	cinit
   229  001C6A                     __pcinit:
   230                           	opt callstack 0
   231  001C6A                     start_initialization:
   232                           	opt callstack 0
   233  001C6A                     __initialization:
   234                           	opt callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK1 (64 bytes)
   237                           ; load TBLPTR registers with __pidataBANK1
   238  001C6A  0EAC               	movlw	low __pidataBANK1
   239  001C6C  6EF6               	movwf	tblptrl,c
   240  001C6E  0E1C               	movlw	high __pidataBANK1
   241  001C70  6EF7               	movwf	tblptrh,c
   242  001C72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   243  001C74  6EF8               	movwf	tblptru,c
   244  001C76  EE01  F000         	lfsr	0,__pdataBANK1
   245  001C7A  EE10 F040          	lfsr	1,64
   246  001C7E                     copy_data0:
   247  001C7E  0009               	tblrd		*+
   248  001C80  CFF5 FFEE          	movff	tablat,postinc0
   249  001C84  50E5               	movf	postdec1,w,c
   250  001C86  50E1               	movf	fsr1l,w,c
   251  001C88  E1FA               	bnz	copy_data0
   252                           
   253                           ; Clear objects allocated to BANK1 (52 bytes)
   254  001C8A  EE01  F040         	lfsr	0,__pbssBANK1
   255  001C8E  0E34               	movlw	52
   256  001C90                     clear_0:
   257  001C90  6AEE               	clrf	postinc0,c
   258  001C92  06E8               	decf	wreg,f,c
   259  001C94  E1FD               	bnz	clear_0
   260                           
   261                           ; Clear objects allocated to BANK0 (12 bytes)
   262  001C96  EE00  F0E6         	lfsr	0,__pbssBANK0
   263  001C9A  0E0C               	movlw	12
   264  001C9C                     clear_1:
   265  001C9C  6AEE               	clrf	postinc0,c
   266  001C9E  06E8               	decf	wreg,f,c
   267  001CA0  E1FD               	bnz	clear_1
   268  001CA2                     end_of_initialization:
   269                           	opt callstack 0
   270  001CA2                     __end_of__initialization:
   271                           	opt callstack 0
   272  001CA2  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   273  001CA4  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   274  001CA6  0100               	movlb	0
   275  001CA8  EF71  F007         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	bssBANK0
   278  0000E6                     __pbssBANK0:
   279                           	opt callstack 0
   280  0000E6                     _nout:
   281                           	opt callstack 0
   282  0000E6                     	ds	2
   283  0000E8                     _width:
   284                           	opt callstack 0
   285  0000E8                     	ds	2
   286  0000EA                     _prec:
   287                           	opt callstack 0
   288  0000EA                     	ds	2
   289  0000EC                     _flags:
   290                           	opt callstack 0
   291  0000EC                     	ds	2
   292  0000EE                     high_isr@t1:
   293                           	opt callstack 0
   294  0000EE                     	ds	2
   295  0000F0                     _g_compteEcho:
   296                           	opt callstack 0
   297  0000F0                     	ds	2
   298                           
   299                           	psect	bssBANK1
   300  000140                     __pbssBANK1:
   301                           	opt callstack 0
   302  000140                     _g_echo:
   303                           	opt callstack 0
   304  000140                     	ds	20
   305  000154                     _dbuf:
   306                           	opt callstack 0
   307  000154                     	ds	32
   308                           
   309                           	psect	dataBANK1
   310  000100                     __pdataBANK1:
   311                           	opt callstack 0
   312  000100                     _matCGRAM:
   313                           	opt callstack 0
   314  000100                     	ds	64
   315                           
   316                           	psect	cstackBANK0
   317  000060                     __pcstackBANK0:
   318                           	opt callstack 0
   319  000060                     ??_high_isr:
   320  000060                     
   321                           ; 1 bytes @ 0x0
   322  000060                     	ds	4
   323  000064                     high_isr@i:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x4
   327  000064                     	ds	2
   328  000066                     ??_low_isr:
   329                           
   330                           ; 1 bytes @ 0x6
   331  000066                     	ds	1
   332  000067                     ??_lcd_ecrireDonnees:
   333  000067                     ??_lcd_busy:
   334  000067                     ?_fputc:
   335                           	opt callstack 0
   336  000067                     ?_strlen:
   337                           	opt callstack 0
   338  000067                     ?___awdiv:
   339                           	opt callstack 0
   340  000067                     ?___lwdiv:
   341                           	opt callstack 0
   342  000067                     ?___aodiv:
   343                           	opt callstack 0
   344  000067                     ?___aomod:
   345                           	opt callstack 0
   346  000067                     ___awdiv@dividend:
   347                           	opt callstack 0
   348  000067                     ___lwdiv@dividend:
   349                           	opt callstack 0
   350  000067                     fputc@c:
   351                           	opt callstack 0
   352  000067                     strlen@s:
   353                           	opt callstack 0
   354  000067                     ___aodiv@dividend:
   355                           	opt callstack 0
   356  000067                     ___aomod@dividend:
   357                           	opt callstack 0
   358                           
   359                           ; 8 bytes @ 0x7
   360  000067                     	ds	1
   361  000068                     lcd_ecrireDonnees@donnee:
   362                           	opt callstack 0
   363  000068                     lcd_busy@adresse:
   364                           	opt callstack 0
   365                           
   366                           ; 1 bytes @ 0x8
   367  000068                     	ds	1
   368  000069                     ??_lcd_wrCom:
   369  000069                     ??_lcd_resetSequence:
   370  000069                     lcd_wrData@caractere:
   371                           	opt callstack 0
   372  000069                     ___awdiv@divisor:
   373                           	opt callstack 0
   374  000069                     ___lwdiv@divisor:
   375                           	opt callstack 0
   376  000069                     fputc@fp:
   377                           	opt callstack 0
   378  000069                     strlen@a:
   379                           	opt callstack 0
   380                           
   381                           ; 2 bytes @ 0x9
   382  000069                     	ds	1
   383  00006A                     lcd_wrCom@commande:
   384                           	opt callstack 0
   385  00006A                     lcd_effaceChar@nbr:
   386                           	opt callstack 0
   387                           
   388                           ; 1 bytes @ 0xA
   389  00006A                     	ds	1
   390  00006B                     ??_lcd_initCGRam:
   391  00006B                     ??_fputc:
   392  00006B                     ??_lcd_ecritChar:
   393  00006B                     lcd_effaceChar@i:
   394                           	opt callstack 0
   395  00006B                     lcd_gotoXY@y:
   396                           	opt callstack 0
   397  00006B                     ___awdiv@counter:
   398                           	opt callstack 0
   399  00006B                     ___lwdiv@quotient:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0xB
   403  00006B                     	ds	1
   404  00006C                     ??_lcd_gotoXY:
   405  00006C                     ___awdiv@sign:
   406                           	opt callstack 0
   407                           
   408                           ; 1 bytes @ 0xC
   409  00006C                     	ds	1
   410  00006D                     lcd_ecritChar@car:
   411                           	opt callstack 0
   412  00006D                     lcd_initCGRam@i:
   413                           	opt callstack 0
   414  00006D                     ___lwdiv@counter:
   415                           	opt callstack 0
   416  00006D                     ___awdiv@quotient:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0xD
   420  00006D                     	ds	1
   421  00006E                     lcd_gotoXY@x:
   422                           	opt callstack 0
   423  00006E                     lcd_ecritChar@posRam:
   424                           	opt callstack 0
   425  00006E                     lcd_initCGRam@j:
   426                           	opt callstack 0
   427                           
   428                           ; 1 bytes @ 0xE
   429  00006E                     	ds	1
   430  00006F                     lcd_effaceLigne@y:
   431                           	opt callstack 0
   432  00006F                     lcd_putMessage@chaine:
   433                           	opt callstack 0
   434  00006F                     ___aodiv@divisor:
   435                           	opt callstack 0
   436  00006F                     ___aomod@divisor:
   437                           	opt callstack 0
   438                           
   439                           ; 8 bytes @ 0xF
   440  00006F                     	ds	1
   441  000070                     ?_fputs:
   442                           	opt callstack 0
   443  000070                     fputs@s:
   444                           	opt callstack 0
   445                           
   446                           ; 2 bytes @ 0x10
   447  000070                     	ds	2
   448  000072                     ??_lcd_putMessage:
   449  000072                     fputs@fp:
   450                           	opt callstack 0
   451                           
   452                           ; 2 bytes @ 0x12
   453  000072                     	ds	2
   454  000074                     fputs@c:
   455                           	opt callstack 0
   456                           
   457                           ; 1 bytes @ 0x14
   458  000074                     	ds	1
   459  000075                     fputs@i:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x15
   463  000075                     	ds	2
   464  000077                     ?_pad:
   465                           	opt callstack 0
   466  000077                     lcd_putMessage@j:
   467                           	opt callstack 0
   468  000077                     ___aodiv@counter:
   469                           	opt callstack 0
   470  000077                     ___aomod@counter:
   471                           	opt callstack 0
   472  000077                     pad@fp:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x17
   476  000077                     	ds	1
   477  000078                     ___aodiv@sign:
   478                           	opt callstack 0
   479  000078                     ___aomod@sign:
   480                           	opt callstack 0
   481                           
   482                           ; 1 bytes @ 0x18
   483  000078                     	ds	1
   484  000079                     ?_abs:
   485                           	opt callstack 0
   486  000079                     pad@buf:
   487                           	opt callstack 0
   488  000079                     abs@a:
   489                           	opt callstack 0
   490  000079                     ___aodiv@quotient:
   491                           	opt callstack 0
   492                           
   493                           ; 8 bytes @ 0x19
   494  000079                     	ds	2
   495  00007B                     ??_abs:
   496  00007B                     pad@p:
   497                           	opt callstack 0
   498                           
   499                           ; 2 bytes @ 0x1B
   500  00007B                     	ds	2
   501  00007D                     ??_pad:
   502                           
   503                           ; 1 bytes @ 0x1D
   504  00007D                     	ds	1
   505  00007E                     pad@i:
   506                           	opt callstack 0
   507                           
   508                           ; 2 bytes @ 0x1E
   509  00007E                     	ds	2
   510  000080                     pad@w:
   511                           	opt callstack 0
   512                           
   513                           ; 2 bytes @ 0x20
   514  000080                     	ds	2
   515  000082                     ?_dtoa:
   516                           	opt callstack 0
   517  000082                     dtoa@fp:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x22
   521  000082                     	ds	2
   522  000084                     dtoa@d:
   523                           	opt callstack 0
   524                           
   525                           ; 8 bytes @ 0x24
   526  000084                     	ds	8
   527  00008C                     ??_dtoa:
   528                           
   529                           ; 1 bytes @ 0x2C
   530  00008C                     	ds	8
   531  000094                     _dtoa$1380:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x34
   535  000094                     	ds	2
   536  000096                     dtoa@p:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0x36
   540  000096                     	ds	2
   541  000098                     dtoa@w:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0x38
   545  000098                     	ds	2
   546  00009A                     dtoa@s:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x3A
   550  00009A                     	ds	2
   551  00009C                     dtoa@n:
   552                           	opt callstack 0
   553                           
   554                           ; 8 bytes @ 0x3C
   555  00009C                     	ds	8
   556  0000A4                     dtoa@i:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x44
   560  0000A4                     	ds	2
   561  0000A6                     ?_vfpfcnvrt:
   562                           	opt callstack 0
   563  0000A6                     vfpfcnvrt@fp:
   564                           	opt callstack 0
   565                           
   566                           ; 2 bytes @ 0x46
   567  0000A6                     	ds	2
   568  0000A8                     vfpfcnvrt@fmt:
   569                           	opt callstack 0
   570                           
   571                           ; 2 bytes @ 0x48
   572  0000A8                     	ds	2
   573  0000AA                     vfpfcnvrt@ap:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x4A
   577  0000AA                     	ds	2
   578  0000AC                     ??_vfpfcnvrt:
   579                           
   580                           ; 1 bytes @ 0x4C
   581  0000AC                     	ds	2
   582  0000AE                     vfpfcnvrt@ll:
   583                           	opt callstack 0
   584                           
   585                           ; 8 bytes @ 0x4E
   586  0000AE                     	ds	8
   587  0000B6                     ?_vfprintf:
   588                           	opt callstack 0
   589  0000B6                     vfprintf@fp:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x56
   593  0000B6                     	ds	2
   594  0000B8                     vfprintf@fmt:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x58
   598  0000B8                     	ds	2
   599  0000BA                     vfprintf@ap:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x5A
   603  0000BA                     	ds	2
   604  0000BC                     vfprintf@cfmt:
   605                           	opt callstack 0
   606                           
   607                           ; 2 bytes @ 0x5C
   608  0000BC                     	ds	2
   609  0000BE                     ?_sprintf:
   610                           	opt callstack 0
   611  0000BE                     sprintf@s:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0x5E
   615  0000BE                     	ds	2
   616  0000C0                     sprintf@fmt:
   617                           	opt callstack 0
   618                           
   619                           ; 2 bytes @ 0x60
   620  0000C0                     	ds	4
   621  0000C4                     sprintf@ret:
   622                           	opt callstack 0
   623                           
   624                           ; 2 bytes @ 0x64
   625  0000C4                     	ds	2
   626  0000C6                     sprintf@ap:
   627                           	opt callstack 0
   628                           
   629                           ; 2 bytes @ 0x66
   630  0000C6                     	ds	2
   631  0000C8                     sprintf@f:
   632                           	opt callstack 0
   633                           
   634                           ; 6 bytes @ 0x68
   635  0000C8                     	ds	6
   636  0000CE                     main@message:
   637                           	opt callstack 0
   638                           
   639                           ; 20 bytes @ 0x6E
   640  0000CE                     	ds	20
   641  0000E2                     main@dist_mm:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0x82
   645  0000E2                     	ds	2
   646  0000E4                     main@i:
   647                           	opt callstack 0
   648                           
   649                           ; 2 bytes @ 0x84
   650  0000E4                     	ds	2
   651                           
   652 ;;
   653 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   654 ;;
   655 ;; *************** function _main *****************
   656 ;; Defined at:
   657 ;;		line 22 in file "main.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;  message        20  110[BANK0 ] unsigned char [20]
   662 ;;  i               2  132[BANK0 ] int 
   663 ;;  dist_mm         2  130[BANK0 ] int 
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   673 ;;      Params:         0       0       0       0       0       0       0
   674 ;;      Locals:         0      24       0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0       0       0
   676 ;;      Totals:         0      24       0       0       0       0       0
   677 ;;Total ram usage:       24 bytes
   678 ;; Hardware stack levels required when called:   10
   679 ;; This function calls:
   680 ;;		___awdiv
   681 ;;		___lwdiv
   682 ;;		_initialisation
   683 ;;		_lcd_cacheCurseur
   684 ;;		_lcd_effaceLigne
   685 ;;		_lcd_gotoXY
   686 ;;		_lcd_init
   687 ;;		_lcd_putMessage
   688 ;;		_sprintf
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text0
   695  000EE2                     __ptext0:
   696                           	opt callstack 0
   697  000EE2                     _main:
   698                           	opt callstack 21
   699  000EE2  FFFF               	dw	65535	; assembler added errata NOP
   700                           
   701                           ;main.c: 24:     int dist_mm;;main.c: 25:     int i;;main.c: 26:     char message[20];;m
      +                          ain.c: 28:     initialisation();
   702  000EE4  EC03  F00C         	call	_initialisation	;wreg free
   703  000EE8                     
   704                           ;main.c: 29:     lcd_init();
   705  000EE8  EC94  F00E         	call	_lcd_init	;wreg free
   706  000EEC                     
   707                           ;main.c: 31:     PORTCbits.RC0 = 0;
   708  000EEC  9082               	bcf	130,0,c	;volatile
   709  000EEE                     
   710                           ;main.c: 32:     PORTDbits.RD7 = 0;
   711  000EEE  9E83               	bcf	131,7,c	;volatile
   712  000EF0                     
   713                           ;main.c: 33:     PORTCbits.RC1 = 0;
   714  000EF0  9282               	bcf	130,1,c	;volatile
   715  000EF2                     
   716                           ;main.c: 35:     lcd_putMessage((const unsigned char*) "Lab4 Sonar 2019");
   717  000EF2  0E01               	movlw	low STR_1
   718  000EF4  0100               	movlb	0	; force () banked
   719  000EF6  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   720  000EF8  0E06               	movlw	high STR_1
   721  000EFA  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   722  000EFC  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   723  000EFE  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   724  000F00  A4D8               	btfss	status,2,c
   725  000F02  0E00               	movlw	low (__mediumconst shr (0+16))
   726  000F04  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   727  000F06  EC62  F00A         	call	_lcd_putMessage	;wreg free
   728  000F0A                     l2397:
   729  000F0A  FFFF               	dw	65535	; assembler added errata NOP
   730                           
   731                           ;main.c: 38:     {;main.c: 39:         if (g_compteEcho >= 10)
   732  000F0C  0100               	movlb	0	; force () banked
   733  000F0E  BFF1               	btfsc	(_g_compteEcho+1)& (0+255),7,b
   734  000F10  EF93  F007         	goto	u1391
   735  000F14  51F1               	movf	(_g_compteEcho+1)& (0+255),w,b
   736  000F16  E10A               	bnz	u1390
   737  000F18  0E0A               	movlw	10
   738  000F1A  5DF0               	subwf	_g_compteEcho& (0+255),w,b
   739  000F1C  A0D8               	btfss	status,0,c
   740  000F1E  EF93  F007         	goto	u1391
   741  000F22  EF96  F007         	goto	u1390
   742  000F26                     u1391:
   743  000F26  FFFF               	dw	65535	; assembler added errata NOP
   744  000F28  EF85  F007         	goto	l2397
   745  000F2C                     u1390:
   746  000F2C  FFFF               	dw	65535	; assembler added errata NOP
   747  000F2E                     
   748                           ; BSR set to: 0
   749                           ;main.c: 40:         {;main.c: 41:             dist_mm = 0;
   750  000F2E  0E00               	movlw	0
   751  000F30  0100               	movlb	0	; force () banked
   752  000F32  6FE3               	movwf	(main@dist_mm+1)& (0+255),b
   753  000F34  0E00               	movlw	0
   754  000F36  6FE2               	movwf	main@dist_mm& (0+255),b
   755                           
   756                           ;main.c: 43:             for (i = 0; i < 10; i++)
   757  000F38  0E00               	movlw	0
   758  000F3A  0100               	movlb	0	; force () banked
   759  000F3C  6FE5               	movwf	(main@i+1)& (0+255),b
   760  000F3E  0E00               	movlw	0
   761  000F40  6FE4               	movwf	main@i& (0+255),b
   762  000F42                     
   763                           ; BSR set to: 0
   764  000F42  0100               	movlb	0	; force () banked
   765  000F44  BFE5               	btfsc	(main@i+1)& (0+255),7,b
   766  000F46  EFAE  F007         	goto	u1401
   767  000F4A  51E5               	movf	(main@i+1)& (0+255),w,b
   768  000F4C  E10A               	bnz	u1400
   769  000F4E  0E0A               	movlw	10
   770  000F50  5DE4               	subwf	main@i& (0+255),w,b
   771  000F52  A0D8               	btfss	status,0,c
   772  000F54  EFAE  F007         	goto	u1401
   773  000F58  EFB1  F007         	goto	u1400
   774  000F5C                     u1401:
   775  000F5C  FFFF               	dw	65535	; assembler added errata NOP
   776  000F5E  EFB4  F007         	goto	l2405
   777  000F62                     u1400:
   778  000F62  FFFF               	dw	65535	; assembler added errata NOP
   779  000F64  EFE8  F007         	goto	l2411
   780  000F68                     l2405:
   781  000F68  FFFF               	dw	65535	; assembler added errata NOP
   782                           
   783                           ; BSR set to: 0
   784                           ;main.c: 44:             {;main.c: 54:                 dist_mm = dist_mm + (g_echo[i]/3)
      +                          ;
   785  000F6A  90D8               	bcf	status,0,c
   786  000F6C  0100               	movlb	0	; force () banked
   787  000F6E  35E4               	rlcf	main@i& (0+255),w,b
   788  000F70  6ED9               	movwf	fsr2l,c
   789  000F72  35E5               	rlcf	(main@i+1)& (0+255),w,b
   790  000F74  6EDA               	movwf	fsr2h,c
   791  000F76  0E40               	movlw	low _g_echo
   792  000F78  26D9               	addwf	fsr2l,f,c
   793  000F7A  0E01               	movlw	high _g_echo
   794  000F7C  22DA               	addwfc	fsr2h,f,c
   795  000F7E  CFDE F067          	movff	postinc2,___lwdiv@dividend
   796  000F82  CFDD F068          	movff	postdec2,___lwdiv@dividend+1
   797  000F86  0E00               	movlw	0
   798  000F88  0100               	movlb	0	; force () banked
   799  000F8A  6F6A               	movwf	(___lwdiv@divisor+1)& (0+255),b
   800  000F8C  0E03               	movlw	3
   801  000F8E  6F69               	movwf	___lwdiv@divisor& (0+255),b
   802  000F90  ECBB  F00B         	call	___lwdiv	;wreg free
   803  000F94  0100               	movlb	0	; force () banked
   804  000F96  51E2               	movf	main@dist_mm& (0+255),w,b
   805  000F98  0100               	movlb	0	; force () banked
   806  000F9A  2567               	addwf	?___lwdiv& (0+255),w,b
   807  000F9C  0100               	movlb	0	; force () banked
   808  000F9E  6FE2               	movwf	main@dist_mm& (0+255),b
   809  000FA0  51E3               	movf	(main@dist_mm+1)& (0+255),w,b
   810  000FA2  0100               	movlb	0	; force () banked
   811  000FA4  2168               	addwfc	(?___lwdiv+1)& (0+255),w,b
   812  000FA6  0100               	movlb	0	; force () banked
   813  000FA8  6FE3               	movwf	(main@dist_mm+1)& (0+255),b
   814  000FAA                     
   815                           ; BSR set to: 0
   816                           ;main.c: 55:             }
   817  000FAA  0100               	movlb	0	; force () banked
   818  000FAC  4BE4               	infsnz	main@i& (0+255),f,b
   819  000FAE  2BE5               	incf	(main@i+1)& (0+255),f,b
   820  000FB0                     
   821                           ; BSR set to: 0
   822  000FB0  0100               	movlb	0	; force () banked
   823  000FB2  BFE5               	btfsc	(main@i+1)& (0+255),7,b
   824  000FB4  EFE5  F007         	goto	u1411
   825  000FB8  51E5               	movf	(main@i+1)& (0+255),w,b
   826  000FBA  E10A               	bnz	u1410
   827  000FBC  0E0A               	movlw	10
   828  000FBE  5DE4               	subwf	main@i& (0+255),w,b
   829  000FC0  A0D8               	btfss	status,0,c
   830  000FC2  EFE5  F007         	goto	u1411
   831  000FC6  EFE8  F007         	goto	u1410
   832  000FCA                     u1411:
   833  000FCA  FFFF               	dw	65535	; assembler added errata NOP
   834  000FCC  EFB4  F007         	goto	l2405
   835  000FD0                     u1410:
   836  000FD0                     l2411:
   837  000FD0  FFFF               	dw	65535	; assembler added errata NOP
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 57:             sprintf(message, "Distance = %d", (dist_mm/10));
   841  000FD2  0ECE               	movlw	low main@message
   842  000FD4  0100               	movlb	0	; force () banked
   843  000FD6  6FBE               	movwf	sprintf@s& (0+255),b
   844  000FD8  0E00               	movlw	high main@message
   845  000FDA  6FBF               	movwf	(sprintf@s+1)& (0+255),b
   846  000FDC  0E11               	movlw	low STR_2
   847  000FDE  0100               	movlb	0	; force () banked
   848  000FE0  6FC0               	movwf	sprintf@fmt& (0+255),b
   849  000FE2  0E06               	movlw	high STR_2
   850  000FE4  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
   851  000FE6  C0E2  F067         	movff	main@dist_mm,___awdiv@dividend
   852  000FEA  C0E3  F068         	movff	main@dist_mm+1,___awdiv@dividend+1
   853  000FEE  0E00               	movlw	0
   854  000FF0  0100               	movlb	0	; force () banked
   855  000FF2  6F6A               	movwf	(___awdiv@divisor+1)& (0+255),b
   856  000FF4  0E0A               	movlw	10
   857  000FF6  6F69               	movwf	___awdiv@divisor& (0+255),b
   858  000FF8  EC73  F009         	call	___awdiv	;wreg free
   859  000FFC  C067  F0C2         	movff	?___awdiv,?_sprintf+4
   860  001000  C068  F0C3         	movff	?___awdiv+1,?_sprintf+5
   861  001004  EC30  F00D         	call	_sprintf	;wreg free
   862  001008                     
   863                           ;main.c: 60:             lcd_cacheCurseur();
   864  001008  ECC5  F00E         	call	_lcd_cacheCurseur	;wreg free
   865  00100C                     
   866                           ;main.c: 61:             lcd_gotoXY(1, 2);
   867  00100C  0E02               	movlw	2
   868  00100E  0100               	movlb	0	; force () banked
   869  001010  6F6B               	movwf	lcd_gotoXY@y& (0+255),b
   870  001012  0E01               	movlw	1
   871  001014  EC6F  F00B         	call	_lcd_gotoXY
   872  001018                     
   873                           ;main.c: 62:             lcd_effaceLigne(2);
   874  001018  0E02               	movlw	2
   875  00101A  ECAD  F00E         	call	_lcd_effaceLigne
   876  00101E                     
   877                           ;main.c: 63:             lcd_putMessage((const unsigned char*) message);
   878  00101E  0ECE               	movlw	low main@message
   879  001020  0100               	movlb	0	; force () banked
   880  001022  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   881  001024  0E00               	movlw	high main@message
   882  001026  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   883  001028  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   884  00102A  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   885  00102C  A4D8               	btfss	status,2,c
   886  00102E  0E20               	movlw	32
   887  001030  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   888  001032  EC62  F00A         	call	_lcd_putMessage	;wreg free
   889  001036                     
   890                           ;main.c: 64:             lcd_gotoXY(17, 2);
   891  001036  0E02               	movlw	2
   892  001038  0100               	movlb	0	; force () banked
   893  00103A  6F6B               	movwf	lcd_gotoXY@y& (0+255),b
   894  00103C  0E11               	movlw	17
   895  00103E  EC6F  F00B         	call	_lcd_gotoXY
   896  001042                     
   897                           ;main.c: 65:             lcd_putMessage((const unsigned char*) "mm");
   898  001042  0E1F               	movlw	low STR_3
   899  001044  0100               	movlb	0	; force () banked
   900  001046  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   901  001048  0E06               	movlw	high STR_3
   902  00104A  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   903  00104C  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   904  00104E  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   905  001050  A4D8               	btfss	status,2,c
   906  001052  0E00               	movlw	low (__mediumconst shr (0+16))
   907  001054  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   908  001056  EC62  F00A         	call	_lcd_putMessage	;wreg free
   909  00105A  EF85  F007         	goto	l2397
   910  00105E  EF15  F000         	goto	start
   911  001062                     __end_of_main:
   912                           	opt callstack 0
   913                           
   914 ;; *************** function _sprintf *****************
   915 ;; Defined at:
   916 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  s               2   94[BANK0 ] PTR unsigned char 
   919 ;;		 -> main@message(20), 
   920 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
   921 ;;		 -> STR_2(14), 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  f               6  104[BANK0 ] struct _IO_FILE
   924 ;;  ap              2  102[BANK0 ] PTR void [1]
   925 ;;		 -> ?_sprintf(2), 
   926 ;;  ret             2  100[BANK0 ] int 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  2   94[BANK0 ] int 
   929 ;; Registers used:
   930 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   936 ;;      Params:         0       6       0       0       0       0       0
   937 ;;      Locals:         0      10       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0
   939 ;;      Totals:         0      16       0       0       0       0       0
   940 ;;Total ram usage:       16 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    9
   943 ;; This function calls:
   944 ;;		_vfprintf
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text1
   951  001A60                     __ptext1:
   952                           	opt callstack 0
   953  001A60                     _sprintf:
   954                           	opt callstack 0
   955  001A60  FFFF               	dw	65535	; assembler added errata NOP
   956  001A62  0EC2               	movlw	low (?_sprintf+4)
   957  001A64  0100               	movlb	0	; () banked
   958  001A66  6FC6               	movwf	sprintf@ap& (0+255),b
   959  001A68  0E00               	movlw	high (?_sprintf+4)
   960  001A6A  6FC7               	movwf	(sprintf@ap+1)& (0+255),b
   961  001A6C  C0BE  F0C8         	movff	sprintf@s,sprintf@f
   962  001A70  C0BF  F0C9         	movff	sprintf@s+1,sprintf@f+1
   963  001A74                     
   964                           ; BSR set to: 0
   965  001A74  0E00               	movlw	0
   966  001A76  6FCB               	movwf	(sprintf@f+3)& (0+255),b
   967  001A78  0E00               	movlw	0
   968  001A7A  6FCA               	movwf	(sprintf@f+2)& (0+255),b
   969  001A7C                     
   970                           ; BSR set to: 0
   971  001A7C  0E00               	movlw	0
   972  001A7E  6FCD               	movwf	(sprintf@f+5)& (0+255),b
   973  001A80  0E00               	movlw	0
   974  001A82  6FCC               	movwf	(sprintf@f+4)& (0+255),b
   975  001A84                     
   976                           ; BSR set to: 0
   977  001A84  0EC8               	movlw	low sprintf@f
   978  001A86  6FB6               	movwf	vfprintf@fp& (0+255),b
   979  001A88  0E00               	movlw	high sprintf@f
   980  001A8A  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
   981  001A8C  C0C0  F0B8         	movff	sprintf@fmt,vfprintf@fmt
   982  001A90  C0C1  F0B9         	movff	sprintf@fmt+1,vfprintf@fmt+1
   983  001A94  0EC6               	movlw	low sprintf@ap
   984  001A96  6FBA               	movwf	vfprintf@ap& (0+255),b
   985  001A98  0E00               	movlw	high sprintf@ap
   986  001A9A  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
   987  001A9C  EC43  F00C         	call	_vfprintf	;wreg free
   988  001AA0  C0B6  F0C4         	movff	?_vfprintf,sprintf@ret
   989  001AA4  C0B7  F0C5         	movff	?_vfprintf+1,sprintf@ret+1
   990  001AA8  0100               	movlb	0	; () banked
   991  001AAA  51CA               	movf	(sprintf@f+2)& (0+255),w,b
   992  001AAC  25BE               	addwf	sprintf@s& (0+255),w,b
   993  001AAE  6ED9               	movwf	fsr2l,c
   994  001AB0  51CB               	movf	(sprintf@f+3)& (0+255),w,b
   995  001AB2  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
   996  001AB4  6EDA               	movwf	fsr2h,c
   997  001AB6  0E00               	movlw	0
   998  001AB8  6EDF               	movwf	indf2,c
   999  001ABA                     
  1000                           ; BSR set to: 0
  1001  001ABA  C0C4  F0BE         	movff	sprintf@ret,?_sprintf
  1002  001ABE  C0C5  F0BF         	movff	sprintf@ret+1,?_sprintf+1
  1003  001AC2                     
  1004                           ; BSR set to: 0
  1005  001AC2  0012               	return		;funcret
  1006  001AC4  FFFF               	dw	65535	; errata NOP
  1007  001AC6                     __end_of_sprintf:
  1008                           	opt callstack 0
  1009                           
  1010 ;; *************** function _vfprintf *****************
  1011 ;; Defined at:
  1012 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;  fp              2   86[BANK0 ] PTR struct _IO_FILE
  1015 ;;		 -> sprintf@f(6), 
  1016 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1017 ;;		 -> STR_2(14), 
  1018 ;;  ap              2   90[BANK0 ] PTR PTR void 
  1019 ;;		 -> sprintf@ap(2), 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  cfmt            2   92[BANK0 ] PTR unsigned char 
  1022 ;;		 -> STR_2(14), 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2   86[BANK0 ] int 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1032 ;;      Params:         0       6       0       0       0       0       0
  1033 ;;      Locals:         0       2       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0
  1035 ;;      Totals:         0       8       0       0       0       0       0
  1036 ;;Total ram usage:        8 bytes
  1037 ;; Hardware stack levels used:    1
  1038 ;; Hardware stack levels required when called:    8
  1039 ;; This function calls:
  1040 ;;		_vfpfcnvrt
  1041 ;; This function is called by:
  1042 ;;		_sprintf
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text2
  1047  001886                     __ptext2:
  1048                           	opt callstack 0
  1049  001886                     _vfprintf:
  1050                           	opt callstack 0
  1051  001886  FFFF               	dw	65535	; assembler added errata NOP
  1052  001888                     
  1053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1054  001888  C0B8  F0BC         	movff	vfprintf@fmt,vfprintf@cfmt
  1055  00188C  C0B9  F0BD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1056  001890                     
  1057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1058  001890  0E00               	movlw	0
  1059  001892  0100               	movlb	0	; force () banked
  1060  001894  6FE7               	movwf	(_nout+1)& (0+255),b
  1061  001896  0E00               	movlw	0
  1062  001898  6FE6               	movwf	_nout& (0+255),b
  1063                           
  1064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1065  00189A  EF67  F00C         	goto	l2211
  1066  00189E                     l2209:
  1067  00189E  FFFF               	dw	65535	; assembler added errata NOP
  1068                           
  1069                           ; BSR set to: 0
  1070                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1071  0018A0  C0B6  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  1072  0018A4  C0B7  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1073  0018A8  0EBC               	movlw	low vfprintf@cfmt
  1074  0018AA  0100               	movlb	0	; force () banked
  1075  0018AC  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  1076  0018AE  0E00               	movlw	high vfprintf@cfmt
  1077  0018B0  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1078  0018B2  C0BA  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  1079  0018B6  C0BB  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1080  0018BA  ECD2  F004         	call	_vfpfcnvrt	;wreg free
  1081  0018BE  0100               	movlb	0	; force () banked
  1082  0018C0  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  1083  0018C2  0100               	movlb	0	; force () banked
  1084  0018C4  27E6               	addwf	_nout& (0+255),f,b
  1085  0018C6  0100               	movlb	0	; force () banked
  1086  0018C8  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1087  0018CA  0100               	movlb	0	; force () banked
  1088  0018CC  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1089  0018CE                     l2211:
  1090  0018CE  FFFF               	dw	65535	; assembler added errata NOP
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1094  0018D0  C0BC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1095  0018D4  C0BD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1096  0018D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1097  0018D8  6AF8               	clrf	tblptru,c
  1098  0018DA                     	endif
  1099  0018DA                     	if	0	;tblptru may be non-zero
  1100  0018DA                     	endif
  1101  0018DA  0008               	tblrd		*
  1102  0018DC  FFFF               	dw	65535	; errata NOP
  1103  0018DE  50F5               	movf	tablat,w,c
  1104  0018E0  0900               	iorlw	0
  1105  0018E2  A4D8               	btfss	status,2,c
  1106  0018E4  EF76  F00C         	goto	u1261
  1107  0018E8  EF79  F00C         	goto	u1260
  1108  0018EC                     u1261:
  1109  0018EC  FFFF               	dw	65535	; assembler added errata NOP
  1110  0018EE  EF4F  F00C         	goto	l2209
  1111  0018F2                     u1260:
  1112  0018F2  FFFF               	dw	65535	; assembler added errata NOP
  1113  0018F4                     
  1114                           ; BSR set to: 0
  1115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1116  0018F4  C0E6  F0B6         	movff	_nout,?_vfprintf
  1117  0018F8  C0E7  F0B7         	movff	_nout+1,?_vfprintf+1
  1118  0018FC                     
  1119                           ; BSR set to: 0
  1120  0018FC  0012               	return		;funcret
  1121  0018FE  FFFF               	dw	65535	; errata NOP
  1122  001900                     __end_of_vfprintf:
  1123                           	opt callstack 0
  1124                           
  1125 ;; *************** function _vfpfcnvrt *****************
  1126 ;; Defined at:
  1127 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1130 ;;		 -> sprintf@f(6), 
  1131 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  1132 ;;		 -> vfprintf@cfmt(2), 
  1133 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1134 ;;		 -> sprintf@ap(2), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  ll              8   78[BANK0 ] long long 
  1137 ;;  llu             8    0        unsigned long long 
  1138 ;;  f               4    0        unsigned long long 
  1139 ;;  vp              3    0        PTR void 
  1140 ;;  ct              3    0        unsigned char [3]
  1141 ;;  cp              3    0        PTR unsigned char 
  1142 ;;  i               2    0        int 
  1143 ;;  done            2    0        int 
  1144 ;;  c               1    0        unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  2   70[BANK0 ] int 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         0       6       0       0       0       0       0
  1155 ;;      Locals:         0       8       0       0       0       0       0
  1156 ;;      Temps:          0       2       0       0       0       0       0
  1157 ;;      Totals:         0      16       0       0       0       0       0
  1158 ;;Total ram usage:       16 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    7
  1161 ;; This function calls:
  1162 ;;		_dtoa
  1163 ;;		_fputc
  1164 ;; This function is called by:
  1165 ;;		_vfprintf
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text3
  1170  0009A4                     __ptext3:
  1171                           	opt callstack 0
  1172  0009A4                     _vfpfcnvrt:
  1173                           	opt callstack 0
  1174  0009A4  FFFF               	dw	65535	; assembler added errata NOP
  1175  0009A6                     
  1176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1177  0009A6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1178  0009AA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1179  0009AE  CFDE FFF6          	movff	postinc2,tblptrl
  1180  0009B2  CFDD FFF7          	movff	postdec2,tblptrh
  1181  0009B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1182  0009B6  6AF8               	clrf	tblptru,c
  1183  0009B8                     	endif
  1184  0009B8                     	if	0	;tblptru may be non-zero
  1185  0009B8                     	endif
  1186  0009B8  0008               	tblrd		*
  1187  0009BA  FFFF               	dw	65535	; errata NOP
  1188  0009BC  50F5               	movf	tablat,w,c
  1189  0009BE  0A25               	xorlw	37
  1190  0009C0  A4D8               	btfss	status,2,c
  1191  0009C2  EFE5  F004         	goto	u1171
  1192  0009C6  EFE8  F004         	goto	u1170
  1193  0009CA                     u1171:
  1194  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  1195  0009CC  EFA8  F005         	goto	l2095
  1196  0009D0                     u1170:
  1197  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  1198  0009D2                     
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1200  0009D2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1201  0009D6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1202  0009DA  2ADE               	incf	postinc2,f,c
  1203  0009DC  0E00               	movlw	0
  1204  0009DE  22DD               	addwfc	postdec2,f,c
  1205  0009E0                     
  1206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1207  0009E0  0E00               	movlw	0
  1208  0009E2  0100               	movlb	0	; force () banked
  1209  0009E4  6FE9               	movwf	(_width+1)& (0+255),b
  1210  0009E6  0E00               	movlw	0
  1211  0009E8  6FE8               	movwf	_width& (0+255),b
  1212  0009EA  C0E8  F0EC         	movff	_width,_flags
  1213  0009EE  C0E9  F0ED         	movff	_width+1,_flags+1
  1214  0009F2                     
  1215                           ; BSR set to: 0
  1216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1217  0009F2  0100               	movlb	0	; force () banked
  1218  0009F4  69EA               	setf	_prec& (0+255),b
  1219  0009F6  69EB               	setf	(_prec+1)& (0+255),b
  1220  0009F8                     
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1223  0009F8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1224  0009FC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1225  000A00  CFDE FFF6          	movff	postinc2,tblptrl
  1226  000A04  CFDD FFF7          	movff	postdec2,tblptrh
  1227  000A08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1228  000A08  6AF8               	clrf	tblptru,c
  1229  000A0A                     	endif
  1230  000A0A                     	if	0	;tblptru may be non-zero
  1231  000A0A                     	endif
  1232  000A0A  0008               	tblrd		*
  1233  000A0C  FFFF               	dw	65535	; errata NOP
  1234  000A0E  50F5               	movf	tablat,w,c
  1235  000A10  0A64               	xorlw	100
  1236  000A12  B4D8               	btfsc	status,2,c
  1237  000A14  EF0E  F005         	goto	u1181
  1238  000A18  EF11  F005         	goto	u1180
  1239  000A1C                     u1181:
  1240  000A1C  FFFF               	dw	65535	; assembler added errata NOP
  1241  000A1E  EF27  F005         	goto	l2073
  1242  000A22                     u1180:
  1243  000A22  FFFF               	dw	65535	; assembler added errata NOP
  1244  000A24                     
  1245                           ; BSR set to: 0
  1246  000A24  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1247  000A28  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1248  000A2C  CFDE FFF6          	movff	postinc2,tblptrl
  1249  000A30  CFDD FFF7          	movff	postdec2,tblptrh
  1250  000A34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1251  000A34  6AF8               	clrf	tblptru,c
  1252  000A36                     	endif
  1253  000A36                     	if	0	;tblptru may be non-zero
  1254  000A36                     	endif
  1255  000A36  0008               	tblrd		*
  1256  000A38  FFFF               	dw	65535	; errata NOP
  1257  000A3A  50F5               	movf	tablat,w,c
  1258  000A3C  0A69               	xorlw	105
  1259  000A3E  A4D8               	btfss	status,2,c
  1260  000A40  EF24  F005         	goto	u1191
  1261  000A44  EF27  F005         	goto	u1190
  1262  000A48                     u1191:
  1263  000A48  FFFF               	dw	65535	; assembler added errata NOP
  1264  000A4A  EF69  F005         	goto	l2079
  1265  000A4E                     u1190:
  1266  000A4E                     l2073:
  1267  000A4E  FFFF               	dw	65535	; assembler added errata NOP
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1271  000A50  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1272  000A54  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1273  000A58  2ADE               	incf	postinc2,f,c
  1274  000A5A  0E00               	movlw	0
  1275  000A5C  22DD               	addwfc	postdec2,f,c
  1276                           
  1277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1278  000A5E  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1279  000A62  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1280  000A66  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  1281  000A6A  0E02               	movlw	2
  1282  000A6C  26DE               	addwf	postinc2,f,c
  1283  000A6E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  1284  000A72  0E00               	movlw	0
  1285  000A74  22DD               	addwfc	postdec2,f,c
  1286  000A76  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1287  000A7A  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1288  000A7E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@ll
  1289  000A82  CFDD F0AF          	movff	postdec2,vfpfcnvrt@ll+1
  1290  000A86  0100               	movlb	0	; force () banked
  1291  000A88  0E00               	movlw	0
  1292  000A8A  BFAF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1293  000A8C  0EFF               	movlw	-1
  1294  000A8E  6FB0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1295  000A90  6FB1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1296  000A92  6FB2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1297  000A94  6FB3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1298  000A96  6FB4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1299  000A98  6FB5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1300  000A9A                     
  1301                           ; BSR set to: 0
  1302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1303  000A9A  C0A6  F082         	movff	vfpfcnvrt@fp,dtoa@fp
  1304  000A9E  C0A7  F083         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1305  000AA2  C0AE  F084         	movff	vfpfcnvrt@ll,dtoa@d
  1306  000AA6  C0AF  F085         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1307  000AAA  C0B0  F086         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1308  000AAE  C0B1  F087         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1309  000AB2  C0B2  F088         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1310  000AB6  C0B3  F089         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1311  000ABA  C0B4  F08A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1312  000ABE  C0B5  F08B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1313  000AC2  EC12  F003         	call	_dtoa	;wreg free
  1314  000AC6  C082  F0A6         	movff	?_dtoa,?_vfpfcnvrt
  1315  000ACA  C083  F0A7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1316  000ACE  EFCA  F005         	goto	l291
  1317  000AD2                     l2079:
  1318  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1322  000AD4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1323  000AD8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1324  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  1325  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  1326  000AE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1327  000AE4  6AF8               	clrf	tblptru,c
  1328  000AE6                     	endif
  1329  000AE6                     	if	0	;tblptru may be non-zero
  1330  000AE6                     	endif
  1331  000AE6  0008               	tblrd		*
  1332  000AE8  FFFF               	dw	65535	; errata NOP
  1333  000AEA  50F5               	movf	tablat,w,c
  1334  000AEC  0A25               	xorlw	37
  1335  000AEE  A4D8               	btfss	status,2,c
  1336  000AF0  EF7C  F005         	goto	u1201
  1337  000AF4  EF7F  F005         	goto	u1200
  1338  000AF8                     u1201:
  1339  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  1340  000AFA  EF99  F005         	goto	l2089
  1341  000AFE                     u1200:
  1342  000AFE  FFFF               	dw	65535	; assembler added errata NOP
  1343  000B00                     
  1344                           ; BSR set to: 0
  1345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1346  000B00  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1347  000B04  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1348  000B08  2ADE               	incf	postinc2,f,c
  1349  000B0A  0E00               	movlw	0
  1350  000B0C  22DD               	addwfc	postdec2,f,c
  1351  000B0E                     
  1352                           ; BSR set to: 0
  1353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1354  000B0E  0E00               	movlw	0
  1355  000B10  0100               	movlb	0	; force () banked
  1356  000B12  6F68               	movwf	(fputc@c+1)& (0+255),b
  1357  000B14  0E25               	movlw	37
  1358  000B16  6F67               	movwf	fputc@c& (0+255),b
  1359  000B18  C0A6  F069         	movff	vfpfcnvrt@fp,fputc@fp
  1360  000B1C  C0A7  F06A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1361  000B20  ECEC  F009         	call	_fputc	;wreg free
  1362  000B24                     
  1363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1364  000B24  0E00               	movlw	0
  1365  000B26  0100               	movlb	0	; force () banked
  1366  000B28  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1367  000B2A  0E01               	movlw	1
  1368  000B2C  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1369  000B2E  EFCA  F005         	goto	l291
  1370  000B32                     l2089:
  1371  000B32  FFFF               	dw	65535	; assembler added errata NOP
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1375  000B34  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1376  000B38  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1377  000B3C  2ADE               	incf	postinc2,f,c
  1378  000B3E  0E00               	movlw	0
  1379  000B40  22DD               	addwfc	postdec2,f,c
  1380  000B42                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1383  000B42  0E00               	movlw	0
  1384  000B44  0100               	movlb	0	; force () banked
  1385  000B46  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1386  000B48  0E00               	movlw	0
  1387  000B4A  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1388  000B4C  EFCA  F005         	goto	l291
  1389  000B50                     l2095:
  1390  000B50  FFFF               	dw	65535	; assembler added errata NOP
  1391                           
  1392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1393  000B52  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1394  000B56  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1395  000B5A  CFDE FFF6          	movff	postinc2,tblptrl
  1396  000B5E  CFDD FFF7          	movff	postdec2,tblptrh
  1397  000B62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1398  000B62  6AF8               	clrf	tblptru,c
  1399  000B64                     	endif
  1400  000B64                     	if	0	;tblptru may be non-zero
  1401  000B64                     	endif
  1402  000B64  0008               	tblrd		*
  1403  000B66  FFFF               	dw	65535	; errata NOP
  1404  000B68  50F5               	movf	tablat,w,c
  1405  000B6A  0100               	movlb	0	; force () banked
  1406  000B6C  6F67               	movwf	fputc@c& (0+255),b
  1407  000B6E  6B68               	clrf	(fputc@c+1)& (0+255),b
  1408  000B70  C0A6  F069         	movff	vfpfcnvrt@fp,fputc@fp
  1409  000B74  C0A7  F06A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1410  000B78  ECEC  F009         	call	_fputc	;wreg free
  1411  000B7C                     
  1412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1413  000B7C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  000B80  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  000B84  2ADE               	incf	postinc2,f,c
  1416  000B86  0E00               	movlw	0
  1417  000B88  22DD               	addwfc	postdec2,f,c
  1418  000B8A                     
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1364:     r
      +                          eturn 1;
  1420  000B8A  0E00               	movlw	0
  1421  000B8C  0100               	movlb	0	; force () banked
  1422  000B8E  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1423  000B90  0E01               	movlw	1
  1424  000B92  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1425  000B94                     l291:
  1426  000B94  FFFF               	dw	65535	; assembler added errata NOP
  1427  000B96  0012               	return		;funcret
  1428  000B98  FFFF               	dw	65535	; errata NOP
  1429  000B9A                     __end_of_vfpfcnvrt:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _dtoa *****************
  1433 ;; Defined at:
  1434 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  1437 ;;		 -> sprintf@f(6), 
  1438 ;;  d               8   36[BANK0 ] long long 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  n               8   60[BANK0 ] long long 
  1441 ;;  i               2   68[BANK0 ] int 
  1442 ;;  s               2   58[BANK0 ] int 
  1443 ;;  w               2   56[BANK0 ] int 
  1444 ;;  p               2   54[BANK0 ] int 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  2   34[BANK0 ] int 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1454 ;;      Params:         0      10       0       0       0       0       0
  1455 ;;      Locals:         0      18       0       0       0       0       0
  1456 ;;      Temps:          0       8       0       0       0       0       0
  1457 ;;      Totals:         0      36       0       0       0       0       0
  1458 ;;Total ram usage:       36 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    6
  1461 ;; This function calls:
  1462 ;;		___aodiv
  1463 ;;		___aomod
  1464 ;;		_abs
  1465 ;;		_pad
  1466 ;; This function is called by:
  1467 ;;		_vfpfcnvrt
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text4
  1472  000624                     __ptext4:
  1473                           	opt callstack 0
  1474  000624                     _dtoa:
  1475                           	opt callstack 0
  1476  000624  FFFF               	dw	65535	; assembler added errata NOP
  1477  000626                     
  1478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1479  000626  C084  F09C         	movff	dtoa@d,dtoa@n
  1480  00062A  C085  F09D         	movff	dtoa@d+1,dtoa@n+1
  1481  00062E  C086  F09E         	movff	dtoa@d+2,dtoa@n+2
  1482  000632  C087  F09F         	movff	dtoa@d+3,dtoa@n+3
  1483  000636  C088  F0A0         	movff	dtoa@d+4,dtoa@n+4
  1484  00063A  C089  F0A1         	movff	dtoa@d+5,dtoa@n+5
  1485  00063E  C08A  F0A2         	movff	dtoa@d+6,dtoa@n+6
  1486  000642  C08B  F0A3         	movff	dtoa@d+7,dtoa@n+7
  1487  000646                     
  1488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1489  000646  0100               	movlb	0	; force () banked
  1490  000648  BFA3               	btfsc	(dtoa@n+7)& (0+255),7,b
  1491  00064A  EF29  F003         	goto	u1021
  1492  00064E  EF2D  F003         	goto	u1020
  1493  000652                     u1021:
  1494  000652  FFFF               	dw	65535	; assembler added errata NOP
  1495  000654  0E01               	movlw	1
  1496  000656  EF2F  F003         	goto	u1030
  1497  00065A                     u1020:
  1498  00065A  FFFF               	dw	65535	; assembler added errata NOP
  1499  00065C  0E00               	movlw	0
  1500  00065E                     u1030:
  1501  00065E  FFFF               	dw	65535	; assembler added errata NOP
  1502  000660  0100               	movlb	0	; force () banked
  1503  000662  6F9A               	movwf	dtoa@s& (0+255),b
  1504  000664  6B9B               	clrf	(dtoa@s+1)& (0+255),b
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1507  000666  519A               	movf	dtoa@s& (0+255),w,b
  1508  000668  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1509  00066A  B4D8               	btfsc	status,2,c
  1510  00066C  EF3A  F003         	goto	u1041
  1511  000670  EF3D  F003         	goto	u1040
  1512  000674                     u1041:
  1513  000674  FFFF               	dw	65535	; assembler added errata NOP
  1514  000676  EF4F  F003         	goto	l1975
  1515  00067A                     u1040:
  1516  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1517  00067C                     
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1520  00067C  0100               	movlb	0	; force () banked
  1521  00067E  1FA3               	comf	(dtoa@n+7)& (0+255),f,b
  1522  000680  1FA2               	comf	(dtoa@n+6)& (0+255),f,b
  1523  000682  1FA1               	comf	(dtoa@n+5)& (0+255),f,b
  1524  000684  1FA0               	comf	(dtoa@n+4)& (0+255),f,b
  1525  000686  1F9F               	comf	(dtoa@n+3)& (0+255),f,b
  1526  000688  1F9E               	comf	(dtoa@n+2)& (0+255),f,b
  1527  00068A  1F9D               	comf	(dtoa@n+1)& (0+255),f,b
  1528  00068C  6D9C               	negf	dtoa@n& (0+255),b
  1529  00068E  0E00               	movlw	0
  1530  000690  239D               	addwfc	(dtoa@n+1)& (0+255),f,b
  1531  000692  239E               	addwfc	(dtoa@n+2)& (0+255),f,b
  1532  000694  239F               	addwfc	(dtoa@n+3)& (0+255),f,b
  1533  000696  23A0               	addwfc	(dtoa@n+4)& (0+255),f,b
  1534  000698  23A1               	addwfc	(dtoa@n+5)& (0+255),f,b
  1535  00069A  23A2               	addwfc	(dtoa@n+6)& (0+255),f,b
  1536  00069C  23A3               	addwfc	(dtoa@n+7)& (0+255),f,b
  1537  00069E                     l1975:
  1538  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1542  0006A0  0100               	movlb	0	; force () banked
  1543  0006A2  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  1544  0006A4  EF56  F003         	goto	u1051
  1545  0006A8  EF59  F003         	goto	u1050
  1546  0006AC                     u1051:
  1547  0006AC  FFFF               	dw	65535	; assembler added errata NOP
  1548  0006AE  EF5C  F003         	goto	l1979
  1549  0006B2                     u1050:
  1550  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  1551  0006B4                     
  1552                           ; BSR set to: 0
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1554  0006B4  0100               	movlb	0	; force () banked
  1555  0006B6  93EC               	bcf	_flags& (0+255),1,b
  1556  0006B8                     l1979:
  1557  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1561  0006BA  0100               	movlb	0	; force () banked
  1562  0006BC  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  1563  0006BE  EF6C  F003         	goto	u1060
  1564  0006C2  51EB               	movf	(_prec+1)& (0+255),w,b
  1565  0006C4  E106               	bnz	u1061
  1566  0006C6  05EA               	decf	_prec& (0+255),w,b
  1567  0006C8  B0D8               	btfsc	status,0,c
  1568  0006CA  EF69  F003         	goto	u1061
  1569  0006CE  EF6C  F003         	goto	u1060
  1570  0006D2                     u1061:
  1571  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  1572  0006D4  EF74  F003         	goto	l264
  1573  0006D8                     u1060:
  1574  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1575  0006DA                     
  1576                           ; BSR set to: 0
  1577  0006DA  0E00               	movlw	0
  1578  0006DC  0100               	movlb	0	; force () banked
  1579  0006DE  6F97               	movwf	(dtoa@p+1)& (0+255),b
  1580  0006E0  0E01               	movlw	1
  1581  0006E2  6F96               	movwf	dtoa@p& (0+255),b
  1582  0006E4  EF79  F003         	goto	l266
  1583  0006E8                     l264:
  1584  0006E8  FFFF               	dw	65535	; assembler added errata NOP
  1585                           
  1586                           ; BSR set to: 0
  1587  0006EA  C0EA  F096         	movff	_prec,dtoa@p
  1588  0006EE  C0EB  F097         	movff	_prec+1,dtoa@p+1
  1589  0006F2                     l266:
  1590  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1594  0006F4  C0E8  F098         	movff	_width,dtoa@w
  1595  0006F8  C0E9  F099         	movff	_width+1,dtoa@w+1
  1596  0006FC                     
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1599  0006FC  0100               	movlb	0	; force () banked
  1600  0006FE  519A               	movf	dtoa@s& (0+255),w,b
  1601  000700  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1602  000702  A4D8               	btfss	status,2,c
  1603  000704  EF86  F003         	goto	u1071
  1604  000708  EF89  F003         	goto	u1070
  1605  00070C                     u1071:
  1606  00070C  FFFF               	dw	65535	; assembler added errata NOP
  1607  00070E  EF93  F003         	goto	l1987
  1608  000712                     u1070:
  1609  000712  FFFF               	dw	65535	; assembler added errata NOP
  1610  000714                     
  1611                           ; BSR set to: 0
  1612  000714  0100               	movlb	0	; force () banked
  1613  000716  A5EC               	btfss	_flags& (0+255),2,b
  1614  000718  EF90  F003         	goto	u1081
  1615  00071C  EF93  F003         	goto	u1080
  1616  000720                     u1081:
  1617  000720  FFFF               	dw	65535	; assembler added errata NOP
  1618  000722  EF98  F003         	goto	l1989
  1619  000726                     u1080:
  1620  000726                     l1987:
  1621  000726  FFFF               	dw	65535	; assembler added errata NOP
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1625  000728  0100               	movlb	0	; force () banked
  1626  00072A  0798               	decf	dtoa@w& (0+255),f,b
  1627  00072C  A0D8               	btfss	status,0,c
  1628  00072E  0799               	decf	(dtoa@w+1)& (0+255),f,b
  1629  000730                     l1989:
  1630  000730  FFFF               	dw	65535	; assembler added errata NOP
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1634  000732  0E00               	movlw	0
  1635  000734  0100               	movlb	0	; force () banked
  1636  000736  6FA5               	movwf	(dtoa@i+1)& (0+255),b
  1637  000738  0E1F               	movlw	31
  1638  00073A  6FA4               	movwf	dtoa@i& (0+255),b
  1639  00073C                     
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1642  00073C  0E54               	movlw	low _dbuf
  1643  00073E  0100               	movlb	0	; force () banked
  1644  000740  25A4               	addwf	dtoa@i& (0+255),w,b
  1645  000742  6ED9               	movwf	fsr2l,c
  1646  000744  0E01               	movlw	high _dbuf
  1647  000746  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1648  000748  6EDA               	movwf	fsr2h,c
  1649  00074A  0E00               	movlw	0
  1650  00074C  6EDF               	movwf	indf2,c
  1651                           
  1652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1653  00074E  EF2D  F004         	goto	l2003
  1654  000752                     l1993:
  1655  000752  FFFF               	dw	65535	; assembler added errata NOP
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1659  000754  0100               	movlb	0	; force () banked
  1660  000756  07A4               	decf	dtoa@i& (0+255),f,b
  1661  000758  A0D8               	btfss	status,0,c
  1662  00075A  07A5               	decf	(dtoa@i+1)& (0+255),f,b
  1663  00075C                     
  1664                           ; BSR set to: 0
  1665                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1666  00075C  0E54               	movlw	low _dbuf
  1667  00075E  0100               	movlb	0	; force () banked
  1668  000760  25A4               	addwf	dtoa@i& (0+255),w,b
  1669  000762  6ED9               	movwf	fsr2l,c
  1670  000764  0E01               	movlw	high _dbuf
  1671  000766  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1672  000768  6EDA               	movwf	fsr2h,c
  1673  00076A  C09C  F067         	movff	dtoa@n,___aomod@dividend
  1674  00076E  C09D  F068         	movff	dtoa@n+1,___aomod@dividend+1
  1675  000772  C09E  F069         	movff	dtoa@n+2,___aomod@dividend+2
  1676  000776  C09F  F06A         	movff	dtoa@n+3,___aomod@dividend+3
  1677  00077A  C0A0  F06B         	movff	dtoa@n+4,___aomod@dividend+4
  1678  00077E  C0A1  F06C         	movff	dtoa@n+5,___aomod@dividend+5
  1679  000782  C0A2  F06D         	movff	dtoa@n+6,___aomod@dividend+6
  1680  000786  C0A3  F06E         	movff	dtoa@n+7,___aomod@dividend+7
  1681  00078A  0E0A               	movlw	10
  1682  00078C  0100               	movlb	0	; force () banked
  1683  00078E  6F6F               	movwf	___aomod@divisor& (0+255),b
  1684  000790  0E00               	movlw	0
  1685  000792  6F70               	movwf	(___aomod@divisor+1)& (0+255),b
  1686  000794  0E00               	movlw	0
  1687  000796  6F71               	movwf	(___aomod@divisor+2)& (0+255),b
  1688  000798  0E00               	movlw	0
  1689  00079A  6F72               	movwf	(___aomod@divisor+3)& (0+255),b
  1690  00079C  0E00               	movlw	0
  1691  00079E  6F73               	movwf	(___aomod@divisor+4)& (0+255),b
  1692  0007A0  0E00               	movlw	0
  1693  0007A2  6F74               	movwf	(___aomod@divisor+5)& (0+255),b
  1694  0007A4  0E00               	movlw	0
  1695  0007A6  6F75               	movwf	(___aomod@divisor+6)& (0+255),b
  1696  0007A8  0E00               	movlw	0
  1697  0007AA  6F76               	movwf	(___aomod@divisor+7)& (0+255),b
  1698  0007AC  ECA8  F006         	call	___aomod	;wreg free
  1699  0007B0  C067  F08C         	movff	?___aomod,??_dtoa
  1700  0007B4  C068  F08D         	movff	?___aomod+1,??_dtoa+1
  1701  0007B8  C069  F08E         	movff	?___aomod+2,??_dtoa+2
  1702  0007BC  C06A  F08F         	movff	?___aomod+3,??_dtoa+3
  1703  0007C0  C06B  F090         	movff	?___aomod+4,??_dtoa+4
  1704  0007C4  C06C  F091         	movff	?___aomod+5,??_dtoa+5
  1705  0007C8  C06D  F092         	movff	?___aomod+6,??_dtoa+6
  1706  0007CC  C06E  F093         	movff	?___aomod+7,??_dtoa+7
  1707  0007D0  C08C  F079         	movff	??_dtoa,abs@a
  1708  0007D4  C08E  F07A         	movff	??_dtoa+2,abs@a+1
  1709  0007D8  ECEB  F00D         	call	_abs	;wreg free
  1710  0007DC  0100               	movlb	0	; force () banked
  1711  0007DE  5179               	movf	?_abs& (0+255),w,b
  1712  0007E0  0F30               	addlw	48
  1713  0007E2  6EDF               	movwf	indf2,c
  1714  0007E4                     
  1715                           ; BSR set to: 0
  1716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1717  0007E4  0100               	movlb	0	; force () banked
  1718  0007E6  0796               	decf	dtoa@p& (0+255),f,b
  1719  0007E8  A0D8               	btfss	status,0,c
  1720  0007EA  0797               	decf	(dtoa@p+1)& (0+255),f,b
  1721  0007EC                     
  1722                           ; BSR set to: 0
  1723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1724  0007EC  0100               	movlb	0	; force () banked
  1725  0007EE  0798               	decf	dtoa@w& (0+255),f,b
  1726  0007F0  A0D8               	btfss	status,0,c
  1727  0007F2  0799               	decf	(dtoa@w+1)& (0+255),f,b
  1728  0007F4                     
  1729                           ; BSR set to: 0
  1730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1731  0007F4  C09C  F067         	movff	dtoa@n,___aodiv@dividend
  1732  0007F8  C09D  F068         	movff	dtoa@n+1,___aodiv@dividend+1
  1733  0007FC  C09E  F069         	movff	dtoa@n+2,___aodiv@dividend+2
  1734  000800  C09F  F06A         	movff	dtoa@n+3,___aodiv@dividend+3
  1735  000804  C0A0  F06B         	movff	dtoa@n+4,___aodiv@dividend+4
  1736  000808  C0A1  F06C         	movff	dtoa@n+5,___aodiv@dividend+5
  1737  00080C  C0A2  F06D         	movff	dtoa@n+6,___aodiv@dividend+6
  1738  000810  C0A3  F06E         	movff	dtoa@n+7,___aodiv@dividend+7
  1739  000814  0E0A               	movlw	10
  1740  000816  0100               	movlb	0	; force () banked
  1741  000818  6F6F               	movwf	___aodiv@divisor& (0+255),b
  1742  00081A  0E00               	movlw	0
  1743  00081C  6F70               	movwf	(___aodiv@divisor+1)& (0+255),b
  1744  00081E  0E00               	movlw	0
  1745  000820  6F71               	movwf	(___aodiv@divisor+2)& (0+255),b
  1746  000822  0E00               	movlw	0
  1747  000824  6F72               	movwf	(___aodiv@divisor+3)& (0+255),b
  1748  000826  0E00               	movlw	0
  1749  000828  6F73               	movwf	(___aodiv@divisor+4)& (0+255),b
  1750  00082A  0E00               	movlw	0
  1751  00082C  6F74               	movwf	(___aodiv@divisor+5)& (0+255),b
  1752  00082E  0E00               	movlw	0
  1753  000830  6F75               	movwf	(___aodiv@divisor+6)& (0+255),b
  1754  000832  0E00               	movlw	0
  1755  000834  6F76               	movwf	(___aodiv@divisor+7)& (0+255),b
  1756  000836  ECCD  F005         	call	___aodiv	;wreg free
  1757  00083A  C067  F09C         	movff	?___aodiv,dtoa@n
  1758  00083E  C068  F09D         	movff	?___aodiv+1,dtoa@n+1
  1759  000842  C069  F09E         	movff	?___aodiv+2,dtoa@n+2
  1760  000846  C06A  F09F         	movff	?___aodiv+3,dtoa@n+3
  1761  00084A  C06B  F0A0         	movff	?___aodiv+4,dtoa@n+4
  1762  00084E  C06C  F0A1         	movff	?___aodiv+5,dtoa@n+5
  1763  000852  C06D  F0A2         	movff	?___aodiv+6,dtoa@n+6
  1764  000856  C06E  F0A3         	movff	?___aodiv+7,dtoa@n+7
  1765  00085A                     l2003:
  1766  00085A  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1769  00085C  0100               	movlb	0	; force () banked
  1770  00085E  BFA5               	btfsc	(dtoa@i+1)& (0+255),7,b
  1771  000860  EF3A  F004         	goto	u1091
  1772  000864  51A5               	movf	(dtoa@i+1)& (0+255),w,b
  1773  000866  E109               	bnz	u1090
  1774  000868  05A4               	decf	dtoa@i& (0+255),w,b
  1775  00086A  A0D8               	btfss	status,0,c
  1776  00086C  EF3A  F004         	goto	u1091
  1777  000870  EF3D  F004         	goto	u1090
  1778  000874                     u1091:
  1779  000874  FFFF               	dw	65535	; assembler added errata NOP
  1780  000876  EF79  F004         	goto	l2013
  1781  00087A                     u1090:
  1782  00087A  FFFF               	dw	65535	; assembler added errata NOP
  1783  00087C                     
  1784                           ; BSR set to: 0
  1785  00087C  0100               	movlb	0	; force () banked
  1786  00087E  519C               	movf	dtoa@n& (0+255),w,b
  1787  000880  119D               	iorwf	(dtoa@n+1)& (0+255),w,b
  1788  000882  119E               	iorwf	(dtoa@n+2)& (0+255),w,b
  1789  000884  119F               	iorwf	(dtoa@n+3)& (0+255),w,b
  1790  000886  11A0               	iorwf	(dtoa@n+4)& (0+255),w,b
  1791  000888  11A1               	iorwf	(dtoa@n+5)& (0+255),w,b
  1792  00088A  11A2               	iorwf	(dtoa@n+6)& (0+255),w,b
  1793  00088C  11A3               	iorwf	(dtoa@n+7)& (0+255),w,b
  1794  00088E  A4D8               	btfss	status,2,c
  1795  000890  EF4C  F004         	goto	u1101
  1796  000894  EF4F  F004         	goto	u1100
  1797  000898                     u1101:
  1798  000898  FFFF               	dw	65535	; assembler added errata NOP
  1799  00089A  EFA9  F003         	goto	l1993
  1800  00089E                     u1100:
  1801  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1802  0008A0                     
  1803                           ; BSR set to: 0
  1804  0008A0  0100               	movlb	0	; force () banked
  1805  0008A2  BF97               	btfsc	(dtoa@p+1)& (0+255),7,b
  1806  0008A4  EF5F  F004         	goto	u1110
  1807  0008A8  5197               	movf	(dtoa@p+1)& (0+255),w,b
  1808  0008AA  E106               	bnz	u1111
  1809  0008AC  0596               	decf	dtoa@p& (0+255),w,b
  1810  0008AE  B0D8               	btfsc	status,0,c
  1811  0008B0  EF5C  F004         	goto	u1111
  1812  0008B4  EF5F  F004         	goto	u1110
  1813  0008B8                     u1111:
  1814  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  1815  0008BA  EFA9  F003         	goto	l1993
  1816  0008BE                     u1110:
  1817  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1818  0008C0                     
  1819                           ; BSR set to: 0
  1820  0008C0  0100               	movlb	0	; force () banked
  1821  0008C2  BF99               	btfsc	(dtoa@w+1)& (0+255),7,b
  1822  0008C4  EF6C  F004         	goto	u1121
  1823  0008C8  5199               	movf	(dtoa@w+1)& (0+255),w,b
  1824  0008CA  E109               	bnz	u1120
  1825  0008CC  0598               	decf	dtoa@w& (0+255),w,b
  1826  0008CE  A0D8               	btfss	status,0,c
  1827  0008D0  EF6C  F004         	goto	u1121
  1828  0008D4  EF6F  F004         	goto	u1120
  1829  0008D8                     u1121:
  1830  0008D8  FFFF               	dw	65535	; assembler added errata NOP
  1831  0008DA  EF79  F004         	goto	l2013
  1832  0008DE                     u1120:
  1833  0008DE  FFFF               	dw	65535	; assembler added errata NOP
  1834  0008E0                     
  1835                           ; BSR set to: 0
  1836  0008E0  0100               	movlb	0	; force () banked
  1837  0008E2  B3EC               	btfsc	_flags& (0+255),1,b
  1838  0008E4  EF76  F004         	goto	u1131
  1839  0008E8  EF79  F004         	goto	u1130
  1840  0008EC                     u1131:
  1841  0008EC  FFFF               	dw	65535	; assembler added errata NOP
  1842  0008EE  EFA9  F003         	goto	l1993
  1843  0008F2                     u1130:
  1844  0008F2                     l2013:
  1845  0008F2  FFFF               	dw	65535	; assembler added errata NOP
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1849  0008F4  0100               	movlb	0	; force () banked
  1850  0008F6  519A               	movf	dtoa@s& (0+255),w,b
  1851  0008F8  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1852  0008FA  A4D8               	btfss	status,2,c
  1853  0008FC  EF82  F004         	goto	u1141
  1854  000900  EF85  F004         	goto	u1140
  1855  000904                     u1141:
  1856  000904  FFFF               	dw	65535	; assembler added errata NOP
  1857  000906  EF8F  F004         	goto	l2017
  1858  00090A                     u1140:
  1859  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1860  00090C                     
  1861                           ; BSR set to: 0
  1862  00090C  0100               	movlb	0	; force () banked
  1863  00090E  A5EC               	btfss	_flags& (0+255),2,b
  1864  000910  EF8C  F004         	goto	u1151
  1865  000914  EF8F  F004         	goto	u1150
  1866  000918                     u1151:
  1867  000918  FFFF               	dw	65535	; assembler added errata NOP
  1868  00091A  EFB7  F004         	goto	l2027
  1869  00091E                     u1150:
  1870  00091E                     l2017:
  1871  00091E  FFFF               	dw	65535	; assembler added errata NOP
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1875  000920  0100               	movlb	0	; force () banked
  1876  000922  07A4               	decf	dtoa@i& (0+255),f,b
  1877  000924  A0D8               	btfss	status,0,c
  1878  000926  07A5               	decf	(dtoa@i+1)& (0+255),f,b
  1879  000928                     
  1880                           ; BSR set to: 0
  1881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1882  000928  0100               	movlb	0	; force () banked
  1883  00092A  519A               	movf	dtoa@s& (0+255),w,b
  1884  00092C  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1885  00092E  A4D8               	btfss	status,2,c
  1886  000930  EF9C  F004         	goto	u1161
  1887  000934  EF9F  F004         	goto	u1160
  1888  000938                     u1161:
  1889  000938  FFFF               	dw	65535	; assembler added errata NOP
  1890  00093A  EFA7  F004         	goto	l2023
  1891  00093E                     u1160:
  1892  00093E  FFFF               	dw	65535	; assembler added errata NOP
  1893  000940                     
  1894                           ; BSR set to: 0
  1895  000940  0E00               	movlw	0
  1896  000942  0100               	movlb	0	; force () banked
  1897  000944  6F95               	movwf	(_dtoa$1380+1)& (0+255),b
  1898  000946  0E2B               	movlw	43
  1899  000948  6F94               	movwf	_dtoa$1380& (0+255),b
  1900  00094A  EFAD  F004         	goto	l2025
  1901  00094E                     l2023:
  1902  00094E  FFFF               	dw	65535	; assembler added errata NOP
  1903                           
  1904                           ; BSR set to: 0
  1905  000950  0E00               	movlw	0
  1906  000952  0100               	movlb	0	; force () banked
  1907  000954  6F95               	movwf	(_dtoa$1380+1)& (0+255),b
  1908  000956  0E2D               	movlw	45
  1909  000958  6F94               	movwf	_dtoa$1380& (0+255),b
  1910  00095A                     l2025:
  1911  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1912                           
  1913                           ; BSR set to: 0
  1914  00095C  0E54               	movlw	low _dbuf
  1915  00095E  0100               	movlb	0	; force () banked
  1916  000960  25A4               	addwf	dtoa@i& (0+255),w,b
  1917  000962  6ED9               	movwf	fsr2l,c
  1918  000964  0E01               	movlw	high _dbuf
  1919  000966  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1920  000968  6EDA               	movwf	fsr2h,c
  1921  00096A  C094  FFDF         	movff	_dtoa$1380,indf2
  1922  00096E                     l2027:
  1923  00096E  FFFF               	dw	65535	; assembler added errata NOP
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1927  000970  C082  F077         	movff	dtoa@fp,pad@fp
  1928  000974  C083  F078         	movff	dtoa@fp+1,pad@fp+1
  1929  000978  0E54               	movlw	low _dbuf
  1930  00097A  0100               	movlb	0	; force () banked
  1931  00097C  25A4               	addwf	dtoa@i& (0+255),w,b
  1932  00097E  0100               	movlb	0	; force () banked
  1933  000980  6F79               	movwf	pad@buf& (0+255),b
  1934  000982  0E01               	movlw	high _dbuf
  1935  000984  0100               	movlb	0	; force () banked
  1936  000986  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1937  000988  0100               	movlb	0	; force () banked
  1938  00098A  6F7A               	movwf	(pad@buf+1)& (0+255),b
  1939  00098C  C098  F07B         	movff	dtoa@w,pad@p
  1940  000990  C099  F07C         	movff	dtoa@w+1,pad@p+1
  1941  000994  ECF0  F008         	call	_pad	;wreg free
  1942  000998  C077  F082         	movff	?_pad,?_dtoa
  1943  00099C  C078  F083         	movff	?_pad+1,?_dtoa+1
  1944  0009A0  0012               	return		;funcret
  1945  0009A2  FFFF               	dw	65535	; errata NOP
  1946  0009A4                     __end_of_dtoa:
  1947                           	opt callstack 0
  1948                           
  1949 ;; *************** function _pad *****************
  1950 ;; Defined at:
  1951 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  1954 ;;		 -> sprintf@f(6), 
  1955 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1956 ;;		 -> dbuf(32), 
  1957 ;;  p               2   27[BANK0 ] int 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  w               2   32[BANK0 ] int 
  1960 ;;  i               2   30[BANK0 ] int 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2   23[BANK0 ] int 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1970 ;;      Params:         0       6       0       0       0       0       0
  1971 ;;      Locals:         0       4       0       0       0       0       0
  1972 ;;      Temps:          0       1       0       0       0       0       0
  1973 ;;      Totals:         0      11       0       0       0       0       0
  1974 ;;Total ram usage:       11 bytes
  1975 ;; Hardware stack levels used:    1
  1976 ;; Hardware stack levels required when called:    5
  1977 ;; This function calls:
  1978 ;;		_fputc
  1979 ;;		_fputs
  1980 ;;		_strlen
  1981 ;; This function is called by:
  1982 ;;		_dtoa
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text5
  1987  0011E0                     __ptext5:
  1988                           	opt callstack 0
  1989  0011E0                     _pad:
  1990                           	opt callstack 0
  1991  0011E0  FFFF               	dw	65535	; assembler added errata NOP
  1992  0011E2                     
  1993                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1994  0011E2  0100               	movlb	0	; force () banked
  1995  0011E4  A1EC               	btfss	_flags& (0+255),0,b
  1996  0011E6  EFF7  F008         	goto	u821
  1997  0011EA  EFFA  F008         	goto	u820
  1998  0011EE                     u821:
  1999  0011EE  FFFF               	dw	65535	; assembler added errata NOP
  2000  0011F0  EF05  F009         	goto	l1831
  2001  0011F4                     u820:
  2002  0011F4  FFFF               	dw	65535	; assembler added errata NOP
  2003  0011F6                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2006  0011F6  C079  F070         	movff	pad@buf,fputs@s
  2007  0011FA  C07A  F071         	movff	pad@buf+1,fputs@s+1
  2008  0011FE  C077  F072         	movff	pad@fp,fputs@fp
  2009  001202  C078  F073         	movff	pad@fp+1,fputs@fp+1
  2010  001206  EC63  F00D         	call	_fputs	;wreg free
  2011  00120A                     l1831:
  2012  00120A  FFFF               	dw	65535	; assembler added errata NOP
  2013                           
  2014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2015  00120C  0100               	movlb	0	; force () banked
  2016  00120E  BF7C               	btfsc	(pad@p+1)& (0+255),7,b
  2017  001210  EF0C  F009         	goto	u831
  2018  001214  EF0F  F009         	goto	u830
  2019  001218                     u831:
  2020  001218  FFFF               	dw	65535	; assembler added errata NOP
  2021  00121A  EF16  F009         	goto	l1835
  2022  00121E                     u830:
  2023  00121E  FFFF               	dw	65535	; assembler added errata NOP
  2024  001220                     
  2025                           ; BSR set to: 0
  2026  001220  C07B  F080         	movff	pad@p,pad@w
  2027  001224  C07C  F081         	movff	pad@p+1,pad@w+1
  2028  001228  EF1C  F009         	goto	l253
  2029  00122C                     l1835:
  2030  00122C  FFFF               	dw	65535	; assembler added errata NOP
  2031                           
  2032                           ; BSR set to: 0
  2033  00122E  0E00               	movlw	0
  2034  001230  0100               	movlb	0	; force () banked
  2035  001232  6F81               	movwf	(pad@w+1)& (0+255),b
  2036  001234  0E00               	movlw	0
  2037  001236  6F80               	movwf	pad@w& (0+255),b
  2038  001238                     l253:
  2039  001238  FFFF               	dw	65535	; assembler added errata NOP
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2043  00123A  0E00               	movlw	0
  2044  00123C  0100               	movlb	0	; force () banked
  2045  00123E  6F7F               	movwf	(pad@i+1)& (0+255),b
  2046  001240  0E00               	movlw	0
  2047  001242  6F7E               	movwf	pad@i& (0+255),b
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2050  001244  EF33  F009         	goto	l1841
  2051  001248                     l1837:
  2052  001248  FFFF               	dw	65535	; assembler added errata NOP
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2056  00124A  0E00               	movlw	0
  2057  00124C  0100               	movlb	0	; force () banked
  2058  00124E  6F68               	movwf	(fputc@c+1)& (0+255),b
  2059  001250  0E20               	movlw	32
  2060  001252  6F67               	movwf	fputc@c& (0+255),b
  2061  001254  C077  F069         	movff	pad@fp,fputc@fp
  2062  001258  C078  F06A         	movff	pad@fp+1,fputc@fp+1
  2063  00125C  ECEC  F009         	call	_fputc	;wreg free
  2064  001260                     
  2065                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2066  001260  0100               	movlb	0	; force () banked
  2067  001262  4B7E               	infsnz	pad@i& (0+255),f,b
  2068  001264  2B7F               	incf	(pad@i+1)& (0+255),f,b
  2069  001266                     l1841:
  2070  001266  FFFF               	dw	65535	; assembler added errata NOP
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2074  001268  0100               	movlb	0	; force () banked
  2075  00126A  5180               	movf	pad@w& (0+255),w,b
  2076  00126C  0100               	movlb	0	; force () banked
  2077  00126E  5D7E               	subwf	pad@i& (0+255),w,b
  2078  001270  517F               	movf	(pad@i+1)& (0+255),w,b
  2079  001272  0A80               	xorlw	128
  2080  001274  0100               	movlb	0	; force () banked
  2081  001276  6F7D               	movwf	??_pad& (0+255),b
  2082  001278  0100               	movlb	0	; force () banked
  2083  00127A  5181               	movf	(pad@w+1)& (0+255),w,b
  2084  00127C  0A80               	xorlw	128
  2085  00127E  0100               	movlb	0	; force () banked
  2086  001280  597D               	subwfb	??_pad& (0+255),w,b
  2087  001282  A0D8               	btfss	status,0,c
  2088  001284  EF46  F009         	goto	u841
  2089  001288  EF49  F009         	goto	u840
  2090  00128C                     u841:
  2091  00128C  FFFF               	dw	65535	; assembler added errata NOP
  2092  00128E  EF24  F009         	goto	l1837
  2093  001292                     u840:
  2094  001292  FFFF               	dw	65535	; assembler added errata NOP
  2095  001294                     
  2096                           ; BSR set to: 0
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2098  001294  0100               	movlb	0	; force () banked
  2099  001296  B1EC               	btfsc	_flags& (0+255),0,b
  2100  001298  EF50  F009         	goto	u851
  2101  00129C  EF53  F009         	goto	u850
  2102  0012A0                     u851:
  2103  0012A0  FFFF               	dw	65535	; assembler added errata NOP
  2104  0012A2  EF5E  F009         	goto	l1845
  2105  0012A6                     u850:
  2106  0012A6  FFFF               	dw	65535	; assembler added errata NOP
  2107  0012A8                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2110  0012A8  C079  F070         	movff	pad@buf,fputs@s
  2111  0012AC  C07A  F071         	movff	pad@buf+1,fputs@s+1
  2112  0012B0  C077  F072         	movff	pad@fp,fputs@fp
  2113  0012B4  C078  F073         	movff	pad@fp+1,fputs@fp+1
  2114  0012B8  EC63  F00D         	call	_fputs	;wreg free
  2115  0012BC                     l1845:
  2116  0012BC  FFFF               	dw	65535	; assembler added errata NOP
  2117                           
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2119  0012BE  C079  F067         	movff	pad@buf,strlen@s
  2120  0012C2  C07A  F068         	movff	pad@buf+1,strlen@s+1
  2121  0012C6  EC12  F00E         	call	_strlen	;wreg free
  2122  0012CA  0100               	movlb	0	; force () banked
  2123  0012CC  5180               	movf	pad@w& (0+255),w,b
  2124  0012CE  0100               	movlb	0	; force () banked
  2125  0012D0  2567               	addwf	?_strlen& (0+255),w,b
  2126  0012D2  0100               	movlb	0	; force () banked
  2127  0012D4  6F77               	movwf	?_pad& (0+255),b
  2128  0012D6  0100               	movlb	0	; force () banked
  2129  0012D8  5181               	movf	(pad@w+1)& (0+255),w,b
  2130  0012DA  0100               	movlb	0	; force () banked
  2131  0012DC  2168               	addwfc	(?_strlen+1)& (0+255),w,b
  2132  0012DE  0100               	movlb	0	; force () banked
  2133  0012E0  6F78               	movwf	(?_pad+1)& (0+255),b
  2134  0012E2                     
  2135                           ; BSR set to: 0
  2136  0012E2  0012               	return		;funcret
  2137  0012E4  FFFF               	dw	65535	; errata NOP
  2138  0012E6                     __end_of_pad:
  2139                           	opt callstack 0
  2140                           
  2141 ;; *************** function _strlen *****************
  2142 ;; Defined at:
  2143 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  2146 ;;		 -> dbuf(32), 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  a               2    9[BANK0 ] PTR const unsigned char 
  2149 ;;		 -> dbuf(32), 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  2    7[BANK0 ] unsigned int 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2159 ;;      Params:         0       2       0       0       0       0       0
  2160 ;;      Locals:         0       2       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0
  2162 ;;      Totals:         0       4       0       0       0       0       0
  2163 ;;Total ram usage:        4 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_pad
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text6
  2174  001C24                     __ptext6:
  2175                           	opt callstack 0
  2176  001C24                     _strlen:
  2177                           	opt callstack 0
  2178  001C24  FFFF               	dw	65535	; assembler added errata NOP
  2179  001C26  C067  F069         	movff	strlen@s,strlen@a
  2180  001C2A  C068  F06A         	movff	strlen@s+1,strlen@a+1
  2181  001C2E  EF1D  F00E         	goto	l1795
  2182  001C32                     l1793:
  2183  001C32  FFFF               	dw	65535	; assembler added errata NOP
  2184  001C34  0100               	movlb	0	; () banked
  2185  001C36  4B67               	infsnz	strlen@s& (0+255),f,b
  2186  001C38  2B68               	incf	(strlen@s+1)& (0+255),f,b
  2187  001C3A                     l1795:
  2188  001C3A  FFFF               	dw	65535	; assembler added errata NOP
  2189  001C3C  C067  FFD9         	movff	strlen@s,fsr2l
  2190  001C40  C068  FFDA         	movff	strlen@s+1,fsr2h
  2191  001C44  50DF               	movf	indf2,w,c
  2192  001C46  A4D8               	btfss	status,2,c
  2193  001C48  EF28  F00E         	goto	u801
  2194  001C4C  EF2B  F00E         	goto	u800
  2195  001C50                     u801:
  2196  001C50  FFFF               	dw	65535	; assembler added errata NOP
  2197  001C52  EF19  F00E         	goto	l1793
  2198  001C56                     u800:
  2199  001C56  FFFF               	dw	65535	; assembler added errata NOP
  2200  001C58  0100               	movlb	0	; () banked
  2201  001C5A  5169               	movf	strlen@a& (0+255),w,b
  2202  001C5C  5D67               	subwf	strlen@s& (0+255),w,b
  2203  001C5E  6F67               	movwf	?_strlen& (0+255),b
  2204  001C60  516A               	movf	(strlen@a+1)& (0+255),w,b
  2205  001C62  5968               	subwfb	(strlen@s+1)& (0+255),w,b
  2206  001C64  6F68               	movwf	(?_strlen+1)& (0+255),b
  2207  001C66                     
  2208                           ; BSR set to: 0
  2209  001C66  0012               	return		;funcret
  2210  001C68  FFFF               	dw	65535	; errata NOP
  2211  001C6A                     __end_of_strlen:
  2212                           	opt callstack 0
  2213                           
  2214 ;; *************** function _fputs *****************
  2215 ;; Defined at:
  2216 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  2219 ;;		 -> dbuf(32), 
  2220 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2221 ;;		 -> sprintf@f(6), 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  i               2   21[BANK0 ] int 
  2224 ;;  c               1   20[BANK0 ] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   16[BANK0 ] int 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2234 ;;      Params:         0       4       0       0       0       0       0
  2235 ;;      Locals:         0       3       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0
  2237 ;;      Totals:         0       7       0       0       0       0       0
  2238 ;;Total ram usage:        7 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    4
  2241 ;; This function calls:
  2242 ;;		_fputc
  2243 ;; This function is called by:
  2244 ;;		_pad
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text7
  2249  001AC6                     __ptext7:
  2250                           	opt callstack 0
  2251  001AC6                     _fputs:
  2252                           	opt callstack 0
  2253  001AC6  FFFF               	dw	65535	; assembler added errata NOP
  2254  001AC8  0E00               	movlw	0
  2255  001ACA  0100               	movlb	0	; () banked
  2256  001ACC  6F76               	movwf	(fputs@i+1)& (0+255),b
  2257  001ACE  0E00               	movlw	0
  2258  001AD0  6F75               	movwf	fputs@i& (0+255),b
  2259  001AD2  EF78  F00D         	goto	l1789
  2260  001AD6                     l1785:
  2261  001AD6  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ; BSR set to: 0
  2264  001AD8  C074  F067         	movff	fputs@c,fputc@c
  2265  001ADC  6B68               	clrf	(fputc@c+1)& (0+255),b
  2266  001ADE  C072  F069         	movff	fputs@fp,fputc@fp
  2267  001AE2  C073  F06A         	movff	fputs@fp+1,fputc@fp+1
  2268  001AE6  ECEC  F009         	call	_fputc	;wreg free
  2269  001AEA  0100               	movlb	0	; () banked
  2270  001AEC  4B75               	infsnz	fputs@i& (0+255),f,b
  2271  001AEE  2B76               	incf	(fputs@i+1)& (0+255),f,b
  2272  001AF0                     l1789:
  2273  001AF0  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ; BSR set to: 0
  2276  001AF2  5175               	movf	fputs@i& (0+255),w,b
  2277  001AF4  2570               	addwf	fputs@s& (0+255),w,b
  2278  001AF6  6ED9               	movwf	fsr2l,c
  2279  001AF8  5176               	movf	(fputs@i+1)& (0+255),w,b
  2280  001AFA  2171               	addwfc	(fputs@s+1)& (0+255),w,b
  2281  001AFC  6EDA               	movwf	fsr2h,c
  2282  001AFE  50DF               	movf	indf2,w,c
  2283  001B00  6F74               	movwf	fputs@c& (0+255),b
  2284  001B02  5174               	movf	fputs@c& (0+255),w,b
  2285  001B04  A4D8               	btfss	status,2,c
  2286  001B06  EF87  F00D         	goto	u791
  2287  001B0A  EF8A  F00D         	goto	u790
  2288  001B0E                     u791:
  2289  001B0E  FFFF               	dw	65535	; assembler added errata NOP
  2290  001B10  EF6B  F00D         	goto	l1785
  2291  001B14                     u790:
  2292  001B14  FFFF               	dw	65535	; assembler added errata NOP
  2293  001B16                     
  2294                           ; BSR set to: 0
  2295  001B16  C075  F070         	movff	fputs@i,?_fputs
  2296  001B1A  C076  F071         	movff	fputs@i+1,?_fputs+1
  2297  001B1E                     
  2298                           ; BSR set to: 0
  2299  001B1E  0012               	return		;funcret
  2300  001B20  FFFF               	dw	65535	; errata NOP
  2301  001B22                     __end_of_fputs:
  2302                           	opt callstack 0
  2303                           
  2304 ;; *************** function _fputc *****************
  2305 ;; Defined at:
  2306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  c               2    7[BANK0 ] int 
  2309 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  2310 ;;		 -> sprintf@f(6), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  2    7[BANK0 ] int 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         0       4       0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0
  2324 ;;      Temps:          0       5       0       0       0       0       0
  2325 ;;      Totals:         0       9       0       0       0       0       0
  2326 ;;Total ram usage:        9 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    3
  2329 ;; This function calls:
  2330 ;;		_putch
  2331 ;; This function is called by:
  2332 ;;		_pad
  2333 ;;		_vfpfcnvrt
  2334 ;;		_fputs
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text8
  2339  0013D8                     __ptext8:
  2340                           	opt callstack 0
  2341  0013D8                     _fputc:
  2342                           	opt callstack 0
  2343  0013D8  FFFF               	dw	65535	; assembler added errata NOP
  2344  0013DA  0100               	movlb	0	; () banked
  2345  0013DC  5169               	movf	fputc@fp& (0+255),w,b
  2346  0013DE  116A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2347  0013E0  B4D8               	btfsc	status,2,c
  2348  0013E2  EFF5  F009         	goto	u751
  2349  0013E6  EFF8  F009         	goto	u750
  2350  0013EA                     u751:
  2351  0013EA  FFFF               	dw	65535	; assembler added errata NOP
  2352  0013EC  EF03  F00A         	goto	l1767
  2353  0013F0                     u750:
  2354  0013F0  FFFF               	dw	65535	; assembler added errata NOP
  2355  0013F2                     
  2356                           ; BSR set to: 0
  2357  0013F2  5169               	movf	fputc@fp& (0+255),w,b
  2358  0013F4  116A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2359  0013F6  A4D8               	btfss	status,2,c
  2360  0013F8  EF00  F00A         	goto	u761
  2361  0013FC  EF03  F00A         	goto	u760
  2362  001400                     u761:
  2363  001400  FFFF               	dw	65535	; assembler added errata NOP
  2364  001402  EF09  F00A         	goto	l1769
  2365  001406                     u760:
  2366  001406                     l1767:
  2367  001406  FFFF               	dw	65535	; assembler added errata NOP
  2368                           
  2369                           ; BSR set to: 0
  2370  001408  5167               	movf	fputc@c& (0+255),w,b
  2371  00140A  ECD6  F00E         	call	_putch
  2372  00140E  EF5B  F00A         	goto	l1775
  2373  001412                     l1769:
  2374  001412  FFFF               	dw	65535	; assembler added errata NOP
  2375                           
  2376                           ; BSR set to: 0
  2377  001414  EE20 F004          	lfsr	2,4
  2378  001418  5169               	movf	fputc@fp& (0+255),w,b
  2379  00141A  26D9               	addwf	fsr2l,f,c
  2380  00141C  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2381  00141E  22DA               	addwfc	fsr2h,f,c
  2382  001420  50DE               	movf	postinc2,w,c
  2383  001422  10DE               	iorwf	postinc2,w,c
  2384  001424  B4D8               	btfsc	status,2,c
  2385  001426  EF17  F00A         	goto	u771
  2386  00142A  EF1A  F00A         	goto	u770
  2387  00142E                     u771:
  2388  00142E  FFFF               	dw	65535	; assembler added errata NOP
  2389  001430  EF37  F00A         	goto	l1773
  2390  001434                     u770:
  2391  001434  FFFF               	dw	65535	; assembler added errata NOP
  2392  001436                     
  2393                           ; BSR set to: 0
  2394  001436  EE20 F004          	lfsr	2,4
  2395  00143A  5169               	movf	fputc@fp& (0+255),w,b
  2396  00143C  26D9               	addwf	fsr2l,f,c
  2397  00143E  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2398  001440  22DA               	addwfc	fsr2h,f,c
  2399  001442  EE10 F002          	lfsr	1,2
  2400  001446  5169               	movf	fputc@fp& (0+255),w,b
  2401  001448  26E1               	addwf	fsr1l,f,c
  2402  00144A  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2403  00144C  22E2               	addwfc	fsr1h,f,c
  2404  00144E  50DE               	movf	postinc2,w,c
  2405  001450  5CE6               	subwf	postinc1,w,c
  2406  001452  50E6               	movf	postinc1,w,c
  2407  001454  0A80               	xorlw	128
  2408  001456  6F6F               	movwf	(??_fputc+4)& (0+255),b
  2409  001458  50DE               	movf	postinc2,w,c
  2410  00145A  0A80               	xorlw	128
  2411  00145C  596F               	subwfb	(??_fputc+4)& (0+255),w,b
  2412  00145E  B0D8               	btfsc	status,0,c
  2413  001460  EF34  F00A         	goto	u781
  2414  001464  EF37  F00A         	goto	u780
  2415  001468                     u781:
  2416  001468  FFFF               	dw	65535	; assembler added errata NOP
  2417  00146A  EF5B  F00A         	goto	l1775
  2418  00146E                     u780:
  2419  00146E                     l1773:
  2420  00146E  FFFF               	dw	65535	; assembler added errata NOP
  2421                           
  2422                           ; BSR set to: 0
  2423  001470  EE20 F002          	lfsr	2,2
  2424  001474  5169               	movf	fputc@fp& (0+255),w,b
  2425  001476  26D9               	addwf	fsr2l,f,c
  2426  001478  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2427  00147A  22DA               	addwfc	fsr2h,f,c
  2428  00147C  CFDE F06B          	movff	postinc2,??_fputc
  2429  001480  CFDD F06C          	movff	postdec2,??_fputc+1
  2430  001484  C069  FFD9         	movff	fputc@fp,fsr2l
  2431  001488  C06A  FFDA         	movff	fputc@fp+1,fsr2h
  2432  00148C  CFDE F06D          	movff	postinc2,??_fputc+2
  2433  001490  CFDD F06E          	movff	postdec2,??_fputc+3
  2434  001494  516B               	movf	??_fputc& (0+255),w,b
  2435  001496  256D               	addwf	(??_fputc+2)& (0+255),w,b
  2436  001498  6ED9               	movwf	fsr2l,c
  2437  00149A  516C               	movf	(??_fputc+1)& (0+255),w,b
  2438  00149C  216E               	addwfc	(??_fputc+3)& (0+255),w,b
  2439  00149E  6EDA               	movwf	fsr2h,c
  2440  0014A0  C067  FFDF         	movff	fputc@c,indf2
  2441  0014A4  EE20 F002          	lfsr	2,2
  2442  0014A8  5169               	movf	fputc@fp& (0+255),w,b
  2443  0014AA  26D9               	addwf	fsr2l,f,c
  2444  0014AC  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2445  0014AE  22DA               	addwfc	fsr2h,f,c
  2446  0014B0  2ADE               	incf	postinc2,f,c
  2447  0014B2  0E00               	movlw	0
  2448  0014B4  22DD               	addwfc	postdec2,f,c
  2449  0014B6                     l1775:
  2450  0014B6  FFFF               	dw	65535	; assembler added errata NOP
  2451  0014B8  C067  F067         	movff	fputc@c,?_fputc
  2452  0014BC  0100               	movlb	0	; () banked
  2453  0014BE  6B68               	clrf	(?_fputc+1)& (0+255),b
  2454  0014C0                     
  2455                           ; BSR set to: 0
  2456  0014C0  0012               	return		;funcret
  2457  0014C2  FFFF               	dw	65535	; errata NOP
  2458  0014C4                     __end_of_fputc:
  2459                           	opt callstack 0
  2460                           
  2461 ;; *************** function _putch *****************
  2462 ;; Defined at:
  2463 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  c               1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  c               1    0[BANK0 ] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       0       0       0       0       0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       0       0       0       0       0       0
  2481 ;;Total ram usage:        0 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_fputc
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text9
  2492  001DAC                     __ptext9:
  2493                           	opt callstack 0
  2494  001DAC                     _putch:
  2495                           	opt callstack 0
  2496  001DAC  FFFF               	dw	65535	; assembler added errata NOP
  2497  001DAE  0012               	return		;funcret
  2498  001DB0  FFFF               	dw	65535	; errata NOP
  2499  001DB2                     __end_of_putch:
  2500                           	opt callstack 0
  2501                           
  2502 ;; *************** function _abs *****************
  2503 ;; Defined at:
  2504 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  a               2   25[BANK0 ] int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  2   25[BANK0 ] int 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2518 ;;      Params:         0       2       0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0
  2520 ;;      Temps:          0       2       0       0       0       0       0
  2521 ;;      Totals:         0       4       0       0       0       0       0
  2522 ;;Total ram usage:        4 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    2
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_dtoa
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text10
  2533  001BD6                     __ptext10:
  2534                           	opt callstack 0
  2535  001BD6                     _abs:
  2536                           	opt callstack 0
  2537  001BD6  FFFF               	dw	65535	; assembler added errata NOP
  2538  001BD8  0100               	movlb	0	; () banked
  2539  001BDA  BF7A               	btfsc	(abs@a+1)& (0+255),7,b
  2540  001BDC  EFFB  F00D         	goto	u860
  2541  001BE0  517A               	movf	(abs@a+1)& (0+255),w,b
  2542  001BE2  E106               	bnz	u861
  2543  001BE4  0579               	decf	abs@a& (0+255),w,b
  2544  001BE6  B0D8               	btfsc	status,0,c
  2545  001BE8  EFF8  F00D         	goto	u861
  2546  001BEC  EFFB  F00D         	goto	u860
  2547  001BF0                     u861:
  2548  001BF0  FFFF               	dw	65535	; assembler added errata NOP
  2549  001BF2  EF0A  F00E         	goto	l976
  2550  001BF6                     u860:
  2551  001BF6  FFFF               	dw	65535	; assembler added errata NOP
  2552  001BF8                     
  2553                           ; BSR set to: 0
  2554  001BF8  C079  F07B         	movff	abs@a,??_abs
  2555  001BFC  C07A  F07C         	movff	abs@a+1,??_abs+1
  2556  001C00  1F7B               	comf	??_abs& (0+255),f,b
  2557  001C02  1F7C               	comf	(??_abs+1)& (0+255),f,b
  2558  001C04  4B7B               	infsnz	??_abs& (0+255),f,b
  2559  001C06  2B7C               	incf	(??_abs+1)& (0+255),f,b
  2560  001C08  C07B  F079         	movff	??_abs,?_abs
  2561  001C0C  C07C  F07A         	movff	??_abs+1,?_abs+1
  2562  001C10  EF0F  F00E         	goto	l979
  2563  001C14                     l976:
  2564  001C14  FFFF               	dw	65535	; assembler added errata NOP
  2565                           
  2566                           ; BSR set to: 0
  2567  001C16  C079  F079         	movff	abs@a,?_abs
  2568  001C1A  C07A  F07A         	movff	abs@a+1,?_abs+1
  2569  001C1E                     l979:
  2570  001C1E  FFFF               	dw	65535	; assembler added errata NOP
  2571                           
  2572                           ; BSR set to: 0
  2573  001C20  0012               	return		;funcret
  2574  001C22  FFFF               	dw	65535	; errata NOP
  2575  001C24                     __end_of_abs:
  2576                           	opt callstack 0
  2577                           
  2578 ;; *************** function ___aomod *****************
  2579 ;; Defined at:
  2580 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  dividend        8    7[BANK0 ] long long 
  2583 ;;  divisor         8   15[BANK0 ] long long 
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;  sign            1   24[BANK0 ] unsigned char 
  2586 ;;  counter         1   23[BANK0 ] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  8    7[BANK0 ] long long 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2596 ;;      Params:         0      16       0       0       0       0       0
  2597 ;;      Locals:         0       2       0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0
  2599 ;;      Totals:         0      18       0       0       0       0       0
  2600 ;;Total ram usage:       18 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    2
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_dtoa
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text11
  2611  000D50                     __ptext11:
  2612                           	opt callstack 0
  2613  000D50                     ___aomod:
  2614                           	opt callstack 0
  2615  000D50  FFFF               	dw	65535	; assembler added errata NOP
  2616  000D52  0E00               	movlw	0
  2617  000D54  0100               	movlb	0	; () banked
  2618  000D56  6F78               	movwf	___aomod@sign& (0+255),b
  2619  000D58                     
  2620                           ; BSR set to: 0
  2621  000D58  BF6E               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2622  000D5A  EFB4  F006         	goto	u940
  2623  000D5E  EFB1  F006         	goto	u941
  2624  000D62                     u941:
  2625  000D62  FFFF               	dw	65535	; assembler added errata NOP
  2626  000D64  EFC7  F006         	goto	l1905
  2627  000D68                     u940:
  2628  000D68  FFFF               	dw	65535	; assembler added errata NOP
  2629  000D6A                     
  2630                           ; BSR set to: 0
  2631  000D6A  1F6E               	comf	(___aomod@dividend+7)& (0+255),f,b
  2632  000D6C  1F6D               	comf	(___aomod@dividend+6)& (0+255),f,b
  2633  000D6E  1F6C               	comf	(___aomod@dividend+5)& (0+255),f,b
  2634  000D70  1F6B               	comf	(___aomod@dividend+4)& (0+255),f,b
  2635  000D72  1F6A               	comf	(___aomod@dividend+3)& (0+255),f,b
  2636  000D74  1F69               	comf	(___aomod@dividend+2)& (0+255),f,b
  2637  000D76  1F68               	comf	(___aomod@dividend+1)& (0+255),f,b
  2638  000D78  6D67               	negf	___aomod@dividend& (0+255),b
  2639  000D7A  0E00               	movlw	0
  2640  000D7C  2368               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2641  000D7E  2369               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2642  000D80  236A               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2643  000D82  236B               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2644  000D84  236C               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2645  000D86  236D               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2646  000D88  236E               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2647  000D8A                     
  2648                           ; BSR set to: 0
  2649  000D8A  0E01               	movlw	1
  2650  000D8C  6F78               	movwf	___aomod@sign& (0+255),b
  2651  000D8E                     l1905:
  2652  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  2653                           
  2654                           ; BSR set to: 0
  2655  000D90  BF76               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2656  000D92  EFD0  F006         	goto	u950
  2657  000D96  EFCD  F006         	goto	u951
  2658  000D9A                     u951:
  2659  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  2660  000D9C  EFE1  F006         	goto	l1909
  2661  000DA0                     u950:
  2662  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  2663  000DA2                     
  2664                           ; BSR set to: 0
  2665  000DA2  1F76               	comf	(___aomod@divisor+7)& (0+255),f,b
  2666  000DA4  1F75               	comf	(___aomod@divisor+6)& (0+255),f,b
  2667  000DA6  1F74               	comf	(___aomod@divisor+5)& (0+255),f,b
  2668  000DA8  1F73               	comf	(___aomod@divisor+4)& (0+255),f,b
  2669  000DAA  1F72               	comf	(___aomod@divisor+3)& (0+255),f,b
  2670  000DAC  1F71               	comf	(___aomod@divisor+2)& (0+255),f,b
  2671  000DAE  1F70               	comf	(___aomod@divisor+1)& (0+255),f,b
  2672  000DB0  6D6F               	negf	___aomod@divisor& (0+255),b
  2673  000DB2  0E00               	movlw	0
  2674  000DB4  2370               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2675  000DB6  2371               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2676  000DB8  2372               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2677  000DBA  2373               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2678  000DBC  2374               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2679  000DBE  2375               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2680  000DC0  2376               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2681  000DC2                     l1909:
  2682  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  2683                           
  2684                           ; BSR set to: 0
  2685  000DC4  516F               	movf	___aomod@divisor& (0+255),w,b
  2686  000DC6  1170               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2687  000DC8  1171               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2688  000DCA  1172               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2689  000DCC  1173               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2690  000DCE  1174               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2691  000DD0  1175               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2692  000DD2  1176               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2693  000DD4  B4D8               	btfsc	status,2,c
  2694  000DD6  EFEF  F006         	goto	u961
  2695  000DDA  EFF2  F006         	goto	u960
  2696  000DDE                     u961:
  2697  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2698  000DE0  EF43  F007         	goto	l1925
  2699  000DE4                     u960:
  2700  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2701  000DE6                     
  2702                           ; BSR set to: 0
  2703  000DE6  0E01               	movlw	1
  2704  000DE8  6F77               	movwf	___aomod@counter& (0+255),b
  2705  000DEA  EF02  F007         	goto	l1915
  2706  000DEE                     l1913:
  2707  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  2708                           
  2709                           ; BSR set to: 0
  2710  000DF0  90D8               	bcf	status,0,c
  2711  000DF2  376F               	rlcf	___aomod@divisor& (0+255),f,b
  2712  000DF4  3770               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2713  000DF6  3771               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2714  000DF8  3772               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2715  000DFA  3773               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2716  000DFC  3774               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2717  000DFE  3775               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2718  000E00  3776               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2719  000E02  2B77               	incf	___aomod@counter& (0+255),f,b
  2720  000E04                     l1915:
  2721  000E04  FFFF               	dw	65535	; assembler added errata NOP
  2722                           
  2723                           ; BSR set to: 0
  2724  000E06  AF76               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2725  000E08  EF08  F007         	goto	u971
  2726  000E0C  EF0B  F007         	goto	u970
  2727  000E10                     u971:
  2728  000E10  FFFF               	dw	65535	; assembler added errata NOP
  2729  000E12  EFF7  F006         	goto	l1913
  2730  000E16                     u970:
  2731  000E16  FFFF               	dw	65535	; assembler added errata NOP
  2732  000E18                     l1917:
  2733  000E18  FFFF               	dw	65535	; assembler added errata NOP
  2734                           
  2735                           ; BSR set to: 0
  2736  000E1A  516F               	movf	___aomod@divisor& (0+255),w,b
  2737  000E1C  5D67               	subwf	___aomod@dividend& (0+255),w,b
  2738  000E1E  5170               	movf	(___aomod@divisor+1)& (0+255),w,b
  2739  000E20  5968               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2740  000E22  5171               	movf	(___aomod@divisor+2)& (0+255),w,b
  2741  000E24  5969               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2742  000E26  5172               	movf	(___aomod@divisor+3)& (0+255),w,b
  2743  000E28  596A               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2744  000E2A  5173               	movf	(___aomod@divisor+4)& (0+255),w,b
  2745  000E2C  596B               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2746  000E2E  5174               	movf	(___aomod@divisor+5)& (0+255),w,b
  2747  000E30  596C               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2748  000E32  5175               	movf	(___aomod@divisor+6)& (0+255),w,b
  2749  000E34  596D               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2750  000E36  5176               	movf	(___aomod@divisor+7)& (0+255),w,b
  2751  000E38  596E               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2752  000E3A  A0D8               	btfss	status,0,c
  2753  000E3C  EF22  F007         	goto	u981
  2754  000E40  EF25  F007         	goto	u980
  2755  000E44                     u981:
  2756  000E44  FFFF               	dw	65535	; assembler added errata NOP
  2757  000E46  EF36  F007         	goto	l1921
  2758  000E4A                     u980:
  2759  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  2760  000E4C                     
  2761                           ; BSR set to: 0
  2762  000E4C  516F               	movf	___aomod@divisor& (0+255),w,b
  2763  000E4E  5F67               	subwf	___aomod@dividend& (0+255),f,b
  2764  000E50  5170               	movf	(___aomod@divisor+1)& (0+255),w,b
  2765  000E52  5B68               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2766  000E54  5171               	movf	(___aomod@divisor+2)& (0+255),w,b
  2767  000E56  5B69               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2768  000E58  5172               	movf	(___aomod@divisor+3)& (0+255),w,b
  2769  000E5A  5B6A               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2770  000E5C  5173               	movf	(___aomod@divisor+4)& (0+255),w,b
  2771  000E5E  5B6B               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2772  000E60  5174               	movf	(___aomod@divisor+5)& (0+255),w,b
  2773  000E62  5B6C               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2774  000E64  5175               	movf	(___aomod@divisor+6)& (0+255),w,b
  2775  000E66  5B6D               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2776  000E68  5176               	movf	(___aomod@divisor+7)& (0+255),w,b
  2777  000E6A  5B6E               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2778  000E6C                     l1921:
  2779  000E6C  FFFF               	dw	65535	; assembler added errata NOP
  2780                           
  2781                           ; BSR set to: 0
  2782  000E6E  90D8               	bcf	status,0,c
  2783  000E70  3376               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2784  000E72  3375               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2785  000E74  3374               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2786  000E76  3373               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2787  000E78  3372               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2788  000E7A  3371               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2789  000E7C  3370               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2790  000E7E  336F               	rrcf	___aomod@divisor& (0+255),f,b
  2791  000E80                     
  2792                           ; BSR set to: 0
  2793  000E80  2F77               	decfsz	___aomod@counter& (0+255),f,b
  2794  000E82  EF0C  F007         	goto	l1917
  2795  000E86                     l1925:
  2796  000E86  FFFF               	dw	65535	; assembler added errata NOP
  2797                           
  2798                           ; BSR set to: 0
  2799  000E88  5178               	movf	___aomod@sign& (0+255),w,b
  2800  000E8A  B4D8               	btfsc	status,2,c
  2801  000E8C  EF4A  F007         	goto	u991
  2802  000E90  EF4D  F007         	goto	u990
  2803  000E94                     u991:
  2804  000E94  FFFF               	dw	65535	; assembler added errata NOP
  2805  000E96  EF5E  F007         	goto	l1929
  2806  000E9A                     u990:
  2807  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2808  000E9C                     
  2809                           ; BSR set to: 0
  2810  000E9C  1F6E               	comf	(___aomod@dividend+7)& (0+255),f,b
  2811  000E9E  1F6D               	comf	(___aomod@dividend+6)& (0+255),f,b
  2812  000EA0  1F6C               	comf	(___aomod@dividend+5)& (0+255),f,b
  2813  000EA2  1F6B               	comf	(___aomod@dividend+4)& (0+255),f,b
  2814  000EA4  1F6A               	comf	(___aomod@dividend+3)& (0+255),f,b
  2815  000EA6  1F69               	comf	(___aomod@dividend+2)& (0+255),f,b
  2816  000EA8  1F68               	comf	(___aomod@dividend+1)& (0+255),f,b
  2817  000EAA  6D67               	negf	___aomod@dividend& (0+255),b
  2818  000EAC  0E00               	movlw	0
  2819  000EAE  2368               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2820  000EB0  2369               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2821  000EB2  236A               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2822  000EB4  236B               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2823  000EB6  236C               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2824  000EB8  236D               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2825  000EBA  236E               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2826  000EBC                     l1929:
  2827  000EBC  FFFF               	dw	65535	; assembler added errata NOP
  2828                           
  2829                           ; BSR set to: 0
  2830  000EBE  C067  F067         	movff	___aomod@dividend,?___aomod
  2831  000EC2  C068  F068         	movff	___aomod@dividend+1,?___aomod+1
  2832  000EC6  C069  F069         	movff	___aomod@dividend+2,?___aomod+2
  2833  000ECA  C06A  F06A         	movff	___aomod@dividend+3,?___aomod+3
  2834  000ECE  C06B  F06B         	movff	___aomod@dividend+4,?___aomod+4
  2835  000ED2  C06C  F06C         	movff	___aomod@dividend+5,?___aomod+5
  2836  000ED6  C06D  F06D         	movff	___aomod@dividend+6,?___aomod+6
  2837  000EDA  C06E  F06E         	movff	___aomod@dividend+7,?___aomod+7
  2838  000EDE                     
  2839                           ; BSR set to: 0
  2840  000EDE  0012               	return		;funcret
  2841  000EE0  FFFF               	dw	65535	; errata NOP
  2842  000EE2                     __end_of___aomod:
  2843                           	opt callstack 0
  2844                           
  2845 ;; *************** function ___aodiv *****************
  2846 ;; Defined at:
  2847 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  dividend        8    7[BANK0 ] long long 
  2850 ;;  divisor         8   15[BANK0 ] long long 
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  quotient        8   25[BANK0 ] long long 
  2853 ;;  sign            1   24[BANK0 ] unsigned char 
  2854 ;;  counter         1   23[BANK0 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  8    7[BANK0 ] long long 
  2857 ;; Registers used:
  2858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2864 ;;      Params:         0      16       0       0       0       0       0
  2865 ;;      Locals:         0      10       0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0
  2867 ;;      Totals:         0      26       0       0       0       0       0
  2868 ;;Total ram usage:       26 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    2
  2871 ;; This function calls:
  2872 ;;		Nothing
  2873 ;; This function is called by:
  2874 ;;		_dtoa
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text12
  2879  000B9A                     __ptext12:
  2880                           	opt callstack 0
  2881  000B9A                     ___aodiv:
  2882                           	opt callstack 0
  2883  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  2884  000B9C  0E00               	movlw	0
  2885  000B9E  0100               	movlb	0	; () banked
  2886  000BA0  6F78               	movwf	___aodiv@sign& (0+255),b
  2887  000BA2                     
  2888                           ; BSR set to: 0
  2889  000BA2  BF76               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  2890  000BA4  EFD9  F005         	goto	u870
  2891  000BA8  EFD6  F005         	goto	u871
  2892  000BAC                     u871:
  2893  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  2894  000BAE  EFEC  F005         	goto	l1861
  2895  000BB2                     u870:
  2896  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  2897  000BB4                     
  2898                           ; BSR set to: 0
  2899  000BB4  1F76               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2900  000BB6  1F75               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2901  000BB8  1F74               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2902  000BBA  1F73               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2903  000BBC  1F72               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2904  000BBE  1F71               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2905  000BC0  1F70               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2906  000BC2  6D6F               	negf	___aodiv@divisor& (0+255),b
  2907  000BC4  0E00               	movlw	0
  2908  000BC6  2370               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2909  000BC8  2371               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2910  000BCA  2372               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2911  000BCC  2373               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2912  000BCE  2374               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2913  000BD0  2375               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2914  000BD2  2376               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2915  000BD4                     
  2916                           ; BSR set to: 0
  2917  000BD4  0E01               	movlw	1
  2918  000BD6  6F78               	movwf	___aodiv@sign& (0+255),b
  2919  000BD8                     l1861:
  2920  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ; BSR set to: 0
  2923  000BDA  BF6E               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  2924  000BDC  EFF5  F005         	goto	u880
  2925  000BE0  EFF2  F005         	goto	u881
  2926  000BE4                     u881:
  2927  000BE4  FFFF               	dw	65535	; assembler added errata NOP
  2928  000BE6  EF08  F006         	goto	l1867
  2929  000BEA                     u880:
  2930  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  2931  000BEC                     
  2932                           ; BSR set to: 0
  2933  000BEC  1F6E               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2934  000BEE  1F6D               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2935  000BF0  1F6C               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2936  000BF2  1F6B               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2937  000BF4  1F6A               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2938  000BF6  1F69               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2939  000BF8  1F68               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2940  000BFA  6D67               	negf	___aodiv@dividend& (0+255),b
  2941  000BFC  0E00               	movlw	0
  2942  000BFE  2368               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2943  000C00  2369               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2944  000C02  236A               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2945  000C04  236B               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2946  000C06  236C               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2947  000C08  236D               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2948  000C0A  236E               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2949  000C0C                     
  2950                           ; BSR set to: 0
  2951  000C0C  0E01               	movlw	1
  2952  000C0E  1B78               	xorwf	___aodiv@sign& (0+255),f,b
  2953  000C10                     l1867:
  2954  000C10  FFFF               	dw	65535	; assembler added errata NOP
  2955                           
  2956                           ; BSR set to: 0
  2957  000C12  EE20  F079         	lfsr	2,___aodiv@quotient
  2958  000C16  0E07               	movlw	7
  2959  000C18                     u891:
  2960  000C18  6ADE               	clrf	postinc2,c
  2961  000C1A  06E8               	decf	wreg,f,c
  2962  000C1C  E2FD               	bc	u891
  2963  000C1E                     
  2964                           ; BSR set to: 0
  2965  000C1E  516F               	movf	___aodiv@divisor& (0+255),w,b
  2966  000C20  1170               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2967  000C22  1171               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2968  000C24  1172               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2969  000C26  1173               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2970  000C28  1174               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2971  000C2A  1175               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2972  000C2C  1176               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2973  000C2E  B4D8               	btfsc	status,2,c
  2974  000C30  EF1C  F006         	goto	u901
  2975  000C34  EF1F  F006         	goto	u900
  2976  000C38                     u901:
  2977  000C38  FFFF               	dw	65535	; assembler added errata NOP
  2978  000C3A  EF7A  F006         	goto	l1889
  2979  000C3E                     u900:
  2980  000C3E  FFFF               	dw	65535	; assembler added errata NOP
  2981  000C40                     
  2982                           ; BSR set to: 0
  2983  000C40  0E01               	movlw	1
  2984  000C42  6F77               	movwf	___aodiv@counter& (0+255),b
  2985  000C44  EF2F  F006         	goto	l1875
  2986  000C48                     l1873:
  2987  000C48  FFFF               	dw	65535	; assembler added errata NOP
  2988                           
  2989                           ; BSR set to: 0
  2990  000C4A  90D8               	bcf	status,0,c
  2991  000C4C  376F               	rlcf	___aodiv@divisor& (0+255),f,b
  2992  000C4E  3770               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2993  000C50  3771               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2994  000C52  3772               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2995  000C54  3773               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2996  000C56  3774               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2997  000C58  3775               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2998  000C5A  3776               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2999  000C5C  2B77               	incf	___aodiv@counter& (0+255),f,b
  3000  000C5E                     l1875:
  3001  000C5E  FFFF               	dw	65535	; assembler added errata NOP
  3002                           
  3003                           ; BSR set to: 0
  3004  000C60  AF76               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3005  000C62  EF35  F006         	goto	u911
  3006  000C66  EF38  F006         	goto	u910
  3007  000C6A                     u911:
  3008  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  3009  000C6C  EF24  F006         	goto	l1873
  3010  000C70                     u910:
  3011  000C70  FFFF               	dw	65535	; assembler added errata NOP
  3012  000C72                     l1877:
  3013  000C72  FFFF               	dw	65535	; assembler added errata NOP
  3014                           
  3015                           ; BSR set to: 0
  3016  000C74  90D8               	bcf	status,0,c
  3017  000C76  3779               	rlcf	___aodiv@quotient& (0+255),f,b
  3018  000C78  377A               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3019  000C7A  377B               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3020  000C7C  377C               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3021  000C7E  377D               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3022  000C80  377E               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3023  000C82  377F               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3024  000C84  3780               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3025  000C86                     
  3026                           ; BSR set to: 0
  3027  000C86  516F               	movf	___aodiv@divisor& (0+255),w,b
  3028  000C88  5D67               	subwf	___aodiv@dividend& (0+255),w,b
  3029  000C8A  5170               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3030  000C8C  5968               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3031  000C8E  5171               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3032  000C90  5969               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3033  000C92  5172               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3034  000C94  596A               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3035  000C96  5173               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3036  000C98  596B               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3037  000C9A  5174               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3038  000C9C  596C               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3039  000C9E  5175               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3040  000CA0  596D               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3041  000CA2  5176               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3042  000CA4  596E               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3043  000CA6  A0D8               	btfss	status,0,c
  3044  000CA8  EF58  F006         	goto	u921
  3045  000CAC  EF5B  F006         	goto	u920
  3046  000CB0                     u921:
  3047  000CB0  FFFF               	dw	65535	; assembler added errata NOP
  3048  000CB2  EF6D  F006         	goto	l1885
  3049  000CB6                     u920:
  3050  000CB6  FFFF               	dw	65535	; assembler added errata NOP
  3051  000CB8                     
  3052                           ; BSR set to: 0
  3053  000CB8  516F               	movf	___aodiv@divisor& (0+255),w,b
  3054  000CBA  5F67               	subwf	___aodiv@dividend& (0+255),f,b
  3055  000CBC  5170               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3056  000CBE  5B68               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3057  000CC0  5171               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3058  000CC2  5B69               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3059  000CC4  5172               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3060  000CC6  5B6A               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3061  000CC8  5173               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3062  000CCA  5B6B               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3063  000CCC  5174               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3064  000CCE  5B6C               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3065  000CD0  5175               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3066  000CD2  5B6D               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3067  000CD4  5176               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3068  000CD6  5B6E               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3069  000CD8                     
  3070                           ; BSR set to: 0
  3071  000CD8  8179               	bsf	___aodiv@quotient& (0+255),0,b
  3072  000CDA                     l1885:
  3073  000CDA  FFFF               	dw	65535	; assembler added errata NOP
  3074                           
  3075                           ; BSR set to: 0
  3076  000CDC  90D8               	bcf	status,0,c
  3077  000CDE  3376               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3078  000CE0  3375               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3079  000CE2  3374               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3080  000CE4  3373               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3081  000CE6  3372               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3082  000CE8  3371               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3083  000CEA  3370               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3084  000CEC  336F               	rrcf	___aodiv@divisor& (0+255),f,b
  3085  000CEE                     
  3086                           ; BSR set to: 0
  3087  000CEE  2F77               	decfsz	___aodiv@counter& (0+255),f,b
  3088  000CF0  EF39  F006         	goto	l1877
  3089  000CF4                     l1889:
  3090  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  3091                           
  3092                           ; BSR set to: 0
  3093  000CF6  5178               	movf	___aodiv@sign& (0+255),w,b
  3094  000CF8  B4D8               	btfsc	status,2,c
  3095  000CFA  EF81  F006         	goto	u931
  3096  000CFE  EF84  F006         	goto	u930
  3097  000D02                     u931:
  3098  000D02  FFFF               	dw	65535	; assembler added errata NOP
  3099  000D04  EF95  F006         	goto	l1893
  3100  000D08                     u930:
  3101  000D08  FFFF               	dw	65535	; assembler added errata NOP
  3102  000D0A                     
  3103                           ; BSR set to: 0
  3104  000D0A  1F80               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3105  000D0C  1F7F               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3106  000D0E  1F7E               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3107  000D10  1F7D               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3108  000D12  1F7C               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3109  000D14  1F7B               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3110  000D16  1F7A               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3111  000D18  6D79               	negf	___aodiv@quotient& (0+255),b
  3112  000D1A  0E00               	movlw	0
  3113  000D1C  237A               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3114  000D1E  237B               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3115  000D20  237C               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3116  000D22  237D               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3117  000D24  237E               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3118  000D26  237F               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3119  000D28  2380               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3120  000D2A                     l1893:
  3121  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  3122                           
  3123                           ; BSR set to: 0
  3124  000D2C  C079  F067         	movff	___aodiv@quotient,?___aodiv
  3125  000D30  C07A  F068         	movff	___aodiv@quotient+1,?___aodiv+1
  3126  000D34  C07B  F069         	movff	___aodiv@quotient+2,?___aodiv+2
  3127  000D38  C07C  F06A         	movff	___aodiv@quotient+3,?___aodiv+3
  3128  000D3C  C07D  F06B         	movff	___aodiv@quotient+4,?___aodiv+4
  3129  000D40  C07E  F06C         	movff	___aodiv@quotient+5,?___aodiv+5
  3130  000D44  C07F  F06D         	movff	___aodiv@quotient+6,?___aodiv+6
  3131  000D48  C080  F06E         	movff	___aodiv@quotient+7,?___aodiv+7
  3132  000D4C                     
  3133                           ; BSR set to: 0
  3134  000D4C  0012               	return		;funcret
  3135  000D4E  FFFF               	dw	65535	; errata NOP
  3136  000D50                     __end_of___aodiv:
  3137                           	opt callstack 0
  3138                           
  3139 ;; *************** function _lcd_putMessage *****************
  3140 ;; Defined at:
  3141 ;;		line 385 in file "Lcd4Lignes.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  chaine          3   15[BANK0 ] PTR const unsigned char 
  3144 ;;		 -> STR_3(3), main@message(20), STR_1(16), 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  j               1   23[BANK0 ] unsigned char 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3156 ;;      Params:         0       3       0       0       0       0       0
  3157 ;;      Locals:         0       1       0       0       0       0       0
  3158 ;;      Temps:          0       5       0       0       0       0       0
  3159 ;;      Totals:         0       9       0       0       0       0       0
  3160 ;;Total ram usage:        9 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    6
  3163 ;; This function calls:
  3164 ;;		_lcd_ecritChar
  3165 ;; This function is called by:
  3166 ;;		_main
  3167 ;; This function uses a non-reentrant model
  3168 ;;
  3169                           
  3170                           	psect	text13
  3171  0014C4                     __ptext13:
  3172                           	opt callstack 0
  3173  0014C4                     _lcd_putMessage:
  3174                           	opt callstack 0
  3175  0014C4  FFFF               	dw	65535	; assembler added errata NOP
  3176  0014C6                     
  3177                           ;Lcd4Lignes.c: 385: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 386: 
      +                          {;Lcd4Lignes.c: 387:     unsigned char j;;Lcd4Lignes.c: 389:     for(j = 0; chaine[j] !=
      +                           0; j++)
  3178  0014C6  0E00               	movlw	0
  3179  0014C8  0100               	movlb	0	; force () banked
  3180  0014CA  6F77               	movwf	lcd_putMessage@j& (0+255),b
  3181  0014CC  EF92  F00A         	goto	l2299
  3182  0014D0                     l2295:
  3183  0014D0  FFFF               	dw	65535	; assembler added errata NOP
  3184                           
  3185                           ;Lcd4Lignes.c: 390:         lcd_ecritChar(chaine[j]);
  3186  0014D2  0100               	movlb	0	; force () banked
  3187  0014D4  5177               	movf	lcd_putMessage@j& (0+255),w,b
  3188  0014D6  0100               	movlb	0	; force () banked
  3189  0014D8  6F72               	movwf	??_lcd_putMessage& (0+255),b
  3190  0014DA  6B73               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3191  0014DC  5172               	movf	??_lcd_putMessage& (0+255),w,b
  3192  0014DE  0100               	movlb	0	; force () banked
  3193  0014E0  256F               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3194  0014E2  0100               	movlb	0	; force () banked
  3195  0014E4  6F74               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3196  0014E6  5173               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3197  0014E8  0100               	movlb	0	; force () banked
  3198  0014EA  2170               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3199  0014EC  0100               	movlb	0	; force () banked
  3200  0014EE  6F75               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3201  0014F0  0E00               	movlw	0
  3202  0014F2  0100               	movlb	0	; force () banked
  3203  0014F4  2171               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3204  0014F6  0100               	movlb	0	; force () banked
  3205  0014F8  6F76               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3206  0014FA  C074  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3207  0014FE  C075  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3208  001502  C076  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3209  001506  BAF8               	btfsc	tblptru,5,c
  3210  001508  D004               	bra	u1277
  3211  00150A  0008               	tblrd		*
  3212  00150C  FFFF               	dw	65535	; errata NOP
  3213  00150E  50F5               	movf	tablat,w,c
  3214  001510  D005               	bra	u1270
  3215  001512                     u1277:
  3216  001512  CFF6 FFE1          	movff	tblptrl,fsr1l
  3217  001516  CFF7 FFE2          	movff	tblptrh,fsr1h
  3218  00151A  50E7               	movf	indf1,w,c
  3219  00151C                     u1270:
  3220  00151C  EC80  F00C         	call	_lcd_ecritChar
  3221  001520  0100               	movlb	0	; force () banked
  3222  001522  2B77               	incf	lcd_putMessage@j& (0+255),f,b
  3223  001524                     l2299:
  3224  001524  FFFF               	dw	65535	; assembler added errata NOP
  3225                           
  3226                           ; BSR set to: 0
  3227  001526  0100               	movlb	0	; force () banked
  3228  001528  5177               	movf	lcd_putMessage@j& (0+255),w,b
  3229  00152A  0100               	movlb	0	; force () banked
  3230  00152C  6F72               	movwf	??_lcd_putMessage& (0+255),b
  3231  00152E  6B73               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3232  001530  5172               	movf	??_lcd_putMessage& (0+255),w,b
  3233  001532  0100               	movlb	0	; force () banked
  3234  001534  256F               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3235  001536  0100               	movlb	0	; force () banked
  3236  001538  6F74               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3237  00153A  5173               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3238  00153C  0100               	movlb	0	; force () banked
  3239  00153E  2170               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3240  001540  0100               	movlb	0	; force () banked
  3241  001542  6F75               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3242  001544  0E00               	movlw	0
  3243  001546  0100               	movlb	0	; force () banked
  3244  001548  2171               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3245  00154A  0100               	movlb	0	; force () banked
  3246  00154C  6F76               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3247  00154E  C074  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3248  001552  C075  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3249  001556  C076  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3250  00155A  BAF8               	btfsc	tblptru,5,c
  3251  00155C  D004               	bra	u1287
  3252  00155E  0008               	tblrd		*
  3253  001560  FFFF               	dw	65535	; errata NOP
  3254  001562  50F5               	movf	tablat,w,c
  3255  001564  D005               	bra	u1280
  3256  001566                     u1287:
  3257  001566  CFF6 FFE1          	movff	tblptrl,fsr1l
  3258  00156A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3259  00156E  50E7               	movf	indf1,w,c
  3260  001570                     u1280:
  3261  001570  0900               	iorlw	0
  3262  001572  A4D8               	btfss	status,2,c
  3263  001574  EFBE  F00A         	goto	u1291
  3264  001578  EFC1  F00A         	goto	u1290
  3265  00157C                     u1291:
  3266  00157C  FFFF               	dw	65535	; assembler added errata NOP
  3267  00157E  EF68  F00A         	goto	l2295
  3268  001582                     u1290:
  3269  001582  FFFF               	dw	65535	; assembler added errata NOP
  3270  001584  0012               	return		;funcret
  3271  001586  FFFF               	dw	65535	; errata NOP
  3272  001588                     __end_of_lcd_putMessage:
  3273                           	opt callstack 0
  3274                           
  3275 ;; *************** function _lcd_ecritChar *****************
  3276 ;; Defined at:
  3277 ;;		line 357 in file "Lcd4Lignes.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  car             1    wreg     unsigned char 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  car             1   13[BANK0 ] unsigned char 
  3282 ;;  posRam          1   14[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3292 ;;      Params:         0       0       0       0       0       0       0
  3293 ;;      Locals:         0       2       0       0       0       0       0
  3294 ;;      Temps:          0       2       0       0       0       0       0
  3295 ;;      Totals:         0       4       0       0       0       0       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    5
  3299 ;; This function calls:
  3300 ;;		_lcd_wrCom
  3301 ;;		_lcd_wrData
  3302 ;; This function is called by:
  3303 ;;		_lcd_putMessage
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text14
  3308  001900                     __ptext14:
  3309                           	opt callstack 0
  3310  001900                     _lcd_ecritChar:
  3311                           	opt callstack 0
  3312  001900  FFFF               	dw	65535	; assembler added errata NOP
  3313                           
  3314                           ;incstack = 0
  3315                           ;lcd_ecritChar@car stored from wreg
  3316  001902  0100               	movlb	0	; force () banked
  3317  001904  6F6D               	movwf	lcd_ecritChar@car& (0+255),b
  3318  001906                     
  3319                           ;Lcd4Lignes.c: 357: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 358: {;Lcd4Ligne
      +                          s.c: 359:     unsigned char posRam;;Lcd4Lignes.c: 361:     posRam = lcd_wrData(car);
  3320  001906  0100               	movlb	0	; force () banked
  3321  001908  516D               	movf	lcd_ecritChar@car& (0+255),w,b
  3322  00190A  ECBF  F00D         	call	_lcd_wrData
  3323  00190E  0100               	movlb	0	; force () banked
  3324  001910  6F6E               	movwf	lcd_ecritChar@posRam& (0+255),b
  3325                           
  3326                           ;Lcd4Lignes.c: 362:     switch(posRam)
  3327  001912  EF9D  F00C         	goto	l2199
  3328  001916                     l2191:
  3329  001916  FFFF               	dw	65535	; assembler added errata NOP
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;Lcd4Lignes.c: 365:             lcd_wrCom(0x40|0x80);
  3333  001918  0EC0               	movlw	192
  3334  00191A  EC21  F00B         	call	_lcd_wrCom
  3335                           
  3336                           ;Lcd4Lignes.c: 366:             break;
  3337  00191E  EFBA  F00C         	goto	l204
  3338  001922                     l2193:
  3339  001922  FFFF               	dw	65535	; assembler added errata NOP
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;Lcd4Lignes.c: 368:             lcd_wrCom(0x14|0x80);
  3343  001924  0E94               	movlw	148
  3344  001926  EC21  F00B         	call	_lcd_wrCom
  3345                           
  3346                           ;Lcd4Lignes.c: 369:             break;
  3347  00192A  EFBA  F00C         	goto	l204
  3348  00192E                     l2195:
  3349  00192E  FFFF               	dw	65535	; assembler added errata NOP
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;Lcd4Lignes.c: 371:             lcd_wrCom(0x54|0x80);
  3353  001930  0ED4               	movlw	212
  3354  001932  EC21  F00B         	call	_lcd_wrCom
  3355                           
  3356                           ;Lcd4Lignes.c: 372:             break;
  3357  001936  EFBA  F00C         	goto	l204
  3358  00193A                     l2199:
  3359  00193A  FFFF               	dw	65535	; assembler added errata NOP
  3360                           
  3361                           ; BSR set to: 0
  3362  00193C  0100               	movlb	0	; force () banked
  3363  00193E  516E               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3364  001940  0100               	movlb	0	; force () banked
  3365  001942  6F6B               	movwf	??_lcd_ecritChar& (0+255),b
  3366  001944  6B6C               	clrf	(??_lcd_ecritChar+1)& (0+255),b
  3367                           
  3368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3369                           ; Switch size 1, requested type "simple"
  3370                           ; Number of cases is 1, Range of values is 0 to 0
  3371                           ; switch strategies available:
  3372                           ; Name         Instructions Cycles
  3373                           ; simple_byte            4     3 (average)
  3374                           ;	Chosen strategy is simple_byte
  3375  001946  516C               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
  3376  001948  0A00               	xorlw	0	; case 0
  3377  00194A  B4D8               	btfsc	status,2,c
  3378  00194C  EFAA  F00C         	goto	l2517
  3379  001950  EFBA  F00C         	goto	l204
  3380  001954                     l2517:
  3381  001954  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ; BSR set to: 0
  3384                           ; Switch size 1, requested type "simple"
  3385                           ; Number of cases is 3, Range of values is 20 to 84
  3386                           ; switch strategies available:
  3387                           ; Name         Instructions Cycles
  3388                           ; simple_byte           10     6 (average)
  3389                           ;	Chosen strategy is simple_byte
  3390  001956  516B               	movf	??_lcd_ecritChar& (0+255),w,b
  3391  001958  0A14               	xorlw	20	; case 20
  3392  00195A  B4D8               	btfsc	status,2,c
  3393  00195C  EF8B  F00C         	goto	l2191
  3394  001960  0A54               	xorlw	84	; case 64
  3395  001962  B4D8               	btfsc	status,2,c
  3396  001964  EF97  F00C         	goto	l2195
  3397  001968  0A14               	xorlw	20	; case 84
  3398  00196A  B4D8               	btfsc	status,2,c
  3399  00196C  EF91  F00C         	goto	l2193
  3400  001970  EFBA  F00C         	goto	l204
  3401  001974                     l204:
  3402  001974  FFFF               	dw	65535	; assembler added errata NOP
  3403  001976  0012               	return		;funcret
  3404  001978  FFFF               	dw	65535	; errata NOP
  3405  00197A                     __end_of_lcd_ecritChar:
  3406                           	opt callstack 0
  3407                           
  3408 ;; *************** function _lcd_init *****************
  3409 ;; Defined at:
  3410 ;;		line 256 in file "Lcd4Lignes.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3424 ;;      Params:         0       0       0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    7
  3431 ;; This function calls:
  3432 ;;		_lcd_initCGRam
  3433 ;;		_lcd_resetSequence
  3434 ;;		_lcd_wrCom
  3435 ;; This function is called by:
  3436 ;;		_main
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           
  3440                           	psect	text15
  3441  001D28                     __ptext15:
  3442                           	opt callstack 0
  3443  001D28                     _lcd_init:
  3444                           	opt callstack 0
  3445  001D28  FFFF               	dw	65535	; assembler added errata NOP
  3446  001D2A                     
  3447                           ;Lcd4Lignes.c: 258:     TRISB = TRISB & 0xEF;
  3448  001D2A  5093               	movf	147,w,c	;volatile
  3449  001D2C  0BEF               	andlw	239
  3450  001D2E  6E93               	movwf	147,c	;volatile
  3451  001D30                     
  3452                           ;Lcd4Lignes.c: 259:     lcd_resetSequence();
  3453  001D30  ECF9  F00C         	call	_lcd_resetSequence	;wreg free
  3454  001D34                     
  3455                           ;Lcd4Lignes.c: 260:     lcd_wrCom(0x28);
  3456  001D34  0E28               	movlw	40
  3457  001D36  EC21  F00B         	call	_lcd_wrCom
  3458  001D3A                     
  3459                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x0F);
  3460  001D3A  0E0F               	movlw	15
  3461  001D3C  EC21  F00B         	call	_lcd_wrCom
  3462  001D40                     
  3463                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x01);
  3464  001D40  0E01               	movlw	1
  3465  001D42  EC21  F00B         	call	_lcd_wrCom
  3466  001D46                     
  3467                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x06);
  3468  001D46  0E06               	movlw	6
  3469  001D48  EC21  F00B         	call	_lcd_wrCom
  3470  001D4C                     
  3471                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x80);
  3472  001D4C  0E80               	movlw	128
  3473  001D4E  EC21  F00B         	call	_lcd_wrCom
  3474  001D52                     
  3475                           ;Lcd4Lignes.c: 265:     lcd_initCGRam();
  3476  001D52  ECC4  F00A         	call	_lcd_initCGRam	;wreg free
  3477  001D56  0012               	return		;funcret
  3478  001D58  FFFF               	dw	65535	; errata NOP
  3479  001D5A                     __end_of_lcd_init:
  3480                           	opt callstack 0
  3481                           
  3482 ;; *************** function _lcd_resetSequence *****************
  3483 ;; Defined at:
  3484 ;;		line 219 in file "Lcd4Lignes.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         0       0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0
  3500 ;;      Temps:          0       1       0       0       0       0       0
  3501 ;;      Totals:         0       1       0       0       0       0       0
  3502 ;;Total ram usage:        1 bytes
  3503 ;; Hardware stack levels used:    1
  3504 ;; Hardware stack levels required when called:    3
  3505 ;; This function calls:
  3506 ;;		_lcd_ecrireDonnees
  3507 ;;		_lcd_strobeEnableBit
  3508 ;; This function is called by:
  3509 ;;		_lcd_init
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text16
  3514  0019F2                     __ptext16:
  3515                           	opt callstack 0
  3516  0019F2                     _lcd_resetSequence:
  3517                           	opt callstack 0
  3518  0019F2  FFFF               	dw	65535	; assembler added errata NOP
  3519  0019F4                     
  3520                           ;Lcd4Lignes.c: 224:     TRISA = 0b00000000;
  3521  0019F4  0E00               	movlw	0
  3522  0019F6  6E92               	movwf	146,c	;volatile
  3523  0019F8                     
  3524                           ;Lcd4Lignes.c: 226:     _delay((unsigned long)((40)*(16000000/4000.0)));
  3525  0019F8  0E9C               	movlw	156
  3526  0019FA  0100               	movlb	0	; force () banked
  3527  0019FC  6F69               	movwf	??_lcd_resetSequence& (0+255),b
  3528  0019FE  0EF1               	movlw	241
  3529  001A00                     u1497:
  3530  001A00  FFFF               	dw	65535	; errata NOP
  3531  001A02  2EE8               	decfsz	wreg,f,c
  3532  001A04  D7FD               	bra	u1497
  3533  001A06  2F69               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3534  001A08  D7FB               	bra	u1497
  3535  001A0A  F000               	nop	
  3536  001A0C                     
  3537                           ;Lcd4Lignes.c: 227:     PORTBbits.RB4 = 0;
  3538  001A0C  9881               	bcf	129,4,c	;volatile
  3539  001A0E                     
  3540                           ;Lcd4Lignes.c: 228:     PORTAbits.RA5 = 0;
  3541  001A0E  9A80               	bcf	128,5,c	;volatile
  3542  001A10                     
  3543                           ;Lcd4Lignes.c: 230:     lcd_ecrireDonnees(0x03);
  3544  001A10  0E03               	movlw	3
  3545  001A12  ECBD  F00C         	call	_lcd_ecrireDonnees
  3546  001A16                     
  3547                           ;Lcd4Lignes.c: 231:     lcd_strobeEnableBit();
  3548  001A16  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3549  001A1A                     
  3550                           ;Lcd4Lignes.c: 232:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3551  001A1A  0E28               	movlw	40
  3552  001A1C                     u1507:
  3553  001A1C  FFFF               	dw	65535	; errata NOP
  3554  001A1E  2EE8               	decfsz	wreg,f,c
  3555  001A20  D7FD               	bra	u1507
  3556  001A22                     
  3557                           ;Lcd4Lignes.c: 235:     lcd_ecrireDonnees(0x03);
  3558  001A22  0E03               	movlw	3
  3559  001A24  ECBD  F00C         	call	_lcd_ecrireDonnees
  3560  001A28                     
  3561                           ;Lcd4Lignes.c: 236:     lcd_strobeEnableBit();
  3562  001A28  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3563  001A2C                     
  3564                           ;Lcd4Lignes.c: 237:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3565  001A2C  0E28               	movlw	40
  3566  001A2E                     u1517:
  3567  001A2E  FFFF               	dw	65535	; errata NOP
  3568  001A30  2EE8               	decfsz	wreg,f,c
  3569  001A32  D7FD               	bra	u1517
  3570  001A34                     
  3571                           ;Lcd4Lignes.c: 239:     lcd_ecrireDonnees(0x03);
  3572  001A34  0E03               	movlw	3
  3573  001A36  ECBD  F00C         	call	_lcd_ecrireDonnees
  3574  001A3A                     
  3575                           ;Lcd4Lignes.c: 240:     lcd_strobeEnableBit();
  3576  001A3A  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3577  001A3E                     
  3578                           ;Lcd4Lignes.c: 241:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3579  001A3E  0E28               	movlw	40
  3580  001A40                     u1527:
  3581  001A40  FFFF               	dw	65535	; errata NOP
  3582  001A42  2EE8               	decfsz	wreg,f,c
  3583  001A44  D7FD               	bra	u1527
  3584  001A46                     
  3585                           ;Lcd4Lignes.c: 243:     lcd_ecrireDonnees(0x02);
  3586  001A46  0E02               	movlw	2
  3587  001A48  ECBD  F00C         	call	_lcd_ecrireDonnees
  3588  001A4C                     
  3589                           ;Lcd4Lignes.c: 244:     lcd_strobeEnableBit();
  3590  001A4C  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3591  001A50                     
  3592                           ;Lcd4Lignes.c: 245:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3593  001A50  0E28               	movlw	40
  3594  001A52                     u1537:
  3595  001A52  FFFF               	dw	65535	; errata NOP
  3596  001A54  2EE8               	decfsz	wreg,f,c
  3597  001A56  D7FD               	bra	u1537
  3598  001A58                     
  3599                           ;Lcd4Lignes.c: 247:     TRISA = 0b00001111;
  3600  001A58  0E0F               	movlw	15
  3601  001A5A  6E92               	movwf	146,c	;volatile
  3602  001A5C  0012               	return		;funcret
  3603  001A5E  FFFF               	dw	65535	; errata NOP
  3604  001A60                     __end_of_lcd_resetSequence:
  3605                           	opt callstack 0
  3606                           
  3607 ;; *************** function _lcd_initCGRam *****************
  3608 ;; Defined at:
  3609 ;;		line 415 in file "Lcd4Lignes.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;		None
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  j               1   14[BANK0 ] unsigned char 
  3614 ;;  i               1   13[BANK0 ] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3624 ;;      Params:         0       0       0       0       0       0       0
  3625 ;;      Locals:         0       2       0       0       0       0       0
  3626 ;;      Temps:          0       2       0       0       0       0       0
  3627 ;;      Totals:         0       4       0       0       0       0       0
  3628 ;;Total ram usage:        4 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    6
  3631 ;; This function calls:
  3632 ;;		_lcd_curseurHome
  3633 ;;		_lcd_wrCom
  3634 ;;		_lcd_wrData
  3635 ;; This function is called by:
  3636 ;;		_lcd_init
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text17
  3641  001588                     __ptext17:
  3642                           	opt callstack 0
  3643  001588                     _lcd_initCGRam:
  3644                           	opt callstack 0
  3645  001588  FFFF               	dw	65535	; assembler added errata NOP
  3646  00158A                     
  3647                           ;Lcd4Lignes.c: 417:     char i,j;;Lcd4Lignes.c: 419:     lcd_wrCom(0x40);
  3648  00158A  0E40               	movlw	64
  3649  00158C  EC21  F00B         	call	_lcd_wrCom
  3650  001590                     
  3651                           ;Lcd4Lignes.c: 420:     for(i=0;i<8;i++)
  3652  001590  0E00               	movlw	0
  3653  001592  0100               	movlb	0	; force () banked
  3654  001594  6F6D               	movwf	lcd_initCGRam@i& (0+255),b
  3655  001596                     
  3656                           ; BSR set to: 0
  3657  001596  0E07               	movlw	7
  3658  001598  0100               	movlb	0	; force () banked
  3659  00159A  656D               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3660  00159C  EFD2  F00A         	goto	u1211
  3661  0015A0  EFD5  F00A         	goto	u1210
  3662  0015A4                     u1211:
  3663  0015A4  FFFF               	dw	65535	; assembler added errata NOP
  3664  0015A6  EFD8  F00A         	goto	l2163
  3665  0015AA                     u1210:
  3666  0015AA  FFFF               	dw	65535	; assembler added errata NOP
  3667  0015AC  EF1C  F00B         	goto	l2179
  3668  0015B0                     l2163:
  3669  0015B0  FFFF               	dw	65535	; assembler added errata NOP
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;Lcd4Lignes.c: 421:     {;Lcd4Lignes.c: 422:         for(j=0;j<8;j++)
  3673  0015B2  0E00               	movlw	0
  3674  0015B4  0100               	movlb	0	; force () banked
  3675  0015B6  6F6E               	movwf	lcd_initCGRam@j& (0+255),b
  3676  0015B8                     
  3677                           ; BSR set to: 0
  3678  0015B8  0E07               	movlw	7
  3679  0015BA  0100               	movlb	0	; force () banked
  3680  0015BC  656E               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3681  0015BE  EFE3  F00A         	goto	u1221
  3682  0015C2  EFE6  F00A         	goto	u1220
  3683  0015C6                     u1221:
  3684  0015C6  FFFF               	dw	65535	; assembler added errata NOP
  3685  0015C8  EFE9  F00A         	goto	l2169
  3686  0015CC                     u1220:
  3687  0015CC  FFFF               	dw	65535	; assembler added errata NOP
  3688  0015CE  EF0F  F00B         	goto	l2175
  3689  0015D2                     l2169:
  3690  0015D2  FFFF               	dw	65535	; assembler added errata NOP
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;Lcd4Lignes.c: 423:             lcd_wrData(matCGRAM[i][j]);
  3694  0015D4  0100               	movlb	0	; force () banked
  3695  0015D6  516D               	movf	lcd_initCGRam@i& (0+255),w,b
  3696  0015D8  0D08               	mullw	8
  3697  0015DA  0E00               	movlw	low _matCGRAM
  3698  0015DC  0100               	movlb	0	; force () banked
  3699  0015DE  6F6B               	movwf	??_lcd_initCGRam& (0+255),b
  3700  0015E0  0E01               	movlw	high _matCGRAM
  3701  0015E2  6F6C               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3702  0015E4  50F3               	movf	243,w,c
  3703  0015E6  276B               	addwf	??_lcd_initCGRam& (0+255),f,b
  3704  0015E8  50F4               	movf	244,w,c
  3705  0015EA  236C               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3706  0015EC  0100               	movlb	0	; force () banked
  3707  0015EE  516E               	movf	lcd_initCGRam@j& (0+255),w,b
  3708  0015F0  0100               	movlb	0	; force () banked
  3709  0015F2  256B               	addwf	??_lcd_initCGRam& (0+255),w,b
  3710  0015F4  6ED9               	movwf	fsr2l,c
  3711  0015F6  0100               	movlb	0	; force () banked
  3712  0015F8  0E00               	movlw	0
  3713  0015FA  0100               	movlb	0	; force () banked
  3714  0015FC  216C               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3715  0015FE  6EDA               	movwf	fsr2h,c
  3716  001600  50DF               	movf	indf2,w,c
  3717  001602  ECBF  F00D         	call	_lcd_wrData
  3718  001606  0100               	movlb	0	; force () banked
  3719  001608  2B6E               	incf	lcd_initCGRam@j& (0+255),f,b
  3720  00160A                     
  3721                           ; BSR set to: 0
  3722  00160A  0E07               	movlw	7
  3723  00160C  0100               	movlb	0	; force () banked
  3724  00160E  656E               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3725  001610  EF0C  F00B         	goto	u1231
  3726  001614  EF0F  F00B         	goto	u1230
  3727  001618                     u1231:
  3728  001618  FFFF               	dw	65535	; assembler added errata NOP
  3729  00161A  EFE9  F00A         	goto	l2169
  3730  00161E                     u1230:
  3731  00161E                     l2175:
  3732  00161E  FFFF               	dw	65535	; assembler added errata NOP
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;Lcd4Lignes.c: 424:     }
  3736  001620  0100               	movlb	0	; force () banked
  3737  001622  2B6D               	incf	lcd_initCGRam@i& (0+255),f,b
  3738  001624                     
  3739                           ; BSR set to: 0
  3740  001624  0E07               	movlw	7
  3741  001626  0100               	movlb	0	; force () banked
  3742  001628  656D               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3743  00162A  EF19  F00B         	goto	u1241
  3744  00162E  EF1C  F00B         	goto	u1240
  3745  001632                     u1241:
  3746  001632  FFFF               	dw	65535	; assembler added errata NOP
  3747  001634  EFD8  F00A         	goto	l2163
  3748  001638                     u1240:
  3749  001638                     l2179:
  3750  001638  FFFF               	dw	65535	; assembler added errata NOP
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;Lcd4Lignes.c: 425:     lcd_curseurHome();
  3754  00163A  ECBF  F00E         	call	_lcd_curseurHome	;wreg free
  3755  00163E  0012               	return		;funcret
  3756  001640  FFFF               	dw	65535	; errata NOP
  3757  001642                     __end_of_lcd_initCGRam:
  3758                           	opt callstack 0
  3759                           
  3760 ;; *************** function _lcd_curseurHome *****************
  3761 ;; Defined at:
  3762 ;;		line 286 in file "Lcd4Lignes.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3776 ;;      Params:         0       0       0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0
  3779 ;;      Totals:         0       0       0       0       0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    5
  3783 ;; This function calls:
  3784 ;;		_lcd_wrCom
  3785 ;; This function is called by:
  3786 ;;		_lcd_initCGRam
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text18
  3791  001D7E                     __ptext18:
  3792                           	opt callstack 0
  3793  001D7E                     _lcd_curseurHome:
  3794                           	opt callstack 0
  3795  001D7E  FFFF               	dw	65535	; assembler added errata NOP
  3796  001D80                     
  3797                           ;Lcd4Lignes.c: 288:     lcd_wrCom(0x02);
  3798  001D80  0E02               	movlw	2
  3799  001D82  EC21  F00B         	call	_lcd_wrCom
  3800  001D86  0012               	return		;funcret
  3801  001D88  FFFF               	dw	65535	; errata NOP
  3802  001D8A                     __end_of_lcd_curseurHome:
  3803                           	opt callstack 0
  3804                           
  3805 ;; *************** function _lcd_effaceLigne *****************
  3806 ;; Defined at:
  3807 ;;		line 337 in file "Lcd4Lignes.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  y               1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  y               1   15[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3821 ;;      Params:         0       0       0       0       0       0       0
  3822 ;;      Locals:         0       1       0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0       0       0
  3824 ;;      Totals:         0       1       0       0       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    6
  3828 ;; This function calls:
  3829 ;;		_lcd_effaceChar
  3830 ;;		_lcd_gotoXY
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text19
  3837  001D5A                     __ptext19:
  3838                           	opt callstack 0
  3839  001D5A                     _lcd_effaceLigne:
  3840                           	opt callstack 0
  3841  001D5A  FFFF               	dw	65535	; assembler added errata NOP
  3842                           
  3843                           ;incstack = 0
  3844                           ;lcd_effaceLigne@y stored from wreg
  3845  001D5C  0100               	movlb	0	; force () banked
  3846  001D5E  6F6F               	movwf	lcd_effaceLigne@y& (0+255),b
  3847  001D60                     
  3848                           ;Lcd4Lignes.c: 337: void lcd_effaceLigne(unsigned char y);Lcd4Lignes.c: 338: {;Lcd4Ligne
      +                          s.c: 339:     lcd_gotoXY(1,y);
  3849  001D60  C06F  F06B         	movff	lcd_effaceLigne@y,lcd_gotoXY@y
  3850  001D64  0E01               	movlw	1
  3851  001D66  EC6F  F00B         	call	_lcd_gotoXY
  3852                           
  3853                           ;Lcd4Lignes.c: 340:     lcd_effaceChar(20);
  3854  001D6A  0E14               	movlw	20
  3855  001D6C  EC76  F00E         	call	_lcd_effaceChar
  3856                           
  3857                           ;Lcd4Lignes.c: 341:     lcd_gotoXY(1,y);
  3858  001D70  C06F  F06B         	movff	lcd_effaceLigne@y,lcd_gotoXY@y
  3859  001D74  0E01               	movlw	1
  3860  001D76  EC6F  F00B         	call	_lcd_gotoXY
  3861  001D7A  0012               	return		;funcret
  3862  001D7C  FFFF               	dw	65535	; errata NOP
  3863  001D7E                     __end_of_lcd_effaceLigne:
  3864                           	opt callstack 0
  3865                           
  3866 ;; *************** function _lcd_gotoXY *****************
  3867 ;; Defined at:
  3868 ;;		line 312 in file "Lcd4Lignes.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  x               1    wreg     unsigned char 
  3871 ;;  y               1   11[BANK0 ] unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  x               1   14[BANK0 ] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3883 ;;      Params:         0       1       0       0       0       0       0
  3884 ;;      Locals:         0       1       0       0       0       0       0
  3885 ;;      Temps:          0       2       0       0       0       0       0
  3886 ;;      Totals:         0       4       0       0       0       0       0
  3887 ;;Total ram usage:        4 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    5
  3890 ;; This function calls:
  3891 ;;		_lcd_wrCom
  3892 ;; This function is called by:
  3893 ;;		_main
  3894 ;;		_lcd_effaceLigne
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text20
  3899  0016DE                     __ptext20:
  3900                           	opt callstack 0
  3901  0016DE                     _lcd_gotoXY:
  3902                           	opt callstack 0
  3903  0016DE  FFFF               	dw	65535	; assembler added errata NOP
  3904                           
  3905                           ;incstack = 0
  3906                           ;lcd_gotoXY@x stored from wreg
  3907  0016E0  0100               	movlb	0	; force () banked
  3908  0016E2  6F6E               	movwf	lcd_gotoXY@x& (0+255),b
  3909  0016E4                     
  3910                           ;Lcd4Lignes.c: 312: void lcd_gotoXY(unsigned char x, unsigned char y);Lcd4Lignes.c: 313:
      +                           {;Lcd4Lignes.c: 314:     switch(y)
  3911  0016E4  EF97  F00B         	goto	l2115
  3912  0016E8                     l2105:
  3913  0016E8  FFFF               	dw	65535	; assembler added errata NOP
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;Lcd4Lignes.c: 317:             lcd_wrCom((x-1+0x00)|0x80);
  3917  0016EA  0100               	movlb	0	; force () banked
  3918  0016EC  056E               	decf	lcd_gotoXY@x& (0+255),w,b
  3919  0016EE  0980               	iorlw	128
  3920  0016F0  EC21  F00B         	call	_lcd_wrCom
  3921                           
  3922                           ;Lcd4Lignes.c: 318:             break;
  3923  0016F4  EFB8  F00B         	goto	l193
  3924  0016F8                     l2107:
  3925  0016F8  FFFF               	dw	65535	; assembler added errata NOP
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;Lcd4Lignes.c: 320:             lcd_wrCom((x-1+0x40)|0x80);
  3929  0016FA  0100               	movlb	0	; force () banked
  3930  0016FC  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3931  0016FE  0F3F               	addlw	63
  3932  001700  0980               	iorlw	128
  3933  001702  EC21  F00B         	call	_lcd_wrCom
  3934                           
  3935                           ;Lcd4Lignes.c: 321:             break;
  3936  001706  EFB8  F00B         	goto	l193
  3937  00170A                     l2109:
  3938  00170A  FFFF               	dw	65535	; assembler added errata NOP
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;Lcd4Lignes.c: 323:             lcd_wrCom((x-1+0x14)|0x80);
  3942  00170C  0100               	movlb	0	; force () banked
  3943  00170E  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3944  001710  0F13               	addlw	19
  3945  001712  0980               	iorlw	128
  3946  001714  EC21  F00B         	call	_lcd_wrCom
  3947                           
  3948                           ;Lcd4Lignes.c: 324:             break;
  3949  001718  EFB8  F00B         	goto	l193
  3950  00171C                     l2111:
  3951  00171C  FFFF               	dw	65535	; assembler added errata NOP
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;Lcd4Lignes.c: 326:             lcd_wrCom((x-1+0x54)|0x80);
  3955  00171E  0100               	movlb	0	; force () banked
  3956  001720  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3957  001722  0F53               	addlw	83
  3958  001724  0980               	iorlw	128
  3959  001726  EC21  F00B         	call	_lcd_wrCom
  3960                           
  3961                           ;Lcd4Lignes.c: 327:             break;
  3962  00172A  EFB8  F00B         	goto	l193
  3963  00172E                     l2115:
  3964  00172E  FFFF               	dw	65535	; assembler added errata NOP
  3965  001730  0100               	movlb	0	; force () banked
  3966  001732  516B               	movf	lcd_gotoXY@y& (0+255),w,b
  3967  001734  0100               	movlb	0	; force () banked
  3968  001736  6F6C               	movwf	??_lcd_gotoXY& (0+255),b
  3969  001738  6B6D               	clrf	(??_lcd_gotoXY+1)& (0+255),b
  3970                           
  3971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3972                           ; Switch size 1, requested type "simple"
  3973                           ; Number of cases is 1, Range of values is 0 to 0
  3974                           ; switch strategies available:
  3975                           ; Name         Instructions Cycles
  3976                           ; simple_byte            4     3 (average)
  3977                           ;	Chosen strategy is simple_byte
  3978  00173A  516D               	movf	(??_lcd_gotoXY+1)& (0+255),w,b
  3979  00173C  0A00               	xorlw	0	; case 0
  3980  00173E  B4D8               	btfsc	status,2,c
  3981  001740  EFA4  F00B         	goto	l2519
  3982  001744  EFB8  F00B         	goto	l193
  3983  001748                     l2519:
  3984  001748  FFFF               	dw	65535	; assembler added errata NOP
  3985                           
  3986                           ; BSR set to: 0
  3987                           ; Switch size 1, requested type "simple"
  3988                           ; Number of cases is 4, Range of values is 1 to 4
  3989                           ; switch strategies available:
  3990                           ; Name         Instructions Cycles
  3991                           ; simple_byte           13     7 (average)
  3992                           ;	Chosen strategy is simple_byte
  3993  00174A  516C               	movf	??_lcd_gotoXY& (0+255),w,b
  3994  00174C  0A01               	xorlw	1	; case 1
  3995  00174E  B4D8               	btfsc	status,2,c
  3996  001750  EF74  F00B         	goto	l2105
  3997  001754  0A03               	xorlw	3	; case 2
  3998  001756  B4D8               	btfsc	status,2,c
  3999  001758  EF7C  F00B         	goto	l2107
  4000  00175C  0A01               	xorlw	1	; case 3
  4001  00175E  B4D8               	btfsc	status,2,c
  4002  001760  EF85  F00B         	goto	l2109
  4003  001764  0A07               	xorlw	7	; case 4
  4004  001766  B4D8               	btfsc	status,2,c
  4005  001768  EF8E  F00B         	goto	l2111
  4006  00176C  EFB8  F00B         	goto	l193
  4007  001770                     l193:
  4008  001770  FFFF               	dw	65535	; assembler added errata NOP
  4009  001772  0012               	return		;funcret
  4010  001774  FFFF               	dw	65535	; errata NOP
  4011  001776                     __end_of_lcd_gotoXY:
  4012                           	opt callstack 0
  4013                           
  4014 ;; *************** function _lcd_effaceChar *****************
  4015 ;; Defined at:
  4016 ;;		line 298 in file "Lcd4Lignes.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  nbr             1    wreg     unsigned char 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  nbr             1   10[BANK0 ] unsigned char 
  4021 ;;  i               1   11[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4031 ;;      Params:         0       0       0       0       0       0       0
  4032 ;;      Locals:         0       2       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0
  4034 ;;      Totals:         0       2       0       0       0       0       0
  4035 ;;Total ram usage:        2 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    5
  4038 ;; This function calls:
  4039 ;;		_lcd_wrData
  4040 ;; This function is called by:
  4041 ;;		_lcd_effaceLigne
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text21
  4046  001CEC                     __ptext21:
  4047                           	opt callstack 0
  4048  001CEC                     _lcd_effaceChar:
  4049                           	opt callstack 0
  4050  001CEC  FFFF               	dw	65535	; assembler added errata NOP
  4051                           
  4052                           ;incstack = 0
  4053                           ;lcd_effaceChar@nbr stored from wreg
  4054  001CEE  0100               	movlb	0	; force () banked
  4055  001CF0  6F6A               	movwf	lcd_effaceChar@nbr& (0+255),b
  4056  001CF2                     
  4057                           ;Lcd4Lignes.c: 298: void lcd_effaceChar(unsigned char nbr);Lcd4Lignes.c: 299: {;Lcd4Lign
      +                          es.c: 300:     char i;;Lcd4Lignes.c: 301:     for(i=0;i<nbr;i++)
  4058  001CF2  0E00               	movlw	0
  4059  001CF4  0100               	movlb	0	; force () banked
  4060  001CF6  6F6B               	movwf	lcd_effaceChar@i& (0+255),b
  4061  001CF8  EF84  F00E         	goto	l2187
  4062  001CFC                     l2183:
  4063  001CFC  FFFF               	dw	65535	; assembler added errata NOP
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;Lcd4Lignes.c: 302:         lcd_wrData(' ');
  4067  001CFE  0E20               	movlw	32
  4068  001D00  ECBF  F00D         	call	_lcd_wrData
  4069  001D04  0100               	movlb	0	; force () banked
  4070  001D06  2B6B               	incf	lcd_effaceChar@i& (0+255),f,b
  4071  001D08                     l2187:
  4072  001D08  FFFF               	dw	65535	; assembler added errata NOP
  4073                           
  4074                           ; BSR set to: 0
  4075  001D0A  0100               	movlb	0	; force () banked
  4076  001D0C  516A               	movf	lcd_effaceChar@nbr& (0+255),w,b
  4077  001D0E  0100               	movlb	0	; force () banked
  4078  001D10  5D6B               	subwf	lcd_effaceChar@i& (0+255),w,b
  4079  001D12  A0D8               	btfss	status,0,c
  4080  001D14  EF8E  F00E         	goto	u1251
  4081  001D18  EF91  F00E         	goto	u1250
  4082  001D1C                     u1251:
  4083  001D1C  FFFF               	dw	65535	; assembler added errata NOP
  4084  001D1E  EF7E  F00E         	goto	l2183
  4085  001D22                     u1250:
  4086  001D22  FFFF               	dw	65535	; assembler added errata NOP
  4087  001D24                     
  4088                           ; BSR set to: 0
  4089  001D24  0012               	return		;funcret
  4090  001D26  FFFF               	dw	65535	; errata NOP
  4091  001D28                     __end_of_lcd_effaceChar:
  4092                           	opt callstack 0
  4093                           
  4094 ;; *************** function _lcd_wrData *****************
  4095 ;; Defined at:
  4096 ;;		line 186 in file "Lcd4Lignes.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  caractere       1    wreg     unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  caractere       1    9[BANK0 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      unsigned char 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4110 ;;      Params:         0       0       0       0       0       0       0
  4111 ;;      Locals:         0       1       0       0       0       0       0
  4112 ;;      Temps:          0       0       0       0       0       0       0
  4113 ;;      Totals:         0       1       0       0       0       0       0
  4114 ;;Total ram usage:        1 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    4
  4117 ;; This function calls:
  4118 ;;		_lcd_busy
  4119 ;;		_lcd_ecrireDonnees
  4120 ;;		_lcd_strobeEnableBit
  4121 ;; This function is called by:
  4122 ;;		_lcd_effaceChar
  4123 ;;		_lcd_ecritChar
  4124 ;;		_lcd_initCGRam
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text22
  4129  001B7E                     __ptext22:
  4130                           	opt callstack 0
  4131  001B7E                     _lcd_wrData:
  4132                           	opt callstack 0
  4133  001B7E  FFFF               	dw	65535	; assembler added errata NOP
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;incstack = 0
  4137                           ;lcd_wrData@caractere stored from wreg
  4138  001B80  0100               	movlb	0	; force () banked
  4139  001B82  6F69               	movwf	lcd_wrData@caractere& (0+255),b
  4140  001B84                     
  4141                           ;Lcd4Lignes.c: 186: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 187: {;Lcd4Lignes.c: 188:     lcd_busy();
  4142  001B84  EC91  F00D         	call	_lcd_busy	;wreg free
  4143  001B88                     
  4144                           ;Lcd4Lignes.c: 189:     TRISA = 0b00000000;
  4145  001B88  0E00               	movlw	0
  4146  001B8A  6E92               	movwf	146,c	;volatile
  4147  001B8C                     
  4148                           ;Lcd4Lignes.c: 190:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4149  001B8C  D000               	nop2		;2 cycle nop
  4150  001B8E  D000               	nop2		;2 cycle nop
  4151  001B90  D000               	nop2		;2 cycle nop
  4152  001B92  D000               	nop2		;2 cycle nop
  4153  001B94                     
  4154                           ;Lcd4Lignes.c: 192:     PORTBbits.RB4 = 1;
  4155  001B94  8881               	bsf	129,4,c	;volatile
  4156  001B96                     
  4157                           ;Lcd4Lignes.c: 193:     PORTAbits.RA5 = 0;
  4158  001B96  9A80               	bcf	128,5,c	;volatile
  4159  001B98                     
  4160                           ;Lcd4Lignes.c: 195:     lcd_ecrireDonnees(caractere >> 4);
  4161  001B98  0100               	movlb	0	; force () banked
  4162  001B9A  3969               	swapf	lcd_wrData@caractere& (0+255),w,b
  4163  001B9C  0B0F               	andlw	15
  4164  001B9E  ECBD  F00C         	call	_lcd_ecrireDonnees
  4165  001BA2                     
  4166                           ;Lcd4Lignes.c: 196:     lcd_strobeEnableBit();
  4167  001BA2  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4168  001BA6                     
  4169                           ;Lcd4Lignes.c: 197:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4170  001BA6  D000               	nop2		;2 cycle nop
  4171  001BA8  D000               	nop2		;2 cycle nop
  4172  001BAA  D000               	nop2		;2 cycle nop
  4173  001BAC  D000               	nop2		;2 cycle nop
  4174  001BAE                     
  4175                           ;Lcd4Lignes.c: 199:     lcd_ecrireDonnees(caractere);
  4176  001BAE  0100               	movlb	0	; force () banked
  4177  001BB0  5169               	movf	lcd_wrData@caractere& (0+255),w,b
  4178  001BB2  ECBD  F00C         	call	_lcd_ecrireDonnees
  4179  001BB6                     
  4180                           ;Lcd4Lignes.c: 200:     lcd_strobeEnableBit();
  4181  001BB6  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4182  001BBA                     
  4183                           ;Lcd4Lignes.c: 201:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4184  001BBA  D000               	nop2		;2 cycle nop
  4185  001BBC  D000               	nop2		;2 cycle nop
  4186  001BBE  D000               	nop2		;2 cycle nop
  4187  001BC0  D000               	nop2		;2 cycle nop
  4188  001BC2                     
  4189                           ;Lcd4Lignes.c: 203:     TRISA = 0b00001111;
  4190  001BC2  0E0F               	movlw	15
  4191  001BC4  6E92               	movwf	146,c	;volatile
  4192  001BC6                     
  4193                           ;Lcd4Lignes.c: 204:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4194  001BC6  D000               	nop2		;2 cycle nop
  4195  001BC8  D000               	nop2		;2 cycle nop
  4196  001BCA  D000               	nop2		;2 cycle nop
  4197  001BCC  D000               	nop2		;2 cycle nop
  4198                           
  4199                           ;Lcd4Lignes.c: 205:     return(lcd_busy());
  4200  001BCE  EC91  F00D         	call	_lcd_busy	;wreg free
  4201  001BD2  0012               	return		;funcret
  4202  001BD4  FFFF               	dw	65535	; errata NOP
  4203  001BD6                     __end_of_lcd_wrData:
  4204                           	opt callstack 0
  4205                           
  4206 ;; *************** function _lcd_cacheCurseur *****************
  4207 ;; Defined at:
  4208 ;;		line 399 in file "Lcd4Lignes.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;		None
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4222 ;;      Params:         0       0       0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0
  4225 ;;      Totals:         0       0       0       0       0       0       0
  4226 ;;Total ram usage:        0 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    5
  4229 ;; This function calls:
  4230 ;;		_lcd_wrCom
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text23
  4237  001D8A                     __ptext23:
  4238                           	opt callstack 0
  4239  001D8A                     _lcd_cacheCurseur:
  4240                           	opt callstack 0
  4241  001D8A  FFFF               	dw	65535	; assembler added errata NOP
  4242  001D8C                     
  4243                           ;Lcd4Lignes.c: 401:     lcd_wrCom(0x0C);
  4244  001D8C  0E0C               	movlw	12
  4245  001D8E  EC21  F00B         	call	_lcd_wrCom
  4246  001D92  0012               	return		;funcret
  4247  001D94  FFFF               	dw	65535	; errata NOP
  4248  001D96                     __end_of_lcd_cacheCurseur:
  4249                           	opt callstack 0
  4250                           
  4251 ;; *************** function _lcd_wrCom *****************
  4252 ;; Defined at:
  4253 ;;		line 154 in file "Lcd4Lignes.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  commande        1    wreg     unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  commande        1   10[BANK0 ] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      unsigned char 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4267 ;;      Params:         0       0       0       0       0       0       0
  4268 ;;      Locals:         0       1       0       0       0       0       0
  4269 ;;      Temps:          0       1       0       0       0       0       0
  4270 ;;      Totals:         0       2       0       0       0       0       0
  4271 ;;Total ram usage:        2 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    4
  4274 ;; This function calls:
  4275 ;;		_lcd_busy
  4276 ;;		_lcd_ecrireDonnees
  4277 ;;		_lcd_strobeEnableBit
  4278 ;; This function is called by:
  4279 ;;		_lcd_init
  4280 ;;		_lcd_curseurHome
  4281 ;;		_lcd_gotoXY
  4282 ;;		_lcd_ecritChar
  4283 ;;		_lcd_cacheCurseur
  4284 ;;		_lcd_initCGRam
  4285 ;;		_lcd_effaceAffichage
  4286 ;;		_lcd_montreCurseur
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text24
  4291  001642                     __ptext24:
  4292                           	opt callstack 0
  4293  001642                     _lcd_wrCom:
  4294                           	opt callstack 0
  4295  001642  FFFF               	dw	65535	; assembler added errata NOP
  4296                           
  4297                           ;incstack = 0
  4298                           ;lcd_wrCom@commande stored from wreg
  4299  001644  0100               	movlb	0	; force () banked
  4300  001646  6F6A               	movwf	lcd_wrCom@commande& (0+255),b
  4301  001648                     
  4302                           ;Lcd4Lignes.c: 154: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           155: {;Lcd4Lignes.c: 156:     lcd_busy();
  4303  001648  EC91  F00D         	call	_lcd_busy	;wreg free
  4304  00164C                     
  4305                           ;Lcd4Lignes.c: 158:     TRISA = 0b00000000;
  4306  00164C  0E00               	movlw	0
  4307  00164E  6E92               	movwf	146,c	;volatile
  4308  001650                     
  4309                           ;Lcd4Lignes.c: 159:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4310  001650  D000               	nop2		;2 cycle nop
  4311  001652  D000               	nop2		;2 cycle nop
  4312  001654  D000               	nop2		;2 cycle nop
  4313  001656  D000               	nop2		;2 cycle nop
  4314  001658                     
  4315                           ;Lcd4Lignes.c: 161:     PORTBbits.RB4 = 0;
  4316  001658  9881               	bcf	129,4,c	;volatile
  4317  00165A                     
  4318                           ;Lcd4Lignes.c: 162:     PORTAbits.RA5 = 0;
  4319  00165A  9A80               	bcf	128,5,c	;volatile
  4320  00165C                     
  4321                           ;Lcd4Lignes.c: 164:     lcd_ecrireDonnees(commande >> 4);
  4322  00165C  0100               	movlb	0	; force () banked
  4323  00165E  396A               	swapf	lcd_wrCom@commande& (0+255),w,b
  4324  001660  0B0F               	andlw	15
  4325  001662  ECBD  F00C         	call	_lcd_ecrireDonnees
  4326  001666                     
  4327                           ;Lcd4Lignes.c: 165:     lcd_strobeEnableBit();
  4328  001666  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4329  00166A                     
  4330                           ;Lcd4Lignes.c: 166:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4331  00166A  D000               	nop2		;2 cycle nop
  4332  00166C  D000               	nop2		;2 cycle nop
  4333  00166E  D000               	nop2		;2 cycle nop
  4334  001670  D000               	nop2		;2 cycle nop
  4335  001672                     
  4336                           ;Lcd4Lignes.c: 168:     lcd_ecrireDonnees(commande);
  4337  001672  0100               	movlb	0	; force () banked
  4338  001674  516A               	movf	lcd_wrCom@commande& (0+255),w,b
  4339  001676  ECBD  F00C         	call	_lcd_ecrireDonnees
  4340  00167A                     
  4341                           ;Lcd4Lignes.c: 169:     lcd_strobeEnableBit();
  4342  00167A  ECCB  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4343  00167E                     
  4344                           ;Lcd4Lignes.c: 170:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  4345  00167E  0E28               	movlw	40
  4346  001680                     u1547:
  4347  001680  FFFF               	dw	65535	; errata NOP
  4348  001682  2EE8               	decfsz	wreg,f,c
  4349  001684  D7FD               	bra	u1547
  4350  001686                     
  4351                           ;Lcd4Lignes.c: 172:     if ((commande == 0x01) || commande == 0x02)
  4352  001686  0100               	movlb	0	; force () banked
  4353  001688  056A               	decf	lcd_wrCom@commande& (0+255),w,b
  4354  00168A  B4D8               	btfsc	status,2,c
  4355  00168C  EF4A  F00B         	goto	u1001
  4356  001690  EF4D  F00B         	goto	u1000
  4357  001694                     u1001:
  4358  001694  FFFF               	dw	65535	; assembler added errata NOP
  4359  001696  EF59  F00B         	goto	l1959
  4360  00169A                     u1000:
  4361  00169A  FFFF               	dw	65535	; assembler added errata NOP
  4362  00169C                     
  4363                           ; BSR set to: 0
  4364  00169C  0E02               	movlw	2
  4365  00169E  0100               	movlb	0	; force () banked
  4366  0016A0  196A               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4367  0016A2  A4D8               	btfss	status,2,c
  4368  0016A4  EF56  F00B         	goto	u1011
  4369  0016A8  EF59  F00B         	goto	u1010
  4370  0016AC                     u1011:
  4371  0016AC  FFFF               	dw	65535	; assembler added errata NOP
  4372  0016AE  EF64  F00B         	goto	l1961
  4373  0016B2                     u1010:
  4374  0016B2                     l1959:
  4375  0016B2  FFFF               	dw	65535	; assembler added errata NOP
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;Lcd4Lignes.c: 173:         _delay((unsigned long)((2)*(16000000/4000.0)));
  4379  0016B4  0E08               	movlw	8
  4380  0016B6  0100               	movlb	0	; force () banked
  4381  0016B8  6F69               	movwf	??_lcd_wrCom& (0+255),b
  4382  0016BA  0ECB               	movlw	203
  4383  0016BC                     u1557:
  4384  0016BC  FFFF               	dw	65535	; errata NOP
  4385  0016BE  2EE8               	decfsz	wreg,f,c
  4386  0016C0  D7FD               	bra	u1557
  4387  0016C2  2F69               	decfsz	??_lcd_wrCom& (0+255),f,b
  4388  0016C4  D7FB               	bra	u1557
  4389  0016C6  F000               	nop	
  4390  0016C8                     l1961:
  4391  0016C8  FFFF               	dw	65535	; assembler added errata NOP
  4392                           
  4393                           ;Lcd4Lignes.c: 175:     TRISA = 0b00001111;
  4394  0016CA  0E0F               	movlw	15
  4395  0016CC  6E92               	movwf	146,c	;volatile
  4396  0016CE                     
  4397                           ;Lcd4Lignes.c: 176:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4398  0016CE  D000               	nop2		;2 cycle nop
  4399  0016D0  D000               	nop2		;2 cycle nop
  4400  0016D2  D000               	nop2		;2 cycle nop
  4401  0016D4  D000               	nop2		;2 cycle nop
  4402  0016D6                     
  4403                           ;Lcd4Lignes.c: 177:     return(lcd_busy());
  4404  0016D6  EC91  F00D         	call	_lcd_busy	;wreg free
  4405  0016DA  0012               	return		;funcret
  4406  0016DC  FFFF               	dw	65535	; errata NOP
  4407  0016DE                     __end_of_lcd_wrCom:
  4408                           	opt callstack 0
  4409                           
  4410 ;; *************** function _lcd_strobeEnableBit *****************
  4411 ;; Defined at:
  4412 ;;		line 429 in file "Lcd4Lignes.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		None
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4426 ;;      Params:         0       0       0       0       0       0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    2
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		_lcd_wrCom
  4437 ;;		_lcd_wrData
  4438 ;;		_lcd_resetSequence
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text25
  4443  001D96                     __ptext25:
  4444                           	opt callstack 0
  4445  001D96                     _lcd_strobeEnableBit:
  4446                           	opt callstack 0
  4447  001D96  FFFF               	dw	65535	; assembler added errata NOP
  4448  001D98                     
  4449                           ;Lcd4Lignes.c: 431:     PORTAbits.RA4 = 1;
  4450  001D98  8880               	bsf	128,4,c	;volatile
  4451                           
  4452                           ;Lcd4Lignes.c: 432:     __nop();
  4453  001D9A  F000               	nop	
  4454                           
  4455                           ;Lcd4Lignes.c: 433:     PORTAbits.RA4 = 0;
  4456  001D9C  9880               	bcf	128,4,c	;volatile
  4457  001D9E  0012               	return		;funcret
  4458  001DA0  FFFF               	dw	65535	; errata NOP
  4459  001DA2                     __end_of_lcd_strobeEnableBit:
  4460                           	opt callstack 0
  4461                           
  4462 ;; *************** function _lcd_ecrireDonnees *****************
  4463 ;; Defined at:
  4464 ;;		line 105 in file "Lcd4Lignes.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  donnee          1    wreg     unsigned char 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  donnee          1    8[BANK0 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4478 ;;      Params:         0       0       0       0       0       0       0
  4479 ;;      Locals:         0       1       0       0       0       0       0
  4480 ;;      Temps:          0       1       0       0       0       0       0
  4481 ;;      Totals:         0       2       0       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    2
  4485 ;; This function calls:
  4486 ;;		Nothing
  4487 ;; This function is called by:
  4488 ;;		_lcd_wrCom
  4489 ;;		_lcd_wrData
  4490 ;;		_lcd_resetSequence
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text26
  4495  00197A                     __ptext26:
  4496                           	opt callstack 0
  4497  00197A                     _lcd_ecrireDonnees:
  4498                           	opt callstack 0
  4499  00197A  FFFF               	dw	65535	; assembler added errata NOP
  4500                           
  4501                           ;incstack = 0
  4502                           ;lcd_ecrireDonnees@donnee stored from wreg
  4503  00197C  0100               	movlb	0	; force () banked
  4504  00197E  6F68               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4505  001980                     
  4506                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  4507  001980  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4508  001984  0E01               	movlw	1
  4509  001986  0100               	movlb	0	; force () banked
  4510  001988  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4511  00198A  5080               	movf	128,w,c	;volatile
  4512  00198C  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4513  00198E  0BFE               	andlw	-2
  4514  001990  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4515  001992  6E80               	movwf	128,c	;volatile
  4516                           
  4517                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  4518  001994  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4519  001998  90D8               	bcf	status,0,c
  4520  00199A  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4521  00199C  0E01               	movlw	1
  4522  00199E  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4523  0019A0  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4524  0019A2  5080               	movf	128,w,c	;volatile
  4525  0019A4  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4526  0019A6  0BFD               	andlw	-3
  4527  0019A8  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4528  0019AA  6E80               	movwf	128,c	;volatile
  4529                           
  4530                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  4531  0019AC  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4532  0019B0  90D8               	bcf	status,0,c
  4533  0019B2  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4534  0019B4  90D8               	bcf	status,0,c
  4535  0019B6  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4536  0019B8  0E01               	movlw	1
  4537  0019BA  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4538  0019BC  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4539  0019BE  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4540  0019C0  5080               	movf	128,w,c	;volatile
  4541  0019C2  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4542  0019C4  0BFB               	andlw	-5
  4543  0019C6  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4544  0019C8  6E80               	movwf	128,c	;volatile
  4545                           
  4546                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  4547  0019CA  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4548  0019CE  90D8               	bcf	status,0,c
  4549  0019D0  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4550  0019D2  90D8               	bcf	status,0,c
  4551  0019D4  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4552  0019D6  90D8               	bcf	status,0,c
  4553  0019D8  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4554  0019DA  0E01               	movlw	1
  4555  0019DC  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4556  0019DE  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4557  0019E0  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4558  0019E2  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4559  0019E4  5080               	movf	128,w,c	;volatile
  4560  0019E6  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4561  0019E8  0BF7               	andlw	-9
  4562  0019EA  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4563  0019EC  6E80               	movwf	128,c	;volatile
  4564  0019EE                     
  4565                           ; BSR set to: 0
  4566  0019EE  0012               	return		;funcret
  4567  0019F0  FFFF               	dw	65535	; errata NOP
  4568  0019F2                     __end_of_lcd_ecrireDonnees:
  4569                           	opt callstack 0
  4570                           
  4571 ;; *************** function _lcd_busy *****************
  4572 ;; Defined at:
  4573 ;;		line 122 in file "Lcd4Lignes.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  adresse         1    8[BANK0 ] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      unsigned char 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4587 ;;      Params:         0       0       0       0       0       0       0
  4588 ;;      Locals:         0       1       0       0       0       0       0
  4589 ;;      Temps:          0       1       0       0       0       0       0
  4590 ;;      Totals:         0       2       0       0       0       0       0
  4591 ;;Total ram usage:        2 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:    3
  4594 ;; This function calls:
  4595 ;;		_lcd_lireDonnees
  4596 ;; This function is called by:
  4597 ;;		_lcd_wrCom
  4598 ;;		_lcd_wrData
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text27
  4603  001B22                     __ptext27:
  4604                           	opt callstack 0
  4605  001B22                     _lcd_busy:
  4606                           	opt callstack 0
  4607  001B22  FFFF               	dw	65535	; assembler added errata NOP
  4608  001B24                     
  4609                           ;Lcd4Lignes.c: 124:     unsigned char adresse;;Lcd4Lignes.c: 126:     PORTBbits.RB4 = 0;
  4610  001B24  9881               	bcf	129,4,c	;volatile
  4611                           
  4612                           ;Lcd4Lignes.c: 127:     PORTAbits.RA5 = 1;
  4613  001B26  8A80               	bsf	128,5,c	;volatile
  4614  001B28                     l155:
  4615  001B28  FFFF               	dw	65535	; assembler added errata NOP
  4616                           
  4617                           ;Lcd4Lignes.c: 130:     {;Lcd4Lignes.c: 131:         PORTAbits.RA4 = 1;
  4618  001B2A  8880               	bsf	128,4,c	;volatile
  4619                           
  4620                           ;Lcd4Lignes.c: 132:         __nop();
  4621  001B2C  F000               	nop	
  4622  001B2E                     
  4623                           ;Lcd4Lignes.c: 133:         adresse = lcd_lireDonnees() << 4;
  4624  001B2E  ECD1  F00E         	call	_lcd_lireDonnees	;wreg free
  4625  001B32  0100               	movlb	0	; force () banked
  4626  001B34  6F67               	movwf	??_lcd_busy& (0+255),b
  4627  001B36  3967               	swapf	??_lcd_busy& (0+255),w,b
  4628  001B38  0BF0               	andlw	240
  4629  001B3A  0100               	movlb	0	; force () banked
  4630  001B3C  6F68               	movwf	lcd_busy@adresse& (0+255),b
  4631  001B3E                     
  4632                           ; BSR set to: 0
  4633                           ;Lcd4Lignes.c: 134:         PORTAbits.RA4 = 0;
  4634  001B3E  9880               	bcf	128,4,c	;volatile
  4635  001B40                     
  4636                           ; BSR set to: 0
  4637                           ;Lcd4Lignes.c: 135:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4638  001B40  D000               	nop2		;2 cycle nop
  4639  001B42  D000               	nop2		;2 cycle nop
  4640  001B44  D000               	nop2		;2 cycle nop
  4641  001B46  D000               	nop2		;2 cycle nop
  4642  001B48                     
  4643                           ;Lcd4Lignes.c: 136:         PORTAbits.RA4 = 1;
  4644  001B48  8880               	bsf	128,4,c	;volatile
  4645  001B4A                     
  4646                           ;Lcd4Lignes.c: 137:         __nop();
  4647  001B4A  F000               	nop	
  4648                           
  4649                           ;Lcd4Lignes.c: 138:         adresse |= lcd_lireDonnees();
  4650  001B4C  ECD1  F00E         	call	_lcd_lireDonnees	;wreg free
  4651  001B50  0100               	movlb	0	; force () banked
  4652  001B52  1368               	iorwf	lcd_busy@adresse& (0+255),f,b
  4653  001B54                     
  4654                           ; BSR set to: 0
  4655                           ;Lcd4Lignes.c: 139:         PORTAbits.RA4 = 0;
  4656  001B54  9880               	bcf	128,4,c	;volatile
  4657  001B56                     
  4658                           ; BSR set to: 0
  4659                           ;Lcd4Lignes.c: 140:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4660  001B56  D000               	nop2		;2 cycle nop
  4661  001B58  D000               	nop2		;2 cycle nop
  4662  001B5A  D000               	nop2		;2 cycle nop
  4663  001B5C  D000               	nop2		;2 cycle nop
  4664  001B5E                     
  4665                           ;Lcd4Lignes.c: 141:     }
  4666  001B5E  0100               	movlb	0	; force () banked
  4667  001B60  BF68               	btfsc	lcd_busy@adresse& (0+255),7,b
  4668  001B62  EFB5  F00D         	goto	u811
  4669  001B66  EFB8  F00D         	goto	u810
  4670  001B6A                     u811:
  4671  001B6A  FFFF               	dw	65535	; assembler added errata NOP
  4672  001B6C  EF94  F00D         	goto	l155
  4673  001B70                     u810:
  4674  001B70  FFFF               	dw	65535	; assembler added errata NOP
  4675  001B72                     
  4676                           ; BSR set to: 0
  4677                           ;Lcd4Lignes.c: 144:     PORTAbits.RA5 = 0;
  4678  001B72  9A80               	bcf	128,5,c	;volatile
  4679  001B74                     
  4680                           ; BSR set to: 0
  4681                           ;Lcd4Lignes.c: 145:     return(adresse&0x7f);
  4682  001B74  0100               	movlb	0	; force () banked
  4683  001B76  5168               	movf	lcd_busy@adresse& (0+255),w,b
  4684  001B78  0B7F               	andlw	127
  4685  001B7A                     
  4686                           ; BSR set to: 0
  4687  001B7A  0012               	return		;funcret
  4688  001B7C  FFFF               	dw	65535	; errata NOP
  4689  001B7E                     __end_of_lcd_busy:
  4690                           	opt callstack 0
  4691                           
  4692 ;; *************** function _lcd_lireDonnees *****************
  4693 ;; Defined at:
  4694 ;;		line 92 in file "Lcd4Lignes.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      unsigned char 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4708 ;;      Params:         0       0       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    2
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_lcd_busy
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text28
  4723  001DA2                     __ptext28:
  4724                           	opt callstack 0
  4725  001DA2                     _lcd_lireDonnees:
  4726                           	opt callstack 0
  4727  001DA2  FFFF               	dw	65535	; assembler added errata NOP
  4728  001DA4                     
  4729                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  4730  001DA4  5080               	movf	128,w,c	;volatile
  4731  001DA6  0B0F               	andlw	15
  4732  001DA8  0012               	return		;funcret
  4733  001DAA  FFFF               	dw	65535	; errata NOP
  4734  001DAC                     __end_of_lcd_lireDonnees:
  4735                           	opt callstack 0
  4736                           
  4737 ;; *************** function _initialisation *****************
  4738 ;; Defined at:
  4739 ;;		line 73 in file "main.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;		None
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;		None
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      void 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4753 ;;      Params:         0       0       0       0       0       0       0
  4754 ;;      Locals:         0       0       0       0       0       0       0
  4755 ;;      Temps:          0       0       0       0       0       0       0
  4756 ;;      Totals:         0       0       0       0       0       0       0
  4757 ;;Total ram usage:        0 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text29
  4768  001806                     __ptext29:
  4769                           	opt callstack 0
  4770  001806                     _initialisation:
  4771                           	opt callstack 0
  4772  001806  FFFF               	dw	65535	; assembler added errata NOP
  4773  001808                     
  4774                           ;main.c: 76:     ADCON1 = 0x07;
  4775  001808  0E07               	movlw	7
  4776  00180A  6EC1               	movwf	193,c	;volatile
  4777                           
  4778                           ;main.c: 77:     CMCON = 0x07;
  4779  00180C  0E07               	movlw	7
  4780  00180E  6EB4               	movwf	180,c	;volatile
  4781                           
  4782                           ;main.c: 78:     TRISA = 0b11000000;
  4783  001810  0EC0               	movlw	192
  4784  001812  6E92               	movwf	146,c	;volatile
  4785  001814                     
  4786                           ;main.c: 79:     TRISBbits.RB4 = 0;
  4787  001814  9893               	bcf	147,4,c	;volatile
  4788  001816                     
  4789                           ;main.c: 80:     TRISCbits.RC0 = 0;
  4790  001816  9094               	bcf	148,0,c	;volatile
  4791  001818                     
  4792                           ;main.c: 81:  TRISCbits.RC1 = 0;
  4793  001818  9294               	bcf	148,1,c	;volatile
  4794  00181A                     
  4795                           ;main.c: 82:  TRISCbits.RC2 = 1;
  4796  00181A  8494               	bsf	148,2,c	;volatile
  4797  00181C                     
  4798                           ;main.c: 83:     TRISDbits.RD7 = 0;
  4799  00181C  9E95               	bcf	149,7,c	;volatile
  4800  00181E                     
  4801                           ;main.c: 86:     T0CONbits.TMR0ON = 0;
  4802  00181E  9ED5               	bcf	213,7,c	;volatile
  4803  001820                     
  4804                           ;main.c: 87:     T0CONbits.T08BIT = 0;
  4805  001820  9CD5               	bcf	213,6,c	;volatile
  4806  001822                     
  4807                           ;main.c: 88:     T0CONbits.T0CS = 0;
  4808  001822  9AD5               	bcf	213,5,c	;volatile
  4809  001824                     
  4810                           ;main.c: 89:     T0CONbits.PSA = 0;
  4811  001824  96D5               	bcf	213,3,c	;volatile
  4812                           
  4813                           ;main.c: 90:     T0CONbits.T0PS = 0b001;
  4814  001826  50D5               	movf	213,w,c	;volatile
  4815  001828  0BF8               	andlw	-8
  4816  00182A  0901               	iorlw	1
  4817  00182C  6ED5               	movwf	213,c	;volatile
  4818                           
  4819                           ;main.c: 92:     TMR0H = 0b00010101;
  4820  00182E  0E15               	movlw	21
  4821  001830  6ED7               	movwf	215,c	;volatile
  4822                           
  4823                           ;main.c: 93:     TMR0L = 0b10100000;
  4824  001832  0EA0               	movlw	160
  4825  001834  6ED6               	movwf	214,c	;volatile
  4826  001836                     
  4827                           ;main.c: 94:     T0CONbits.TMR0ON = 1;
  4828  001836  8ED5               	bsf	213,7,c	;volatile
  4829  001838                     
  4830                           ;main.c: 97:     INTCONbits.TMR0IF = 0;
  4831  001838  94F2               	bcf	242,2,c	;volatile
  4832  00183A                     
  4833                           ;main.c: 98:     INTCONbits.TMR0IE = 1;
  4834  00183A  8AF2               	bsf	242,5,c	;volatile
  4835  00183C                     
  4836                           ;main.c: 99:     INTCON2bits.TMR0IP = 1;
  4837  00183C  84F1               	bsf	241,2,c	;volatile
  4838  00183E                     
  4839                           ;main.c: 102:     T1CONbits.TMR1ON = 0;
  4840  00183E  90CD               	bcf	205,0,c	;volatile
  4841  001840                     
  4842                           ;main.c: 103:     T1CONbits.RD16 = 1;
  4843  001840  8ECD               	bsf	205,7,c	;volatile
  4844                           
  4845                           ;main.c: 104:     T1CONbits.T1CKPS = 0b11;
  4846  001842  0E30               	movlw	48
  4847  001844  12CD               	iorwf	205,f,c	;volatile
  4848  001846                     
  4849                           ;main.c: 105:     T1CONbits.SOSCEN = 0;
  4850  001846  96CD               	bcf	205,3,c	;volatile
  4851  001848                     
  4852                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
  4853  001848  92CD               	bcf	205,1,c	;volatile
  4854                           
  4855                           ;main.c: 107:     TMR1 = 0b0011110010110000;
  4856  00184A  0E3C               	movlw	60
  4857  00184C  6ECF               	movwf	207,c	;volatile
  4858  00184E  0EB0               	movlw	176
  4859  001850  6ECE               	movwf	206,c	;volatile
  4860  001852                     
  4861                           ;main.c: 108:     T1CONbits.TMR1ON = 1;
  4862  001852  80CD               	bsf	205,0,c	;volatile
  4863  001854                     
  4864                           ;main.c: 111:     PIR1bits.TMR1IF = 0;
  4865  001854  909E               	bcf	158,0,c	;volatile
  4866  001856                     
  4867                           ;main.c: 112:     PIE1bits.TMR1IE = 1;
  4868  001856  809D               	bsf	157,0,c	;volatile
  4869  001858                     
  4870                           ;main.c: 113:     IPR1bits.TMR1IP = 1;
  4871  001858  809F               	bsf	159,0,c	;volatile
  4872  00185A                     
  4873                           ;main.c: 116:     T3CONbits.TMR3ON = 0;
  4874  00185A  90B1               	bcf	177,0,c	;volatile
  4875  00185C                     
  4876                           ;main.c: 117:     T3CONbits.RD16 = 1;
  4877  00185C  8EB1               	bsf	177,7,c	;volatile
  4878  00185E                     
  4879                           ;main.c: 118:     T3CONbits.T3ECCP1 = 1;
  4880  00185E  8CB1               	bsf	177,6,c	;volatile
  4881                           
  4882                           ;main.c: 119:     T3CONbits.T3CKPS = 0b11;
  4883  001860  0E30               	movlw	48
  4884  001862  12B1               	iorwf	177,f,c	;volatile
  4885  001864                     
  4886                           ;main.c: 120:     T3CONbits.TMR3CS = 0;
  4887  001864  92B1               	bcf	177,1,c	;volatile
  4888                           
  4889                           ;main.c: 126:     CCPR1 = 0;
  4890  001866  0E00               	movlw	0
  4891  001868  6EBF               	movwf	191,c	;volatile
  4892  00186A  0E00               	movlw	0
  4893  00186C  6EBE               	movwf	190,c	;volatile
  4894                           
  4895                           ;main.c: 127:     CCP1CONbits.CCP1M = 0b0101;
  4896  00186E  50BD               	movf	189,w,c	;volatile
  4897  001870  0BF0               	andlw	-16
  4898  001872  0905               	iorlw	5
  4899  001874  6EBD               	movwf	189,c	;volatile
  4900  001876                     
  4901                           ;main.c: 130:     PIR1bits.CCP1IF = 0;
  4902  001876  949E               	bcf	158,2,c	;volatile
  4903  001878                     
  4904                           ;main.c: 131:     PIE1bits.CCP1IE = 1;
  4905  001878  849D               	bsf	157,2,c	;volatile
  4906  00187A                     
  4907                           ;main.c: 132:     IPR1bits.CCP1IP = 1;
  4908  00187A  849F               	bsf	159,2,c	;volatile
  4909  00187C                     
  4910                           ;main.c: 135:  INTCONbits.PEIE = 1;
  4911  00187C  8CF2               	bsf	242,6,c	;volatile
  4912  00187E                     
  4913                           ;main.c: 136:     INTCONbits.GIE = 1;
  4914  00187E  8EF2               	bsf	242,7,c	;volatile
  4915  001880                     
  4916                           ;main.c: 137:     RCONbits.IPEN = 1;
  4917  001880  8ED0               	bsf	208,7,c	;volatile
  4918  001882  0012               	return		;funcret
  4919  001884  FFFF               	dw	65535	; errata NOP
  4920  001886                     __end_of_initialisation:
  4921                           	opt callstack 0
  4922                           
  4923 ;; *************** function ___lwdiv *****************
  4924 ;; Defined at:
  4925 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  dividend        2    7[BANK0 ] unsigned int 
  4928 ;;  divisor         2    9[BANK0 ] unsigned int 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  quotient        2   11[BANK0 ] unsigned int 
  4931 ;;  counter         1   13[BANK0 ] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  2    7[BANK0 ] unsigned int 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4941 ;;      Params:         0       4       0       0       0       0       0
  4942 ;;      Locals:         0       3       0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0
  4944 ;;      Totals:         0       7       0       0       0       0       0
  4945 ;;Total ram usage:        7 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    2
  4948 ;; This function calls:
  4949 ;;		Nothing
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text30
  4956  001776                     __ptext30:
  4957                           	opt callstack 0
  4958  001776                     ___lwdiv:
  4959                           	opt callstack 0
  4960  001776  FFFF               	dw	65535	; assembler added errata NOP
  4961  001778  0E00               	movlw	0
  4962  00177A  0100               	movlb	0	; () banked
  4963  00177C  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4964  00177E  0E00               	movlw	0
  4965  001780  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  4966  001782                     
  4967                           ; BSR set to: 0
  4968  001782  5169               	movf	___lwdiv@divisor& (0+255),w,b
  4969  001784  116A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4970  001786  B4D8               	btfsc	status,2,c
  4971  001788  EFC8  F00B         	goto	u1361
  4972  00178C  EFCB  F00B         	goto	u1360
  4973  001790                     u1361:
  4974  001790  FFFF               	dw	65535	; assembler added errata NOP
  4975  001792  EFFC  F00B         	goto	l792
  4976  001796                     u1360:
  4977  001796  FFFF               	dw	65535	; assembler added errata NOP
  4978  001798                     
  4979                           ; BSR set to: 0
  4980  001798  0E01               	movlw	1
  4981  00179A  6F6D               	movwf	___lwdiv@counter& (0+255),b
  4982  00179C  EFD5  F00B         	goto	l2371
  4983  0017A0                     l2369:
  4984  0017A0  FFFF               	dw	65535	; assembler added errata NOP
  4985                           
  4986                           ; BSR set to: 0
  4987  0017A2  90D8               	bcf	status,0,c
  4988  0017A4  3769               	rlcf	___lwdiv@divisor& (0+255),f,b
  4989  0017A6  376A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4990  0017A8  2B6D               	incf	___lwdiv@counter& (0+255),f,b
  4991  0017AA                     l2371:
  4992  0017AA  FFFF               	dw	65535	; assembler added errata NOP
  4993                           
  4994                           ; BSR set to: 0
  4995  0017AC  AF6A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4996  0017AE  EFDB  F00B         	goto	u1371
  4997  0017B2  EFDE  F00B         	goto	u1370
  4998  0017B6                     u1371:
  4999  0017B6  FFFF               	dw	65535	; assembler added errata NOP
  5000  0017B8  EFD0  F00B         	goto	l2369
  5001  0017BC                     u1370:
  5002  0017BC  FFFF               	dw	65535	; assembler added errata NOP
  5003  0017BE                     l2373:
  5004  0017BE  FFFF               	dw	65535	; assembler added errata NOP
  5005                           
  5006                           ; BSR set to: 0
  5007  0017C0  90D8               	bcf	status,0,c
  5008  0017C2  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  5009  0017C4  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5010  0017C6                     
  5011                           ; BSR set to: 0
  5012  0017C6  5169               	movf	___lwdiv@divisor& (0+255),w,b
  5013  0017C8  5D67               	subwf	___lwdiv@dividend& (0+255),w,b
  5014  0017CA  516A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5015  0017CC  5968               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5016  0017CE  A0D8               	btfss	status,0,c
  5017  0017D0  EFEC  F00B         	goto	u1381
  5018  0017D4  EFEF  F00B         	goto	u1380
  5019  0017D8                     u1381:
  5020  0017D8  FFFF               	dw	65535	; assembler added errata NOP
  5021  0017DA  EFF5  F00B         	goto	l2381
  5022  0017DE                     u1380:
  5023  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  5024  0017E0                     
  5025                           ; BSR set to: 0
  5026  0017E0  5169               	movf	___lwdiv@divisor& (0+255),w,b
  5027  0017E2  5F67               	subwf	___lwdiv@dividend& (0+255),f,b
  5028  0017E4  516A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5029  0017E6  5B68               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5030  0017E8                     
  5031                           ; BSR set to: 0
  5032  0017E8  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  5033  0017EA                     l2381:
  5034  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  5035                           
  5036                           ; BSR set to: 0
  5037  0017EC  90D8               	bcf	status,0,c
  5038  0017EE  336A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5039  0017F0  3369               	rrcf	___lwdiv@divisor& (0+255),f,b
  5040  0017F2                     
  5041                           ; BSR set to: 0
  5042  0017F2  2F6D               	decfsz	___lwdiv@counter& (0+255),f,b
  5043  0017F4  EFDF  F00B         	goto	l2373
  5044  0017F8                     l792:
  5045  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  5046                           
  5047                           ; BSR set to: 0
  5048  0017FA  C06B  F067         	movff	___lwdiv@quotient,?___lwdiv
  5049  0017FE  C06C  F068         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5050  001802                     
  5051                           ; BSR set to: 0
  5052  001802  0012               	return		;funcret
  5053  001804  FFFF               	dw	65535	; errata NOP
  5054  001806                     __end_of___lwdiv:
  5055                           	opt callstack 0
  5056                           
  5057 ;; *************** function ___awdiv *****************
  5058 ;; Defined at:
  5059 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  dividend        2    7[BANK0 ] int 
  5062 ;;  divisor         2    9[BANK0 ] int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  quotient        2   13[BANK0 ] int 
  5065 ;;  sign            1   12[BANK0 ] unsigned char 
  5066 ;;  counter         1   11[BANK0 ] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  2    7[BANK0 ] int 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5076 ;;      Params:         0       4       0       0       0       0       0
  5077 ;;      Locals:         0       4       0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0
  5079 ;;      Totals:         0       8       0       0       0       0       0
  5080 ;;Total ram usage:        8 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    2
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text31
  5091  0012E6                     __ptext31:
  5092                           	opt callstack 0
  5093  0012E6                     ___awdiv:
  5094                           	opt callstack 0
  5095  0012E6  FFFF               	dw	65535	; assembler added errata NOP
  5096  0012E8  0E00               	movlw	0
  5097  0012EA  0100               	movlb	0	; () banked
  5098  0012EC  6F6C               	movwf	___awdiv@sign& (0+255),b
  5099  0012EE                     
  5100                           ; BSR set to: 0
  5101  0012EE  BF6A               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5102  0012F0  EF7F  F009         	goto	u1300
  5103  0012F4  EF7C  F009         	goto	u1301
  5104  0012F8                     u1301:
  5105  0012F8  FFFF               	dw	65535	; assembler added errata NOP
  5106  0012FA  EF86  F009         	goto	l2327
  5107  0012FE                     u1300:
  5108  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5109  001300                     
  5110                           ; BSR set to: 0
  5111  001300  6D69               	negf	___awdiv@divisor& (0+255),b
  5112  001302  1F6A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5113  001304  B0D8               	btfsc	status,0,c
  5114  001306  2B6A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5115  001308                     
  5116                           ; BSR set to: 0
  5117  001308  0E01               	movlw	1
  5118  00130A  6F6C               	movwf	___awdiv@sign& (0+255),b
  5119  00130C                     l2327:
  5120  00130C  FFFF               	dw	65535	; assembler added errata NOP
  5121                           
  5122                           ; BSR set to: 0
  5123  00130E  BF68               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5124  001310  EF8F  F009         	goto	u1310
  5125  001314  EF8C  F009         	goto	u1311
  5126  001318                     u1311:
  5127  001318  FFFF               	dw	65535	; assembler added errata NOP
  5128  00131A  EF96  F009         	goto	l2333
  5129  00131E                     u1310:
  5130  00131E  FFFF               	dw	65535	; assembler added errata NOP
  5131  001320                     
  5132                           ; BSR set to: 0
  5133  001320  6D67               	negf	___awdiv@dividend& (0+255),b
  5134  001322  1F68               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5135  001324  B0D8               	btfsc	status,0,c
  5136  001326  2B68               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5137  001328                     
  5138                           ; BSR set to: 0
  5139  001328  0E01               	movlw	1
  5140  00132A  1B6C               	xorwf	___awdiv@sign& (0+255),f,b
  5141  00132C                     l2333:
  5142  00132C  FFFF               	dw	65535	; assembler added errata NOP
  5143                           
  5144                           ; BSR set to: 0
  5145  00132E  0E00               	movlw	0
  5146  001330  6F6E               	movwf	(___awdiv@quotient+1)& (0+255),b
  5147  001332  0E00               	movlw	0
  5148  001334  6F6D               	movwf	___awdiv@quotient& (0+255),b
  5149  001336                     
  5150                           ; BSR set to: 0
  5151  001336  5169               	movf	___awdiv@divisor& (0+255),w,b
  5152  001338  116A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5153  00133A  B4D8               	btfsc	status,2,c
  5154  00133C  EFA2  F009         	goto	u1321
  5155  001340  EFA5  F009         	goto	u1320
  5156  001344                     u1321:
  5157  001344  FFFF               	dw	65535	; assembler added errata NOP
  5158  001346  EFD6  F009         	goto	l2355
  5159  00134A                     u1320:
  5160  00134A  FFFF               	dw	65535	; assembler added errata NOP
  5161  00134C                     
  5162                           ; BSR set to: 0
  5163  00134C  0E01               	movlw	1
  5164  00134E  6F6B               	movwf	___awdiv@counter& (0+255),b
  5165  001350  EFAF  F009         	goto	l2341
  5166  001354                     l2339:
  5167  001354  FFFF               	dw	65535	; assembler added errata NOP
  5168                           
  5169                           ; BSR set to: 0
  5170  001356  90D8               	bcf	status,0,c
  5171  001358  3769               	rlcf	___awdiv@divisor& (0+255),f,b
  5172  00135A  376A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5173  00135C  2B6B               	incf	___awdiv@counter& (0+255),f,b
  5174  00135E                     l2341:
  5175  00135E  FFFF               	dw	65535	; assembler added errata NOP
  5176                           
  5177                           ; BSR set to: 0
  5178  001360  AF6A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5179  001362  EFB5  F009         	goto	u1331
  5180  001366  EFB8  F009         	goto	u1330
  5181  00136A                     u1331:
  5182  00136A  FFFF               	dw	65535	; assembler added errata NOP
  5183  00136C  EFAA  F009         	goto	l2339
  5184  001370                     u1330:
  5185  001370  FFFF               	dw	65535	; assembler added errata NOP
  5186  001372                     l2343:
  5187  001372  FFFF               	dw	65535	; assembler added errata NOP
  5188                           
  5189                           ; BSR set to: 0
  5190  001374  90D8               	bcf	status,0,c
  5191  001376  376D               	rlcf	___awdiv@quotient& (0+255),f,b
  5192  001378  376E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5193  00137A                     
  5194                           ; BSR set to: 0
  5195  00137A  5169               	movf	___awdiv@divisor& (0+255),w,b
  5196  00137C  5D67               	subwf	___awdiv@dividend& (0+255),w,b
  5197  00137E  516A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5198  001380  5968               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5199  001382  A0D8               	btfss	status,0,c
  5200  001384  EFC6  F009         	goto	u1341
  5201  001388  EFC9  F009         	goto	u1340
  5202  00138C                     u1341:
  5203  00138C  FFFF               	dw	65535	; assembler added errata NOP
  5204  00138E  EFCF  F009         	goto	l2351
  5205  001392                     u1340:
  5206  001392  FFFF               	dw	65535	; assembler added errata NOP
  5207  001394                     
  5208                           ; BSR set to: 0
  5209  001394  5169               	movf	___awdiv@divisor& (0+255),w,b
  5210  001396  5F67               	subwf	___awdiv@dividend& (0+255),f,b
  5211  001398  516A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5212  00139A  5B68               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5213  00139C                     
  5214                           ; BSR set to: 0
  5215  00139C  816D               	bsf	___awdiv@quotient& (0+255),0,b
  5216  00139E                     l2351:
  5217  00139E  FFFF               	dw	65535	; assembler added errata NOP
  5218                           
  5219                           ; BSR set to: 0
  5220  0013A0  90D8               	bcf	status,0,c
  5221  0013A2  336A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5222  0013A4  3369               	rrcf	___awdiv@divisor& (0+255),f,b
  5223  0013A6                     
  5224                           ; BSR set to: 0
  5225  0013A6  2F6B               	decfsz	___awdiv@counter& (0+255),f,b
  5226  0013A8  EFB9  F009         	goto	l2343
  5227  0013AC                     l2355:
  5228  0013AC  FFFF               	dw	65535	; assembler added errata NOP
  5229                           
  5230                           ; BSR set to: 0
  5231  0013AE  516C               	movf	___awdiv@sign& (0+255),w,b
  5232  0013B0  B4D8               	btfsc	status,2,c
  5233  0013B2  EFDD  F009         	goto	u1351
  5234  0013B6  EFE0  F009         	goto	u1350
  5235  0013BA                     u1351:
  5236  0013BA  FFFF               	dw	65535	; assembler added errata NOP
  5237  0013BC  EFE5  F009         	goto	l2359
  5238  0013C0                     u1350:
  5239  0013C0  FFFF               	dw	65535	; assembler added errata NOP
  5240  0013C2                     
  5241                           ; BSR set to: 0
  5242  0013C2  6D6D               	negf	___awdiv@quotient& (0+255),b
  5243  0013C4  1F6E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5244  0013C6  B0D8               	btfsc	status,0,c
  5245  0013C8  2B6E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5246  0013CA                     l2359:
  5247  0013CA  FFFF               	dw	65535	; assembler added errata NOP
  5248                           
  5249                           ; BSR set to: 0
  5250  0013CC  C06D  F067         	movff	___awdiv@quotient,?___awdiv
  5251  0013D0  C06E  F068         	movff	___awdiv@quotient+1,?___awdiv+1
  5252  0013D4                     
  5253                           ; BSR set to: 0
  5254  0013D4  0012               	return		;funcret
  5255  0013D6  FFFF               	dw	65535	; errata NOP
  5256  0013D8                     __end_of___awdiv:
  5257                           	opt callstack 0
  5258                           
  5259 ;; *************** function _low_isr *****************
  5260 ;; Defined at:
  5261 ;;		line 80 in file "interrupts.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		None
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5275 ;;      Params:         0       0       0       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0       0       0
  5277 ;;      Temps:          0       1       0       0       0       0       0
  5278 ;;      Totals:         0       1       0       0       0       0       0
  5279 ;;Total ram usage:        1 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		Interrupt level 1
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	intcodelo
  5290  000018                     __pintcodelo:
  5291                           	opt callstack 0
  5292  000018                     _low_isr:
  5293                           	opt callstack 0
  5294  000018  FFFF               	dw	65535	; assembler added errata NOP
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;incstack = 0
  5298  00001A  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5299  00001C  CFE0 F066          	movff	bsr,??_low_isr
  5300  000020  C066  FFE0         	movff	??_low_isr,bsr
  5301  000024  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5302  000026  0010               	retfie	
  5303  000028  FFFF               	dw	65535	; errata NOP
  5304  00002A                     __end_of_low_isr:
  5305                           	opt callstack 0
  5306                           
  5307 ;; *************** function _high_isr *****************
  5308 ;; Defined at:
  5309 ;;		line 21 in file "interrupts.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  i               2    4[BANK0 ] int 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5323 ;;      Params:         0       0       0       0       0       0       0
  5324 ;;      Locals:         0       2       0       0       0       0       0
  5325 ;;      Temps:          0       4       0       0       0       0       0
  5326 ;;      Totals:         0       6       0       0       0       0       0
  5327 ;;Total ram usage:        6 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		Interrupt level 2
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	intcode
  5337  000008                     __pintcode:
  5338                           	opt callstack 0
  5339  000008                     _high_isr:
  5340                           	opt callstack 0
  5341  000008  FFFF               	dw	65535	; assembler added errata NOP
  5342                           
  5343                           ;incstack = 0
  5344  00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5345  00000C  EF31  F008         	goto	int_func
  5346                           
  5347                           	psect	intcode_body
  5348  001062                     __pintcode_body:
  5349                           	opt callstack 21
  5350  001062                     int_func:
  5351                           	opt callstack 21
  5352  001062  FFFF               	dw	65535	; errata NOP
  5353  001064  CFD9 F062          	movff	fsr2l,??_high_isr+2
  5354  001068  CFDA F063          	movff	fsr2h,??_high_isr+3
  5355  00106C                     
  5356                           ;interrupts.c: 23:     static unsigned int t1;;interrupts.c: 25:     if(INTCONbits.TMR0I
      +                          F)
  5357  00106C  A4F2               	btfss	242,2,c	;volatile
  5358  00106E  EF3B  F008         	goto	i2u142_41
  5359  001072  EF3E  F008         	goto	i2u142_40
  5360  001076                     i2u142_41:
  5361  001076  FFFF               	dw	65535	; assembler added errata NOP
  5362  001078  EF81  F008         	goto	i2l2445
  5363  00107C                     i2u142_40:
  5364  00107C  FFFF               	dw	65535	; assembler added errata NOP
  5365  00107E                     
  5366                           ;interrupts.c: 26:     {;interrupts.c: 27:         PORTCbits.RC1 = 1;
  5367  00107E  8282               	bsf	130,1,c	;volatile
  5368  001080                     
  5369                           ;interrupts.c: 29:         for(int i = 0; i < 2; i++)
  5370  001080  0E00               	movlw	0
  5371  001082  0100               	movlb	0	; force () banked
  5372  001084  6F65               	movwf	(high_isr@i+1)& (0+255),b
  5373  001086  0E00               	movlw	0
  5374  001088  6F64               	movwf	high_isr@i& (0+255),b
  5375  00108A                     
  5376                           ; BSR set to: 0
  5377  00108A  0100               	movlb	0	; force () banked
  5378  00108C  BF65               	btfsc	(high_isr@i+1)& (0+255),7,b
  5379  00108E  EF52  F008         	goto	i2u143_41
  5380  001092  5165               	movf	(high_isr@i+1)& (0+255),w,b
  5381  001094  E10A               	bnz	i2u143_40
  5382  001096  0E02               	movlw	2
  5383  001098  5D64               	subwf	high_isr@i& (0+255),w,b
  5384  00109A  A0D8               	btfss	status,0,c
  5385  00109C  EF52  F008         	goto	i2u143_41
  5386  0010A0  EF55  F008         	goto	i2u143_40
  5387  0010A4                     i2u143_41:
  5388  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  5389  0010A6  EF58  F008         	goto	i2l114
  5390  0010AA                     i2u143_40:
  5391  0010AA  FFFF               	dw	65535	; assembler added errata NOP
  5392  0010AC  EF6D  F008         	goto	i2l115
  5393  0010B0                     i2l114:
  5394  0010B0  FFFF               	dw	65535	; assembler added errata NOP
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;interrupts.c: 30:             __nop();
  5398  0010B2  F000               	nop	
  5399  0010B4  0100               	movlb	0	; force () banked
  5400  0010B6  4B64               	infsnz	high_isr@i& (0+255),f,b
  5401  0010B8  2B65               	incf	(high_isr@i+1)& (0+255),f,b
  5402  0010BA                     
  5403                           ; BSR set to: 0
  5404  0010BA  0100               	movlb	0	; force () banked
  5405  0010BC  BF65               	btfsc	(high_isr@i+1)& (0+255),7,b
  5406  0010BE  EF6A  F008         	goto	i2u144_41
  5407  0010C2  5165               	movf	(high_isr@i+1)& (0+255),w,b
  5408  0010C4  E10A               	bnz	i2u144_40
  5409  0010C6  0E02               	movlw	2
  5410  0010C8  5D64               	subwf	high_isr@i& (0+255),w,b
  5411  0010CA  A0D8               	btfss	status,0,c
  5412  0010CC  EF6A  F008         	goto	i2u144_41
  5413  0010D0  EF6D  F008         	goto	i2u144_40
  5414  0010D4                     i2u144_41:
  5415  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  5416  0010D6  EF58  F008         	goto	i2l114
  5417  0010DA                     i2u144_40:
  5418  0010DA                     i2l115:
  5419  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  5420                           
  5421                           ; BSR set to: 0
  5422                           ;interrupts.c: 32:         PORTCbits.RC1 = 0;
  5423  0010DC  9282               	bcf	130,1,c	;volatile
  5424  0010DE                     
  5425                           ; BSR set to: 0
  5426                           ;interrupts.c: 34:         CCP1CONbits.CCP1M = 0b0101;
  5427  0010DE  50BD               	movf	189,w,c	;volatile
  5428  0010E0  0BF0               	andlw	-16
  5429  0010E2  0905               	iorlw	5
  5430  0010E4  6EBD               	movwf	189,c	;volatile
  5431                           
  5432                           ;interrupts.c: 36:         TMR3 = 0;
  5433  0010E6  0E00               	movlw	0
  5434  0010E8  6EB3               	movwf	179,c	;volatile
  5435  0010EA  0E00               	movlw	0
  5436  0010EC  6EB2               	movwf	178,c	;volatile
  5437  0010EE                     
  5438                           ; BSR set to: 0
  5439                           ;interrupts.c: 37:         T3CONbits.TMR3ON = 1;
  5440  0010EE  80B1               	bsf	177,0,c	;volatile
  5441  0010F0                     
  5442                           ; BSR set to: 0
  5443                           ;interrupts.c: 39:         INTCONbits.TMR0IF = 0;
  5444  0010F0  94F2               	bcf	242,2,c	;volatile
  5445                           
  5446                           ;interrupts.c: 40:         TMR0 = 0xF77F;
  5447  0010F2  0EF7               	movlw	247
  5448  0010F4  6ED7               	movwf	215,c	;volatile
  5449  0010F6  0E7F               	movlw	127
  5450  0010F8  6ED6               	movwf	214,c	;volatile
  5451                           
  5452                           ;interrupts.c: 41:         TMR0H = 0b00010101;
  5453  0010FA  0E15               	movlw	21
  5454  0010FC  6ED7               	movwf	215,c	;volatile
  5455                           
  5456                           ;interrupts.c: 42:         TMR0L = 0b10100000;
  5457  0010FE  0EA0               	movlw	160
  5458  001100  6ED6               	movwf	214,c	;volatile
  5459  001102                     i2l2445:
  5460  001102  FFFF               	dw	65535	; assembler added errata NOP
  5461                           
  5462                           ;interrupts.c: 44:     if (PIR1bits.TMR1IF)
  5463  001104  A09E               	btfss	158,0,c	;volatile
  5464  001106  EF87  F008         	goto	i2u145_41
  5465  00110A  EF8A  F008         	goto	i2u145_40
  5466  00110E                     i2u145_41:
  5467  00110E  FFFF               	dw	65535	; assembler added errata NOP
  5468  001110  EF91  F008         	goto	i2l2453
  5469  001114                     i2u145_40:
  5470  001114  FFFF               	dw	65535	; assembler added errata NOP
  5471  001116                     
  5472                           ;interrupts.c: 45:     {;interrupts.c: 46:         PORTDbits.RD7 ^= 1;
  5473  001116  7E83               	btg	131,7,c	;volatile
  5474  001118                     
  5475                           ;interrupts.c: 48:         PIR1bits.TMR1IF = 0;
  5476  001118  909E               	bcf	158,0,c	;volatile
  5477  00111A                     
  5478                           ;interrupts.c: 49:         TMR1 = 0b0011110010110000;
  5479  00111A  0E3C               	movlw	60
  5480  00111C  6ECF               	movwf	207,c	;volatile
  5481  00111E  0EB0               	movlw	176
  5482  001120  6ECE               	movwf	206,c	;volatile
  5483  001122                     i2l2453:
  5484  001122  FFFF               	dw	65535	; assembler added errata NOP
  5485                           
  5486                           ;interrupts.c: 51:     if (PIR1bits.CCP1IF)
  5487  001124  A49E               	btfss	158,2,c	;volatile
  5488  001126  EF97  F008         	goto	i2u146_41
  5489  00112A  EF9A  F008         	goto	i2u146_40
  5490  00112E                     i2u146_41:
  5491  00112E  FFFF               	dw	65535	; assembler added errata NOP
  5492  001130  EFE8  F008         	goto	i2l121
  5493  001134                     i2u146_40:
  5494  001134  FFFF               	dw	65535	; assembler added errata NOP
  5495  001136                     
  5496                           ;interrupts.c: 52:     {;interrupts.c: 53:         if (CCP1CONbits.CCP1M == 0b0101)
  5497  001136  50BD               	movf	189,w,c	;volatile
  5498  001138  0B0F               	andlw	15
  5499  00113A  0A05               	xorlw	5
  5500  00113C  A4D8               	btfss	status,2,c
  5501  00113E  EFA3  F008         	goto	i2u147_41
  5502  001142  EFA6  F008         	goto	i2u147_40
  5503  001146                     i2u147_41:
  5504  001146  FFFF               	dw	65535	; assembler added errata NOP
  5505  001148  EFB2  F008         	goto	i2l2461
  5506  00114C                     i2u147_40:
  5507  00114C  FFFF               	dw	65535	; assembler added errata NOP
  5508  00114E                     
  5509                           ;interrupts.c: 54:         {;interrupts.c: 56:             PORTCbits.RC0 = 1;
  5510  00114E  8082               	bsf	130,0,c	;volatile
  5511                           
  5512                           ;interrupts.c: 57:             t1 = CCPR1;
  5513  001150  CFBE F0EE          	movff	4030,high_isr@t1	;volatile
  5514  001154  CFBF F0EF          	movff	4031,high_isr@t1+1	;volatile
  5515  001158                     
  5516                           ;interrupts.c: 58:             CCP1CONbits.CCP1M = 0b0100;
  5517  001158  50BD               	movf	189,w,c	;volatile
  5518  00115A  0BF0               	andlw	-16
  5519  00115C  0904               	iorlw	4
  5520  00115E  6EBD               	movwf	189,c	;volatile
  5521                           
  5522                           ;interrupts.c: 60:         }
  5523  001160  EFE6  F008         	goto	i2l2471
  5524  001164                     i2l2461:
  5525  001164  FFFF               	dw	65535	; assembler added errata NOP
  5526                           
  5527                           ;interrupts.c: 62:         {;interrupts.c: 63:             g_echo[g_compteEcho] = CCPR1 
      +                          - t1;
  5528  001166  0100               	movlb	0	; force () banked
  5529  001168  51EE               	movf	high_isr@t1& (0+255),w,b
  5530  00116A  5CBE               	subwf	190,w,c	;volatile
  5531  00116C  0100               	movlb	0	; force () banked
  5532  00116E  6F60               	movwf	??_high_isr& (0+255),b
  5533  001170  0100               	movlb	0	; force () banked
  5534  001172  51EF               	movf	(high_isr@t1+1)& (0+255),w,b
  5535  001174  58BF               	subwfb	191,w,c	;volatile
  5536  001176  0100               	movlb	0	; force () banked
  5537  001178  6F61               	movwf	(??_high_isr+1)& (0+255),b
  5538  00117A  90D8               	bcf	status,0,c
  5539  00117C  0100               	movlb	0	; force () banked
  5540  00117E  35F0               	rlcf	_g_compteEcho& (0+255),w,b
  5541  001180  6ED9               	movwf	fsr2l,c
  5542  001182  35F1               	rlcf	(_g_compteEcho+1)& (0+255),w,b
  5543  001184  6EDA               	movwf	fsr2h,c
  5544  001186  0E40               	movlw	low _g_echo
  5545  001188  26D9               	addwf	fsr2l,f,c
  5546  00118A  0E01               	movlw	high _g_echo
  5547  00118C  22DA               	addwfc	fsr2h,f,c
  5548  00118E  C060  FFDE         	movff	??_high_isr,postinc2
  5549  001192  C061  FFDD         	movff	??_high_isr+1,postdec2
  5550  001196                     
  5551                           ; BSR set to: 0
  5552                           ;interrupts.c: 64:             g_compteEcho++;
  5553  001196  0100               	movlb	0	; force () banked
  5554  001198  4BF0               	infsnz	_g_compteEcho& (0+255),f,b
  5555  00119A  2BF1               	incf	(_g_compteEcho+1)& (0+255),f,b
  5556  00119C                     
  5557                           ; BSR set to: 0
  5558                           ;interrupts.c: 66:             if (g_compteEcho > 10)
  5559  00119C  0100               	movlb	0	; force () banked
  5560  00119E  BFF1               	btfsc	(_g_compteEcho+1)& (0+255),7,b
  5561  0011A0  EFDB  F008         	goto	i2u148_41
  5562  0011A4  51F1               	movf	(_g_compteEcho+1)& (0+255),w,b
  5563  0011A6  E10A               	bnz	i2u148_40
  5564  0011A8  0E0B               	movlw	11
  5565  0011AA  5DF0               	subwf	_g_compteEcho& (0+255),w,b
  5566  0011AC  A0D8               	btfss	status,0,c
  5567  0011AE  EFDB  F008         	goto	i2u148_41
  5568  0011B2  EFDE  F008         	goto	i2u148_40
  5569  0011B6                     i2u148_41:
  5570  0011B6  FFFF               	dw	65535	; assembler added errata NOP
  5571  0011B8  EFE4  F008         	goto	i2l2469
  5572  0011BC                     i2u148_40:
  5573  0011BC  FFFF               	dw	65535	; assembler added errata NOP
  5574  0011BE                     
  5575                           ; BSR set to: 0
  5576                           ;interrupts.c: 67:             {;interrupts.c: 68:                 g_compteEcho = 0;
  5577  0011BE  0E00               	movlw	0
  5578  0011C0  0100               	movlb	0	; force () banked
  5579  0011C2  6FF1               	movwf	(_g_compteEcho+1)& (0+255),b
  5580  0011C4  0E00               	movlw	0
  5581  0011C6  6FF0               	movwf	_g_compteEcho& (0+255),b
  5582  0011C8                     i2l2469:
  5583  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;interrupts.c: 72:             PORTCbits.RC0 = 0;
  5587  0011CA  9082               	bcf	130,0,c	;volatile
  5588  0011CC                     i2l2471:
  5589  0011CC  FFFF               	dw	65535	; assembler added errata NOP
  5590                           
  5591                           ;interrupts.c: 75:         PIR1bits.CCP1IF = 0;
  5592  0011CE  949E               	bcf	158,2,c	;volatile
  5593  0011D0                     i2l121:
  5594  0011D0  FFFF               	dw	65535	; assembler added errata NOP
  5595  0011D2  C063  FFDA         	movff	??_high_isr+3,fsr2h
  5596  0011D6  C062  FFD9         	movff	??_high_isr+2,fsr2l
  5597  0011DA  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5598  0011DC  0011               	retfie		f
  5599  0011DE  FFFF               	dw	65535	; errata NOP
  5600  0011E0                     __end_of_high_isr:
  5601                           	opt callstack 0
  5602                           
  5603                           	psect	param0
  5604  0000                     
  5605                           	psect	temp
  5606  000001                     btemp:
  5607                           	opt callstack 0
  5608  000001                     	ds	1
  5609  0000                     int$flags	set	btemp
  5610  0000                     wtemp8	set	btemp+1
  5611  0000                     ttemp5	set	btemp+1
  5612  0000                     ttemp6	set	btemp+4
  5613  0000                     ttemp7	set	btemp+8
  5614                           tosu	equ	0xFFF
  5615                           tosh	equ	0xFFE
  5616                           tosl	equ	0xFFD
  5617                           stkptr	equ	0xFFC
  5618                           pclatu	equ	0xFFB
  5619                           pclath	equ	0xFFA
  5620                           pcl	equ	0xFF9
  5621                           tblptru	equ	0xFF8
  5622                           tblptrh	equ	0xFF7
  5623                           tblptrl	equ	0xFF6
  5624                           tablat	equ	0xFF5
  5625                           prodh	equ	0xFF4
  5626                           prodl	equ	0xFF3
  5627                           indf0	equ	0xFEF
  5628                           postinc0	equ	0xFEE
  5629                           postdec0	equ	0xFED
  5630                           preinc0	equ	0xFEC
  5631                           plusw0	equ	0xFEB
  5632                           fsr0h	equ	0xFEA
  5633                           fsr0l	equ	0xFE9
  5634                           wreg	equ	0xFE8
  5635                           indf1	equ	0xFE7
  5636                           postinc1	equ	0xFE6
  5637                           postdec1	equ	0xFE5
  5638                           preinc1	equ	0xFE4
  5639                           plusw1	equ	0xFE3
  5640                           fsr1h	equ	0xFE2
  5641                           fsr1l	equ	0xFE1
  5642                           bsr	equ	0xFE0
  5643                           indf2	equ	0xFDF
  5644                           postinc2	equ	0xFDE
  5645                           postdec2	equ	0xFDD
  5646                           preinc2	equ	0xFDC
  5647                           plusw2	equ	0xFDB
  5648                           fsr2h	equ	0xFDA
  5649                           fsr2l	equ	0xFD9
  5650                           status	equ	0xFD8


Data Sizes:
    Strings     33
    Constant    0
    Data        64
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160    134     146
    BANK1           256      0     116
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1843_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 20
		 -> STR_3(CODE[3]), main@message(BANK0[20]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_curseurHome->_lcd_wrCom
    _lcd_effaceLigne->_lcd_gotoXY
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_cacheCurseur->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   11059
                                            110 BANK0     24    24      0
                            ___awdiv
                            ___lwdiv
                     _initialisation
                   _lcd_cacheCurseur
                    _lcd_effaceLigne
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6536
                                             94 BANK0     16    10      6
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6169
                                             86 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5815
                                             70 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4406
                                             34 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2757
                                             23 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              7 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1267
                                             16 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     850
                                              7 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             25 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              7 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              7 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     763
                                             15 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     445
                                             11 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1068
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      88
                                              9 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     758
                                             11 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceLigne                                      1     1      0     904
                                             15 BANK0      1     1      0
                     _lcd_effaceChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           4     3      1     636
                                             11 BANK0      4     3      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceChar                                       2     2      0     224
                                             10 BANK0      2     2      0
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     178
                                              9 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     222
                                              9 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      88
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              7 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              7 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            6     6      0      46
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___lwdiv
   _initialisation
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceLigne
     _lcd_effaceChar
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _sprintf
     ___awdiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      74       6       45.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     86      92       4       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106       9        0.0%
DATA                 0      0     106      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue May 19 09:38:35 2020

                                                             l76 1882  
                                                   ___awdiv@sign 006C  
                                                             bsr 000FE0  
                                                   __CFG_CP0$OFF 000000  
                                                   __CFG_CP1$OFF 000000  
                                                   __CFG_CP2$OFF 000000  
                                                   __CFG_CP3$OFF 000000  
                                                    __CFG_OSC$HS 000000  
                                   __size_of_lcd_strobeEnableBit 000C  
                                                            l210 1584  
                                                            l204 1974  
                                                            l213 1D92  
                                                            l223 163E  
                                                            l152 19EE  
                                                            l226 1D9E  
                                                            l155 1B28  
                                                            l163 16DA  
                                                            l156 1B72  
                                                            l172 1D56  
                                                            l149 1DA8  
                                                            l157 1B7A  
                                                            l253 1238  
                                                            l166 1BD2  
                                                            l415 0D4C  
                                                            l184 1D24  
                                                            l256 1294  
                                                            l264 06E8  
                                                            l193 1770  
                                                            l169 1A5C  
                                                            l178 1D86  
                                                            l258 12E2  
                                                            l266 06F2  
                                                            l291 0B94  
                                                            l532 13D4  
                                                            l196 1D7A  
                                                            l428 0EDE  
                                                            l284 09A0  
                                                            l297 18F4  
                                                            l298 18FC  
                                                            l792 17F8  
                                                            l799 1802  
                                                            l991 14C0  
                                                            l976 1C14  
                                                            l979 1C1E  
                                                            l998 1B16  
                                                            l999 1B1E  
                                                   __CFG_CPB$OFF 000000  
                                                   __CFG_CPD$OFF 000000  
                                                            u800 1C56  
                                                            u801 1C50  
                                                            u810 1B70  
                                                            u811 1B6A  
                                                            u900 0C3E  
                                                            u820 11F4  
                                                            u901 0C38  
                                                            u821 11EE  
                                                            u910 0C70  
                                                            u750 13F0  
                                                            u830 121E  
                                                            u911 0C6A  
                                                            u751 13EA  
                                                            u831 1218  
                                                            u920 0CB6  
                                                            u760 1406  
                                                            u840 1292  
                                                            u921 0CB0  
                                                            u761 1400  
                                                            u841 128C  
                                                            u930 0D08  
                                                            u770 1434  
                                                            u850 12A6  
                                                            u931 0D02  
                                                            u771 142E  
                                                            u851 12A0  
                                                            u940 0D68  
                                                            u860 1BF6  
                                                            u780 146E  
                                                            u941 0D62  
                                                            u861 1BF0  
                                                            u781 1468  
                                                            u870 0BB2  
                                                            u950 0DA0  
                                                            u790 1B14  
                                                            u871 0BAC  
                                                            u951 0D9A  
                                                            u791 1B0E  
                                                            u880 0BEA  
                                                            u960 0DE4  
                                                            u881 0BE4  
                                                            u961 0DDE  
                                                            u970 0E16  
                                                            u891 0C18  
                                                            u971 0E10  
                                                            u980 0E4A  
                                                            u981 0E44  
                                                            u990 0E9A  
                                                            u991 0E94  
                                                   __CFG_BOR$OFF 000000  
                                                            _abs 1BD6  
                                                            _pad 11E0  
                                                   __CFG_BORV$25 000000  
                                                    lcd_gotoXY@x 006E  
                                                            wreg 000FE8  
                                                    lcd_gotoXY@y 006B  
                                                   __CFG_LVP$OFF 000000  
                                                   __CFG_WDT$OFF 000000  
                                                    main@dist_mm 00E2  
                                                           l1006 1AC2  
                                                           l1015 1C66  
                                                           l1009 1DAE  
                                                           l2001 07F4  
                                                           l2011 08E0  
                                                           l2003 085A  
                                                           ?_abs 0079  
                                                           l2021 0940  
                                                           l2005 087C  
                                                           l2013 08F2  
                                                           l2031 1B84  
                                                           l2111 171C  
                                                           l2103 16E4  
                                                           l2023 094E  
                                                           l2015 090C  
                                                           l2007 08A0  
                                                           l2041 1B98  
                                                           l2033 1B88  
                                                           l2105 16E8  
                                                           l2121 19F4  
                                                           l2025 095A  
                                                           l2017 091E  
                                                           l2009 08C0  
                                                           l2051 1BBA  
                                                           l2043 1BA2  
                                                           l2035 1B8C  
                                                           l2107 16F8  
                                                           l2115 172E  
                                                           l2131 1A16  
                                                           l2123 19F8  
                                                           l2019 0928  
                                                           l2027 096E  
                                                           l2211 18CE  
                                                           l2221 181A  
                                                           l2213 1808  
                                                           l2053 1BC2  
                                                           l2045 1BA6  
                                                           l2037 1B94  
                                                           l2109 170A  
                                                           l2141 1A34  
                                                           l2133 1A1A  
                                                           l2125 1A0C  
                                                           l2061 09A6  
                                                           l2205 1888  
                                                           l2301 1A62  
                                                           l2231 1824  
                                                           l2223 181C  
                                                           l2215 1814  
                                                           l2055 1BC6  
                                                           l2047 1BAE  
                                                           l2039 1B96  
                                                           l2151 1A50  
                                                           l2143 1A3A  
                                                           l2135 1A22  
                                                           l2127 1A0E  
                                                           l2071 0A24  
                                                           l2063 09D2  
                                                           l2207 1890  
                                                           l2311 1ABA  
                                                           l2303 1A74  
                                                           l2321 12EE  
                                                           l2241 183E  
                                                           l2233 1836  
                                                           l2225 181E  
                                                           l2217 1816  
                                                           l2049 1BB6  
                                                           l2153 1A58  
                                                           l2145 1A3E  
                                                           l2137 1A28  
                                                           l2129 1A10  
                                                           l2081 0B00  
                                                           l2073 0A4E  
                                                           l2065 09E0  
                                                           l2209 189E  
                                                           l2305 1A7C  
                                                           l2401 0F42  
                                                           l2331 1328  
                                                           l2323 1300  
                                                           l2251 1854  
                                                           l2243 1840  
                                                           l2235 1838  
                                                           l2227 1820  
                                                           l2219 1818  
                                                           l2315 1D8C  
                                                           l2059 1D80  
                                                           l2171 1606  
                                                           l2163 15B0  
                                                           l2155 158A  
                                                           l2147 1A46  
                                                           l2139 1A2C  
                                                           l2091 0B42  
                                                           l2083 0B0E  
                                                           l2075 0A9A  
                                                           l2067 09F2  
                                                           l2307 1A84  
                                                           l2411 0FD0  
                                                           l2341 135E  
                                                           l2333 132C  
                                                           l2325 1308  
                                                           l2261 185E  
                                                           l2253 1856  
                                                           l2245 1846  
                                                           l2237 183A  
                                                           l2229 1822  
                                                           l2181 1CF2  
                                                           l2317 1D60  
                                                           l2173 160A  
                                                           l2165 15B8  
                                                           l2157 1590  
                                                           l2149 1A4C  
                                                           l2085 0B24  
                                                           l2069 09F8  
                                                           l2309 1AA8  
                                                           l2421 1036  
                                                           l2413 1008  
                                                           l2405 0F68  
                                                           l2351 139E  
                                                           l2343 1372  
                                                           l2335 1336  
                                                           l2327 130C  
                                                           l2319 12E8  
                                                           l2271 187C  
                                                           l2263 1864  
                                                           l2255 1858  
                                                           l2247 1848  
                                                           l2239 183C  
                                                           l2183 1CFC  
                                                           l2175 161E  
                                                           l2159 1596  
                                                           l2191 1916  
                                                           l2079 0AD2  
                                                           l2095 0B50  
                                                           l2423 1042  
                                                           l2415 100C  
                                                           l2407 0FAA  
                                                           l2353 13A6  
                                                           l2345 137A  
                                                           l2337 134C  
                                                           l2329 1320  
                                                           l2273 187E  
                                                           l2265 1876  
                                                           l2257 185A  
                                                           l2249 1852  
                                                           l1801 1980  
                                                           l2185 1D04  
                                                           l2177 1624  
                                                           l2169 15D2  
                                                           l2281 1D34  
                                                           l2193 1922  
                                                           l2097 0B7C  
                                                           l2089 0B32  
                                                           l2417 1018  
                                                           l2409 0FB0  
                                                           l2347 1394  
                                                           l2339 1354  
                                                           l2355 13AC  
                                                           l2371 17AA  
                                                           l2363 1778  
                                                           l2275 1880  
                                                           l2267 1878  
                                                           l2259 185C  
                                                           l1811 1B48  
                                                           l1803 1B24  
                                                           l2187 1D08  
                                                           l2179 1638  
                                                           l2291 1D52  
                                                           l2283 1D3A  
                                                           l2195 192E  
                                                           l2099 0B8A  
                                                           l2419 101E  
                                                           l2357 13C2  
                                                           l2349 139C  
                                                           l2381 17EA  
                                                           l2373 17BE  
                                                           l2365 1782  
                                                           l2269 187A  
                                                           l1821 1B74  
                                                           l1813 1B4A  
                                                           l1805 1B2E  
                                                           l2285 1D40  
                                                           l2277 1D2A  
                                                           l2517 1954  
                                                           l2189 1906  
                                                           l2293 14C6  
                                                           l1901 0D6A  
                                                           l2359 13CA  
                                                           l2383 17F2  
                                                           l2375 17C6  
                                                           l2367 1798  
                                                           l1815 1B54  
                                                           l1807 1B3E  
                                                           l2519 1748  
                                                           l2287 1D46  
                                                           l2279 1D30  
                                                           l2199 193A  
                                                           l2295 14D0  
                                                           l1911 0DE6  
                                                           l1903 0D8A  
                                                           l1831 120A  
                                                           l2391 0EEE  
                                                           l2377 17E0  
                                                           l2369 17A0  
                                                           l1817 1B56  
                                                           l1809 1B40  
                                                           l1825 1D98  
                                                           l2289 1D4C  
                                                           l2297 1520  
                                                           l1921 0E6C  
                                                           l1913 0DEE  
                                                           l1905 0D8E  
                                                           l1841 1266  
                                                           l1833 1220  
                                                           l2393 0EF0  
                                                           l2385 0EE2  
                                                           l2379 17E8  
                                                           l1819 1B5E  
                                                           l2299 1524  
                                                           l1923 0E80  
                                                           l1915 0E04  
                                                           l1907 0DA2  
                                                           l1851 1BF8  
                                                           l1771 1436  
                                                           l1763 13DA  
                                                           l1843 12A8  
                                                           l1835 122C  
                                                           l1827 11E2  
                                                           l2395 0EF2  
                                                           l2387 0EE8  
                                                           l1941 165A  
                                                           l1933 1648  
                                                           l1861 0BD8  
                                                           l1853 0B9C  
                                                           l1917 0E18  
                                                           l1925 0E86  
                                                           l1909 0DC2  
                                                           l1773 146E  
                                                           l1765 13F2  
                                                           l1845 12BC  
                                                           l1837 1248  
                                                           l1829 11F6  
                                                           l2397 0F0A  
                                                           l2389 0EEC  
                                                           l1951 167A  
                                                           l1943 165C  
                                                           l1935 164C  
                                                           l1871 0C40  
                                                           l1863 0BEC  
                                                           l1855 0BA2  
                                                           l1927 0E9C  
                                                           l1919 0E4C  
                                                           l1775 14B6  
                                                           l1767 1406  
                                                           l1783 1AC8  
                                                           l1791 1C26  
                                                           l1839 1260  
                                                           l2399 0F2E  
                                                           l1961 16C8  
                                                           l1953 167E  
                                                           l1945 1666  
                                                           l1937 1650  
                                                           l1881 0CB8  
                                                           l1873 0C48  
                                                           l1865 0C0C  
                                                           l1857 0BB4  
                                                           l1929 0EBC  
                                                           l1849 1BD8  
                                                           l1769 1412  
                                                           l1785 1AD6  
                                                           l1793 1C32  
                                                           l1779 1DA4  
                                                           l1963 16CE  
                                                           l1955 1686  
                                                           l1947 166A  
                                                           l1939 1658  
                                                           l1891 0D0A  
                                                           l1883 0CD8  
                                                           l1875 0C5E  
                                                           l1867 0C10  
                                                           l1859 0BD4  
                                                           l1787 1AEA  
                                                           l1795 1C3A  
                                                           l1971 0646  
                                                           l1965 16D6  
                                                           l1957 169C  
                                                           l1949 1672  
                                                           l1893 0D2A  
                                                           l1885 0CDA  
                                                           l1877 0C72  
                                                           l1869 0C1E  
                                                           l1789 1AF0  
                                                           l1797 1C58  
                                                           l1981 06DA  
                                                           l1973 067C  
                                                           ?_pad 0077  
                                                           l1959 16B2  
                                                           l1887 0CEE  
                                                           l1879 0C86  
                                                           l1991 073C  
                                                           l1983 06FC  
                                                           l1975 069E  
                                                           l1889 0CF4  
                                                           l1897 0D52  
                                                           l1993 0752  
                                                           l1985 0714  
                                                           l1977 06B4  
                                                           l1969 0626  
                                                           l1899 0D58  
                                                           l1995 075C  
                                                           l1987 0726  
                                                           l1979 06B8  
                                                           l1997 07E4  
                                                           l1989 0730  
                                                           l1999 07EC  
                                                           STR_1 0601  
                                                           STR_2 0611  
                                                           STR_3 061F  
                                                           u1000 169A  
                                                           u1001 1694  
                                                           u1010 16B2  
                                                           u1011 16AC  
                                                           u1100 089E  
                                                           u1020 065A  
                                                           u1101 0898  
                                                           u1021 0652  
                                                           u1110 08BE  
                                                           u1030 065E  
                                                           u1111 08B8  
                                                           u1120 08DE  
                                                           u1040 067A  
                                                           u1200 0AFE  
                                                           u1121 08D8  
                                                           u1041 0674  
                                                           u1201 0AF8  
                                                           u1210 15AA  
                                                           u1130 08F2  
                                                           u1050 06B2  
                                                           u1211 15A4  
                                                           u1131 08EC  
                                                           u1051 06AC  
                                                           u1300 12FE  
                                                           u1220 15CC  
                                                           u1140 090A  
                                                           u1060 06D8  
                                                           u1301 12F8  
                                                           u1221 15C6  
                                                           u1141 0904  
                                                           u1061 06D2  
                                                           u1310 131E  
                                                           u1230 161E  
                                                           u1150 091E  
                                                           u1070 0712  
                                                           u1311 1318  
                                                           u1231 1618  
                                                           u1151 0918  
                                                           u1071 070C  
                                                           u1320 134A  
                                                           u1240 1638  
                                                           u1160 093E  
                                                           u1080 0726  
                                                           u1400 0F62  
                                                           u1321 1344  
                                                           u1241 1632  
                                                           u1161 0938  
                                                           u1081 0720  
                                                           u1401 0F5C  
                                                           u1330 1370  
                                                           u1250 1D22  
                                                           u1090 087A  
                                                           u1170 09D0  
                                                           u1410 0FD0  
                                                           u1331 136A  
                                                           u1251 1D1C  
                                                           u1091 0874  
                                                           u1171 09CA  
                                                           u1411 0FCA  
                                                           u1340 1392  
                                                           u1180 0A22  
                                                           u1260 18F2  
                                                           u1341 138C  
                                                           u1181 0A1C  
                                                           u1261 18EC  
                                                           u1350 13C0  
                                                           u1270 151C  
                                                           u1190 0A4E  
                                                           u1351 13BA  
                                                           u1191 0A48  
                                                           u1360 1796  
                                                           u1280 1570  
                                                           u1361 1790  
                                                           u1370 17BC  
                                                           u1290 1582  
                                                           u1371 17B6  
                                                           u1507 1A1C  
                                                           u1291 157C  
                                                           u1380 17DE  
                                                           u1381 17D8  
                                                           u1517 1A2E  
                                                           u1277 1512  
                                                           u1390 0F2C  
                                                           u1527 1A40  
                                                           u1287 1566  
                                                           u1391 0F26  
                                                           u1537 1A52  
                                                           u1547 1680  
                                                           u1557 16BC  
                                                           u1497 1A00  
                                                           _TMR0 000FD6  
                                                           _TMR1 000FCE  
                                                           _TMR3 000FB2  
                                               ??_initialisation 0067  
                                                    main@message 00CE  
                                                           abs@a 0079  
                                                           _dbuf 0154  
                                                           _main 0EE2  
                                                           _dtoa 0624  
                                                           _prec 00EA  
                                                           _nout 00E6  
                                                           pad@i 007E  
                                                           pad@p 007B  
                                                           fsr1h 000FE2  
                                                           fsr2h 000FDA  
                                                           indf1 000FE7  
                                                           indf2 000FDF  
                                                           fsr1l 000FE1  
                                                           pad@w 0080  
                                                           fsr2l 000FD9  
                                                           btemp 0001  
                                                           prodh 000FF4  
                                                           prodl 000FF3  
                                                           start 002A  
                                                ?_lcd_putMessage 006F  
                                                   ___param_bank 000000  
                                                          ??_abs 007B  
                                                          ??_pad 007D  
                                                  __CFG_OSCS$OFF 000000  
                                                ??_lcd_ecritChar 006B  
                                                __end_of___aodiv 0D50  
                                                          ?_main 0060  
                                                          ?_dtoa 0082  
                                                __end_of___aomod 0EE2  
                                                __end_of___awdiv 13D8  
                                                          _CCPR1 000FBE  
                                                          _CMCON 000FB4  
                                                ___awdiv@divisor 0069  
                                                __end_of___lwdiv 1806  
                                                          i1l126 0020  
                                                          i2l121 11D0  
                                                          i2l114 10B0  
                                                          i2l115 10DA  
                                                ___awdiv@counter 006B  
                                                   vfpfcnvrt@fmt 00A8  
                                                          _TMR0H 000FD7  
                                                          _TMR0L 000FD6  
                                                          _PORTA 000F80  
                                                          _TRISA 000F92  
                                                          _TRISB 000F93  
                                                  __CFG_PWRT$OFF 000000  
                                                  __CFG_WRT0$OFF 000000  
                                                  __CFG_WRT1$OFF 000000  
                                                  __CFG_WRT2$OFF 000000  
                                                  __CFG_WRT3$OFF 000000  
                                                 __CFG_EBTR0$OFF 000000  
                                                 __CFG_EBTR1$OFF 000000  
                                                 __CFG_EBTR2$OFF 000000  
                                                 __CFG_EBTR3$OFF 000000  
                                                  __CFG_STVR$OFF 000000  
                                                  __CFG_WRTB$OFF 000000  
                                                  __CFG_WRTC$OFF 000000  
                                                  __CFG_WRTD$OFF 000000  
                                                 __CFG_EBTRB$OFF 000000  
                                                ??_lcd_initCGRam 006B  
                                                          _flags 00EC  
                                                          _fputc 13D8  
                                                          _fputs 1AC6  
                                                          pad@fp 0077  
                                                          _width 00E8  
                                                          _putch 1DAC  
                                                          main@i 00E4  
                                                          dtoa@d 0084  
                                                          dtoa@i 00A4  
                                                          dtoa@n 009C  
                                                          dtoa@p 0096  
                                                          dtoa@s 009A  
                                                          dtoa@w 0098  
                                                __end_of_low_isr 002A  
                                                          tablat 000FF5  
                                                lcd_effaceChar@i 006B  
                                                          ttemp5 0002  
                                                          ttemp6 0005  
                                                          ttemp7 0009  
                                                          status 000FD8  
                                                          wtemp8 0002  
                                                __end_of_sprintf 1AC6  
                                       __end_of_lcd_cacheCurseur 1D96  
                                       __size_of_lcd_effaceLigne 0024  
                                                __initialization 1C6A  
                                               ??_lcd_effaceChar 006A  
                                                   __end_of_main 1062  
                                                   __end_of_dtoa 09A4  
                                           lcd_putMessage@chaine 006F  
                                                         ??_main 00CE  
                                                         ??_dtoa 008C  
                                                  __activetblptr 000003  
                                                         _ADCON1 000FC1  
                                                         ?_fputc 0067  
                                                         ?_fputs 0070  
                                               ___awdiv@dividend 0067  
                                                         ?_putch 0060  
                                                         i2l2431 108A  
                                                         i2l2441 10EE  
                                                         i2l2425 106C  
                                                         i2l2451 111A  
                                                         i2l2443 10F0  
                                                         i2l2435 10B4  
                                                         i2l2427 107E  
                                                         i2l2461 1164  
                                                         i2l2453 1122  
                                                         i2l2437 10BA  
                                                         i2l2429 1080  
                                                         i2l2445 1102  
                                                         i2l2463 1196  
                                                         i2l2471 11CC  
                                                         i2l2455 1136  
                                                         i2l2447 1116  
                                                         i2l2439 10DE  
                                                         i2l2465 119C  
                                                         i2l2457 114E  
                                                         i2l2449 1118  
                                                         i2l2467 11BE  
                                                         i2l2459 1158  
                                                         i2l2469 11C8  
                                                 __CFG_WDTPS$128 000000  
                                                 lcd_initCGRam@i 006D  
                                                 lcd_initCGRam@j 006E  
                                                   vfprintf@cfmt 00BC  
                                               __end_of_lcd_busy 1B7E  
                                               __end_of_lcd_init 1D5A  
                                               __end_of_high_isr 11E0  
                                                      ??___aodiv 0077  
                                                      ??___aomod 0077  
                                                      ??___awdiv 006B  
                                                         _g_echo 0140  
                                                      ??___lwdiv 006B  
                                                         clear_0 1C90  
                                                         clear_1 1C9C  
                                               ___awdiv@quotient 006D  
                                                         pad@buf 0079  
                                                         dtoa@fp 0082  
                                                         _strlen 1C24  
                                                         fputc@c 0067  
                                                         fputs@c 0074  
                                                         fputs@i 0075  
                                                         fputs@s 0070  
                                                   __mediumconst 0000  
                                                      ??_low_isr 0066  
                                                         tblptrh 000FF7  
                                                         tblptrl 000FF6  
                                                         tblptru 000FF8  
                                                         putch@c 0060  
                                               __end_of_vfprintf 1900  
                                                      ??_sprintf 00C4  
                                               lcd_effaceLigne@y 006F  
                                              _lcd_resetSequence 19F2  
                                                     __accesstop 0060  
                                        __end_of__initialization 1CA2  
                                            _lcd_strobeEnableBit 1D96  
                                             ?_lcd_resetSequence 0060  
                                                  ___rparam_used 000000  
                                                   __pidataBANK1 1CAC  
                                            ??_lcd_resetSequence 0069  
                                              ??_lcd_effaceLigne 006F  
                                                  __end_of_fputc 14C4  
                                                  __end_of_fputs 1B22  
                                                  __end_of_putch 1DB2  
                                           ?_lcd_strobeEnableBit 0060  
                                                   _g_compteEcho 00F0  
                                             __size_of_lcd_wrCom 009C  
                                                        ??_fputc 006B  
                                                        ??_fputs 0074  
                                      __end_of_lcd_resetSequence 1A60  
                                                        ??_putch 0067  
                                       __size_of_lcd_lireDonnees 000A  
                                              _lcd_ecrireDonnees 197A  
                                                     __pbssBANK0 00E6  
                                                     __pbssBANK1 0140  
                                               ??_lcd_putMessage 0072  
                                             ?_lcd_ecrireDonnees 0060  
                                       __size_of_lcd_curseurHome 000C  
                                            ??_lcd_ecrireDonnees 0067  
                                          ??_lcd_strobeEnableBit 0067  
                                                        ?_strlen 0067  
                                                     _lcd_gotoXY 16DE  
                                             __size_of_vfpfcnvrt 01F6  
                                                     _lcd_wrData 1B7E  
                                      __end_of_lcd_ecrireDonnees 19F2  
                                                      ?_lcd_busy 0060  
                                                      ?_lcd_init 0060  
                                        lcd_ecrireDonnees@donnee 0068  
                                                      ?_high_isr 0060  
                                              ?_lcd_cacheCurseur 0060  
                                                        __Hparam 0000  
                                                        __Lparam 0000  
                                             ??_lcd_cacheCurseur 006B  
                                              __end_of_lcd_wrCom 16DE  
                                                        ___aodiv 0B9A  
                                                        ___aomod 0D50  
                                                        ___awdiv 12E6  
                                                        ___lwdiv 1776  
                                                      ?_vfprintf 00B6  
                                                   __psmallconst 0600  
                                                        __pcinit 1C6A  
                                                        __ramtop 0600  
                                                        __ptext0 0EE2  
                                                        __ptext1 1A60  
                                                        __ptext2 1886  
                                                        __ptext3 09A4  
                                                        __ptext4 0624  
                                                        __ptext5 11E0  
                                                        __ptext6 1C24  
                                                        __ptext7 1AC6  
                                                        __ptext8 13D8  
                                                        __ptext9 1DAC  
                                          __end_of_lcd_ecritChar 197A  
                                                      _T0CONbits 000FD5  
                                                lcd_busy@adresse 0068  
                                                __size_of_strlen 0046  
                                                      _T1CONbits 000FCD  
                                                   __size_of_abs 004E  
                                                   __size_of_pad 0106  
                                                      _T3CONbits 000FB1  
                                                        _low_isr 0018  
                                               lcd_ecritChar@car 006D  
                                                        _sprintf 1A60  
                                                     ??_lcd_busy 0067  
                                                     ??_lcd_init 006F  
                                     __size_of_lcd_resetSequence 006E  
                                                     ??_high_isr 0060  
                                                 __pintcode_body 1062  
                                           end_of_initialization 1CA2  
                                          __end_of_lcd_initCGRam 1642  
                                                        fputc@fp 0069  
                                                        int_func 1062  
                                                        fputs@fp 0072  
                                              lcd_effaceChar@nbr 006A  
                                              ??_lcd_lireDonnees 0067  
                                              __end_of_vfpfcnvrt 0B9A  
                                                        postdec1 000FE5  
                                                        postdec2 000FDD  
                                                        postinc0 000FEE  
                                                        postinc1 000FE6  
                                                        postinc2 000FDE  
                                        __size_of_initialisation 0080  
                                              ??_lcd_curseurHome 006B  
                                                     ??_vfprintf 00BC  
                                            lcd_ecritChar@posRam 006E  
                                                        strlen@a 0069  
                                                        strlen@s 0067  
                                                      _PORTAbits 000F80  
                                                      _PORTBbits 000F81  
                                                      _PORTCbits 000F82  
                                                      _PORTDbits 000F83  
                                                    ?_lcd_gotoXY 006B  
                                                      _TRISBbits 000F93  
                                                      _TRISCbits 000F94  
                                                      _TRISDbits 000F95  
                                                    ?_lcd_wrData 0060  
                                     __size_of_lcd_ecrireDonnees 0078  
                                                     high_isr@t1 00EE  
                                                    _CCP1CONbits 000FBD  
                                                _lcd_effaceLigne 1D5A  
                                                    vfpfcnvrt@ap 00AA  
                                                    vfpfcnvrt@fp 00A6  
                                                    vfpfcnvrt@ll 00AE  
                                                 __end_of_strlen 1C6A  
                                        __size_of_lcd_effaceChar 003C  
                                            start_initialization 1C6A  
                                                    __end_of_abs 1C24  
                                                    __end_of_pad 12E6  
                                                    vfprintf@fmt 00B8  
                                            __size_of_lcd_gotoXY 0098  
                                            __size_of_lcd_wrData 0058  
                                                    __pdataBANK1 0100  
                                                       ??_strlen 0069  
                                                  __pcstackBANK0 0060  
                                               ___aodiv@dividend 0067  
                                        __end_of_lcd_effaceLigne 1D7E  
                                              __size_of_lcd_busy 005C  
                                              __size_of_lcd_init 0032  
                                              __size_of_high_isr 11D8  
                                               ___lwdiv@dividend 0067  
                                                      _dtoa$1380 0094  
                                    __end_of_lcd_strobeEnableBit 1DA2  
                                                      __pintcode 0008  
                                                 _initialisation 1806  
                                                       ?___aodiv 0067  
                                                       ?___aomod 0067  
                                                       ?___awdiv 0067  
                                               ___aodiv@quotient 0079  
                                                       ?___lwdiv 0067  
                                                    __pintcodelo 0018  
                                                      _lcd_wrCom 1642  
                                              __size_of_vfprintf 007A  
                                      __size_of_lcd_cacheCurseur 000C  
                                                    __smallconst 0600  
                                                       ?_low_isr 0060  
                                               ___lwdiv@quotient 006B  
                                                _lcd_lireDonnees 1DA2  
                                                       ?_sprintf 00BE  
                                            lcd_wrData@caractere 0069  
                                                 __size_of_fputc 00EC  
                                                 __size_of_fputs 005C  
                                                 __size_of_putch 0006  
                                                _lcd_curseurHome 1D7E  
                                                       _IPR1bits 000F9F  
                                                       _PIE1bits 000F9D  
                                         __end_of_initialisation 1886  
                                                       i2u142_40 107C  
                                                       i2u142_41 1076  
                                                       i2u143_40 10AA  
                                                       i2u143_41 10A4  
                                                       i2u144_40 10DA  
                                                       i2u144_41 10D4  
                                                       i2u145_40 1114  
                                                       i2u145_41 110E  
                                                       i2u146_40 1134  
                                                       i2u146_41 112E  
                                                       i2u147_40 114C  
                                                       i2u147_41 1146  
                                                       i2u148_40 11BC  
                                                       i2u148_41 11B6  
                                                       _PIR1bits 000F9E  
                                                       _RCONbits 000FD0  
                                        __size_of_lcd_putMessage 00C4  
                                                      _vfpfcnvrt 09A4  
                                                     ?_lcd_wrCom 0060  
                                                 _lcd_effaceChar 1CEC  
                                                      high_isr@i 0064  
                                                   ??_lcd_gotoXY 006C  
                                                   ??_lcd_wrData 0069  
                                               ?_lcd_effaceLigne 0060  
                                              lcd_wrCom@commande 006A  
                                                    _INTCON2bits 000FF1  
                                                      copy_data0 1C7E  
                                                       __Hparam0 0000  
                                         __size_of_lcd_ecritChar 007A  
                                                       __Lparam0 0000  
                                                ?_initialisation 0060  
                                                     vfprintf@ap 00BA  
                                                     vfprintf@fp 00B6  
                                             __end_of_lcd_gotoXY 1776  
                                             __end_of_lcd_wrData 1BD6  
                                               __size_of___aodiv 01B6  
                                               __size_of___aomod 0192  
                                               __size_of___awdiv 00F2  
                                                     ?_vfpfcnvrt 00A6  
                                               __size_of___lwdiv 0090  
                                         __size_of_lcd_initCGRam 00BA  
                                                lcd_putMessage@j 0077  
                                         __end_of_lcd_effaceChar 1D28  
                                                ___aodiv@divisor 006F  
                                                ___aodiv@counter 0077  
                                        __end_of_lcd_lireDonnees 1DAC  
                                                     sprintf@fmt 00C0  
                                                     sprintf@ret 00C4  
                                                ___lwdiv@divisor 0069  
                                                       _matCGRAM 0100  
                                                ___lwdiv@counter 006D  
                                        __end_of_lcd_curseurHome 1D8A  
                                               __size_of_low_isr 0012  
                                                       __ptext10 1BD6  
                                                       __ptext11 0D50  
                                                       __ptext20 16DE  
                                                       __ptext12 0B9A  
                                                       __ptext21 1CEC  
                                                       __ptext13 14C4  
                                                       __ptext30 1776  
                                                       __ptext22 1B7E  
                                                       __ptext14 1900  
                                                       __ptext31 12E6  
                                                       __ptext23 1D8A  
                                                       __ptext15 1D28  
                                                       __ptext24 1642  
                                                       __ptext16 19F2  
                                                       __ptext25 1D96  
                                                       __ptext17 1588  
                                                       __ptext26 197A  
                                                       __ptext18 1D7E  
                                                       __ptext27 1B22  
                                                       __ptext19 1D5A  
                                                       __ptext28 1DA2  
                                                       __ptext29 1806  
                                                       _lcd_busy 1B22  
                                                       _lcd_init 1D28  
                                                       _high_isr 0008  
                                               __size_of_sprintf 0066  
                                                  __size_of_main 0180  
                                                  __size_of_dtoa 0380  
                                                       int$flags 0001  
                                                       _vfprintf 1886  
                                                    ??_lcd_wrCom 0069  
                                                ?_lcd_effaceChar 0060  
                                               _lcd_cacheCurseur 1D8A  
                                               ___aomod@dividend 0067  
                                                  _lcd_ecritChar 1900  
                                                     _INTCONbits 000FF2  
                                                       intlevel1 1DB2  
                                                       intlevel2 1DB2  
                                                      sprintf@ap 00C6  
                                                  _lcd_initCGRam 1588  
                                                 _lcd_putMessage 14C4  
                                                ___aomod@divisor 006F  
                                                    ??_vfpfcnvrt 00AC  
                                                ___aomod@counter 0077  
                                                 ?_lcd_ecritChar 0060  
                                                       sprintf@f 00C8  
                                                       sprintf@s 00BE  
                                               ?_lcd_lireDonnees 0060  
                                               ?_lcd_curseurHome 0060  
                                                 ?_lcd_initCGRam 0060  
                                                   ___aodiv@sign 0078  
                                         __end_of_lcd_putMessage 1588  
                                                   ___aomod@sign 0078  
