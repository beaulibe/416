

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 17 10:18:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2,minocg
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2,minocg
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2,minocg
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2,minocg
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2,minocg
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2,minocg
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1,minocg
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1,minocg
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1,minocg
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F458 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataBANK1
    87  001CA4                     __pidataBANK1:
    88                           	opt callstack 0
    89                           
    90                           ;initializer for _matCGRAM
    91  001CA4  08                 	db	8
    92  001CA5  04                 	db	4
    93  001CA6  04                 	db	4
    94  001CA7  0A                 	db	10
    95  001CA8  11                 	db	17
    96  001CA9  1F                 	db	31
    97  001CAA  11                 	db	17
    98  001CAB  00                 	db	0
    99  001CAC  02                 	db	2
   100  001CAD  04                 	db	4
   101  001CAE  0E                 	db	14
   102  001CAF  11                 	db	17
   103  001CB0  1F                 	db	31
   104  001CB1  10                 	db	16
   105  001CB2  0E                 	db	14
   106  001CB3  00                 	db	0
   107  001CB4  02                 	db	2
   108  001CB5  04                 	db	4
   109  001CB6  1F                 	db	31
   110  001CB7  10                 	db	16
   111  001CB8  1E                 	db	30
   112  001CB9  10                 	db	16
   113  001CBA  1F                 	db	31
   114  001CBB  00                 	db	0
   115  001CBC  08                 	db	8
   116  001CBD  04                 	db	4
   117  001CBE  0E                 	db	14
   118  001CBF  11                 	db	17
   119  001CC0  1F                 	db	31
   120  001CC1  10                 	db	16
   121  001CC2  0E                 	db	14
   122  001CC3  00                 	db	0
   123  001CC4  08                 	db	8
   124  001CC5  04                 	db	4
   125  001CC6  1F                 	db	31
   126  001CC7  10                 	db	16
   127  001CC8  1E                 	db	30
   128  001CC9  10                 	db	16
   129  001CCA  1F                 	db	31
   130  001CCB  00                 	db	0
   131  001CCC  04                 	db	4
   132  001CCD  0A                 	db	10
   133  001CCE  0E                 	db	14
   134  001CCF  11                 	db	17
   135  001CD0  1F                 	db	31
   136  001CD1  10                 	db	16
   137  001CD2  0E                 	db	14
   138  001CD3  00                 	db	0
   139  001CD4  08                 	db	8
   140  001CD5  04                 	db	4
   141  001CD6  0E                 	db	14
   142  001CD7  01                 	db	1
   143  001CD8  0F                 	db	15
   144  001CD9  11                 	db	17
   145  001CDA  0F                 	db	15
   146  001CDB  00                 	db	0
   147  001CDC  04                 	db	4
   148  001CDD  0A                 	db	10
   149  001CDE  0E                 	db	14
   150  001CDF  01                 	db	1
   151  001CE0  0F                 	db	15
   152  001CE1  11                 	db	17
   153  001CE2  0F                 	db	15
   154  001CE3  00                 	db	0
   155  0000                     _TRISB	set	3987
   156  0000                     _PORTBbits	set	3969
   157  0000                     _PORTAbits	set	3968
   158  0000                     _PORTA	set	3968
   159  0000                     _TRISDbits	set	3989
   160  0000                     _TRISCbits	set	3988
   161  0000                     _TRISBbits	set	3987
   162  0000                     _TRISA	set	3986
   163  0000                     _PORTDbits	set	3971
   164  0000                     _PORTCbits	set	3970
   165  0000                     _TMR3	set	4018
   166  0000                     _CCPR1	set	4030
   167  0000                     _TMR1	set	4046
   168  0000                     _RCONbits	set	4048
   169  0000                     _CCP1CONbits	set	4029
   170  0000                     _T3CONbits	set	4017
   171  0000                     _IPR1bits	set	3999
   172  0000                     _PIE1bits	set	3997
   173  0000                     _PIR1bits	set	3998
   174  0000                     _T1CONbits	set	4045
   175  0000                     _CMCON	set	4020
   176  0000                     _ADCON1	set	4033
   177  0000                     _TMR0L	set	4054
   178  0000                     _TMR0H	set	4055
   179  0000                     _T0CONbits	set	4053
   180  0000                     _INTCON2bits	set	4081
   181  0000                     _INTCONbits	set	4082
   182                           
   183                           	psect	smallconst
   184  000600                     __psmallconst:
   185                           	opt callstack 0
   186  000600  00                 	db	0
   187  000601                     STR_1:
   188  000601  4C                 	db	76	;'L'
   189  000602  61                 	db	97	;'a'
   190  000603  62                 	db	98	;'b'
   191  000604  34                 	db	52	;'4'
   192  000605  20                 	db	32
   193  000606  53                 	db	83	;'S'
   194  000607  6F                 	db	111	;'o'
   195  000608  6E                 	db	110	;'n'
   196  000609  61                 	db	97	;'a'
   197  00060A  72                 	db	114	;'r'
   198  00060B  20                 	db	32
   199  00060C  32                 	db	50	;'2'
   200  00060D  30                 	db	48	;'0'
   201  00060E  31                 	db	49	;'1'
   202  00060F  39                 	db	57	;'9'
   203  000610  00                 	db	0
   204  000611                     STR_2:
   205  000611  44                 	db	68	;'D'
   206  000612  69                 	db	105	;'i'
   207  000613  73                 	db	115	;'s'
   208  000614  74                 	db	116	;'t'
   209  000615  61                 	db	97	;'a'
   210  000616  6E                 	db	110	;'n'
   211  000617  63                 	db	99	;'c'
   212  000618  65                 	db	101	;'e'
   213  000619  20                 	db	32
   214  00061A  3D                 	db	61	;'='
   215  00061B  20                 	db	32
   216  00061C  25                 	db	37
   217  00061D  64                 	db	100	;'d'
   218  00061E  00                 	db	0
   219  00061F                     STR_3:
   220  00061F  6D                 	db	109	;'m'
   221  000620  6D                 	db	109	;'m'
   222  000621  00                 	db	0
   223                           
   224                           ; #config settings
   225  000622  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           	psect	cinit
   228  001C62                     __pcinit:
   229                           	opt callstack 0
   230  001C62                     start_initialization:
   231                           	opt callstack 0
   232  001C62                     __initialization:
   233                           	opt callstack 0
   234                           
   235                           ; Initialize objects allocated to BANK1 (64 bytes)
   236                           ; load TBLPTR registers with __pidataBANK1
   237  001C62  0EA4               	movlw	low __pidataBANK1
   238  001C64  6EF6               	movwf	tblptrl,c
   239  001C66  0E1C               	movlw	high __pidataBANK1
   240  001C68  6EF7               	movwf	tblptrh,c
   241  001C6A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   242  001C6C  6EF8               	movwf	tblptru,c
   243  001C6E  EE01  F000         	lfsr	0,__pdataBANK1
   244  001C72  EE10 F040          	lfsr	1,64
   245  001C76                     copy_data0:
   246  001C76  0009               	tblrd		*+
   247  001C78  CFF5 FFEE          	movff	tablat,postinc0
   248  001C7C  50E5               	movf	postdec1,w,c
   249  001C7E  50E1               	movf	fsr1l,w,c
   250  001C80  E1FA               	bnz	copy_data0
   251                           
   252                           ; Clear objects allocated to BANK1 (52 bytes)
   253  001C82  EE01  F040         	lfsr	0,__pbssBANK1
   254  001C86  0E34               	movlw	52
   255  001C88                     clear_0:
   256  001C88  6AEE               	clrf	postinc0,c
   257  001C8A  06E8               	decf	wreg,f,c
   258  001C8C  E1FD               	bnz	clear_0
   259                           
   260                           ; Clear objects allocated to BANK0 (12 bytes)
   261  001C8E  EE00  F0E6         	lfsr	0,__pbssBANK0
   262  001C92  0E0C               	movlw	12
   263  001C94                     clear_1:
   264  001C94  6AEE               	clrf	postinc0,c
   265  001C96  06E8               	decf	wreg,f,c
   266  001C98  E1FD               	bnz	clear_1
   267  001C9A                     end_of_initialization:
   268                           	opt callstack 0
   269  001C9A                     __end_of__initialization:
   270                           	opt callstack 0
   271  001C9A  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272  001C9C  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  001C9E  0100               	movlb	0
   274  001CA0  EF71  F007         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssBANK0
   277  0000E6                     __pbssBANK0:
   278                           	opt callstack 0
   279  0000E6                     _nout:
   280                           	opt callstack 0
   281  0000E6                     	ds	2
   282  0000E8                     _width:
   283                           	opt callstack 0
   284  0000E8                     	ds	2
   285  0000EA                     _prec:
   286                           	opt callstack 0
   287  0000EA                     	ds	2
   288  0000EC                     _flags:
   289                           	opt callstack 0
   290  0000EC                     	ds	2
   291  0000EE                     high_isr@t1:
   292                           	opt callstack 0
   293  0000EE                     	ds	2
   294  0000F0                     _g_compteEcho:
   295                           	opt callstack 0
   296  0000F0                     	ds	2
   297                           
   298                           	psect	bssBANK1
   299  000140                     __pbssBANK1:
   300                           	opt callstack 0
   301  000140                     _g_echo:
   302                           	opt callstack 0
   303  000140                     	ds	20
   304  000154                     _dbuf:
   305                           	opt callstack 0
   306  000154                     	ds	32
   307                           
   308                           	psect	dataBANK1
   309  000100                     __pdataBANK1:
   310                           	opt callstack 0
   311  000100                     _matCGRAM:
   312                           	opt callstack 0
   313  000100                     	ds	64
   314                           
   315                           	psect	cstackBANK0
   316  000060                     __pcstackBANK0:
   317                           	opt callstack 0
   318  000060                     ??_high_isr:
   319  000060                     
   320                           ; 1 bytes @ 0x0
   321  000060                     	ds	4
   322  000064                     high_isr@i:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0x4
   326  000064                     	ds	2
   327  000066                     ??_low_isr:
   328                           
   329                           ; 1 bytes @ 0x6
   330  000066                     	ds	1
   331  000067                     ??_lcd_ecrireDonnees:
   332  000067                     ??_lcd_busy:
   333  000067                     ?_fputc:
   334                           	opt callstack 0
   335  000067                     ?_strlen:
   336                           	opt callstack 0
   337  000067                     ?___awdiv:
   338                           	opt callstack 0
   339  000067                     ?___lwdiv:
   340                           	opt callstack 0
   341  000067                     ?___aodiv:
   342                           	opt callstack 0
   343  000067                     ?___aomod:
   344                           	opt callstack 0
   345  000067                     ___awdiv@dividend:
   346                           	opt callstack 0
   347  000067                     ___lwdiv@dividend:
   348                           	opt callstack 0
   349  000067                     fputc@c:
   350                           	opt callstack 0
   351  000067                     strlen@s:
   352                           	opt callstack 0
   353  000067                     ___aodiv@dividend:
   354                           	opt callstack 0
   355  000067                     ___aomod@dividend:
   356                           	opt callstack 0
   357                           
   358                           ; 8 bytes @ 0x7
   359  000067                     	ds	1
   360  000068                     lcd_ecrireDonnees@donnee:
   361                           	opt callstack 0
   362  000068                     lcd_busy@adresse:
   363                           	opt callstack 0
   364                           
   365                           ; 1 bytes @ 0x8
   366  000068                     	ds	1
   367  000069                     ??_lcd_wrCom:
   368  000069                     ??_lcd_resetSequence:
   369  000069                     lcd_wrData@caractere:
   370                           	opt callstack 0
   371  000069                     ___awdiv@divisor:
   372                           	opt callstack 0
   373  000069                     ___lwdiv@divisor:
   374                           	opt callstack 0
   375  000069                     fputc@fp:
   376                           	opt callstack 0
   377  000069                     strlen@a:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x9
   381  000069                     	ds	1
   382  00006A                     lcd_wrCom@commande:
   383                           	opt callstack 0
   384  00006A                     lcd_effaceChar@nbr:
   385                           	opt callstack 0
   386                           
   387                           ; 1 bytes @ 0xA
   388  00006A                     	ds	1
   389  00006B                     ??_lcd_initCGRam:
   390  00006B                     ??_fputc:
   391  00006B                     ??_lcd_ecritChar:
   392  00006B                     lcd_effaceChar@i:
   393                           	opt callstack 0
   394  00006B                     lcd_gotoXY@y:
   395                           	opt callstack 0
   396  00006B                     ___awdiv@counter:
   397                           	opt callstack 0
   398  00006B                     ___lwdiv@quotient:
   399                           	opt callstack 0
   400                           
   401                           ; 2 bytes @ 0xB
   402  00006B                     	ds	1
   403  00006C                     ??_lcd_gotoXY:
   404  00006C                     ___awdiv@sign:
   405                           	opt callstack 0
   406                           
   407                           ; 1 bytes @ 0xC
   408  00006C                     	ds	1
   409  00006D                     lcd_ecritChar@car:
   410                           	opt callstack 0
   411  00006D                     lcd_initCGRam@i:
   412                           	opt callstack 0
   413  00006D                     ___lwdiv@counter:
   414                           	opt callstack 0
   415  00006D                     ___awdiv@quotient:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xD
   419  00006D                     	ds	1
   420  00006E                     lcd_gotoXY@x:
   421                           	opt callstack 0
   422  00006E                     lcd_ecritChar@posRam:
   423                           	opt callstack 0
   424  00006E                     lcd_initCGRam@j:
   425                           	opt callstack 0
   426                           
   427                           ; 1 bytes @ 0xE
   428  00006E                     	ds	1
   429  00006F                     lcd_effaceLigne@y:
   430                           	opt callstack 0
   431  00006F                     lcd_putMessage@chaine:
   432                           	opt callstack 0
   433  00006F                     ___aodiv@divisor:
   434                           	opt callstack 0
   435  00006F                     ___aomod@divisor:
   436                           	opt callstack 0
   437                           
   438                           ; 8 bytes @ 0xF
   439  00006F                     	ds	1
   440  000070                     ?_fputs:
   441                           	opt callstack 0
   442  000070                     fputs@s:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x10
   446  000070                     	ds	2
   447  000072                     ??_lcd_putMessage:
   448  000072                     fputs@fp:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452  000072                     	ds	2
   453  000074                     fputs@c:
   454                           	opt callstack 0
   455                           
   456                           ; 1 bytes @ 0x14
   457  000074                     	ds	1
   458  000075                     fputs@i:
   459                           	opt callstack 0
   460                           
   461                           ; 2 bytes @ 0x15
   462  000075                     	ds	2
   463  000077                     ?_pad:
   464                           	opt callstack 0
   465  000077                     lcd_putMessage@j:
   466                           	opt callstack 0
   467  000077                     ___aodiv@counter:
   468                           	opt callstack 0
   469  000077                     ___aomod@counter:
   470                           	opt callstack 0
   471  000077                     pad@fp:
   472                           	opt callstack 0
   473                           
   474                           ; 2 bytes @ 0x17
   475  000077                     	ds	1
   476  000078                     ___aodiv@sign:
   477                           	opt callstack 0
   478  000078                     ___aomod@sign:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0x18
   482  000078                     	ds	1
   483  000079                     ?_abs:
   484                           	opt callstack 0
   485  000079                     pad@buf:
   486                           	opt callstack 0
   487  000079                     abs@a:
   488                           	opt callstack 0
   489  000079                     ___aodiv@quotient:
   490                           	opt callstack 0
   491                           
   492                           ; 8 bytes @ 0x19
   493  000079                     	ds	2
   494  00007B                     ??_abs:
   495  00007B                     pad@p:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x1B
   499  00007B                     	ds	2
   500  00007D                     ??_pad:
   501                           
   502                           ; 1 bytes @ 0x1D
   503  00007D                     	ds	1
   504  00007E                     pad@i:
   505                           	opt callstack 0
   506                           
   507                           ; 2 bytes @ 0x1E
   508  00007E                     	ds	2
   509  000080                     pad@w:
   510                           	opt callstack 0
   511                           
   512                           ; 2 bytes @ 0x20
   513  000080                     	ds	2
   514  000082                     ?_dtoa:
   515                           	opt callstack 0
   516  000082                     dtoa@fp:
   517                           	opt callstack 0
   518                           
   519                           ; 2 bytes @ 0x22
   520  000082                     	ds	2
   521  000084                     dtoa@d:
   522                           	opt callstack 0
   523                           
   524                           ; 8 bytes @ 0x24
   525  000084                     	ds	8
   526  00008C                     ??_dtoa:
   527                           
   528                           ; 1 bytes @ 0x2C
   529  00008C                     	ds	8
   530  000094                     _dtoa$1379:
   531                           	opt callstack 0
   532                           
   533                           ; 2 bytes @ 0x34
   534  000094                     	ds	2
   535  000096                     dtoa@p:
   536                           	opt callstack 0
   537                           
   538                           ; 2 bytes @ 0x36
   539  000096                     	ds	2
   540  000098                     dtoa@w:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x38
   544  000098                     	ds	2
   545  00009A                     dtoa@s:
   546                           	opt callstack 0
   547                           
   548                           ; 2 bytes @ 0x3A
   549  00009A                     	ds	2
   550  00009C                     dtoa@n:
   551                           	opt callstack 0
   552                           
   553                           ; 8 bytes @ 0x3C
   554  00009C                     	ds	8
   555  0000A4                     dtoa@i:
   556                           	opt callstack 0
   557                           
   558                           ; 2 bytes @ 0x44
   559  0000A4                     	ds	2
   560  0000A6                     ?_vfpfcnvrt:
   561                           	opt callstack 0
   562  0000A6                     vfpfcnvrt@fp:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x46
   566  0000A6                     	ds	2
   567  0000A8                     vfpfcnvrt@fmt:
   568                           	opt callstack 0
   569                           
   570                           ; 2 bytes @ 0x48
   571  0000A8                     	ds	2
   572  0000AA                     vfpfcnvrt@ap:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x4A
   576  0000AA                     	ds	2
   577  0000AC                     ??_vfpfcnvrt:
   578                           
   579                           ; 1 bytes @ 0x4C
   580  0000AC                     	ds	2
   581  0000AE                     vfpfcnvrt@ll:
   582                           	opt callstack 0
   583                           
   584                           ; 8 bytes @ 0x4E
   585  0000AE                     	ds	8
   586  0000B6                     ?_vfprintf:
   587                           	opt callstack 0
   588  0000B6                     vfprintf@fp:
   589                           	opt callstack 0
   590                           
   591                           ; 2 bytes @ 0x56
   592  0000B6                     	ds	2
   593  0000B8                     vfprintf@fmt:
   594                           	opt callstack 0
   595                           
   596                           ; 2 bytes @ 0x58
   597  0000B8                     	ds	2
   598  0000BA                     vfprintf@ap:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x5A
   602  0000BA                     	ds	2
   603  0000BC                     vfprintf@cfmt:
   604                           	opt callstack 0
   605                           
   606                           ; 2 bytes @ 0x5C
   607  0000BC                     	ds	2
   608  0000BE                     ?_sprintf:
   609                           	opt callstack 0
   610  0000BE                     sprintf@s:
   611                           	opt callstack 0
   612                           
   613                           ; 2 bytes @ 0x5E
   614  0000BE                     	ds	2
   615  0000C0                     sprintf@fmt:
   616                           	opt callstack 0
   617                           
   618                           ; 2 bytes @ 0x60
   619  0000C0                     	ds	4
   620  0000C4                     sprintf@ret:
   621                           	opt callstack 0
   622                           
   623                           ; 2 bytes @ 0x64
   624  0000C4                     	ds	2
   625  0000C6                     sprintf@ap:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0x66
   629  0000C6                     	ds	2
   630  0000C8                     sprintf@f:
   631                           	opt callstack 0
   632                           
   633                           ; 6 bytes @ 0x68
   634  0000C8                     	ds	6
   635  0000CE                     main@message:
   636                           	opt callstack 0
   637                           
   638                           ; 20 bytes @ 0x6E
   639  0000CE                     	ds	20
   640  0000E2                     main@dist_mm:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x82
   644  0000E2                     	ds	2
   645  0000E4                     main@i:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x84
   649  0000E4                     	ds	2
   650                           
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 22 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  message        20  110[BANK0 ] unsigned char [20]
   661 ;;  i               2  132[BANK0 ] int 
   662 ;;  dist_mm         2  130[BANK0 ] int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   672 ;;      Params:         0       0       0       0       0       0       0
   673 ;;      Locals:         0      24       0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0
   675 ;;      Totals:         0      24       0       0       0       0       0
   676 ;;Total ram usage:       24 bytes
   677 ;; Hardware stack levels required when called:   10
   678 ;; This function calls:
   679 ;;		___awdiv
   680 ;;		___lwdiv
   681 ;;		_initialisation
   682 ;;		_lcd_cacheCurseur
   683 ;;		_lcd_effaceLigne
   684 ;;		_lcd_gotoXY
   685 ;;		_lcd_init
   686 ;;		_lcd_putMessage
   687 ;;		_sprintf
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text0
   694  000EE2                     __ptext0:
   695                           	opt callstack 0
   696  000EE2                     _main:
   697                           	opt callstack 21
   698  000EE2  FFFF               	dw	65535	; assembler added errata NOP
   699                           
   700                           ;main.c: 24:     int dist_mm;;main.c: 25:     int i;;main.c: 26:     char message[20];;m
      +                          ain.c: 28:     initialisation();
   701  000EE4  ECFF  F00B         	call	_initialisation	;wreg free
   702  000EE8                     
   703                           ;main.c: 29:     lcd_init();
   704  000EE8  EC90  F00E         	call	_lcd_init	;wreg free
   705  000EEC                     
   706                           ;main.c: 31:     PORTCbits.RC0 = 0;
   707  000EEC  9082               	bcf	130,0,c	;volatile
   708  000EEE                     
   709                           ;main.c: 32:     PORTDbits.RD7 = 0;
   710  000EEE  9E83               	bcf	131,7,c	;volatile
   711  000EF0                     
   712                           ;main.c: 33:     PORTCbits.RC1 = 0;
   713  000EF0  9282               	bcf	130,1,c	;volatile
   714  000EF2                     
   715                           ;main.c: 35:     lcd_putMessage((const unsigned char*) "Lab4 Sonar 2019");
   716  000EF2  0E01               	movlw	low STR_1
   717  000EF4  0100               	movlb	0	; force () banked
   718  000EF6  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   719  000EF8  0E06               	movlw	high STR_1
   720  000EFA  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   721  000EFC  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   722  000EFE  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   723  000F00  A4D8               	btfss	status,2,c
   724  000F02  0E00               	movlw	low (__mediumconst shr (0+16))
   725  000F04  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   726  000F06  EC5E  F00A         	call	_lcd_putMessage	;wreg free
   727  000F0A                     l2395:
   728  000F0A  FFFF               	dw	65535	; assembler added errata NOP
   729                           
   730                           ;main.c: 38:     {;main.c: 39:         if (g_compteEcho >= 10)
   731  000F0C  0100               	movlb	0	; force () banked
   732  000F0E  BFF1               	btfsc	(_g_compteEcho+1)& (0+255),7,b
   733  000F10  EF93  F007         	goto	u1391
   734  000F14  51F1               	movf	(_g_compteEcho+1)& (0+255),w,b
   735  000F16  E10A               	bnz	u1390
   736  000F18  0E0A               	movlw	10
   737  000F1A  5DF0               	subwf	_g_compteEcho& (0+255),w,b
   738  000F1C  A0D8               	btfss	status,0,c
   739  000F1E  EF93  F007         	goto	u1391
   740  000F22  EF96  F007         	goto	u1390
   741  000F26                     u1391:
   742  000F26  FFFF               	dw	65535	; assembler added errata NOP
   743  000F28  EF85  F007         	goto	l2395
   744  000F2C                     u1390:
   745  000F2C  FFFF               	dw	65535	; assembler added errata NOP
   746  000F2E                     
   747                           ; BSR set to: 0
   748                           ;main.c: 40:         {;main.c: 41:             dist_mm = 0;
   749  000F2E  0E00               	movlw	0
   750  000F30  0100               	movlb	0	; force () banked
   751  000F32  6FE3               	movwf	(main@dist_mm+1)& (0+255),b
   752  000F34  0E00               	movlw	0
   753  000F36  6FE2               	movwf	main@dist_mm& (0+255),b
   754                           
   755                           ;main.c: 43:             for (i = 0; i < 10; i++)
   756  000F38  0E00               	movlw	0
   757  000F3A  0100               	movlb	0	; force () banked
   758  000F3C  6FE5               	movwf	(main@i+1)& (0+255),b
   759  000F3E  0E00               	movlw	0
   760  000F40  6FE4               	movwf	main@i& (0+255),b
   761  000F42                     
   762                           ; BSR set to: 0
   763  000F42  0100               	movlb	0	; force () banked
   764  000F44  BFE5               	btfsc	(main@i+1)& (0+255),7,b
   765  000F46  EFAE  F007         	goto	u1401
   766  000F4A  51E5               	movf	(main@i+1)& (0+255),w,b
   767  000F4C  E10A               	bnz	u1400
   768  000F4E  0E0A               	movlw	10
   769  000F50  5DE4               	subwf	main@i& (0+255),w,b
   770  000F52  A0D8               	btfss	status,0,c
   771  000F54  EFAE  F007         	goto	u1401
   772  000F58  EFB1  F007         	goto	u1400
   773  000F5C                     u1401:
   774  000F5C  FFFF               	dw	65535	; assembler added errata NOP
   775  000F5E  EFB4  F007         	goto	l2403
   776  000F62                     u1400:
   777  000F62  FFFF               	dw	65535	; assembler added errata NOP
   778  000F64  EFE8  F007         	goto	l2409
   779  000F68                     l2403:
   780  000F68  FFFF               	dw	65535	; assembler added errata NOP
   781                           
   782                           ; BSR set to: 0
   783                           ;main.c: 44:             {;main.c: 54:                 dist_mm = dist_mm + (g_echo[i]/3)
      +                          ;
   784  000F6A  90D8               	bcf	status,0,c
   785  000F6C  0100               	movlb	0	; force () banked
   786  000F6E  35E4               	rlcf	main@i& (0+255),w,b
   787  000F70  6ED9               	movwf	fsr2l,c
   788  000F72  35E5               	rlcf	(main@i+1)& (0+255),w,b
   789  000F74  6EDA               	movwf	fsr2h,c
   790  000F76  0E40               	movlw	low _g_echo
   791  000F78  26D9               	addwf	fsr2l,f,c
   792  000F7A  0E01               	movlw	high _g_echo
   793  000F7C  22DA               	addwfc	fsr2h,f,c
   794  000F7E  CFDE F067          	movff	postinc2,___lwdiv@dividend
   795  000F82  CFDD F068          	movff	postdec2,___lwdiv@dividend+1
   796  000F86  0E00               	movlw	0
   797  000F88  0100               	movlb	0	; force () banked
   798  000F8A  6F6A               	movwf	(___lwdiv@divisor+1)& (0+255),b
   799  000F8C  0E03               	movlw	3
   800  000F8E  6F69               	movwf	___lwdiv@divisor& (0+255),b
   801  000F90  ECB7  F00B         	call	___lwdiv	;wreg free
   802  000F94  0100               	movlb	0	; force () banked
   803  000F96  51E2               	movf	main@dist_mm& (0+255),w,b
   804  000F98  0100               	movlb	0	; force () banked
   805  000F9A  2567               	addwf	?___lwdiv& (0+255),w,b
   806  000F9C  0100               	movlb	0	; force () banked
   807  000F9E  6FE2               	movwf	main@dist_mm& (0+255),b
   808  000FA0  51E3               	movf	(main@dist_mm+1)& (0+255),w,b
   809  000FA2  0100               	movlb	0	; force () banked
   810  000FA4  2168               	addwfc	(?___lwdiv+1)& (0+255),w,b
   811  000FA6  0100               	movlb	0	; force () banked
   812  000FA8  6FE3               	movwf	(main@dist_mm+1)& (0+255),b
   813  000FAA                     
   814                           ; BSR set to: 0
   815                           ;main.c: 55:             }
   816  000FAA  0100               	movlb	0	; force () banked
   817  000FAC  4BE4               	infsnz	main@i& (0+255),f,b
   818  000FAE  2BE5               	incf	(main@i+1)& (0+255),f,b
   819  000FB0                     
   820                           ; BSR set to: 0
   821  000FB0  0100               	movlb	0	; force () banked
   822  000FB2  BFE5               	btfsc	(main@i+1)& (0+255),7,b
   823  000FB4  EFE5  F007         	goto	u1411
   824  000FB8  51E5               	movf	(main@i+1)& (0+255),w,b
   825  000FBA  E10A               	bnz	u1410
   826  000FBC  0E0A               	movlw	10
   827  000FBE  5DE4               	subwf	main@i& (0+255),w,b
   828  000FC0  A0D8               	btfss	status,0,c
   829  000FC2  EFE5  F007         	goto	u1411
   830  000FC6  EFE8  F007         	goto	u1410
   831  000FCA                     u1411:
   832  000FCA  FFFF               	dw	65535	; assembler added errata NOP
   833  000FCC  EFB4  F007         	goto	l2403
   834  000FD0                     u1410:
   835  000FD0                     l2409:
   836  000FD0  FFFF               	dw	65535	; assembler added errata NOP
   837                           
   838                           ; BSR set to: 0
   839                           ;main.c: 57:             sprintf(message, "Distance = %d", (dist_mm/10));
   840  000FD2  0ECE               	movlw	low main@message
   841  000FD4  0100               	movlb	0	; force () banked
   842  000FD6  6FBE               	movwf	sprintf@s& (0+255),b
   843  000FD8  0E00               	movlw	high main@message
   844  000FDA  6FBF               	movwf	(sprintf@s+1)& (0+255),b
   845  000FDC  0E11               	movlw	low STR_2
   846  000FDE  0100               	movlb	0	; force () banked
   847  000FE0  6FC0               	movwf	sprintf@fmt& (0+255),b
   848  000FE2  0E06               	movlw	high STR_2
   849  000FE4  6FC1               	movwf	(sprintf@fmt+1)& (0+255),b
   850  000FE6  C0E2  F067         	movff	main@dist_mm,___awdiv@dividend
   851  000FEA  C0E3  F068         	movff	main@dist_mm+1,___awdiv@dividend+1
   852  000FEE  0E00               	movlw	0
   853  000FF0  0100               	movlb	0	; force () banked
   854  000FF2  6F6A               	movwf	(___awdiv@divisor+1)& (0+255),b
   855  000FF4  0E0A               	movlw	10
   856  000FF6  6F69               	movwf	___awdiv@divisor& (0+255),b
   857  000FF8  EC6F  F009         	call	___awdiv	;wreg free
   858  000FFC  C067  F0C2         	movff	?___awdiv,?_sprintf+4
   859  001000  C068  F0C3         	movff	?___awdiv+1,?_sprintf+5
   860  001004  EC2C  F00D         	call	_sprintf	;wreg free
   861  001008                     
   862                           ;main.c: 60:             lcd_cacheCurseur();
   863  001008  ECC1  F00E         	call	_lcd_cacheCurseur	;wreg free
   864  00100C                     
   865                           ;main.c: 61:             lcd_gotoXY(1, 2);
   866  00100C  0E02               	movlw	2
   867  00100E  0100               	movlb	0	; force () banked
   868  001010  6F6B               	movwf	lcd_gotoXY@y& (0+255),b
   869  001012  0E01               	movlw	1
   870  001014  EC6B  F00B         	call	_lcd_gotoXY
   871  001018                     
   872                           ;main.c: 62:             lcd_effaceLigne(2);
   873  001018  0E02               	movlw	2
   874  00101A  ECA9  F00E         	call	_lcd_effaceLigne
   875  00101E                     
   876                           ;main.c: 63:             lcd_putMessage((const unsigned char*) message);
   877  00101E  0ECE               	movlw	low main@message
   878  001020  0100               	movlb	0	; force () banked
   879  001022  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   880  001024  0E00               	movlw	high main@message
   881  001026  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   882  001028  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   883  00102A  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   884  00102C  A4D8               	btfss	status,2,c
   885  00102E  0E20               	movlw	32
   886  001030  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   887  001032  EC5E  F00A         	call	_lcd_putMessage	;wreg free
   888  001036                     
   889                           ;main.c: 64:             lcd_gotoXY(17, 2);
   890  001036  0E02               	movlw	2
   891  001038  0100               	movlb	0	; force () banked
   892  00103A  6F6B               	movwf	lcd_gotoXY@y& (0+255),b
   893  00103C  0E11               	movlw	17
   894  00103E  EC6B  F00B         	call	_lcd_gotoXY
   895  001042                     
   896                           ;main.c: 65:             lcd_putMessage((const unsigned char*) "mm");
   897  001042  0E1F               	movlw	low STR_3
   898  001044  0100               	movlb	0	; force () banked
   899  001046  6F6F               	movwf	lcd_putMessage@chaine& (0+255),b
   900  001048  0E06               	movlw	high STR_3
   901  00104A  6F70               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   902  00104C  516F               	movf	lcd_putMessage@chaine& (0+255),w,b
   903  00104E  1170               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   904  001050  A4D8               	btfss	status,2,c
   905  001052  0E00               	movlw	low (__mediumconst shr (0+16))
   906  001054  6F71               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   907  001056  EC5E  F00A         	call	_lcd_putMessage	;wreg free
   908  00105A  EF85  F007         	goto	l2395
   909  00105E  EF15  F000         	goto	start
   910  001062                     __end_of_main:
   911                           	opt callstack 0
   912                           
   913 ;; *************** function _sprintf *****************
   914 ;; Defined at:
   915 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  s               2   94[BANK0 ] PTR unsigned char 
   918 ;;		 -> main@message(20), 
   919 ;;  fmt             2   96[BANK0 ] PTR const unsigned char 
   920 ;;		 -> STR_2(14), 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  f               6  104[BANK0 ] struct _IO_FILE
   923 ;;  ap              2  102[BANK0 ] PTR void [1]
   924 ;;		 -> ?_sprintf(2), 
   925 ;;  ret             2  100[BANK0 ] int 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  2   94[BANK0 ] int 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   935 ;;      Params:         0       6       0       0       0       0       0
   936 ;;      Locals:         0      10       0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0
   938 ;;      Totals:         0      16       0       0       0       0       0
   939 ;;Total ram usage:       16 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    9
   942 ;; This function calls:
   943 ;;		_vfprintf
   944 ;; This function is called by:
   945 ;;		_main
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text1
   950  001A58                     __ptext1:
   951                           	opt callstack 0
   952  001A58                     _sprintf:
   953                           	opt callstack 0
   954  001A58  FFFF               	dw	65535	; assembler added errata NOP
   955  001A5A  0EC2               	movlw	low (?_sprintf+4)
   956  001A5C  0100               	movlb	0	; () banked
   957  001A5E  6FC6               	movwf	sprintf@ap& (0+255),b
   958  001A60  0E00               	movlw	high (?_sprintf+4)
   959  001A62  6FC7               	movwf	(sprintf@ap+1)& (0+255),b
   960  001A64  C0BE  F0C8         	movff	sprintf@s,sprintf@f
   961  001A68  C0BF  F0C9         	movff	sprintf@s+1,sprintf@f+1
   962  001A6C                     
   963                           ; BSR set to: 0
   964  001A6C  0E00               	movlw	0
   965  001A6E  6FCB               	movwf	(sprintf@f+3)& (0+255),b
   966  001A70  0E00               	movlw	0
   967  001A72  6FCA               	movwf	(sprintf@f+2)& (0+255),b
   968  001A74                     
   969                           ; BSR set to: 0
   970  001A74  0E00               	movlw	0
   971  001A76  6FCD               	movwf	(sprintf@f+5)& (0+255),b
   972  001A78  0E00               	movlw	0
   973  001A7A  6FCC               	movwf	(sprintf@f+4)& (0+255),b
   974  001A7C                     
   975                           ; BSR set to: 0
   976  001A7C  0EC8               	movlw	low sprintf@f
   977  001A7E  6FB6               	movwf	vfprintf@fp& (0+255),b
   978  001A80  0E00               	movlw	high sprintf@f
   979  001A82  6FB7               	movwf	(vfprintf@fp+1)& (0+255),b
   980  001A84  C0C0  F0B8         	movff	sprintf@fmt,vfprintf@fmt
   981  001A88  C0C1  F0B9         	movff	sprintf@fmt+1,vfprintf@fmt+1
   982  001A8C  0EC6               	movlw	low sprintf@ap
   983  001A8E  6FBA               	movwf	vfprintf@ap& (0+255),b
   984  001A90  0E00               	movlw	high sprintf@ap
   985  001A92  6FBB               	movwf	(vfprintf@ap+1)& (0+255),b
   986  001A94  EC3F  F00C         	call	_vfprintf	;wreg free
   987  001A98  C0B6  F0C4         	movff	?_vfprintf,sprintf@ret
   988  001A9C  C0B7  F0C5         	movff	?_vfprintf+1,sprintf@ret+1
   989  001AA0  0100               	movlb	0	; () banked
   990  001AA2  51CA               	movf	(sprintf@f+2)& (0+255),w,b
   991  001AA4  25BE               	addwf	sprintf@s& (0+255),w,b
   992  001AA6  6ED9               	movwf	fsr2l,c
   993  001AA8  51CB               	movf	(sprintf@f+3)& (0+255),w,b
   994  001AAA  21BF               	addwfc	(sprintf@s+1)& (0+255),w,b
   995  001AAC  6EDA               	movwf	fsr2h,c
   996  001AAE  0E00               	movlw	0
   997  001AB0  6EDF               	movwf	indf2,c
   998  001AB2                     
   999                           ; BSR set to: 0
  1000  001AB2  C0C4  F0BE         	movff	sprintf@ret,?_sprintf
  1001  001AB6  C0C5  F0BF         	movff	sprintf@ret+1,?_sprintf+1
  1002  001ABA                     
  1003                           ; BSR set to: 0
  1004  001ABA  0012               	return		;funcret
  1005  001ABC  FFFF               	dw	65535	; errata NOP
  1006  001ABE                     __end_of_sprintf:
  1007                           	opt callstack 0
  1008                           
  1009 ;; *************** function _vfprintf *****************
  1010 ;; Defined at:
  1011 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  fp              2   86[BANK0 ] PTR struct _IO_FILE
  1014 ;;		 -> sprintf@f(6), 
  1015 ;;  fmt             2   88[BANK0 ] PTR const unsigned char 
  1016 ;;		 -> STR_2(14), 
  1017 ;;  ap              2   90[BANK0 ] PTR PTR void 
  1018 ;;		 -> sprintf@ap(2), 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  cfmt            2   92[BANK0 ] PTR unsigned char 
  1021 ;;		 -> STR_2(14), 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  2   86[BANK0 ] int 
  1024 ;; Registers used:
  1025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  1031 ;;      Params:         0       6       0       0       0       0       0
  1032 ;;      Locals:         0       2       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0
  1034 ;;      Totals:         0       8       0       0       0       0       0
  1035 ;;Total ram usage:        8 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    8
  1038 ;; This function calls:
  1039 ;;		_vfpfcnvrt
  1040 ;; This function is called by:
  1041 ;;		_sprintf
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046  00187E                     __ptext2:
  1047                           	opt callstack 0
  1048  00187E                     _vfprintf:
  1049                           	opt callstack 0
  1050  00187E  FFFF               	dw	65535	; assembler added errata NOP
  1051  001880                     
  1052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1053  001880  C0B8  F0BC         	movff	vfprintf@fmt,vfprintf@cfmt
  1054  001884  C0B9  F0BD         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1055  001888                     
  1056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1057  001888  0E00               	movlw	0
  1058  00188A  0100               	movlb	0	; force () banked
  1059  00188C  6FE7               	movwf	(_nout+1)& (0+255),b
  1060  00188E  0E00               	movlw	0
  1061  001890  6FE6               	movwf	_nout& (0+255),b
  1062                           
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1064  001892  EF63  F00C         	goto	l2209
  1065  001896                     l2207:
  1066  001896  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1070  001898  C0B6  F0A6         	movff	vfprintf@fp,vfpfcnvrt@fp
  1071  00189C  C0B7  F0A7         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1072  0018A0  0EBC               	movlw	low vfprintf@cfmt
  1073  0018A2  0100               	movlb	0	; force () banked
  1074  0018A4  6FA8               	movwf	vfpfcnvrt@fmt& (0+255),b
  1075  0018A6  0E00               	movlw	high vfprintf@cfmt
  1076  0018A8  6FA9               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1077  0018AA  C0BA  F0AA         	movff	vfprintf@ap,vfpfcnvrt@ap
  1078  0018AE  C0BB  F0AB         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1079  0018B2  ECD2  F004         	call	_vfpfcnvrt	;wreg free
  1080  0018B6  0100               	movlb	0	; force () banked
  1081  0018B8  51A6               	movf	?_vfpfcnvrt& (0+255),w,b
  1082  0018BA  0100               	movlb	0	; force () banked
  1083  0018BC  27E6               	addwf	_nout& (0+255),f,b
  1084  0018BE  0100               	movlb	0	; force () banked
  1085  0018C0  51A7               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1086  0018C2  0100               	movlb	0	; force () banked
  1087  0018C4  23E7               	addwfc	(_nout+1)& (0+255),f,b
  1088  0018C6                     l2209:
  1089  0018C6  FFFF               	dw	65535	; assembler added errata NOP
  1090                           
  1091                           ; BSR set to: 0
  1092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1093  0018C8  C0BC  FFF6         	movff	vfprintf@cfmt,tblptrl
  1094  0018CC  C0BD  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1095  0018D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1096  0018D0  6AF8               	clrf	tblptru,c
  1097  0018D2                     	endif
  1098  0018D2                     	if	0	;tblptru may be non-zero
  1099  0018D2                     	endif
  1100  0018D2  0008               	tblrd		*
  1101  0018D4  FFFF               	dw	65535	; errata NOP
  1102  0018D6  50F5               	movf	tablat,w,c
  1103  0018D8  0900               	iorlw	0
  1104  0018DA  A4D8               	btfss	status,2,c
  1105  0018DC  EF72  F00C         	goto	u1261
  1106  0018E0  EF75  F00C         	goto	u1260
  1107  0018E4                     u1261:
  1108  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  1109  0018E6  EF4B  F00C         	goto	l2207
  1110  0018EA                     u1260:
  1111  0018EA  FFFF               	dw	65535	; assembler added errata NOP
  1112  0018EC                     
  1113                           ; BSR set to: 0
  1114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1115  0018EC  C0E6  F0B6         	movff	_nout,?_vfprintf
  1116  0018F0  C0E7  F0B7         	movff	_nout+1,?_vfprintf+1
  1117  0018F4                     
  1118                           ; BSR set to: 0
  1119  0018F4  0012               	return		;funcret
  1120  0018F6  FFFF               	dw	65535	; errata NOP
  1121  0018F8                     __end_of_vfprintf:
  1122                           	opt callstack 0
  1123                           
  1124 ;; *************** function _vfpfcnvrt *****************
  1125 ;; Defined at:
  1126 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  fp              2   70[BANK0 ] PTR struct _IO_FILE
  1129 ;;		 -> sprintf@f(6), 
  1130 ;;  fmt             2   72[BANK0 ] PTR PTR unsigned char 
  1131 ;;		 -> vfprintf@cfmt(2), 
  1132 ;;  ap              2   74[BANK0 ] PTR PTR void 
  1133 ;;		 -> sprintf@ap(2), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  ll              8   78[BANK0 ] long long 
  1136 ;;  llu             8    0        unsigned long long 
  1137 ;;  f               4    0        unsigned long long 
  1138 ;;  vp              3    0        PTR void 
  1139 ;;  ct              3    0        unsigned char [3]
  1140 ;;  cp              3    0        PTR unsigned char 
  1141 ;;  i               2    0        int 
  1142 ;;  done            2    0        int 
  1143 ;;  c               1    0        unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   70[BANK0 ] int 
  1146 ;; Registers used:
  1147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  1153 ;;      Params:         0       6       0       0       0       0       0
  1154 ;;      Locals:         0       8       0       0       0       0       0
  1155 ;;      Temps:          0       2       0       0       0       0       0
  1156 ;;      Totals:         0      16       0       0       0       0       0
  1157 ;;Total ram usage:       16 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    7
  1160 ;; This function calls:
  1161 ;;		_dtoa
  1162 ;;		_fputc
  1163 ;; This function is called by:
  1164 ;;		_vfprintf
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text3
  1169  0009A4                     __ptext3:
  1170                           	opt callstack 0
  1171  0009A4                     _vfpfcnvrt:
  1172                           	opt callstack 0
  1173  0009A4  FFFF               	dw	65535	; assembler added errata NOP
  1174  0009A6                     
  1175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1176  0009A6  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1177  0009AA  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1178  0009AE  CFDE FFF6          	movff	postinc2,tblptrl
  1179  0009B2  CFDD FFF7          	movff	postdec2,tblptrh
  1180  0009B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1181  0009B6  6AF8               	clrf	tblptru,c
  1182  0009B8                     	endif
  1183  0009B8                     	if	0	;tblptru may be non-zero
  1184  0009B8                     	endif
  1185  0009B8  0008               	tblrd		*
  1186  0009BA  FFFF               	dw	65535	; errata NOP
  1187  0009BC  50F5               	movf	tablat,w,c
  1188  0009BE  0A25               	xorlw	37
  1189  0009C0  A4D8               	btfss	status,2,c
  1190  0009C2  EFE5  F004         	goto	u1171
  1191  0009C6  EFE8  F004         	goto	u1170
  1192  0009CA                     u1171:
  1193  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  1194  0009CC  EFA8  F005         	goto	l2093
  1195  0009D0                     u1170:
  1196  0009D0  FFFF               	dw	65535	; assembler added errata NOP
  1197  0009D2                     
  1198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1199  0009D2  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1200  0009D6  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1201  0009DA  2ADE               	incf	postinc2,f,c
  1202  0009DC  0E00               	movlw	0
  1203  0009DE  22DD               	addwfc	postdec2,f,c
  1204  0009E0                     
  1205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1206  0009E0  0E00               	movlw	0
  1207  0009E2  0100               	movlb	0	; force () banked
  1208  0009E4  6FE9               	movwf	(_width+1)& (0+255),b
  1209  0009E6  0E00               	movlw	0
  1210  0009E8  6FE8               	movwf	_width& (0+255),b
  1211  0009EA  C0E8  F0EC         	movff	_width,_flags
  1212  0009EE  C0E9  F0ED         	movff	_width+1,_flags+1
  1213  0009F2                     
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1216  0009F2  0100               	movlb	0	; force () banked
  1217  0009F4  69EA               	setf	_prec& (0+255),b
  1218  0009F6  69EB               	setf	(_prec+1)& (0+255),b
  1219  0009F8                     
  1220                           ; BSR set to: 0
  1221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1222  0009F8  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1223  0009FC  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1224  000A00  CFDE FFF6          	movff	postinc2,tblptrl
  1225  000A04  CFDD FFF7          	movff	postdec2,tblptrh
  1226  000A08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1227  000A08  6AF8               	clrf	tblptru,c
  1228  000A0A                     	endif
  1229  000A0A                     	if	0	;tblptru may be non-zero
  1230  000A0A                     	endif
  1231  000A0A  0008               	tblrd		*
  1232  000A0C  FFFF               	dw	65535	; errata NOP
  1233  000A0E  50F5               	movf	tablat,w,c
  1234  000A10  0A64               	xorlw	100
  1235  000A12  B4D8               	btfsc	status,2,c
  1236  000A14  EF0E  F005         	goto	u1181
  1237  000A18  EF11  F005         	goto	u1180
  1238  000A1C                     u1181:
  1239  000A1C  FFFF               	dw	65535	; assembler added errata NOP
  1240  000A1E  EF27  F005         	goto	l2071
  1241  000A22                     u1180:
  1242  000A22  FFFF               	dw	65535	; assembler added errata NOP
  1243  000A24                     
  1244                           ; BSR set to: 0
  1245  000A24  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1246  000A28  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1247  000A2C  CFDE FFF6          	movff	postinc2,tblptrl
  1248  000A30  CFDD FFF7          	movff	postdec2,tblptrh
  1249  000A34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1250  000A34  6AF8               	clrf	tblptru,c
  1251  000A36                     	endif
  1252  000A36                     	if	0	;tblptru may be non-zero
  1253  000A36                     	endif
  1254  000A36  0008               	tblrd		*
  1255  000A38  FFFF               	dw	65535	; errata NOP
  1256  000A3A  50F5               	movf	tablat,w,c
  1257  000A3C  0A69               	xorlw	105
  1258  000A3E  A4D8               	btfss	status,2,c
  1259  000A40  EF24  F005         	goto	u1191
  1260  000A44  EF27  F005         	goto	u1190
  1261  000A48                     u1191:
  1262  000A48  FFFF               	dw	65535	; assembler added errata NOP
  1263  000A4A  EF69  F005         	goto	l2077
  1264  000A4E                     u1190:
  1265  000A4E                     l2071:
  1266  000A4E  FFFF               	dw	65535	; assembler added errata NOP
  1267                           
  1268                           ; BSR set to: 0
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  1270  000A50  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1271  000A54  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1272  000A58  2ADE               	incf	postinc2,f,c
  1273  000A5A  0E00               	movlw	0
  1274  000A5C  22DD               	addwfc	postdec2,f,c
  1275                           
  1276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1277  000A5E  C0AA  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1278  000A62  C0AB  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1279  000A66  CFDF F0AC          	movff	indf2,??_vfpfcnvrt
  1280  000A6A  0E02               	movlw	2
  1281  000A6C  26DE               	addwf	postinc2,f,c
  1282  000A6E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt+1
  1283  000A72  0E00               	movlw	0
  1284  000A74  22DD               	addwfc	postdec2,f,c
  1285  000A76  C0AC  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1286  000A7A  C0AD  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1287  000A7E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@ll
  1288  000A82  CFDD F0AF          	movff	postdec2,vfpfcnvrt@ll+1
  1289  000A86  0100               	movlb	0	; force () banked
  1290  000A88  0E00               	movlw	0
  1291  000A8A  BFAF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1292  000A8C  0EFF               	movlw	-1
  1293  000A8E  6FB0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1294  000A90  6FB1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1295  000A92  6FB2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1296  000A94  6FB3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1297  000A96  6FB4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1298  000A98  6FB5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1299  000A9A                     
  1300                           ; BSR set to: 0
  1301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  1302  000A9A  C0A6  F082         	movff	vfpfcnvrt@fp,dtoa@fp
  1303  000A9E  C0A7  F083         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1304  000AA2  C0AE  F084         	movff	vfpfcnvrt@ll,dtoa@d
  1305  000AA6  C0AF  F085         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1306  000AAA  C0B0  F086         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1307  000AAE  C0B1  F087         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1308  000AB2  C0B2  F088         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1309  000AB6  C0B3  F089         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1310  000ABA  C0B4  F08A         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1311  000ABE  C0B5  F08B         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1312  000AC2  EC12  F003         	call	_dtoa	;wreg free
  1313  000AC6  C082  F0A6         	movff	?_dtoa,?_vfpfcnvrt
  1314  000ACA  C083  F0A7         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1315  000ACE  EFCA  F005         	goto	l289
  1316  000AD2                     l2077:
  1317  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1321  000AD4  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1322  000AD8  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1323  000ADC  CFDE FFF6          	movff	postinc2,tblptrl
  1324  000AE0  CFDD FFF7          	movff	postdec2,tblptrh
  1325  000AE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1326  000AE4  6AF8               	clrf	tblptru,c
  1327  000AE6                     	endif
  1328  000AE6                     	if	0	;tblptru may be non-zero
  1329  000AE6                     	endif
  1330  000AE6  0008               	tblrd		*
  1331  000AE8  FFFF               	dw	65535	; errata NOP
  1332  000AEA  50F5               	movf	tablat,w,c
  1333  000AEC  0A25               	xorlw	37
  1334  000AEE  A4D8               	btfss	status,2,c
  1335  000AF0  EF7C  F005         	goto	u1201
  1336  000AF4  EF7F  F005         	goto	u1200
  1337  000AF8                     u1201:
  1338  000AF8  FFFF               	dw	65535	; assembler added errata NOP
  1339  000AFA  EF99  F005         	goto	l2087
  1340  000AFE                     u1200:
  1341  000AFE  FFFF               	dw	65535	; assembler added errata NOP
  1342  000B00                     
  1343                           ; BSR set to: 0
  1344                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1345  000B00  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1346  000B04  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1347  000B08  2ADE               	incf	postinc2,f,c
  1348  000B0A  0E00               	movlw	0
  1349  000B0C  22DD               	addwfc	postdec2,f,c
  1350  000B0E                     
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1353  000B0E  0E00               	movlw	0
  1354  000B10  0100               	movlb	0	; force () banked
  1355  000B12  6F68               	movwf	(fputc@c+1)& (0+255),b
  1356  000B14  0E25               	movlw	37
  1357  000B16  6F67               	movwf	fputc@c& (0+255),b
  1358  000B18  C0A6  F069         	movff	vfpfcnvrt@fp,fputc@fp
  1359  000B1C  C0A7  F06A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1360  000B20  ECE8  F009         	call	_fputc	;wreg free
  1361  000B24                     
  1362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1363  000B24  0E00               	movlw	0
  1364  000B26  0100               	movlb	0	; force () banked
  1365  000B28  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1366  000B2A  0E01               	movlw	1
  1367  000B2C  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1368  000B2E  EFCA  F005         	goto	l289
  1369  000B32                     l2087:
  1370  000B32  FFFF               	dw	65535	; assembler added errata NOP
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1374  000B34  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1375  000B38  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1376  000B3C  2ADE               	incf	postinc2,f,c
  1377  000B3E  0E00               	movlw	0
  1378  000B40  22DD               	addwfc	postdec2,f,c
  1379  000B42                     
  1380                           ; BSR set to: 0
  1381                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1382  000B42  0E00               	movlw	0
  1383  000B44  0100               	movlb	0	; force () banked
  1384  000B46  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1385  000B48  0E00               	movlw	0
  1386  000B4A  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1387  000B4C  EFCA  F005         	goto	l289
  1388  000B50                     l2093:
  1389  000B50  FFFF               	dw	65535	; assembler added errata NOP
  1390                           
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1392  000B52  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  000B56  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  000B5A  CFDE FFF6          	movff	postinc2,tblptrl
  1395  000B5E  CFDD FFF7          	movff	postdec2,tblptrh
  1396  000B62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1397  000B62  6AF8               	clrf	tblptru,c
  1398  000B64                     	endif
  1399  000B64                     	if	0	;tblptru may be non-zero
  1400  000B64                     	endif
  1401  000B64  0008               	tblrd		*
  1402  000B66  FFFF               	dw	65535	; errata NOP
  1403  000B68  50F5               	movf	tablat,w,c
  1404  000B6A  0100               	movlb	0	; force () banked
  1405  000B6C  6F67               	movwf	fputc@c& (0+255),b
  1406  000B6E  6B68               	clrf	(fputc@c+1)& (0+255),b
  1407  000B70  C0A6  F069         	movff	vfpfcnvrt@fp,fputc@fp
  1408  000B74  C0A7  F06A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1409  000B78  ECE8  F009         	call	_fputc	;wreg free
  1410  000B7C                     
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1412  000B7C  C0A8  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  000B80  C0A9  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  000B84  2ADE               	incf	postinc2,f,c
  1415  000B86  0E00               	movlw	0
  1416  000B88  22DD               	addwfc	postdec2,f,c
  1417  000B8A                     
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1364:     r
      +                          eturn 1;
  1419  000B8A  0E00               	movlw	0
  1420  000B8C  0100               	movlb	0	; force () banked
  1421  000B8E  6FA7               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  1422  000B90  0E01               	movlw	1
  1423  000B92  6FA6               	movwf	?_vfpfcnvrt& (0+255),b
  1424  000B94                     l289:
  1425  000B94  FFFF               	dw	65535	; assembler added errata NOP
  1426  000B96  0012               	return		;funcret
  1427  000B98  FFFF               	dw	65535	; errata NOP
  1428  000B9A                     __end_of_vfpfcnvrt:
  1429                           	opt callstack 0
  1430                           
  1431 ;; *************** function _dtoa *****************
  1432 ;; Defined at:
  1433 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  1436 ;;		 -> sprintf@f(6), 
  1437 ;;  d               8   36[BANK0 ] long long 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  n               8   60[BANK0 ] long long 
  1440 ;;  i               2   68[BANK0 ] int 
  1441 ;;  s               2   58[BANK0 ] int 
  1442 ;;  w               2   56[BANK0 ] int 
  1443 ;;  p               2   54[BANK0 ] int 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   34[BANK0 ] int 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  1453 ;;      Params:         0      10       0       0       0       0       0
  1454 ;;      Locals:         0      18       0       0       0       0       0
  1455 ;;      Temps:          0       8       0       0       0       0       0
  1456 ;;      Totals:         0      36       0       0       0       0       0
  1457 ;;Total ram usage:       36 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    6
  1460 ;; This function calls:
  1461 ;;		___aodiv
  1462 ;;		___aomod
  1463 ;;		_abs
  1464 ;;		_pad
  1465 ;; This function is called by:
  1466 ;;		_vfpfcnvrt
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text4
  1471  000624                     __ptext4:
  1472                           	opt callstack 0
  1473  000624                     _dtoa:
  1474                           	opt callstack 0
  1475  000624  FFFF               	dw	65535	; assembler added errata NOP
  1476  000626                     
  1477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  1478  000626  C084  F09C         	movff	dtoa@d,dtoa@n
  1479  00062A  C085  F09D         	movff	dtoa@d+1,dtoa@n+1
  1480  00062E  C086  F09E         	movff	dtoa@d+2,dtoa@n+2
  1481  000632  C087  F09F         	movff	dtoa@d+3,dtoa@n+3
  1482  000636  C088  F0A0         	movff	dtoa@d+4,dtoa@n+4
  1483  00063A  C089  F0A1         	movff	dtoa@d+5,dtoa@n+5
  1484  00063E  C08A  F0A2         	movff	dtoa@d+6,dtoa@n+6
  1485  000642  C08B  F0A3         	movff	dtoa@d+7,dtoa@n+7
  1486  000646                     
  1487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  1488  000646  0100               	movlb	0	; force () banked
  1489  000648  BFA3               	btfsc	(dtoa@n+7)& (0+255),7,b
  1490  00064A  EF29  F003         	goto	u1021
  1491  00064E  EF2D  F003         	goto	u1020
  1492  000652                     u1021:
  1493  000652  FFFF               	dw	65535	; assembler added errata NOP
  1494  000654  0E01               	movlw	1
  1495  000656  EF2F  F003         	goto	u1030
  1496  00065A                     u1020:
  1497  00065A  FFFF               	dw	65535	; assembler added errata NOP
  1498  00065C  0E00               	movlw	0
  1499  00065E                     u1030:
  1500  00065E  FFFF               	dw	65535	; assembler added errata NOP
  1501  000660  0100               	movlb	0	; force () banked
  1502  000662  6F9A               	movwf	dtoa@s& (0+255),b
  1503  000664  6B9B               	clrf	(dtoa@s+1)& (0+255),b
  1504                           
  1505                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  1506  000666  519A               	movf	dtoa@s& (0+255),w,b
  1507  000668  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1508  00066A  B4D8               	btfsc	status,2,c
  1509  00066C  EF3A  F003         	goto	u1041
  1510  000670  EF3D  F003         	goto	u1040
  1511  000674                     u1041:
  1512  000674  FFFF               	dw	65535	; assembler added errata NOP
  1513  000676  EF4F  F003         	goto	l1973
  1514  00067A                     u1040:
  1515  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1516  00067C                     
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  1519  00067C  0100               	movlb	0	; force () banked
  1520  00067E  1FA3               	comf	(dtoa@n+7)& (0+255),f,b
  1521  000680  1FA2               	comf	(dtoa@n+6)& (0+255),f,b
  1522  000682  1FA1               	comf	(dtoa@n+5)& (0+255),f,b
  1523  000684  1FA0               	comf	(dtoa@n+4)& (0+255),f,b
  1524  000686  1F9F               	comf	(dtoa@n+3)& (0+255),f,b
  1525  000688  1F9E               	comf	(dtoa@n+2)& (0+255),f,b
  1526  00068A  1F9D               	comf	(dtoa@n+1)& (0+255),f,b
  1527  00068C  6D9C               	negf	dtoa@n& (0+255),b
  1528  00068E  0E00               	movlw	0
  1529  000690  239D               	addwfc	(dtoa@n+1)& (0+255),f,b
  1530  000692  239E               	addwfc	(dtoa@n+2)& (0+255),f,b
  1531  000694  239F               	addwfc	(dtoa@n+3)& (0+255),f,b
  1532  000696  23A0               	addwfc	(dtoa@n+4)& (0+255),f,b
  1533  000698  23A1               	addwfc	(dtoa@n+5)& (0+255),f,b
  1534  00069A  23A2               	addwfc	(dtoa@n+6)& (0+255),f,b
  1535  00069C  23A3               	addwfc	(dtoa@n+7)& (0+255),f,b
  1536  00069E                     l1973:
  1537  00069E  FFFF               	dw	65535	; assembler added errata NOP
  1538                           
  1539                           ; BSR set to: 0
  1540                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  1541  0006A0  0100               	movlb	0	; force () banked
  1542  0006A2  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  1543  0006A4  EF56  F003         	goto	u1051
  1544  0006A8  EF59  F003         	goto	u1050
  1545  0006AC                     u1051:
  1546  0006AC  FFFF               	dw	65535	; assembler added errata NOP
  1547  0006AE  EF5C  F003         	goto	l1977
  1548  0006B2                     u1050:
  1549  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  1550  0006B4                     
  1551                           ; BSR set to: 0
  1552                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  1553  0006B4  0100               	movlb	0	; force () banked
  1554  0006B6  93EC               	bcf	_flags& (0+255),1,b
  1555  0006B8                     l1977:
  1556  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  1560  0006BA  0100               	movlb	0	; force () banked
  1561  0006BC  BFEB               	btfsc	(_prec+1)& (0+255),7,b
  1562  0006BE  EF6C  F003         	goto	u1060
  1563  0006C2  51EB               	movf	(_prec+1)& (0+255),w,b
  1564  0006C4  E106               	bnz	u1061
  1565  0006C6  05EA               	decf	_prec& (0+255),w,b
  1566  0006C8  B0D8               	btfsc	status,0,c
  1567  0006CA  EF69  F003         	goto	u1061
  1568  0006CE  EF6C  F003         	goto	u1060
  1569  0006D2                     u1061:
  1570  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  1571  0006D4  EF74  F003         	goto	l262
  1572  0006D8                     u1060:
  1573  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1574  0006DA                     
  1575                           ; BSR set to: 0
  1576  0006DA  0E00               	movlw	0
  1577  0006DC  0100               	movlb	0	; force () banked
  1578  0006DE  6F97               	movwf	(dtoa@p+1)& (0+255),b
  1579  0006E0  0E01               	movlw	1
  1580  0006E2  6F96               	movwf	dtoa@p& (0+255),b
  1581  0006E4  EF79  F003         	goto	l264
  1582  0006E8                     l262:
  1583  0006E8  FFFF               	dw	65535	; assembler added errata NOP
  1584                           
  1585                           ; BSR set to: 0
  1586  0006EA  C0EA  F096         	movff	_prec,dtoa@p
  1587  0006EE  C0EB  F097         	movff	_prec+1,dtoa@p+1
  1588  0006F2                     l264:
  1589  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  1593  0006F4  C0E8  F098         	movff	_width,dtoa@w
  1594  0006F8  C0E9  F099         	movff	_width+1,dtoa@w+1
  1595  0006FC                     
  1596                           ; BSR set to: 0
  1597                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  1598  0006FC  0100               	movlb	0	; force () banked
  1599  0006FE  519A               	movf	dtoa@s& (0+255),w,b
  1600  000700  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1601  000702  A4D8               	btfss	status,2,c
  1602  000704  EF86  F003         	goto	u1071
  1603  000708  EF89  F003         	goto	u1070
  1604  00070C                     u1071:
  1605  00070C  FFFF               	dw	65535	; assembler added errata NOP
  1606  00070E  EF93  F003         	goto	l1985
  1607  000712                     u1070:
  1608  000712  FFFF               	dw	65535	; assembler added errata NOP
  1609  000714                     
  1610                           ; BSR set to: 0
  1611  000714  0100               	movlb	0	; force () banked
  1612  000716  A5EC               	btfss	_flags& (0+255),2,b
  1613  000718  EF90  F003         	goto	u1081
  1614  00071C  EF93  F003         	goto	u1080
  1615  000720                     u1081:
  1616  000720  FFFF               	dw	65535	; assembler added errata NOP
  1617  000722  EF98  F003         	goto	l1987
  1618  000726                     u1080:
  1619  000726                     l1985:
  1620  000726  FFFF               	dw	65535	; assembler added errata NOP
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  1624  000728  0100               	movlb	0	; force () banked
  1625  00072A  0798               	decf	dtoa@w& (0+255),f,b
  1626  00072C  A0D8               	btfss	status,0,c
  1627  00072E  0799               	decf	(dtoa@w+1)& (0+255),f,b
  1628  000730                     l1987:
  1629  000730  FFFF               	dw	65535	; assembler added errata NOP
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  1633  000732  0E00               	movlw	0
  1634  000734  0100               	movlb	0	; force () banked
  1635  000736  6FA5               	movwf	(dtoa@i+1)& (0+255),b
  1636  000738  0E1F               	movlw	31
  1637  00073A  6FA4               	movwf	dtoa@i& (0+255),b
  1638  00073C                     
  1639                           ; BSR set to: 0
  1640                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  1641  00073C  0E54               	movlw	low _dbuf
  1642  00073E  0100               	movlb	0	; force () banked
  1643  000740  25A4               	addwf	dtoa@i& (0+255),w,b
  1644  000742  6ED9               	movwf	fsr2l,c
  1645  000744  0E01               	movlw	high _dbuf
  1646  000746  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1647  000748  6EDA               	movwf	fsr2h,c
  1648  00074A  0E00               	movlw	0
  1649  00074C  6EDF               	movwf	indf2,c
  1650                           
  1651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1652  00074E  EF2D  F004         	goto	l2001
  1653  000752                     l1991:
  1654  000752  FFFF               	dw	65535	; assembler added errata NOP
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  1658  000754  0100               	movlb	0	; force () banked
  1659  000756  07A4               	decf	dtoa@i& (0+255),f,b
  1660  000758  A0D8               	btfss	status,0,c
  1661  00075A  07A5               	decf	(dtoa@i+1)& (0+255),f,b
  1662  00075C                     
  1663                           ; BSR set to: 0
  1664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  1665  00075C  0E54               	movlw	low _dbuf
  1666  00075E  0100               	movlb	0	; force () banked
  1667  000760  25A4               	addwf	dtoa@i& (0+255),w,b
  1668  000762  6ED9               	movwf	fsr2l,c
  1669  000764  0E01               	movlw	high _dbuf
  1670  000766  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1671  000768  6EDA               	movwf	fsr2h,c
  1672  00076A  C09C  F067         	movff	dtoa@n,___aomod@dividend
  1673  00076E  C09D  F068         	movff	dtoa@n+1,___aomod@dividend+1
  1674  000772  C09E  F069         	movff	dtoa@n+2,___aomod@dividend+2
  1675  000776  C09F  F06A         	movff	dtoa@n+3,___aomod@dividend+3
  1676  00077A  C0A0  F06B         	movff	dtoa@n+4,___aomod@dividend+4
  1677  00077E  C0A1  F06C         	movff	dtoa@n+5,___aomod@dividend+5
  1678  000782  C0A2  F06D         	movff	dtoa@n+6,___aomod@dividend+6
  1679  000786  C0A3  F06E         	movff	dtoa@n+7,___aomod@dividend+7
  1680  00078A  0E0A               	movlw	10
  1681  00078C  0100               	movlb	0	; force () banked
  1682  00078E  6F6F               	movwf	___aomod@divisor& (0+255),b
  1683  000790  0E00               	movlw	0
  1684  000792  6F70               	movwf	(___aomod@divisor+1)& (0+255),b
  1685  000794  0E00               	movlw	0
  1686  000796  6F71               	movwf	(___aomod@divisor+2)& (0+255),b
  1687  000798  0E00               	movlw	0
  1688  00079A  6F72               	movwf	(___aomod@divisor+3)& (0+255),b
  1689  00079C  0E00               	movlw	0
  1690  00079E  6F73               	movwf	(___aomod@divisor+4)& (0+255),b
  1691  0007A0  0E00               	movlw	0
  1692  0007A2  6F74               	movwf	(___aomod@divisor+5)& (0+255),b
  1693  0007A4  0E00               	movlw	0
  1694  0007A6  6F75               	movwf	(___aomod@divisor+6)& (0+255),b
  1695  0007A8  0E00               	movlw	0
  1696  0007AA  6F76               	movwf	(___aomod@divisor+7)& (0+255),b
  1697  0007AC  ECA8  F006         	call	___aomod	;wreg free
  1698  0007B0  C067  F08C         	movff	?___aomod,??_dtoa
  1699  0007B4  C068  F08D         	movff	?___aomod+1,??_dtoa+1
  1700  0007B8  C069  F08E         	movff	?___aomod+2,??_dtoa+2
  1701  0007BC  C06A  F08F         	movff	?___aomod+3,??_dtoa+3
  1702  0007C0  C06B  F090         	movff	?___aomod+4,??_dtoa+4
  1703  0007C4  C06C  F091         	movff	?___aomod+5,??_dtoa+5
  1704  0007C8  C06D  F092         	movff	?___aomod+6,??_dtoa+6
  1705  0007CC  C06E  F093         	movff	?___aomod+7,??_dtoa+7
  1706  0007D0  C08C  F079         	movff	??_dtoa,abs@a
  1707  0007D4  C08E  F07A         	movff	??_dtoa+2,abs@a+1
  1708  0007D8  ECE7  F00D         	call	_abs	;wreg free
  1709  0007DC  0100               	movlb	0	; force () banked
  1710  0007DE  5179               	movf	?_abs& (0+255),w,b
  1711  0007E0  0F30               	addlw	48
  1712  0007E2  6EDF               	movwf	indf2,c
  1713  0007E4                     
  1714                           ; BSR set to: 0
  1715                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  1716  0007E4  0100               	movlb	0	; force () banked
  1717  0007E6  0796               	decf	dtoa@p& (0+255),f,b
  1718  0007E8  A0D8               	btfss	status,0,c
  1719  0007EA  0797               	decf	(dtoa@p+1)& (0+255),f,b
  1720  0007EC                     
  1721                           ; BSR set to: 0
  1722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  1723  0007EC  0100               	movlb	0	; force () banked
  1724  0007EE  0798               	decf	dtoa@w& (0+255),f,b
  1725  0007F0  A0D8               	btfss	status,0,c
  1726  0007F2  0799               	decf	(dtoa@w+1)& (0+255),f,b
  1727  0007F4                     
  1728                           ; BSR set to: 0
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  1730  0007F4  C09C  F067         	movff	dtoa@n,___aodiv@dividend
  1731  0007F8  C09D  F068         	movff	dtoa@n+1,___aodiv@dividend+1
  1732  0007FC  C09E  F069         	movff	dtoa@n+2,___aodiv@dividend+2
  1733  000800  C09F  F06A         	movff	dtoa@n+3,___aodiv@dividend+3
  1734  000804  C0A0  F06B         	movff	dtoa@n+4,___aodiv@dividend+4
  1735  000808  C0A1  F06C         	movff	dtoa@n+5,___aodiv@dividend+5
  1736  00080C  C0A2  F06D         	movff	dtoa@n+6,___aodiv@dividend+6
  1737  000810  C0A3  F06E         	movff	dtoa@n+7,___aodiv@dividend+7
  1738  000814  0E0A               	movlw	10
  1739  000816  0100               	movlb	0	; force () banked
  1740  000818  6F6F               	movwf	___aodiv@divisor& (0+255),b
  1741  00081A  0E00               	movlw	0
  1742  00081C  6F70               	movwf	(___aodiv@divisor+1)& (0+255),b
  1743  00081E  0E00               	movlw	0
  1744  000820  6F71               	movwf	(___aodiv@divisor+2)& (0+255),b
  1745  000822  0E00               	movlw	0
  1746  000824  6F72               	movwf	(___aodiv@divisor+3)& (0+255),b
  1747  000826  0E00               	movlw	0
  1748  000828  6F73               	movwf	(___aodiv@divisor+4)& (0+255),b
  1749  00082A  0E00               	movlw	0
  1750  00082C  6F74               	movwf	(___aodiv@divisor+5)& (0+255),b
  1751  00082E  0E00               	movlw	0
  1752  000830  6F75               	movwf	(___aodiv@divisor+6)& (0+255),b
  1753  000832  0E00               	movlw	0
  1754  000834  6F76               	movwf	(___aodiv@divisor+7)& (0+255),b
  1755  000836  ECCD  F005         	call	___aodiv	;wreg free
  1756  00083A  C067  F09C         	movff	?___aodiv,dtoa@n
  1757  00083E  C068  F09D         	movff	?___aodiv+1,dtoa@n+1
  1758  000842  C069  F09E         	movff	?___aodiv+2,dtoa@n+2
  1759  000846  C06A  F09F         	movff	?___aodiv+3,dtoa@n+3
  1760  00084A  C06B  F0A0         	movff	?___aodiv+4,dtoa@n+4
  1761  00084E  C06C  F0A1         	movff	?___aodiv+5,dtoa@n+5
  1762  000852  C06D  F0A2         	movff	?___aodiv+6,dtoa@n+6
  1763  000856  C06E  F0A3         	movff	?___aodiv+7,dtoa@n+7
  1764  00085A                     l2001:
  1765  00085A  FFFF               	dw	65535	; assembler added errata NOP
  1766                           
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1768  00085C  0100               	movlb	0	; force () banked
  1769  00085E  BFA5               	btfsc	(dtoa@i+1)& (0+255),7,b
  1770  000860  EF3A  F004         	goto	u1091
  1771  000864  51A5               	movf	(dtoa@i+1)& (0+255),w,b
  1772  000866  E109               	bnz	u1090
  1773  000868  05A4               	decf	dtoa@i& (0+255),w,b
  1774  00086A  A0D8               	btfss	status,0,c
  1775  00086C  EF3A  F004         	goto	u1091
  1776  000870  EF3D  F004         	goto	u1090
  1777  000874                     u1091:
  1778  000874  FFFF               	dw	65535	; assembler added errata NOP
  1779  000876  EF79  F004         	goto	l2011
  1780  00087A                     u1090:
  1781  00087A  FFFF               	dw	65535	; assembler added errata NOP
  1782  00087C                     
  1783                           ; BSR set to: 0
  1784  00087C  0100               	movlb	0	; force () banked
  1785  00087E  519C               	movf	dtoa@n& (0+255),w,b
  1786  000880  119D               	iorwf	(dtoa@n+1)& (0+255),w,b
  1787  000882  119E               	iorwf	(dtoa@n+2)& (0+255),w,b
  1788  000884  119F               	iorwf	(dtoa@n+3)& (0+255),w,b
  1789  000886  11A0               	iorwf	(dtoa@n+4)& (0+255),w,b
  1790  000888  11A1               	iorwf	(dtoa@n+5)& (0+255),w,b
  1791  00088A  11A2               	iorwf	(dtoa@n+6)& (0+255),w,b
  1792  00088C  11A3               	iorwf	(dtoa@n+7)& (0+255),w,b
  1793  00088E  A4D8               	btfss	status,2,c
  1794  000890  EF4C  F004         	goto	u1101
  1795  000894  EF4F  F004         	goto	u1100
  1796  000898                     u1101:
  1797  000898  FFFF               	dw	65535	; assembler added errata NOP
  1798  00089A  EFA9  F003         	goto	l1991
  1799  00089E                     u1100:
  1800  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1801  0008A0                     
  1802                           ; BSR set to: 0
  1803  0008A0  0100               	movlb	0	; force () banked
  1804  0008A2  BF97               	btfsc	(dtoa@p+1)& (0+255),7,b
  1805  0008A4  EF5F  F004         	goto	u1110
  1806  0008A8  5197               	movf	(dtoa@p+1)& (0+255),w,b
  1807  0008AA  E106               	bnz	u1111
  1808  0008AC  0596               	decf	dtoa@p& (0+255),w,b
  1809  0008AE  B0D8               	btfsc	status,0,c
  1810  0008B0  EF5C  F004         	goto	u1111
  1811  0008B4  EF5F  F004         	goto	u1110
  1812  0008B8                     u1111:
  1813  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  1814  0008BA  EFA9  F003         	goto	l1991
  1815  0008BE                     u1110:
  1816  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  1817  0008C0                     
  1818                           ; BSR set to: 0
  1819  0008C0  0100               	movlb	0	; force () banked
  1820  0008C2  BF99               	btfsc	(dtoa@w+1)& (0+255),7,b
  1821  0008C4  EF6C  F004         	goto	u1121
  1822  0008C8  5199               	movf	(dtoa@w+1)& (0+255),w,b
  1823  0008CA  E109               	bnz	u1120
  1824  0008CC  0598               	decf	dtoa@w& (0+255),w,b
  1825  0008CE  A0D8               	btfss	status,0,c
  1826  0008D0  EF6C  F004         	goto	u1121
  1827  0008D4  EF6F  F004         	goto	u1120
  1828  0008D8                     u1121:
  1829  0008D8  FFFF               	dw	65535	; assembler added errata NOP
  1830  0008DA  EF79  F004         	goto	l2011
  1831  0008DE                     u1120:
  1832  0008DE  FFFF               	dw	65535	; assembler added errata NOP
  1833  0008E0                     
  1834                           ; BSR set to: 0
  1835  0008E0  0100               	movlb	0	; force () banked
  1836  0008E2  B3EC               	btfsc	_flags& (0+255),1,b
  1837  0008E4  EF76  F004         	goto	u1131
  1838  0008E8  EF79  F004         	goto	u1130
  1839  0008EC                     u1131:
  1840  0008EC  FFFF               	dw	65535	; assembler added errata NOP
  1841  0008EE  EFA9  F003         	goto	l1991
  1842  0008F2                     u1130:
  1843  0008F2                     l2011:
  1844  0008F2  FFFF               	dw	65535	; assembler added errata NOP
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  1848  0008F4  0100               	movlb	0	; force () banked
  1849  0008F6  519A               	movf	dtoa@s& (0+255),w,b
  1850  0008F8  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1851  0008FA  A4D8               	btfss	status,2,c
  1852  0008FC  EF82  F004         	goto	u1141
  1853  000900  EF85  F004         	goto	u1140
  1854  000904                     u1141:
  1855  000904  FFFF               	dw	65535	; assembler added errata NOP
  1856  000906  EF8F  F004         	goto	l2015
  1857  00090A                     u1140:
  1858  00090A  FFFF               	dw	65535	; assembler added errata NOP
  1859  00090C                     
  1860                           ; BSR set to: 0
  1861  00090C  0100               	movlb	0	; force () banked
  1862  00090E  A5EC               	btfss	_flags& (0+255),2,b
  1863  000910  EF8C  F004         	goto	u1151
  1864  000914  EF8F  F004         	goto	u1150
  1865  000918                     u1151:
  1866  000918  FFFF               	dw	65535	; assembler added errata NOP
  1867  00091A  EFB7  F004         	goto	l2025
  1868  00091E                     u1150:
  1869  00091E                     l2015:
  1870  00091E  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  1874  000920  0100               	movlb	0	; force () banked
  1875  000922  07A4               	decf	dtoa@i& (0+255),f,b
  1876  000924  A0D8               	btfss	status,0,c
  1877  000926  07A5               	decf	(dtoa@i+1)& (0+255),f,b
  1878  000928                     
  1879                           ; BSR set to: 0
  1880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  1881  000928  0100               	movlb	0	; force () banked
  1882  00092A  519A               	movf	dtoa@s& (0+255),w,b
  1883  00092C  119B               	iorwf	(dtoa@s+1)& (0+255),w,b
  1884  00092E  A4D8               	btfss	status,2,c
  1885  000930  EF9C  F004         	goto	u1161
  1886  000934  EF9F  F004         	goto	u1160
  1887  000938                     u1161:
  1888  000938  FFFF               	dw	65535	; assembler added errata NOP
  1889  00093A  EFA7  F004         	goto	l2021
  1890  00093E                     u1160:
  1891  00093E  FFFF               	dw	65535	; assembler added errata NOP
  1892  000940                     
  1893                           ; BSR set to: 0
  1894  000940  0E00               	movlw	0
  1895  000942  0100               	movlb	0	; force () banked
  1896  000944  6F95               	movwf	(_dtoa$1379+1)& (0+255),b
  1897  000946  0E2B               	movlw	43
  1898  000948  6F94               	movwf	_dtoa$1379& (0+255),b
  1899  00094A  EFAD  F004         	goto	l2023
  1900  00094E                     l2021:
  1901  00094E  FFFF               	dw	65535	; assembler added errata NOP
  1902                           
  1903                           ; BSR set to: 0
  1904  000950  0E00               	movlw	0
  1905  000952  0100               	movlb	0	; force () banked
  1906  000954  6F95               	movwf	(_dtoa$1379+1)& (0+255),b
  1907  000956  0E2D               	movlw	45
  1908  000958  6F94               	movwf	_dtoa$1379& (0+255),b
  1909  00095A                     l2023:
  1910  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1911                           
  1912                           ; BSR set to: 0
  1913  00095C  0E54               	movlw	low _dbuf
  1914  00095E  0100               	movlb	0	; force () banked
  1915  000960  25A4               	addwf	dtoa@i& (0+255),w,b
  1916  000962  6ED9               	movwf	fsr2l,c
  1917  000964  0E01               	movlw	high _dbuf
  1918  000966  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1919  000968  6EDA               	movwf	fsr2h,c
  1920  00096A  C094  FFDF         	movff	_dtoa$1379,indf2
  1921  00096E                     l2025:
  1922  00096E  FFFF               	dw	65535	; assembler added errata NOP
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  1926  000970  C082  F077         	movff	dtoa@fp,pad@fp
  1927  000974  C083  F078         	movff	dtoa@fp+1,pad@fp+1
  1928  000978  0E54               	movlw	low _dbuf
  1929  00097A  0100               	movlb	0	; force () banked
  1930  00097C  25A4               	addwf	dtoa@i& (0+255),w,b
  1931  00097E  0100               	movlb	0	; force () banked
  1932  000980  6F79               	movwf	pad@buf& (0+255),b
  1933  000982  0E01               	movlw	high _dbuf
  1934  000984  0100               	movlb	0	; force () banked
  1935  000986  21A5               	addwfc	(dtoa@i+1)& (0+255),w,b
  1936  000988  0100               	movlb	0	; force () banked
  1937  00098A  6F7A               	movwf	(pad@buf+1)& (0+255),b
  1938  00098C  C098  F07B         	movff	dtoa@w,pad@p
  1939  000990  C099  F07C         	movff	dtoa@w+1,pad@p+1
  1940  000994  ECEC  F008         	call	_pad	;wreg free
  1941  000998  C077  F082         	movff	?_pad,?_dtoa
  1942  00099C  C078  F083         	movff	?_pad+1,?_dtoa+1
  1943  0009A0  0012               	return		;funcret
  1944  0009A2  FFFF               	dw	65535	; errata NOP
  1945  0009A4                     __end_of_dtoa:
  1946                           	opt callstack 0
  1947                           
  1948 ;; *************** function _pad *****************
  1949 ;; Defined at:
  1950 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  1953 ;;		 -> sprintf@f(6), 
  1954 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1955 ;;		 -> dbuf(32), 
  1956 ;;  p               2   27[BANK0 ] int 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  w               2   32[BANK0 ] int 
  1959 ;;  i               2   30[BANK0 ] int 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  2   23[BANK0 ] int 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  1969 ;;      Params:         0       6       0       0       0       0       0
  1970 ;;      Locals:         0       4       0       0       0       0       0
  1971 ;;      Temps:          0       1       0       0       0       0       0
  1972 ;;      Totals:         0      11       0       0       0       0       0
  1973 ;;Total ram usage:       11 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    5
  1976 ;; This function calls:
  1977 ;;		_fputc
  1978 ;;		_fputs
  1979 ;;		_strlen
  1980 ;; This function is called by:
  1981 ;;		_dtoa
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text5
  1986  0011D8                     __ptext5:
  1987                           	opt callstack 0
  1988  0011D8                     _pad:
  1989                           	opt callstack 0
  1990  0011D8  FFFF               	dw	65535	; assembler added errata NOP
  1991  0011DA                     
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  1993  0011DA  0100               	movlb	0	; force () banked
  1994  0011DC  A1EC               	btfss	_flags& (0+255),0,b
  1995  0011DE  EFF3  F008         	goto	u821
  1996  0011E2  EFF6  F008         	goto	u820
  1997  0011E6                     u821:
  1998  0011E6  FFFF               	dw	65535	; assembler added errata NOP
  1999  0011E8  EF01  F009         	goto	l1829
  2000  0011EC                     u820:
  2001  0011EC  FFFF               	dw	65535	; assembler added errata NOP
  2002  0011EE                     
  2003                           ; BSR set to: 0
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2005  0011EE  C079  F070         	movff	pad@buf,fputs@s
  2006  0011F2  C07A  F071         	movff	pad@buf+1,fputs@s+1
  2007  0011F6  C077  F072         	movff	pad@fp,fputs@fp
  2008  0011FA  C078  F073         	movff	pad@fp+1,fputs@fp+1
  2009  0011FE  EC5F  F00D         	call	_fputs	;wreg free
  2010  001202                     l1829:
  2011  001202  FFFF               	dw	65535	; assembler added errata NOP
  2012                           
  2013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2014  001204  0100               	movlb	0	; force () banked
  2015  001206  BF7C               	btfsc	(pad@p+1)& (0+255),7,b
  2016  001208  EF08  F009         	goto	u831
  2017  00120C  EF0B  F009         	goto	u830
  2018  001210                     u831:
  2019  001210  FFFF               	dw	65535	; assembler added errata NOP
  2020  001212  EF12  F009         	goto	l1833
  2021  001216                     u830:
  2022  001216  FFFF               	dw	65535	; assembler added errata NOP
  2023  001218                     
  2024                           ; BSR set to: 0
  2025  001218  C07B  F080         	movff	pad@p,pad@w
  2026  00121C  C07C  F081         	movff	pad@p+1,pad@w+1
  2027  001220  EF18  F009         	goto	l251
  2028  001224                     l1833:
  2029  001224  FFFF               	dw	65535	; assembler added errata NOP
  2030                           
  2031                           ; BSR set to: 0
  2032  001226  0E00               	movlw	0
  2033  001228  0100               	movlb	0	; force () banked
  2034  00122A  6F81               	movwf	(pad@w+1)& (0+255),b
  2035  00122C  0E00               	movlw	0
  2036  00122E  6F80               	movwf	pad@w& (0+255),b
  2037  001230                     l251:
  2038  001230  FFFF               	dw	65535	; assembler added errata NOP
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2042  001232  0E00               	movlw	0
  2043  001234  0100               	movlb	0	; force () banked
  2044  001236  6F7F               	movwf	(pad@i+1)& (0+255),b
  2045  001238  0E00               	movlw	0
  2046  00123A  6F7E               	movwf	pad@i& (0+255),b
  2047                           
  2048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2049  00123C  EF2F  F009         	goto	l1839
  2050  001240                     l1835:
  2051  001240  FFFF               	dw	65535	; assembler added errata NOP
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2055  001242  0E00               	movlw	0
  2056  001244  0100               	movlb	0	; force () banked
  2057  001246  6F68               	movwf	(fputc@c+1)& (0+255),b
  2058  001248  0E20               	movlw	32
  2059  00124A  6F67               	movwf	fputc@c& (0+255),b
  2060  00124C  C077  F069         	movff	pad@fp,fputc@fp
  2061  001250  C078  F06A         	movff	pad@fp+1,fputc@fp+1
  2062  001254  ECE8  F009         	call	_fputc	;wreg free
  2063  001258                     
  2064                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2065  001258  0100               	movlb	0	; force () banked
  2066  00125A  4B7E               	infsnz	pad@i& (0+255),f,b
  2067  00125C  2B7F               	incf	(pad@i+1)& (0+255),f,b
  2068  00125E                     l1839:
  2069  00125E  FFFF               	dw	65535	; assembler added errata NOP
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2073  001260  0100               	movlb	0	; force () banked
  2074  001262  5180               	movf	pad@w& (0+255),w,b
  2075  001264  0100               	movlb	0	; force () banked
  2076  001266  5D7E               	subwf	pad@i& (0+255),w,b
  2077  001268  517F               	movf	(pad@i+1)& (0+255),w,b
  2078  00126A  0A80               	xorlw	128
  2079  00126C  0100               	movlb	0	; force () banked
  2080  00126E  6F7D               	movwf	??_pad& (0+255),b
  2081  001270  0100               	movlb	0	; force () banked
  2082  001272  5181               	movf	(pad@w+1)& (0+255),w,b
  2083  001274  0A80               	xorlw	128
  2084  001276  0100               	movlb	0	; force () banked
  2085  001278  597D               	subwfb	??_pad& (0+255),w,b
  2086  00127A  A0D8               	btfss	status,0,c
  2087  00127C  EF42  F009         	goto	u841
  2088  001280  EF45  F009         	goto	u840
  2089  001284                     u841:
  2090  001284  FFFF               	dw	65535	; assembler added errata NOP
  2091  001286  EF20  F009         	goto	l1835
  2092  00128A                     u840:
  2093  00128A  FFFF               	dw	65535	; assembler added errata NOP
  2094  00128C                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2097  00128C  0100               	movlb	0	; force () banked
  2098  00128E  B1EC               	btfsc	_flags& (0+255),0,b
  2099  001290  EF4C  F009         	goto	u851
  2100  001294  EF4F  F009         	goto	u850
  2101  001298                     u851:
  2102  001298  FFFF               	dw	65535	; assembler added errata NOP
  2103  00129A  EF5A  F009         	goto	l1843
  2104  00129E                     u850:
  2105  00129E  FFFF               	dw	65535	; assembler added errata NOP
  2106  0012A0                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2109  0012A0  C079  F070         	movff	pad@buf,fputs@s
  2110  0012A4  C07A  F071         	movff	pad@buf+1,fputs@s+1
  2111  0012A8  C077  F072         	movff	pad@fp,fputs@fp
  2112  0012AC  C078  F073         	movff	pad@fp+1,fputs@fp+1
  2113  0012B0  EC5F  F00D         	call	_fputs	;wreg free
  2114  0012B4                     l1843:
  2115  0012B4  FFFF               	dw	65535	; assembler added errata NOP
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2118  0012B6  C079  F067         	movff	pad@buf,strlen@s
  2119  0012BA  C07A  F068         	movff	pad@buf+1,strlen@s+1
  2120  0012BE  EC0E  F00E         	call	_strlen	;wreg free
  2121  0012C2  0100               	movlb	0	; force () banked
  2122  0012C4  5180               	movf	pad@w& (0+255),w,b
  2123  0012C6  0100               	movlb	0	; force () banked
  2124  0012C8  2567               	addwf	?_strlen& (0+255),w,b
  2125  0012CA  0100               	movlb	0	; force () banked
  2126  0012CC  6F77               	movwf	?_pad& (0+255),b
  2127  0012CE  0100               	movlb	0	; force () banked
  2128  0012D0  5181               	movf	(pad@w+1)& (0+255),w,b
  2129  0012D2  0100               	movlb	0	; force () banked
  2130  0012D4  2168               	addwfc	(?_strlen+1)& (0+255),w,b
  2131  0012D6  0100               	movlb	0	; force () banked
  2132  0012D8  6F78               	movwf	(?_pad+1)& (0+255),b
  2133  0012DA                     
  2134                           ; BSR set to: 0
  2135  0012DA  0012               	return		;funcret
  2136  0012DC  FFFF               	dw	65535	; errata NOP
  2137  0012DE                     __end_of_pad:
  2138                           	opt callstack 0
  2139                           
  2140 ;; *************** function _strlen *****************
  2141 ;; Defined at:
  2142 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  s               2    7[BANK0 ] PTR const unsigned char 
  2145 ;;		 -> dbuf(32), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  a               2    9[BANK0 ] PTR const unsigned char 
  2148 ;;		 -> dbuf(32), 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  2    7[BANK0 ] unsigned int 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2158 ;;      Params:         0       2       0       0       0       0       0
  2159 ;;      Locals:         0       2       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0
  2161 ;;      Totals:         0       4       0       0       0       0       0
  2162 ;;Total ram usage:        4 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    2
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_pad
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text6
  2173  001C1C                     __ptext6:
  2174                           	opt callstack 0
  2175  001C1C                     _strlen:
  2176                           	opt callstack 0
  2177  001C1C  FFFF               	dw	65535	; assembler added errata NOP
  2178  001C1E  C067  F069         	movff	strlen@s,strlen@a
  2179  001C22  C068  F06A         	movff	strlen@s+1,strlen@a+1
  2180  001C26  EF19  F00E         	goto	l1793
  2181  001C2A                     l1791:
  2182  001C2A  FFFF               	dw	65535	; assembler added errata NOP
  2183  001C2C  0100               	movlb	0	; () banked
  2184  001C2E  4B67               	infsnz	strlen@s& (0+255),f,b
  2185  001C30  2B68               	incf	(strlen@s+1)& (0+255),f,b
  2186  001C32                     l1793:
  2187  001C32  FFFF               	dw	65535	; assembler added errata NOP
  2188  001C34  C067  FFD9         	movff	strlen@s,fsr2l
  2189  001C38  C068  FFDA         	movff	strlen@s+1,fsr2h
  2190  001C3C  50DF               	movf	indf2,w,c
  2191  001C3E  A4D8               	btfss	status,2,c
  2192  001C40  EF24  F00E         	goto	u801
  2193  001C44  EF27  F00E         	goto	u800
  2194  001C48                     u801:
  2195  001C48  FFFF               	dw	65535	; assembler added errata NOP
  2196  001C4A  EF15  F00E         	goto	l1791
  2197  001C4E                     u800:
  2198  001C4E  FFFF               	dw	65535	; assembler added errata NOP
  2199  001C50  0100               	movlb	0	; () banked
  2200  001C52  5169               	movf	strlen@a& (0+255),w,b
  2201  001C54  5D67               	subwf	strlen@s& (0+255),w,b
  2202  001C56  6F67               	movwf	?_strlen& (0+255),b
  2203  001C58  516A               	movf	(strlen@a+1)& (0+255),w,b
  2204  001C5A  5968               	subwfb	(strlen@s+1)& (0+255),w,b
  2205  001C5C  6F68               	movwf	(?_strlen+1)& (0+255),b
  2206  001C5E                     
  2207                           ; BSR set to: 0
  2208  001C5E  0012               	return		;funcret
  2209  001C60  FFFF               	dw	65535	; errata NOP
  2210  001C62                     __end_of_strlen:
  2211                           	opt callstack 0
  2212                           
  2213 ;; *************** function _fputs *****************
  2214 ;; Defined at:
  2215 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  s               2   16[BANK0 ] PTR const unsigned char 
  2218 ;;		 -> dbuf(32), 
  2219 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  2220 ;;		 -> sprintf@f(6), 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  i               2   21[BANK0 ] int 
  2223 ;;  c               1   20[BANK0 ] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  2   16[BANK0 ] int 
  2226 ;; Registers used:
  2227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2233 ;;      Params:         0       4       0       0       0       0       0
  2234 ;;      Locals:         0       3       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0
  2236 ;;      Totals:         0       7       0       0       0       0       0
  2237 ;;Total ram usage:        7 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; Hardware stack levels required when called:    4
  2240 ;; This function calls:
  2241 ;;		_fputc
  2242 ;; This function is called by:
  2243 ;;		_pad
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text7
  2248  001ABE                     __ptext7:
  2249                           	opt callstack 0
  2250  001ABE                     _fputs:
  2251                           	opt callstack 0
  2252  001ABE  FFFF               	dw	65535	; assembler added errata NOP
  2253  001AC0  0E00               	movlw	0
  2254  001AC2  0100               	movlb	0	; () banked
  2255  001AC4  6F76               	movwf	(fputs@i+1)& (0+255),b
  2256  001AC6  0E00               	movlw	0
  2257  001AC8  6F75               	movwf	fputs@i& (0+255),b
  2258  001ACA  EF74  F00D         	goto	l1787
  2259  001ACE                     l1783:
  2260  001ACE  FFFF               	dw	65535	; assembler added errata NOP
  2261                           
  2262                           ; BSR set to: 0
  2263  001AD0  C074  F067         	movff	fputs@c,fputc@c
  2264  001AD4  6B68               	clrf	(fputc@c+1)& (0+255),b
  2265  001AD6  C072  F069         	movff	fputs@fp,fputc@fp
  2266  001ADA  C073  F06A         	movff	fputs@fp+1,fputc@fp+1
  2267  001ADE  ECE8  F009         	call	_fputc	;wreg free
  2268  001AE2  0100               	movlb	0	; () banked
  2269  001AE4  4B75               	infsnz	fputs@i& (0+255),f,b
  2270  001AE6  2B76               	incf	(fputs@i+1)& (0+255),f,b
  2271  001AE8                     l1787:
  2272  001AE8  FFFF               	dw	65535	; assembler added errata NOP
  2273                           
  2274                           ; BSR set to: 0
  2275  001AEA  5175               	movf	fputs@i& (0+255),w,b
  2276  001AEC  2570               	addwf	fputs@s& (0+255),w,b
  2277  001AEE  6ED9               	movwf	fsr2l,c
  2278  001AF0  5176               	movf	(fputs@i+1)& (0+255),w,b
  2279  001AF2  2171               	addwfc	(fputs@s+1)& (0+255),w,b
  2280  001AF4  6EDA               	movwf	fsr2h,c
  2281  001AF6  50DF               	movf	indf2,w,c
  2282  001AF8  6F74               	movwf	fputs@c& (0+255),b
  2283  001AFA  5174               	movf	fputs@c& (0+255),w,b
  2284  001AFC  A4D8               	btfss	status,2,c
  2285  001AFE  EF83  F00D         	goto	u791
  2286  001B02  EF86  F00D         	goto	u790
  2287  001B06                     u791:
  2288  001B06  FFFF               	dw	65535	; assembler added errata NOP
  2289  001B08  EF67  F00D         	goto	l1783
  2290  001B0C                     u790:
  2291  001B0C  FFFF               	dw	65535	; assembler added errata NOP
  2292  001B0E                     
  2293                           ; BSR set to: 0
  2294  001B0E  C075  F070         	movff	fputs@i,?_fputs
  2295  001B12  C076  F071         	movff	fputs@i+1,?_fputs+1
  2296  001B16                     
  2297                           ; BSR set to: 0
  2298  001B16  0012               	return		;funcret
  2299  001B18  FFFF               	dw	65535	; errata NOP
  2300  001B1A                     __end_of_fputs:
  2301                           	opt callstack 0
  2302                           
  2303 ;; *************** function _fputc *****************
  2304 ;; Defined at:
  2305 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  c               2    7[BANK0 ] int 
  2308 ;;  fp              2    9[BANK0 ] PTR struct _IO_FILE
  2309 ;;		 -> sprintf@f(6), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2    7[BANK0 ] int 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2321 ;;      Params:         0       4       0       0       0       0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0
  2323 ;;      Temps:          0       5       0       0       0       0       0
  2324 ;;      Totals:         0       9       0       0       0       0       0
  2325 ;;Total ram usage:        9 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		_putch
  2330 ;; This function is called by:
  2331 ;;		_pad
  2332 ;;		_vfpfcnvrt
  2333 ;;		_fputs
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text8
  2338  0013D0                     __ptext8:
  2339                           	opt callstack 0
  2340  0013D0                     _fputc:
  2341                           	opt callstack 0
  2342  0013D0  FFFF               	dw	65535	; assembler added errata NOP
  2343  0013D2  0100               	movlb	0	; () banked
  2344  0013D4  5169               	movf	fputc@fp& (0+255),w,b
  2345  0013D6  116A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2346  0013D8  B4D8               	btfsc	status,2,c
  2347  0013DA  EFF1  F009         	goto	u751
  2348  0013DE  EFF4  F009         	goto	u750
  2349  0013E2                     u751:
  2350  0013E2  FFFF               	dw	65535	; assembler added errata NOP
  2351  0013E4  EFFF  F009         	goto	l1765
  2352  0013E8                     u750:
  2353  0013E8  FFFF               	dw	65535	; assembler added errata NOP
  2354  0013EA                     
  2355                           ; BSR set to: 0
  2356  0013EA  5169               	movf	fputc@fp& (0+255),w,b
  2357  0013EC  116A               	iorwf	(fputc@fp+1)& (0+255),w,b
  2358  0013EE  A4D8               	btfss	status,2,c
  2359  0013F0  EFFC  F009         	goto	u761
  2360  0013F4  EFFF  F009         	goto	u760
  2361  0013F8                     u761:
  2362  0013F8  FFFF               	dw	65535	; assembler added errata NOP
  2363  0013FA  EF05  F00A         	goto	l1767
  2364  0013FE                     u760:
  2365  0013FE                     l1765:
  2366  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  2367                           
  2368                           ; BSR set to: 0
  2369  001400  5167               	movf	fputc@c& (0+255),w,b
  2370  001402  ECD2  F00E         	call	_putch
  2371  001406  EF57  F00A         	goto	l1773
  2372  00140A                     l1767:
  2373  00140A  FFFF               	dw	65535	; assembler added errata NOP
  2374                           
  2375                           ; BSR set to: 0
  2376  00140C  EE20 F004          	lfsr	2,4
  2377  001410  5169               	movf	fputc@fp& (0+255),w,b
  2378  001412  26D9               	addwf	fsr2l,f,c
  2379  001414  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2380  001416  22DA               	addwfc	fsr2h,f,c
  2381  001418  50DE               	movf	postinc2,w,c
  2382  00141A  10DE               	iorwf	postinc2,w,c
  2383  00141C  B4D8               	btfsc	status,2,c
  2384  00141E  EF13  F00A         	goto	u771
  2385  001422  EF16  F00A         	goto	u770
  2386  001426                     u771:
  2387  001426  FFFF               	dw	65535	; assembler added errata NOP
  2388  001428  EF33  F00A         	goto	l1771
  2389  00142C                     u770:
  2390  00142C  FFFF               	dw	65535	; assembler added errata NOP
  2391  00142E                     
  2392                           ; BSR set to: 0
  2393  00142E  EE20 F004          	lfsr	2,4
  2394  001432  5169               	movf	fputc@fp& (0+255),w,b
  2395  001434  26D9               	addwf	fsr2l,f,c
  2396  001436  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2397  001438  22DA               	addwfc	fsr2h,f,c
  2398  00143A  EE10 F002          	lfsr	1,2
  2399  00143E  5169               	movf	fputc@fp& (0+255),w,b
  2400  001440  26E1               	addwf	fsr1l,f,c
  2401  001442  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2402  001444  22E2               	addwfc	fsr1h,f,c
  2403  001446  50DE               	movf	postinc2,w,c
  2404  001448  5CE6               	subwf	postinc1,w,c
  2405  00144A  50E6               	movf	postinc1,w,c
  2406  00144C  0A80               	xorlw	128
  2407  00144E  6F6F               	movwf	(??_fputc+4)& (0+255),b
  2408  001450  50DE               	movf	postinc2,w,c
  2409  001452  0A80               	xorlw	128
  2410  001454  596F               	subwfb	(??_fputc+4)& (0+255),w,b
  2411  001456  B0D8               	btfsc	status,0,c
  2412  001458  EF30  F00A         	goto	u781
  2413  00145C  EF33  F00A         	goto	u780
  2414  001460                     u781:
  2415  001460  FFFF               	dw	65535	; assembler added errata NOP
  2416  001462  EF57  F00A         	goto	l1773
  2417  001466                     u780:
  2418  001466                     l1771:
  2419  001466  FFFF               	dw	65535	; assembler added errata NOP
  2420                           
  2421                           ; BSR set to: 0
  2422  001468  EE20 F002          	lfsr	2,2
  2423  00146C  5169               	movf	fputc@fp& (0+255),w,b
  2424  00146E  26D9               	addwf	fsr2l,f,c
  2425  001470  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2426  001472  22DA               	addwfc	fsr2h,f,c
  2427  001474  CFDE F06B          	movff	postinc2,??_fputc
  2428  001478  CFDD F06C          	movff	postdec2,??_fputc+1
  2429  00147C  C069  FFD9         	movff	fputc@fp,fsr2l
  2430  001480  C06A  FFDA         	movff	fputc@fp+1,fsr2h
  2431  001484  CFDE F06D          	movff	postinc2,??_fputc+2
  2432  001488  CFDD F06E          	movff	postdec2,??_fputc+3
  2433  00148C  516B               	movf	??_fputc& (0+255),w,b
  2434  00148E  256D               	addwf	(??_fputc+2)& (0+255),w,b
  2435  001490  6ED9               	movwf	fsr2l,c
  2436  001492  516C               	movf	(??_fputc+1)& (0+255),w,b
  2437  001494  216E               	addwfc	(??_fputc+3)& (0+255),w,b
  2438  001496  6EDA               	movwf	fsr2h,c
  2439  001498  C067  FFDF         	movff	fputc@c,indf2
  2440  00149C  EE20 F002          	lfsr	2,2
  2441  0014A0  5169               	movf	fputc@fp& (0+255),w,b
  2442  0014A2  26D9               	addwf	fsr2l,f,c
  2443  0014A4  516A               	movf	(fputc@fp+1)& (0+255),w,b
  2444  0014A6  22DA               	addwfc	fsr2h,f,c
  2445  0014A8  2ADE               	incf	postinc2,f,c
  2446  0014AA  0E00               	movlw	0
  2447  0014AC  22DD               	addwfc	postdec2,f,c
  2448  0014AE                     l1773:
  2449  0014AE  FFFF               	dw	65535	; assembler added errata NOP
  2450  0014B0  C067  F067         	movff	fputc@c,?_fputc
  2451  0014B4  0100               	movlb	0	; () banked
  2452  0014B6  6B68               	clrf	(?_fputc+1)& (0+255),b
  2453  0014B8                     
  2454                           ; BSR set to: 0
  2455  0014B8  0012               	return		;funcret
  2456  0014BA  FFFF               	dw	65535	; errata NOP
  2457  0014BC                     __end_of_fputc:
  2458                           	opt callstack 0
  2459                           
  2460 ;; *************** function _putch *****************
  2461 ;; Defined at:
  2462 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  c               1    wreg     unsigned char 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  c               1    0[BANK0 ] unsigned char 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2476 ;;      Params:         0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0
  2479 ;;      Totals:         0       0       0       0       0       0       0
  2480 ;;Total ram usage:        0 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    2
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		_fputc
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text9
  2491  001DA4                     __ptext9:
  2492                           	opt callstack 0
  2493  001DA4                     _putch:
  2494                           	opt callstack 0
  2495  001DA4  FFFF               	dw	65535	; assembler added errata NOP
  2496  001DA6  0012               	return		;funcret
  2497  001DA8  FFFF               	dw	65535	; errata NOP
  2498  001DAA                     __end_of_putch:
  2499                           	opt callstack 0
  2500                           
  2501 ;; *************** function _abs *****************
  2502 ;; Defined at:
  2503 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  a               2   25[BANK0 ] int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2   25[BANK0 ] int 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2517 ;;      Params:         0       2       0       0       0       0       0
  2518 ;;      Locals:         0       0       0       0       0       0       0
  2519 ;;      Temps:          0       2       0       0       0       0       0
  2520 ;;      Totals:         0       4       0       0       0       0       0
  2521 ;;Total ram usage:        4 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    2
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_dtoa
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text10
  2532  001BCE                     __ptext10:
  2533                           	opt callstack 0
  2534  001BCE                     _abs:
  2535                           	opt callstack 0
  2536  001BCE  FFFF               	dw	65535	; assembler added errata NOP
  2537  001BD0  0100               	movlb	0	; () banked
  2538  001BD2  BF7A               	btfsc	(abs@a+1)& (0+255),7,b
  2539  001BD4  EFF7  F00D         	goto	u860
  2540  001BD8  517A               	movf	(abs@a+1)& (0+255),w,b
  2541  001BDA  E106               	bnz	u861
  2542  001BDC  0579               	decf	abs@a& (0+255),w,b
  2543  001BDE  B0D8               	btfsc	status,0,c
  2544  001BE0  EFF4  F00D         	goto	u861
  2545  001BE4  EFF7  F00D         	goto	u860
  2546  001BE8                     u861:
  2547  001BE8  FFFF               	dw	65535	; assembler added errata NOP
  2548  001BEA  EF06  F00E         	goto	l974
  2549  001BEE                     u860:
  2550  001BEE  FFFF               	dw	65535	; assembler added errata NOP
  2551  001BF0                     
  2552                           ; BSR set to: 0
  2553  001BF0  C079  F07B         	movff	abs@a,??_abs
  2554  001BF4  C07A  F07C         	movff	abs@a+1,??_abs+1
  2555  001BF8  1F7B               	comf	??_abs& (0+255),f,b
  2556  001BFA  1F7C               	comf	(??_abs+1)& (0+255),f,b
  2557  001BFC  4B7B               	infsnz	??_abs& (0+255),f,b
  2558  001BFE  2B7C               	incf	(??_abs+1)& (0+255),f,b
  2559  001C00  C07B  F079         	movff	??_abs,?_abs
  2560  001C04  C07C  F07A         	movff	??_abs+1,?_abs+1
  2561  001C08  EF0B  F00E         	goto	l977
  2562  001C0C                     l974:
  2563  001C0C  FFFF               	dw	65535	; assembler added errata NOP
  2564                           
  2565                           ; BSR set to: 0
  2566  001C0E  C079  F079         	movff	abs@a,?_abs
  2567  001C12  C07A  F07A         	movff	abs@a+1,?_abs+1
  2568  001C16                     l977:
  2569  001C16  FFFF               	dw	65535	; assembler added errata NOP
  2570                           
  2571                           ; BSR set to: 0
  2572  001C18  0012               	return		;funcret
  2573  001C1A  FFFF               	dw	65535	; errata NOP
  2574  001C1C                     __end_of_abs:
  2575                           	opt callstack 0
  2576                           
  2577 ;; *************** function ___aomod *****************
  2578 ;; Defined at:
  2579 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  dividend        8    7[BANK0 ] long long 
  2582 ;;  divisor         8   15[BANK0 ] long long 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  sign            1   24[BANK0 ] unsigned char 
  2585 ;;  counter         1   23[BANK0 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  8    7[BANK0 ] long long 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2595 ;;      Params:         0      16       0       0       0       0       0
  2596 ;;      Locals:         0       2       0       0       0       0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0
  2598 ;;      Totals:         0      18       0       0       0       0       0
  2599 ;;Total ram usage:       18 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    2
  2602 ;; This function calls:
  2603 ;;		Nothing
  2604 ;; This function is called by:
  2605 ;;		_dtoa
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text11
  2610  000D50                     __ptext11:
  2611                           	opt callstack 0
  2612  000D50                     ___aomod:
  2613                           	opt callstack 0
  2614  000D50  FFFF               	dw	65535	; assembler added errata NOP
  2615  000D52  0E00               	movlw	0
  2616  000D54  0100               	movlb	0	; () banked
  2617  000D56  6F78               	movwf	___aomod@sign& (0+255),b
  2618  000D58                     
  2619                           ; BSR set to: 0
  2620  000D58  BF6E               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  2621  000D5A  EFB4  F006         	goto	u940
  2622  000D5E  EFB1  F006         	goto	u941
  2623  000D62                     u941:
  2624  000D62  FFFF               	dw	65535	; assembler added errata NOP
  2625  000D64  EFC7  F006         	goto	l1903
  2626  000D68                     u940:
  2627  000D68  FFFF               	dw	65535	; assembler added errata NOP
  2628  000D6A                     
  2629                           ; BSR set to: 0
  2630  000D6A  1F6E               	comf	(___aomod@dividend+7)& (0+255),f,b
  2631  000D6C  1F6D               	comf	(___aomod@dividend+6)& (0+255),f,b
  2632  000D6E  1F6C               	comf	(___aomod@dividend+5)& (0+255),f,b
  2633  000D70  1F6B               	comf	(___aomod@dividend+4)& (0+255),f,b
  2634  000D72  1F6A               	comf	(___aomod@dividend+3)& (0+255),f,b
  2635  000D74  1F69               	comf	(___aomod@dividend+2)& (0+255),f,b
  2636  000D76  1F68               	comf	(___aomod@dividend+1)& (0+255),f,b
  2637  000D78  6D67               	negf	___aomod@dividend& (0+255),b
  2638  000D7A  0E00               	movlw	0
  2639  000D7C  2368               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2640  000D7E  2369               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2641  000D80  236A               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2642  000D82  236B               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2643  000D84  236C               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2644  000D86  236D               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2645  000D88  236E               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2646  000D8A                     
  2647                           ; BSR set to: 0
  2648  000D8A  0E01               	movlw	1
  2649  000D8C  6F78               	movwf	___aomod@sign& (0+255),b
  2650  000D8E                     l1903:
  2651  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  2652                           
  2653                           ; BSR set to: 0
  2654  000D90  BF76               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  2655  000D92  EFD0  F006         	goto	u950
  2656  000D96  EFCD  F006         	goto	u951
  2657  000D9A                     u951:
  2658  000D9A  FFFF               	dw	65535	; assembler added errata NOP
  2659  000D9C  EFE1  F006         	goto	l1907
  2660  000DA0                     u950:
  2661  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  2662  000DA2                     
  2663                           ; BSR set to: 0
  2664  000DA2  1F76               	comf	(___aomod@divisor+7)& (0+255),f,b
  2665  000DA4  1F75               	comf	(___aomod@divisor+6)& (0+255),f,b
  2666  000DA6  1F74               	comf	(___aomod@divisor+5)& (0+255),f,b
  2667  000DA8  1F73               	comf	(___aomod@divisor+4)& (0+255),f,b
  2668  000DAA  1F72               	comf	(___aomod@divisor+3)& (0+255),f,b
  2669  000DAC  1F71               	comf	(___aomod@divisor+2)& (0+255),f,b
  2670  000DAE  1F70               	comf	(___aomod@divisor+1)& (0+255),f,b
  2671  000DB0  6D6F               	negf	___aomod@divisor& (0+255),b
  2672  000DB2  0E00               	movlw	0
  2673  000DB4  2370               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  2674  000DB6  2371               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  2675  000DB8  2372               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  2676  000DBA  2373               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  2677  000DBC  2374               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  2678  000DBE  2375               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  2679  000DC0  2376               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  2680  000DC2                     l1907:
  2681  000DC2  FFFF               	dw	65535	; assembler added errata NOP
  2682                           
  2683                           ; BSR set to: 0
  2684  000DC4  516F               	movf	___aomod@divisor& (0+255),w,b
  2685  000DC6  1170               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  2686  000DC8  1171               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  2687  000DCA  1172               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  2688  000DCC  1173               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  2689  000DCE  1174               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  2690  000DD0  1175               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  2691  000DD2  1176               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  2692  000DD4  B4D8               	btfsc	status,2,c
  2693  000DD6  EFEF  F006         	goto	u961
  2694  000DDA  EFF2  F006         	goto	u960
  2695  000DDE                     u961:
  2696  000DDE  FFFF               	dw	65535	; assembler added errata NOP
  2697  000DE0  EF43  F007         	goto	l1923
  2698  000DE4                     u960:
  2699  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2700  000DE6                     
  2701                           ; BSR set to: 0
  2702  000DE6  0E01               	movlw	1
  2703  000DE8  6F77               	movwf	___aomod@counter& (0+255),b
  2704  000DEA  EF02  F007         	goto	l1913
  2705  000DEE                     l1911:
  2706  000DEE  FFFF               	dw	65535	; assembler added errata NOP
  2707                           
  2708                           ; BSR set to: 0
  2709  000DF0  90D8               	bcf	status,0,c
  2710  000DF2  376F               	rlcf	___aomod@divisor& (0+255),f,b
  2711  000DF4  3770               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  2712  000DF6  3771               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  2713  000DF8  3772               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  2714  000DFA  3773               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  2715  000DFC  3774               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  2716  000DFE  3775               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  2717  000E00  3776               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  2718  000E02  2B77               	incf	___aomod@counter& (0+255),f,b
  2719  000E04                     l1913:
  2720  000E04  FFFF               	dw	65535	; assembler added errata NOP
  2721                           
  2722                           ; BSR set to: 0
  2723  000E06  AF76               	btfss	(___aomod@divisor+7)& (0+255),7,b
  2724  000E08  EF08  F007         	goto	u971
  2725  000E0C  EF0B  F007         	goto	u970
  2726  000E10                     u971:
  2727  000E10  FFFF               	dw	65535	; assembler added errata NOP
  2728  000E12  EFF7  F006         	goto	l1911
  2729  000E16                     u970:
  2730  000E16  FFFF               	dw	65535	; assembler added errata NOP
  2731  000E18                     l1915:
  2732  000E18  FFFF               	dw	65535	; assembler added errata NOP
  2733                           
  2734                           ; BSR set to: 0
  2735  000E1A  516F               	movf	___aomod@divisor& (0+255),w,b
  2736  000E1C  5D67               	subwf	___aomod@dividend& (0+255),w,b
  2737  000E1E  5170               	movf	(___aomod@divisor+1)& (0+255),w,b
  2738  000E20  5968               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  2739  000E22  5171               	movf	(___aomod@divisor+2)& (0+255),w,b
  2740  000E24  5969               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  2741  000E26  5172               	movf	(___aomod@divisor+3)& (0+255),w,b
  2742  000E28  596A               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  2743  000E2A  5173               	movf	(___aomod@divisor+4)& (0+255),w,b
  2744  000E2C  596B               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  2745  000E2E  5174               	movf	(___aomod@divisor+5)& (0+255),w,b
  2746  000E30  596C               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  2747  000E32  5175               	movf	(___aomod@divisor+6)& (0+255),w,b
  2748  000E34  596D               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  2749  000E36  5176               	movf	(___aomod@divisor+7)& (0+255),w,b
  2750  000E38  596E               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  2751  000E3A  A0D8               	btfss	status,0,c
  2752  000E3C  EF22  F007         	goto	u981
  2753  000E40  EF25  F007         	goto	u980
  2754  000E44                     u981:
  2755  000E44  FFFF               	dw	65535	; assembler added errata NOP
  2756  000E46  EF36  F007         	goto	l1919
  2757  000E4A                     u980:
  2758  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  2759  000E4C                     
  2760                           ; BSR set to: 0
  2761  000E4C  516F               	movf	___aomod@divisor& (0+255),w,b
  2762  000E4E  5F67               	subwf	___aomod@dividend& (0+255),f,b
  2763  000E50  5170               	movf	(___aomod@divisor+1)& (0+255),w,b
  2764  000E52  5B68               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  2765  000E54  5171               	movf	(___aomod@divisor+2)& (0+255),w,b
  2766  000E56  5B69               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  2767  000E58  5172               	movf	(___aomod@divisor+3)& (0+255),w,b
  2768  000E5A  5B6A               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  2769  000E5C  5173               	movf	(___aomod@divisor+4)& (0+255),w,b
  2770  000E5E  5B6B               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  2771  000E60  5174               	movf	(___aomod@divisor+5)& (0+255),w,b
  2772  000E62  5B6C               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  2773  000E64  5175               	movf	(___aomod@divisor+6)& (0+255),w,b
  2774  000E66  5B6D               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  2775  000E68  5176               	movf	(___aomod@divisor+7)& (0+255),w,b
  2776  000E6A  5B6E               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  2777  000E6C                     l1919:
  2778  000E6C  FFFF               	dw	65535	; assembler added errata NOP
  2779                           
  2780                           ; BSR set to: 0
  2781  000E6E  90D8               	bcf	status,0,c
  2782  000E70  3376               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  2783  000E72  3375               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  2784  000E74  3374               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  2785  000E76  3373               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  2786  000E78  3372               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  2787  000E7A  3371               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  2788  000E7C  3370               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  2789  000E7E  336F               	rrcf	___aomod@divisor& (0+255),f,b
  2790  000E80                     
  2791                           ; BSR set to: 0
  2792  000E80  2F77               	decfsz	___aomod@counter& (0+255),f,b
  2793  000E82  EF0C  F007         	goto	l1915
  2794  000E86                     l1923:
  2795  000E86  FFFF               	dw	65535	; assembler added errata NOP
  2796                           
  2797                           ; BSR set to: 0
  2798  000E88  5178               	movf	___aomod@sign& (0+255),w,b
  2799  000E8A  B4D8               	btfsc	status,2,c
  2800  000E8C  EF4A  F007         	goto	u991
  2801  000E90  EF4D  F007         	goto	u990
  2802  000E94                     u991:
  2803  000E94  FFFF               	dw	65535	; assembler added errata NOP
  2804  000E96  EF5E  F007         	goto	l1927
  2805  000E9A                     u990:
  2806  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2807  000E9C                     
  2808                           ; BSR set to: 0
  2809  000E9C  1F6E               	comf	(___aomod@dividend+7)& (0+255),f,b
  2810  000E9E  1F6D               	comf	(___aomod@dividend+6)& (0+255),f,b
  2811  000EA0  1F6C               	comf	(___aomod@dividend+5)& (0+255),f,b
  2812  000EA2  1F6B               	comf	(___aomod@dividend+4)& (0+255),f,b
  2813  000EA4  1F6A               	comf	(___aomod@dividend+3)& (0+255),f,b
  2814  000EA6  1F69               	comf	(___aomod@dividend+2)& (0+255),f,b
  2815  000EA8  1F68               	comf	(___aomod@dividend+1)& (0+255),f,b
  2816  000EAA  6D67               	negf	___aomod@dividend& (0+255),b
  2817  000EAC  0E00               	movlw	0
  2818  000EAE  2368               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  2819  000EB0  2369               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  2820  000EB2  236A               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  2821  000EB4  236B               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  2822  000EB6  236C               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  2823  000EB8  236D               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  2824  000EBA  236E               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  2825  000EBC                     l1927:
  2826  000EBC  FFFF               	dw	65535	; assembler added errata NOP
  2827                           
  2828                           ; BSR set to: 0
  2829  000EBE  C067  F067         	movff	___aomod@dividend,?___aomod
  2830  000EC2  C068  F068         	movff	___aomod@dividend+1,?___aomod+1
  2831  000EC6  C069  F069         	movff	___aomod@dividend+2,?___aomod+2
  2832  000ECA  C06A  F06A         	movff	___aomod@dividend+3,?___aomod+3
  2833  000ECE  C06B  F06B         	movff	___aomod@dividend+4,?___aomod+4
  2834  000ED2  C06C  F06C         	movff	___aomod@dividend+5,?___aomod+5
  2835  000ED6  C06D  F06D         	movff	___aomod@dividend+6,?___aomod+6
  2836  000EDA  C06E  F06E         	movff	___aomod@dividend+7,?___aomod+7
  2837  000EDE                     
  2838                           ; BSR set to: 0
  2839  000EDE  0012               	return		;funcret
  2840  000EE0  FFFF               	dw	65535	; errata NOP
  2841  000EE2                     __end_of___aomod:
  2842                           	opt callstack 0
  2843                           
  2844 ;; *************** function ___aodiv *****************
  2845 ;; Defined at:
  2846 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  dividend        8    7[BANK0 ] long long 
  2849 ;;  divisor         8   15[BANK0 ] long long 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  quotient        8   25[BANK0 ] long long 
  2852 ;;  sign            1   24[BANK0 ] unsigned char 
  2853 ;;  counter         1   23[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  8    7[BANK0 ] long long 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  2863 ;;      Params:         0      16       0       0       0       0       0
  2864 ;;      Locals:         0      10       0       0       0       0       0
  2865 ;;      Temps:          0       0       0       0       0       0       0
  2866 ;;      Totals:         0      26       0       0       0       0       0
  2867 ;;Total ram usage:       26 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    2
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_dtoa
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text12
  2878  000B9A                     __ptext12:
  2879                           	opt callstack 0
  2880  000B9A                     ___aodiv:
  2881                           	opt callstack 0
  2882  000B9A  FFFF               	dw	65535	; assembler added errata NOP
  2883  000B9C  0E00               	movlw	0
  2884  000B9E  0100               	movlb	0	; () banked
  2885  000BA0  6F78               	movwf	___aodiv@sign& (0+255),b
  2886  000BA2                     
  2887                           ; BSR set to: 0
  2888  000BA2  BF76               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  2889  000BA4  EFD9  F005         	goto	u870
  2890  000BA8  EFD6  F005         	goto	u871
  2891  000BAC                     u871:
  2892  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  2893  000BAE  EFEC  F005         	goto	l1859
  2894  000BB2                     u870:
  2895  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  2896  000BB4                     
  2897                           ; BSR set to: 0
  2898  000BB4  1F76               	comf	(___aodiv@divisor+7)& (0+255),f,b
  2899  000BB6  1F75               	comf	(___aodiv@divisor+6)& (0+255),f,b
  2900  000BB8  1F74               	comf	(___aodiv@divisor+5)& (0+255),f,b
  2901  000BBA  1F73               	comf	(___aodiv@divisor+4)& (0+255),f,b
  2902  000BBC  1F72               	comf	(___aodiv@divisor+3)& (0+255),f,b
  2903  000BBE  1F71               	comf	(___aodiv@divisor+2)& (0+255),f,b
  2904  000BC0  1F70               	comf	(___aodiv@divisor+1)& (0+255),f,b
  2905  000BC2  6D6F               	negf	___aodiv@divisor& (0+255),b
  2906  000BC4  0E00               	movlw	0
  2907  000BC6  2370               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  2908  000BC8  2371               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  2909  000BCA  2372               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  2910  000BCC  2373               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  2911  000BCE  2374               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  2912  000BD0  2375               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  2913  000BD2  2376               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  2914  000BD4                     
  2915                           ; BSR set to: 0
  2916  000BD4  0E01               	movlw	1
  2917  000BD6  6F78               	movwf	___aodiv@sign& (0+255),b
  2918  000BD8                     l1859:
  2919  000BD8  FFFF               	dw	65535	; assembler added errata NOP
  2920                           
  2921                           ; BSR set to: 0
  2922  000BDA  BF6E               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  2923  000BDC  EFF5  F005         	goto	u880
  2924  000BE0  EFF2  F005         	goto	u881
  2925  000BE4                     u881:
  2926  000BE4  FFFF               	dw	65535	; assembler added errata NOP
  2927  000BE6  EF08  F006         	goto	l1865
  2928  000BEA                     u880:
  2929  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  2930  000BEC                     
  2931                           ; BSR set to: 0
  2932  000BEC  1F6E               	comf	(___aodiv@dividend+7)& (0+255),f,b
  2933  000BEE  1F6D               	comf	(___aodiv@dividend+6)& (0+255),f,b
  2934  000BF0  1F6C               	comf	(___aodiv@dividend+5)& (0+255),f,b
  2935  000BF2  1F6B               	comf	(___aodiv@dividend+4)& (0+255),f,b
  2936  000BF4  1F6A               	comf	(___aodiv@dividend+3)& (0+255),f,b
  2937  000BF6  1F69               	comf	(___aodiv@dividend+2)& (0+255),f,b
  2938  000BF8  1F68               	comf	(___aodiv@dividend+1)& (0+255),f,b
  2939  000BFA  6D67               	negf	___aodiv@dividend& (0+255),b
  2940  000BFC  0E00               	movlw	0
  2941  000BFE  2368               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  2942  000C00  2369               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  2943  000C02  236A               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  2944  000C04  236B               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  2945  000C06  236C               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  2946  000C08  236D               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  2947  000C0A  236E               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  2948  000C0C                     
  2949                           ; BSR set to: 0
  2950  000C0C  0E01               	movlw	1
  2951  000C0E  1B78               	xorwf	___aodiv@sign& (0+255),f,b
  2952  000C10                     l1865:
  2953  000C10  FFFF               	dw	65535	; assembler added errata NOP
  2954                           
  2955                           ; BSR set to: 0
  2956  000C12  EE20  F079         	lfsr	2,___aodiv@quotient
  2957  000C16  0E07               	movlw	7
  2958  000C18                     u891:
  2959  000C18  6ADE               	clrf	postinc2,c
  2960  000C1A  06E8               	decf	wreg,f,c
  2961  000C1C  E2FD               	bc	u891
  2962  000C1E                     
  2963                           ; BSR set to: 0
  2964  000C1E  516F               	movf	___aodiv@divisor& (0+255),w,b
  2965  000C20  1170               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  2966  000C22  1171               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  2967  000C24  1172               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  2968  000C26  1173               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  2969  000C28  1174               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  2970  000C2A  1175               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  2971  000C2C  1176               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  2972  000C2E  B4D8               	btfsc	status,2,c
  2973  000C30  EF1C  F006         	goto	u901
  2974  000C34  EF1F  F006         	goto	u900
  2975  000C38                     u901:
  2976  000C38  FFFF               	dw	65535	; assembler added errata NOP
  2977  000C3A  EF7A  F006         	goto	l1887
  2978  000C3E                     u900:
  2979  000C3E  FFFF               	dw	65535	; assembler added errata NOP
  2980  000C40                     
  2981                           ; BSR set to: 0
  2982  000C40  0E01               	movlw	1
  2983  000C42  6F77               	movwf	___aodiv@counter& (0+255),b
  2984  000C44  EF2F  F006         	goto	l1873
  2985  000C48                     l1871:
  2986  000C48  FFFF               	dw	65535	; assembler added errata NOP
  2987                           
  2988                           ; BSR set to: 0
  2989  000C4A  90D8               	bcf	status,0,c
  2990  000C4C  376F               	rlcf	___aodiv@divisor& (0+255),f,b
  2991  000C4E  3770               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  2992  000C50  3771               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  2993  000C52  3772               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  2994  000C54  3773               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  2995  000C56  3774               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  2996  000C58  3775               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  2997  000C5A  3776               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  2998  000C5C  2B77               	incf	___aodiv@counter& (0+255),f,b
  2999  000C5E                     l1873:
  3000  000C5E  FFFF               	dw	65535	; assembler added errata NOP
  3001                           
  3002                           ; BSR set to: 0
  3003  000C60  AF76               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  3004  000C62  EF35  F006         	goto	u911
  3005  000C66  EF38  F006         	goto	u910
  3006  000C6A                     u911:
  3007  000C6A  FFFF               	dw	65535	; assembler added errata NOP
  3008  000C6C  EF24  F006         	goto	l1871
  3009  000C70                     u910:
  3010  000C70  FFFF               	dw	65535	; assembler added errata NOP
  3011  000C72                     l1875:
  3012  000C72  FFFF               	dw	65535	; assembler added errata NOP
  3013                           
  3014                           ; BSR set to: 0
  3015  000C74  90D8               	bcf	status,0,c
  3016  000C76  3779               	rlcf	___aodiv@quotient& (0+255),f,b
  3017  000C78  377A               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  3018  000C7A  377B               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  3019  000C7C  377C               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  3020  000C7E  377D               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  3021  000C80  377E               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  3022  000C82  377F               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  3023  000C84  3780               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  3024  000C86                     
  3025                           ; BSR set to: 0
  3026  000C86  516F               	movf	___aodiv@divisor& (0+255),w,b
  3027  000C88  5D67               	subwf	___aodiv@dividend& (0+255),w,b
  3028  000C8A  5170               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3029  000C8C  5968               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  3030  000C8E  5171               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3031  000C90  5969               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  3032  000C92  5172               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3033  000C94  596A               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  3034  000C96  5173               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3035  000C98  596B               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  3036  000C9A  5174               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3037  000C9C  596C               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  3038  000C9E  5175               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3039  000CA0  596D               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  3040  000CA2  5176               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3041  000CA4  596E               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  3042  000CA6  A0D8               	btfss	status,0,c
  3043  000CA8  EF58  F006         	goto	u921
  3044  000CAC  EF5B  F006         	goto	u920
  3045  000CB0                     u921:
  3046  000CB0  FFFF               	dw	65535	; assembler added errata NOP
  3047  000CB2  EF6D  F006         	goto	l1883
  3048  000CB6                     u920:
  3049  000CB6  FFFF               	dw	65535	; assembler added errata NOP
  3050  000CB8                     
  3051                           ; BSR set to: 0
  3052  000CB8  516F               	movf	___aodiv@divisor& (0+255),w,b
  3053  000CBA  5F67               	subwf	___aodiv@dividend& (0+255),f,b
  3054  000CBC  5170               	movf	(___aodiv@divisor+1)& (0+255),w,b
  3055  000CBE  5B68               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  3056  000CC0  5171               	movf	(___aodiv@divisor+2)& (0+255),w,b
  3057  000CC2  5B69               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  3058  000CC4  5172               	movf	(___aodiv@divisor+3)& (0+255),w,b
  3059  000CC6  5B6A               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  3060  000CC8  5173               	movf	(___aodiv@divisor+4)& (0+255),w,b
  3061  000CCA  5B6B               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  3062  000CCC  5174               	movf	(___aodiv@divisor+5)& (0+255),w,b
  3063  000CCE  5B6C               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  3064  000CD0  5175               	movf	(___aodiv@divisor+6)& (0+255),w,b
  3065  000CD2  5B6D               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  3066  000CD4  5176               	movf	(___aodiv@divisor+7)& (0+255),w,b
  3067  000CD6  5B6E               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  3068  000CD8                     
  3069                           ; BSR set to: 0
  3070  000CD8  8179               	bsf	___aodiv@quotient& (0+255),0,b
  3071  000CDA                     l1883:
  3072  000CDA  FFFF               	dw	65535	; assembler added errata NOP
  3073                           
  3074                           ; BSR set to: 0
  3075  000CDC  90D8               	bcf	status,0,c
  3076  000CDE  3376               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  3077  000CE0  3375               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  3078  000CE2  3374               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  3079  000CE4  3373               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  3080  000CE6  3372               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  3081  000CE8  3371               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  3082  000CEA  3370               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  3083  000CEC  336F               	rrcf	___aodiv@divisor& (0+255),f,b
  3084  000CEE                     
  3085                           ; BSR set to: 0
  3086  000CEE  2F77               	decfsz	___aodiv@counter& (0+255),f,b
  3087  000CF0  EF39  F006         	goto	l1875
  3088  000CF4                     l1887:
  3089  000CF4  FFFF               	dw	65535	; assembler added errata NOP
  3090                           
  3091                           ; BSR set to: 0
  3092  000CF6  5178               	movf	___aodiv@sign& (0+255),w,b
  3093  000CF8  B4D8               	btfsc	status,2,c
  3094  000CFA  EF81  F006         	goto	u931
  3095  000CFE  EF84  F006         	goto	u930
  3096  000D02                     u931:
  3097  000D02  FFFF               	dw	65535	; assembler added errata NOP
  3098  000D04  EF95  F006         	goto	l1891
  3099  000D08                     u930:
  3100  000D08  FFFF               	dw	65535	; assembler added errata NOP
  3101  000D0A                     
  3102                           ; BSR set to: 0
  3103  000D0A  1F80               	comf	(___aodiv@quotient+7)& (0+255),f,b
  3104  000D0C  1F7F               	comf	(___aodiv@quotient+6)& (0+255),f,b
  3105  000D0E  1F7E               	comf	(___aodiv@quotient+5)& (0+255),f,b
  3106  000D10  1F7D               	comf	(___aodiv@quotient+4)& (0+255),f,b
  3107  000D12  1F7C               	comf	(___aodiv@quotient+3)& (0+255),f,b
  3108  000D14  1F7B               	comf	(___aodiv@quotient+2)& (0+255),f,b
  3109  000D16  1F7A               	comf	(___aodiv@quotient+1)& (0+255),f,b
  3110  000D18  6D79               	negf	___aodiv@quotient& (0+255),b
  3111  000D1A  0E00               	movlw	0
  3112  000D1C  237A               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  3113  000D1E  237B               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  3114  000D20  237C               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  3115  000D22  237D               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  3116  000D24  237E               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  3117  000D26  237F               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  3118  000D28  2380               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  3119  000D2A                     l1891:
  3120  000D2A  FFFF               	dw	65535	; assembler added errata NOP
  3121                           
  3122                           ; BSR set to: 0
  3123  000D2C  C079  F067         	movff	___aodiv@quotient,?___aodiv
  3124  000D30  C07A  F068         	movff	___aodiv@quotient+1,?___aodiv+1
  3125  000D34  C07B  F069         	movff	___aodiv@quotient+2,?___aodiv+2
  3126  000D38  C07C  F06A         	movff	___aodiv@quotient+3,?___aodiv+3
  3127  000D3C  C07D  F06B         	movff	___aodiv@quotient+4,?___aodiv+4
  3128  000D40  C07E  F06C         	movff	___aodiv@quotient+5,?___aodiv+5
  3129  000D44  C07F  F06D         	movff	___aodiv@quotient+6,?___aodiv+6
  3130  000D48  C080  F06E         	movff	___aodiv@quotient+7,?___aodiv+7
  3131  000D4C                     
  3132                           ; BSR set to: 0
  3133  000D4C  0012               	return		;funcret
  3134  000D4E  FFFF               	dw	65535	; errata NOP
  3135  000D50                     __end_of___aodiv:
  3136                           	opt callstack 0
  3137                           
  3138 ;; *************** function _lcd_putMessage *****************
  3139 ;; Defined at:
  3140 ;;		line 385 in file "Lcd4Lignes.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  chaine          3   15[BANK0 ] PTR const unsigned char 
  3143 ;;		 -> STR_3(3), main@message(20), STR_1(16), 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  j               1   23[BANK0 ] unsigned char 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  1    wreg      void 
  3148 ;; Registers used:
  3149 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3155 ;;      Params:         0       3       0       0       0       0       0
  3156 ;;      Locals:         0       1       0       0       0       0       0
  3157 ;;      Temps:          0       5       0       0       0       0       0
  3158 ;;      Totals:         0       9       0       0       0       0       0
  3159 ;;Total ram usage:        9 bytes
  3160 ;; Hardware stack levels used:    1
  3161 ;; Hardware stack levels required when called:    6
  3162 ;; This function calls:
  3163 ;;		_lcd_ecritChar
  3164 ;; This function is called by:
  3165 ;;		_main
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169                           	psect	text13
  3170  0014BC                     __ptext13:
  3171                           	opt callstack 0
  3172  0014BC                     _lcd_putMessage:
  3173                           	opt callstack 0
  3174  0014BC  FFFF               	dw	65535	; assembler added errata NOP
  3175  0014BE                     
  3176                           ;Lcd4Lignes.c: 385: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 386: 
      +                          {;Lcd4Lignes.c: 387:     unsigned char j;;Lcd4Lignes.c: 389:     for(j = 0; chaine[j] !=
      +                           0; j++)
  3177  0014BE  0E00               	movlw	0
  3178  0014C0  0100               	movlb	0	; force () banked
  3179  0014C2  6F77               	movwf	lcd_putMessage@j& (0+255),b
  3180  0014C4  EF8E  F00A         	goto	l2297
  3181  0014C8                     l2293:
  3182  0014C8  FFFF               	dw	65535	; assembler added errata NOP
  3183                           
  3184                           ;Lcd4Lignes.c: 390:         lcd_ecritChar(chaine[j]);
  3185  0014CA  0100               	movlb	0	; force () banked
  3186  0014CC  5177               	movf	lcd_putMessage@j& (0+255),w,b
  3187  0014CE  0100               	movlb	0	; force () banked
  3188  0014D0  6F72               	movwf	??_lcd_putMessage& (0+255),b
  3189  0014D2  6B73               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3190  0014D4  5172               	movf	??_lcd_putMessage& (0+255),w,b
  3191  0014D6  0100               	movlb	0	; force () banked
  3192  0014D8  256F               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3193  0014DA  0100               	movlb	0	; force () banked
  3194  0014DC  6F74               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3195  0014DE  5173               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3196  0014E0  0100               	movlb	0	; force () banked
  3197  0014E2  2170               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3198  0014E4  0100               	movlb	0	; force () banked
  3199  0014E6  6F75               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3200  0014E8  0E00               	movlw	0
  3201  0014EA  0100               	movlb	0	; force () banked
  3202  0014EC  2171               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3203  0014EE  0100               	movlb	0	; force () banked
  3204  0014F0  6F76               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3205  0014F2  C074  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3206  0014F6  C075  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3207  0014FA  C076  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3208  0014FE  BAF8               	btfsc	tblptru,5,c
  3209  001500  D004               	bra	u1277
  3210  001502  0008               	tblrd		*
  3211  001504  FFFF               	dw	65535	; errata NOP
  3212  001506  50F5               	movf	tablat,w,c
  3213  001508  D005               	bra	u1270
  3214  00150A                     u1277:
  3215  00150A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3216  00150E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3217  001512  50E7               	movf	indf1,w,c
  3218  001514                     u1270:
  3219  001514  EC7C  F00C         	call	_lcd_ecritChar
  3220  001518  0100               	movlb	0	; force () banked
  3221  00151A  2B77               	incf	lcd_putMessage@j& (0+255),f,b
  3222  00151C                     l2297:
  3223  00151C  FFFF               	dw	65535	; assembler added errata NOP
  3224                           
  3225                           ; BSR set to: 0
  3226  00151E  0100               	movlb	0	; force () banked
  3227  001520  5177               	movf	lcd_putMessage@j& (0+255),w,b
  3228  001522  0100               	movlb	0	; force () banked
  3229  001524  6F72               	movwf	??_lcd_putMessage& (0+255),b
  3230  001526  6B73               	clrf	(??_lcd_putMessage+1)& (0+255),b
  3231  001528  5172               	movf	??_lcd_putMessage& (0+255),w,b
  3232  00152A  0100               	movlb	0	; force () banked
  3233  00152C  256F               	addwf	lcd_putMessage@chaine& (0+255),w,b
  3234  00152E  0100               	movlb	0	; force () banked
  3235  001530  6F74               	movwf	(??_lcd_putMessage+2)& (0+255),b
  3236  001532  5173               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  3237  001534  0100               	movlb	0	; force () banked
  3238  001536  2170               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  3239  001538  0100               	movlb	0	; force () banked
  3240  00153A  6F75               	movwf	(??_lcd_putMessage+3)& (0+255),b
  3241  00153C  0E00               	movlw	0
  3242  00153E  0100               	movlb	0	; force () banked
  3243  001540  2171               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  3244  001542  0100               	movlb	0	; force () banked
  3245  001544  6F76               	movwf	(??_lcd_putMessage+4)& (0+255),b
  3246  001546  C074  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  3247  00154A  C075  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  3248  00154E  C076  FFF8         	movff	??_lcd_putMessage+4,tblptru
  3249  001552  BAF8               	btfsc	tblptru,5,c
  3250  001554  D004               	bra	u1287
  3251  001556  0008               	tblrd		*
  3252  001558  FFFF               	dw	65535	; errata NOP
  3253  00155A  50F5               	movf	tablat,w,c
  3254  00155C  D005               	bra	u1280
  3255  00155E                     u1287:
  3256  00155E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3257  001562  CFF7 FFE2          	movff	tblptrh,fsr1h
  3258  001566  50E7               	movf	indf1,w,c
  3259  001568                     u1280:
  3260  001568  0900               	iorlw	0
  3261  00156A  A4D8               	btfss	status,2,c
  3262  00156C  EFBA  F00A         	goto	u1291
  3263  001570  EFBD  F00A         	goto	u1290
  3264  001574                     u1291:
  3265  001574  FFFF               	dw	65535	; assembler added errata NOP
  3266  001576  EF64  F00A         	goto	l2293
  3267  00157A                     u1290:
  3268  00157A  FFFF               	dw	65535	; assembler added errata NOP
  3269  00157C  0012               	return		;funcret
  3270  00157E  FFFF               	dw	65535	; errata NOP
  3271  001580                     __end_of_lcd_putMessage:
  3272                           	opt callstack 0
  3273                           
  3274 ;; *************** function _lcd_ecritChar *****************
  3275 ;; Defined at:
  3276 ;;		line 357 in file "Lcd4Lignes.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  car             1    wreg     unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  car             1   13[BANK0 ] unsigned char 
  3281 ;;  posRam          1   14[BANK0 ] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3291 ;;      Params:         0       0       0       0       0       0       0
  3292 ;;      Locals:         0       2       0       0       0       0       0
  3293 ;;      Temps:          0       2       0       0       0       0       0
  3294 ;;      Totals:         0       4       0       0       0       0       0
  3295 ;;Total ram usage:        4 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    5
  3298 ;; This function calls:
  3299 ;;		_lcd_wrCom
  3300 ;;		_lcd_wrData
  3301 ;; This function is called by:
  3302 ;;		_lcd_putMessage
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text14
  3307  0018F8                     __ptext14:
  3308                           	opt callstack 0
  3309  0018F8                     _lcd_ecritChar:
  3310                           	opt callstack 0
  3311  0018F8  FFFF               	dw	65535	; assembler added errata NOP
  3312                           
  3313                           ;incstack = 0
  3314                           ;lcd_ecritChar@car stored from wreg
  3315  0018FA  0100               	movlb	0	; force () banked
  3316  0018FC  6F6D               	movwf	lcd_ecritChar@car& (0+255),b
  3317  0018FE                     
  3318                           ;Lcd4Lignes.c: 357: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 358: {;Lcd4Ligne
      +                          s.c: 359:     unsigned char posRam;;Lcd4Lignes.c: 361:     posRam = lcd_wrData(car);
  3319  0018FE  0100               	movlb	0	; force () banked
  3320  001900  516D               	movf	lcd_ecritChar@car& (0+255),w,b
  3321  001902  ECBB  F00D         	call	_lcd_wrData
  3322  001906  0100               	movlb	0	; force () banked
  3323  001908  6F6E               	movwf	lcd_ecritChar@posRam& (0+255),b
  3324                           
  3325                           ;Lcd4Lignes.c: 362:     switch(posRam)
  3326  00190A  EF99  F00C         	goto	l2197
  3327  00190E                     l2189:
  3328  00190E  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;Lcd4Lignes.c: 365:             lcd_wrCom(0x40|0x80);
  3332  001910  0EC0               	movlw	192
  3333  001912  EC1D  F00B         	call	_lcd_wrCom
  3334                           
  3335                           ;Lcd4Lignes.c: 366:             break;
  3336  001916  EFB6  F00C         	goto	l202
  3337  00191A                     l2191:
  3338  00191A  FFFF               	dw	65535	; assembler added errata NOP
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;Lcd4Lignes.c: 368:             lcd_wrCom(0x14|0x80);
  3342  00191C  0E94               	movlw	148
  3343  00191E  EC1D  F00B         	call	_lcd_wrCom
  3344                           
  3345                           ;Lcd4Lignes.c: 369:             break;
  3346  001922  EFB6  F00C         	goto	l202
  3347  001926                     l2193:
  3348  001926  FFFF               	dw	65535	; assembler added errata NOP
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;Lcd4Lignes.c: 371:             lcd_wrCom(0x54|0x80);
  3352  001928  0ED4               	movlw	212
  3353  00192A  EC1D  F00B         	call	_lcd_wrCom
  3354                           
  3355                           ;Lcd4Lignes.c: 372:             break;
  3356  00192E  EFB6  F00C         	goto	l202
  3357  001932                     l2197:
  3358  001932  FFFF               	dw	65535	; assembler added errata NOP
  3359                           
  3360                           ; BSR set to: 0
  3361  001934  0100               	movlb	0	; force () banked
  3362  001936  516E               	movf	lcd_ecritChar@posRam& (0+255),w,b
  3363  001938  0100               	movlb	0	; force () banked
  3364  00193A  6F6B               	movwf	??_lcd_ecritChar& (0+255),b
  3365  00193C  6B6C               	clrf	(??_lcd_ecritChar+1)& (0+255),b
  3366                           
  3367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3368                           ; Switch size 1, requested type "simple"
  3369                           ; Number of cases is 1, Range of values is 0 to 0
  3370                           ; switch strategies available:
  3371                           ; Name         Instructions Cycles
  3372                           ; simple_byte            4     3 (average)
  3373                           ;	Chosen strategy is simple_byte
  3374  00193E  516C               	movf	(??_lcd_ecritChar+1)& (0+255),w,b
  3375  001940  0A00               	xorlw	0	; case 0
  3376  001942  B4D8               	btfsc	status,2,c
  3377  001944  EFA6  F00C         	goto	l2515
  3378  001948  EFB6  F00C         	goto	l202
  3379  00194C                     l2515:
  3380  00194C  FFFF               	dw	65535	; assembler added errata NOP
  3381                           
  3382                           ; BSR set to: 0
  3383                           ; Switch size 1, requested type "simple"
  3384                           ; Number of cases is 3, Range of values is 20 to 84
  3385                           ; switch strategies available:
  3386                           ; Name         Instructions Cycles
  3387                           ; simple_byte           10     6 (average)
  3388                           ;	Chosen strategy is simple_byte
  3389  00194E  516B               	movf	??_lcd_ecritChar& (0+255),w,b
  3390  001950  0A14               	xorlw	20	; case 20
  3391  001952  B4D8               	btfsc	status,2,c
  3392  001954  EF87  F00C         	goto	l2189
  3393  001958  0A54               	xorlw	84	; case 64
  3394  00195A  B4D8               	btfsc	status,2,c
  3395  00195C  EF93  F00C         	goto	l2193
  3396  001960  0A14               	xorlw	20	; case 84
  3397  001962  B4D8               	btfsc	status,2,c
  3398  001964  EF8D  F00C         	goto	l2191
  3399  001968  EFB6  F00C         	goto	l202
  3400  00196C                     l202:
  3401  00196C  FFFF               	dw	65535	; assembler added errata NOP
  3402  00196E  0012               	return		;funcret
  3403  001970  FFFF               	dw	65535	; errata NOP
  3404  001972                     __end_of_lcd_ecritChar:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function _lcd_init *****************
  3408 ;; Defined at:
  3409 ;;		line 256 in file "Lcd4Lignes.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3423 ;;      Params:         0       0       0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    7
  3430 ;; This function calls:
  3431 ;;		_lcd_initCGRam
  3432 ;;		_lcd_resetSequence
  3433 ;;		_lcd_wrCom
  3434 ;; This function is called by:
  3435 ;;		_main
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text15
  3440  001D20                     __ptext15:
  3441                           	opt callstack 0
  3442  001D20                     _lcd_init:
  3443                           	opt callstack 0
  3444  001D20  FFFF               	dw	65535	; assembler added errata NOP
  3445  001D22                     
  3446                           ;Lcd4Lignes.c: 258:     TRISB = TRISB & 0xEF;
  3447  001D22  5093               	movf	147,w,c	;volatile
  3448  001D24  0BEF               	andlw	239
  3449  001D26  6E93               	movwf	147,c	;volatile
  3450  001D28                     
  3451                           ;Lcd4Lignes.c: 259:     lcd_resetSequence();
  3452  001D28  ECF5  F00C         	call	_lcd_resetSequence	;wreg free
  3453  001D2C                     
  3454                           ;Lcd4Lignes.c: 260:     lcd_wrCom(0x28);
  3455  001D2C  0E28               	movlw	40
  3456  001D2E  EC1D  F00B         	call	_lcd_wrCom
  3457  001D32                     
  3458                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x0F);
  3459  001D32  0E0F               	movlw	15
  3460  001D34  EC1D  F00B         	call	_lcd_wrCom
  3461  001D38                     
  3462                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x01);
  3463  001D38  0E01               	movlw	1
  3464  001D3A  EC1D  F00B         	call	_lcd_wrCom
  3465  001D3E                     
  3466                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x06);
  3467  001D3E  0E06               	movlw	6
  3468  001D40  EC1D  F00B         	call	_lcd_wrCom
  3469  001D44                     
  3470                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x80);
  3471  001D44  0E80               	movlw	128
  3472  001D46  EC1D  F00B         	call	_lcd_wrCom
  3473  001D4A                     
  3474                           ;Lcd4Lignes.c: 265:     lcd_initCGRam();
  3475  001D4A  ECC0  F00A         	call	_lcd_initCGRam	;wreg free
  3476  001D4E  0012               	return		;funcret
  3477  001D50  FFFF               	dw	65535	; errata NOP
  3478  001D52                     __end_of_lcd_init:
  3479                           	opt callstack 0
  3480                           
  3481 ;; *************** function _lcd_resetSequence *****************
  3482 ;; Defined at:
  3483 ;;		line 219 in file "Lcd4Lignes.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0, cstack
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3497 ;;      Params:         0       0       0       0       0       0       0
  3498 ;;      Locals:         0       0       0       0       0       0       0
  3499 ;;      Temps:          0       1       0       0       0       0       0
  3500 ;;      Totals:         0       1       0       0       0       0       0
  3501 ;;Total ram usage:        1 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    3
  3504 ;; This function calls:
  3505 ;;		_lcd_ecrireDonnees
  3506 ;;		_lcd_strobeEnableBit
  3507 ;; This function is called by:
  3508 ;;		_lcd_init
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text16
  3513  0019EA                     __ptext16:
  3514                           	opt callstack 0
  3515  0019EA                     _lcd_resetSequence:
  3516                           	opt callstack 0
  3517  0019EA  FFFF               	dw	65535	; assembler added errata NOP
  3518  0019EC                     
  3519                           ;Lcd4Lignes.c: 224:     TRISA = 0b00000000;
  3520  0019EC  0E00               	movlw	0
  3521  0019EE  6E92               	movwf	146,c	;volatile
  3522  0019F0                     
  3523                           ;Lcd4Lignes.c: 226:     _delay((unsigned long)((40)*(16000000/4000.0)));
  3524  0019F0  0E9C               	movlw	156
  3525  0019F2  0100               	movlb	0	; force () banked
  3526  0019F4  6F69               	movwf	??_lcd_resetSequence& (0+255),b
  3527  0019F6  0EF1               	movlw	241
  3528  0019F8                     u1497:
  3529  0019F8  FFFF               	dw	65535	; errata NOP
  3530  0019FA  2EE8               	decfsz	wreg,f,c
  3531  0019FC  D7FD               	bra	u1497
  3532  0019FE  2F69               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3533  001A00  D7FB               	bra	u1497
  3534  001A02  F000               	nop	
  3535  001A04                     
  3536                           ;Lcd4Lignes.c: 227:     PORTBbits.RB4 = 0;
  3537  001A04  9881               	bcf	129,4,c	;volatile
  3538  001A06                     
  3539                           ;Lcd4Lignes.c: 228:     PORTAbits.RA5 = 0;
  3540  001A06  9A80               	bcf	128,5,c	;volatile
  3541  001A08                     
  3542                           ;Lcd4Lignes.c: 230:     lcd_ecrireDonnees(0x03);
  3543  001A08  0E03               	movlw	3
  3544  001A0A  ECB9  F00C         	call	_lcd_ecrireDonnees
  3545  001A0E                     
  3546                           ;Lcd4Lignes.c: 231:     lcd_strobeEnableBit();
  3547  001A0E  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3548  001A12                     
  3549                           ;Lcd4Lignes.c: 232:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3550  001A12  0E28               	movlw	40
  3551  001A14                     u1507:
  3552  001A14  FFFF               	dw	65535	; errata NOP
  3553  001A16  2EE8               	decfsz	wreg,f,c
  3554  001A18  D7FD               	bra	u1507
  3555  001A1A                     
  3556                           ;Lcd4Lignes.c: 235:     lcd_ecrireDonnees(0x03);
  3557  001A1A  0E03               	movlw	3
  3558  001A1C  ECB9  F00C         	call	_lcd_ecrireDonnees
  3559  001A20                     
  3560                           ;Lcd4Lignes.c: 236:     lcd_strobeEnableBit();
  3561  001A20  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3562  001A24                     
  3563                           ;Lcd4Lignes.c: 237:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3564  001A24  0E28               	movlw	40
  3565  001A26                     u1517:
  3566  001A26  FFFF               	dw	65535	; errata NOP
  3567  001A28  2EE8               	decfsz	wreg,f,c
  3568  001A2A  D7FD               	bra	u1517
  3569  001A2C                     
  3570                           ;Lcd4Lignes.c: 239:     lcd_ecrireDonnees(0x03);
  3571  001A2C  0E03               	movlw	3
  3572  001A2E  ECB9  F00C         	call	_lcd_ecrireDonnees
  3573  001A32                     
  3574                           ;Lcd4Lignes.c: 240:     lcd_strobeEnableBit();
  3575  001A32  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3576  001A36                     
  3577                           ;Lcd4Lignes.c: 241:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3578  001A36  0E28               	movlw	40
  3579  001A38                     u1527:
  3580  001A38  FFFF               	dw	65535	; errata NOP
  3581  001A3A  2EE8               	decfsz	wreg,f,c
  3582  001A3C  D7FD               	bra	u1527
  3583  001A3E                     
  3584                           ;Lcd4Lignes.c: 243:     lcd_ecrireDonnees(0x02);
  3585  001A3E  0E02               	movlw	2
  3586  001A40  ECB9  F00C         	call	_lcd_ecrireDonnees
  3587  001A44                     
  3588                           ;Lcd4Lignes.c: 244:     lcd_strobeEnableBit();
  3589  001A44  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  3590  001A48                     
  3591                           ;Lcd4Lignes.c: 245:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  3592  001A48  0E28               	movlw	40
  3593  001A4A                     u1537:
  3594  001A4A  FFFF               	dw	65535	; errata NOP
  3595  001A4C  2EE8               	decfsz	wreg,f,c
  3596  001A4E  D7FD               	bra	u1537
  3597  001A50                     
  3598                           ;Lcd4Lignes.c: 247:     TRISA = 0b00001111;
  3599  001A50  0E0F               	movlw	15
  3600  001A52  6E92               	movwf	146,c	;volatile
  3601  001A54  0012               	return		;funcret
  3602  001A56  FFFF               	dw	65535	; errata NOP
  3603  001A58                     __end_of_lcd_resetSequence:
  3604                           	opt callstack 0
  3605                           
  3606 ;; *************** function _lcd_initCGRam *****************
  3607 ;; Defined at:
  3608 ;;		line 415 in file "Lcd4Lignes.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  j               1   14[BANK0 ] unsigned char 
  3613 ;;  i               1   13[BANK0 ] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3623 ;;      Params:         0       0       0       0       0       0       0
  3624 ;;      Locals:         0       2       0       0       0       0       0
  3625 ;;      Temps:          0       2       0       0       0       0       0
  3626 ;;      Totals:         0       4       0       0       0       0       0
  3627 ;;Total ram usage:        4 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    6
  3630 ;; This function calls:
  3631 ;;		_lcd_curseurHome
  3632 ;;		_lcd_wrCom
  3633 ;;		_lcd_wrData
  3634 ;; This function is called by:
  3635 ;;		_lcd_init
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text17
  3640  001580                     __ptext17:
  3641                           	opt callstack 0
  3642  001580                     _lcd_initCGRam:
  3643                           	opt callstack 0
  3644  001580  FFFF               	dw	65535	; assembler added errata NOP
  3645  001582                     
  3646                           ;Lcd4Lignes.c: 417:     char i,j;;Lcd4Lignes.c: 419:     lcd_wrCom(0x40);
  3647  001582  0E40               	movlw	64
  3648  001584  EC1D  F00B         	call	_lcd_wrCom
  3649  001588                     
  3650                           ;Lcd4Lignes.c: 420:     for(i=0;i<8;i++)
  3651  001588  0E00               	movlw	0
  3652  00158A  0100               	movlb	0	; force () banked
  3653  00158C  6F6D               	movwf	lcd_initCGRam@i& (0+255),b
  3654  00158E                     
  3655                           ; BSR set to: 0
  3656  00158E  0E07               	movlw	7
  3657  001590  0100               	movlb	0	; force () banked
  3658  001592  656D               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3659  001594  EFCE  F00A         	goto	u1211
  3660  001598  EFD1  F00A         	goto	u1210
  3661  00159C                     u1211:
  3662  00159C  FFFF               	dw	65535	; assembler added errata NOP
  3663  00159E  EFD4  F00A         	goto	l2161
  3664  0015A2                     u1210:
  3665  0015A2  FFFF               	dw	65535	; assembler added errata NOP
  3666  0015A4  EF18  F00B         	goto	l2177
  3667  0015A8                     l2161:
  3668  0015A8  FFFF               	dw	65535	; assembler added errata NOP
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;Lcd4Lignes.c: 421:     {;Lcd4Lignes.c: 422:         for(j=0;j<8;j++)
  3672  0015AA  0E00               	movlw	0
  3673  0015AC  0100               	movlb	0	; force () banked
  3674  0015AE  6F6E               	movwf	lcd_initCGRam@j& (0+255),b
  3675  0015B0                     
  3676                           ; BSR set to: 0
  3677  0015B0  0E07               	movlw	7
  3678  0015B2  0100               	movlb	0	; force () banked
  3679  0015B4  656E               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3680  0015B6  EFDF  F00A         	goto	u1221
  3681  0015BA  EFE2  F00A         	goto	u1220
  3682  0015BE                     u1221:
  3683  0015BE  FFFF               	dw	65535	; assembler added errata NOP
  3684  0015C0  EFE5  F00A         	goto	l2167
  3685  0015C4                     u1220:
  3686  0015C4  FFFF               	dw	65535	; assembler added errata NOP
  3687  0015C6  EF0B  F00B         	goto	l2173
  3688  0015CA                     l2167:
  3689  0015CA  FFFF               	dw	65535	; assembler added errata NOP
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;Lcd4Lignes.c: 423:             lcd_wrData(matCGRAM[i][j]);
  3693  0015CC  0100               	movlb	0	; force () banked
  3694  0015CE  516D               	movf	lcd_initCGRam@i& (0+255),w,b
  3695  0015D0  0D08               	mullw	8
  3696  0015D2  0E00               	movlw	low _matCGRAM
  3697  0015D4  0100               	movlb	0	; force () banked
  3698  0015D6  6F6B               	movwf	??_lcd_initCGRam& (0+255),b
  3699  0015D8  0E01               	movlw	high _matCGRAM
  3700  0015DA  6F6C               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3701  0015DC  50F3               	movf	243,w,c
  3702  0015DE  276B               	addwf	??_lcd_initCGRam& (0+255),f,b
  3703  0015E0  50F4               	movf	244,w,c
  3704  0015E2  236C               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3705  0015E4  0100               	movlb	0	; force () banked
  3706  0015E6  516E               	movf	lcd_initCGRam@j& (0+255),w,b
  3707  0015E8  0100               	movlb	0	; force () banked
  3708  0015EA  256B               	addwf	??_lcd_initCGRam& (0+255),w,b
  3709  0015EC  6ED9               	movwf	fsr2l,c
  3710  0015EE  0100               	movlb	0	; force () banked
  3711  0015F0  0E00               	movlw	0
  3712  0015F2  0100               	movlb	0	; force () banked
  3713  0015F4  216C               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3714  0015F6  6EDA               	movwf	fsr2h,c
  3715  0015F8  50DF               	movf	indf2,w,c
  3716  0015FA  ECBB  F00D         	call	_lcd_wrData
  3717  0015FE  0100               	movlb	0	; force () banked
  3718  001600  2B6E               	incf	lcd_initCGRam@j& (0+255),f,b
  3719  001602                     
  3720                           ; BSR set to: 0
  3721  001602  0E07               	movlw	7
  3722  001604  0100               	movlb	0	; force () banked
  3723  001606  656E               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3724  001608  EF08  F00B         	goto	u1231
  3725  00160C  EF0B  F00B         	goto	u1230
  3726  001610                     u1231:
  3727  001610  FFFF               	dw	65535	; assembler added errata NOP
  3728  001612  EFE5  F00A         	goto	l2167
  3729  001616                     u1230:
  3730  001616                     l2173:
  3731  001616  FFFF               	dw	65535	; assembler added errata NOP
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;Lcd4Lignes.c: 424:     }
  3735  001618  0100               	movlb	0	; force () banked
  3736  00161A  2B6D               	incf	lcd_initCGRam@i& (0+255),f,b
  3737  00161C                     
  3738                           ; BSR set to: 0
  3739  00161C  0E07               	movlw	7
  3740  00161E  0100               	movlb	0	; force () banked
  3741  001620  656D               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3742  001622  EF15  F00B         	goto	u1241
  3743  001626  EF18  F00B         	goto	u1240
  3744  00162A                     u1241:
  3745  00162A  FFFF               	dw	65535	; assembler added errata NOP
  3746  00162C  EFD4  F00A         	goto	l2161
  3747  001630                     u1240:
  3748  001630                     l2177:
  3749  001630  FFFF               	dw	65535	; assembler added errata NOP
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;Lcd4Lignes.c: 425:     lcd_curseurHome();
  3753  001632  ECBB  F00E         	call	_lcd_curseurHome	;wreg free
  3754  001636  0012               	return		;funcret
  3755  001638  FFFF               	dw	65535	; errata NOP
  3756  00163A                     __end_of_lcd_initCGRam:
  3757                           	opt callstack 0
  3758                           
  3759 ;; *************** function _lcd_curseurHome *****************
  3760 ;; Defined at:
  3761 ;;		line 286 in file "Lcd4Lignes.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;		None
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;		None
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3775 ;;      Params:         0       0       0       0       0       0       0
  3776 ;;      Locals:         0       0       0       0       0       0       0
  3777 ;;      Temps:          0       0       0       0       0       0       0
  3778 ;;      Totals:         0       0       0       0       0       0       0
  3779 ;;Total ram usage:        0 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    5
  3782 ;; This function calls:
  3783 ;;		_lcd_wrCom
  3784 ;; This function is called by:
  3785 ;;		_lcd_initCGRam
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text18
  3790  001D76                     __ptext18:
  3791                           	opt callstack 0
  3792  001D76                     _lcd_curseurHome:
  3793                           	opt callstack 0
  3794  001D76  FFFF               	dw	65535	; assembler added errata NOP
  3795  001D78                     
  3796                           ;Lcd4Lignes.c: 288:     lcd_wrCom(0x02);
  3797  001D78  0E02               	movlw	2
  3798  001D7A  EC1D  F00B         	call	_lcd_wrCom
  3799  001D7E  0012               	return		;funcret
  3800  001D80  FFFF               	dw	65535	; errata NOP
  3801  001D82                     __end_of_lcd_curseurHome:
  3802                           	opt callstack 0
  3803                           
  3804 ;; *************** function _lcd_effaceLigne *****************
  3805 ;; Defined at:
  3806 ;;		line 337 in file "Lcd4Lignes.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  y               1    wreg     unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  y               1   15[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3820 ;;      Params:         0       0       0       0       0       0       0
  3821 ;;      Locals:         0       1       0       0       0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0
  3823 ;;      Totals:         0       1       0       0       0       0       0
  3824 ;;Total ram usage:        1 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    6
  3827 ;; This function calls:
  3828 ;;		_lcd_effaceChar
  3829 ;;		_lcd_gotoXY
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text19
  3836  001D52                     __ptext19:
  3837                           	opt callstack 0
  3838  001D52                     _lcd_effaceLigne:
  3839                           	opt callstack 0
  3840  001D52  FFFF               	dw	65535	; assembler added errata NOP
  3841                           
  3842                           ;incstack = 0
  3843                           ;lcd_effaceLigne@y stored from wreg
  3844  001D54  0100               	movlb	0	; force () banked
  3845  001D56  6F6F               	movwf	lcd_effaceLigne@y& (0+255),b
  3846  001D58                     
  3847                           ;Lcd4Lignes.c: 337: void lcd_effaceLigne(unsigned char y);Lcd4Lignes.c: 338: {;Lcd4Ligne
      +                          s.c: 339:     lcd_gotoXY(1,y);
  3848  001D58  C06F  F06B         	movff	lcd_effaceLigne@y,lcd_gotoXY@y
  3849  001D5C  0E01               	movlw	1
  3850  001D5E  EC6B  F00B         	call	_lcd_gotoXY
  3851                           
  3852                           ;Lcd4Lignes.c: 340:     lcd_effaceChar(20);
  3853  001D62  0E14               	movlw	20
  3854  001D64  EC72  F00E         	call	_lcd_effaceChar
  3855                           
  3856                           ;Lcd4Lignes.c: 341:     lcd_gotoXY(1,y);
  3857  001D68  C06F  F06B         	movff	lcd_effaceLigne@y,lcd_gotoXY@y
  3858  001D6C  0E01               	movlw	1
  3859  001D6E  EC6B  F00B         	call	_lcd_gotoXY
  3860  001D72  0012               	return		;funcret
  3861  001D74  FFFF               	dw	65535	; errata NOP
  3862  001D76                     __end_of_lcd_effaceLigne:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _lcd_gotoXY *****************
  3866 ;; Defined at:
  3867 ;;		line 312 in file "Lcd4Lignes.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  x               1    wreg     unsigned char 
  3870 ;;  y               1   11[BANK0 ] unsigned char 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  x               1   14[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  3882 ;;      Params:         0       1       0       0       0       0       0
  3883 ;;      Locals:         0       1       0       0       0       0       0
  3884 ;;      Temps:          0       2       0       0       0       0       0
  3885 ;;      Totals:         0       4       0       0       0       0       0
  3886 ;;Total ram usage:        4 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    5
  3889 ;; This function calls:
  3890 ;;		_lcd_wrCom
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;;		_lcd_effaceLigne
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text20
  3898  0016D6                     __ptext20:
  3899                           	opt callstack 0
  3900  0016D6                     _lcd_gotoXY:
  3901                           	opt callstack 0
  3902  0016D6  FFFF               	dw	65535	; assembler added errata NOP
  3903                           
  3904                           ;incstack = 0
  3905                           ;lcd_gotoXY@x stored from wreg
  3906  0016D8  0100               	movlb	0	; force () banked
  3907  0016DA  6F6E               	movwf	lcd_gotoXY@x& (0+255),b
  3908  0016DC                     
  3909                           ;Lcd4Lignes.c: 312: void lcd_gotoXY(unsigned char x, unsigned char y);Lcd4Lignes.c: 313:
      +                           {;Lcd4Lignes.c: 314:     switch(y)
  3910  0016DC  EF93  F00B         	goto	l2113
  3911  0016E0                     l2103:
  3912  0016E0  FFFF               	dw	65535	; assembler added errata NOP
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;Lcd4Lignes.c: 317:             lcd_wrCom((x-1+0x00)|0x80);
  3916  0016E2  0100               	movlb	0	; force () banked
  3917  0016E4  056E               	decf	lcd_gotoXY@x& (0+255),w,b
  3918  0016E6  0980               	iorlw	128
  3919  0016E8  EC1D  F00B         	call	_lcd_wrCom
  3920                           
  3921                           ;Lcd4Lignes.c: 318:             break;
  3922  0016EC  EFB4  F00B         	goto	l191
  3923  0016F0                     l2105:
  3924  0016F0  FFFF               	dw	65535	; assembler added errata NOP
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;Lcd4Lignes.c: 320:             lcd_wrCom((x-1+0x40)|0x80);
  3928  0016F2  0100               	movlb	0	; force () banked
  3929  0016F4  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3930  0016F6  0F3F               	addlw	63
  3931  0016F8  0980               	iorlw	128
  3932  0016FA  EC1D  F00B         	call	_lcd_wrCom
  3933                           
  3934                           ;Lcd4Lignes.c: 321:             break;
  3935  0016FE  EFB4  F00B         	goto	l191
  3936  001702                     l2107:
  3937  001702  FFFF               	dw	65535	; assembler added errata NOP
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;Lcd4Lignes.c: 323:             lcd_wrCom((x-1+0x14)|0x80);
  3941  001704  0100               	movlb	0	; force () banked
  3942  001706  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3943  001708  0F13               	addlw	19
  3944  00170A  0980               	iorlw	128
  3945  00170C  EC1D  F00B         	call	_lcd_wrCom
  3946                           
  3947                           ;Lcd4Lignes.c: 324:             break;
  3948  001710  EFB4  F00B         	goto	l191
  3949  001714                     l2109:
  3950  001714  FFFF               	dw	65535	; assembler added errata NOP
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;Lcd4Lignes.c: 326:             lcd_wrCom((x-1+0x54)|0x80);
  3954  001716  0100               	movlb	0	; force () banked
  3955  001718  516E               	movf	lcd_gotoXY@x& (0+255),w,b
  3956  00171A  0F53               	addlw	83
  3957  00171C  0980               	iorlw	128
  3958  00171E  EC1D  F00B         	call	_lcd_wrCom
  3959                           
  3960                           ;Lcd4Lignes.c: 327:             break;
  3961  001722  EFB4  F00B         	goto	l191
  3962  001726                     l2113:
  3963  001726  FFFF               	dw	65535	; assembler added errata NOP
  3964  001728  0100               	movlb	0	; force () banked
  3965  00172A  516B               	movf	lcd_gotoXY@y& (0+255),w,b
  3966  00172C  0100               	movlb	0	; force () banked
  3967  00172E  6F6C               	movwf	??_lcd_gotoXY& (0+255),b
  3968  001730  6B6D               	clrf	(??_lcd_gotoXY+1)& (0+255),b
  3969                           
  3970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3971                           ; Switch size 1, requested type "simple"
  3972                           ; Number of cases is 1, Range of values is 0 to 0
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            4     3 (average)
  3976                           ;	Chosen strategy is simple_byte
  3977  001732  516D               	movf	(??_lcd_gotoXY+1)& (0+255),w,b
  3978  001734  0A00               	xorlw	0	; case 0
  3979  001736  B4D8               	btfsc	status,2,c
  3980  001738  EFA0  F00B         	goto	l2517
  3981  00173C  EFB4  F00B         	goto	l191
  3982  001740                     l2517:
  3983  001740  FFFF               	dw	65535	; assembler added errata NOP
  3984                           
  3985                           ; BSR set to: 0
  3986                           ; Switch size 1, requested type "simple"
  3987                           ; Number of cases is 4, Range of values is 1 to 4
  3988                           ; switch strategies available:
  3989                           ; Name         Instructions Cycles
  3990                           ; simple_byte           13     7 (average)
  3991                           ;	Chosen strategy is simple_byte
  3992  001742  516C               	movf	??_lcd_gotoXY& (0+255),w,b
  3993  001744  0A01               	xorlw	1	; case 1
  3994  001746  B4D8               	btfsc	status,2,c
  3995  001748  EF70  F00B         	goto	l2103
  3996  00174C  0A03               	xorlw	3	; case 2
  3997  00174E  B4D8               	btfsc	status,2,c
  3998  001750  EF78  F00B         	goto	l2105
  3999  001754  0A01               	xorlw	1	; case 3
  4000  001756  B4D8               	btfsc	status,2,c
  4001  001758  EF81  F00B         	goto	l2107
  4002  00175C  0A07               	xorlw	7	; case 4
  4003  00175E  B4D8               	btfsc	status,2,c
  4004  001760  EF8A  F00B         	goto	l2109
  4005  001764  EFB4  F00B         	goto	l191
  4006  001768                     l191:
  4007  001768  FFFF               	dw	65535	; assembler added errata NOP
  4008  00176A  0012               	return		;funcret
  4009  00176C  FFFF               	dw	65535	; errata NOP
  4010  00176E                     __end_of_lcd_gotoXY:
  4011                           	opt callstack 0
  4012                           
  4013 ;; *************** function _lcd_effaceChar *****************
  4014 ;; Defined at:
  4015 ;;		line 298 in file "Lcd4Lignes.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  nbr             1    wreg     unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  nbr             1   10[BANK0 ] unsigned char 
  4020 ;;  i               1   11[BANK0 ] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4030 ;;      Params:         0       0       0       0       0       0       0
  4031 ;;      Locals:         0       2       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         0       2       0       0       0       0       0
  4034 ;;Total ram usage:        2 bytes
  4035 ;; Hardware stack levels used:    1
  4036 ;; Hardware stack levels required when called:    5
  4037 ;; This function calls:
  4038 ;;		_lcd_wrData
  4039 ;; This function is called by:
  4040 ;;		_lcd_effaceLigne
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text21
  4045  001CE4                     __ptext21:
  4046                           	opt callstack 0
  4047  001CE4                     _lcd_effaceChar:
  4048                           	opt callstack 0
  4049  001CE4  FFFF               	dw	65535	; assembler added errata NOP
  4050                           
  4051                           ;incstack = 0
  4052                           ;lcd_effaceChar@nbr stored from wreg
  4053  001CE6  0100               	movlb	0	; force () banked
  4054  001CE8  6F6A               	movwf	lcd_effaceChar@nbr& (0+255),b
  4055  001CEA                     
  4056                           ;Lcd4Lignes.c: 298: void lcd_effaceChar(unsigned char nbr);Lcd4Lignes.c: 299: {;Lcd4Lign
      +                          es.c: 300:     char i;;Lcd4Lignes.c: 301:     for(i=0;i<nbr;i++)
  4057  001CEA  0E00               	movlw	0
  4058  001CEC  0100               	movlb	0	; force () banked
  4059  001CEE  6F6B               	movwf	lcd_effaceChar@i& (0+255),b
  4060  001CF0  EF80  F00E         	goto	l2185
  4061  001CF4                     l2181:
  4062  001CF4  FFFF               	dw	65535	; assembler added errata NOP
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;Lcd4Lignes.c: 302:         lcd_wrData(' ');
  4066  001CF6  0E20               	movlw	32
  4067  001CF8  ECBB  F00D         	call	_lcd_wrData
  4068  001CFC  0100               	movlb	0	; force () banked
  4069  001CFE  2B6B               	incf	lcd_effaceChar@i& (0+255),f,b
  4070  001D00                     l2185:
  4071  001D00  FFFF               	dw	65535	; assembler added errata NOP
  4072                           
  4073                           ; BSR set to: 0
  4074  001D02  0100               	movlb	0	; force () banked
  4075  001D04  516A               	movf	lcd_effaceChar@nbr& (0+255),w,b
  4076  001D06  0100               	movlb	0	; force () banked
  4077  001D08  5D6B               	subwf	lcd_effaceChar@i& (0+255),w,b
  4078  001D0A  A0D8               	btfss	status,0,c
  4079  001D0C  EF8A  F00E         	goto	u1251
  4080  001D10  EF8D  F00E         	goto	u1250
  4081  001D14                     u1251:
  4082  001D14  FFFF               	dw	65535	; assembler added errata NOP
  4083  001D16  EF7A  F00E         	goto	l2181
  4084  001D1A                     u1250:
  4085  001D1A  FFFF               	dw	65535	; assembler added errata NOP
  4086  001D1C                     
  4087                           ; BSR set to: 0
  4088  001D1C  0012               	return		;funcret
  4089  001D1E  FFFF               	dw	65535	; errata NOP
  4090  001D20                     __end_of_lcd_effaceChar:
  4091                           	opt callstack 0
  4092                           
  4093 ;; *************** function _lcd_wrData *****************
  4094 ;; Defined at:
  4095 ;;		line 186 in file "Lcd4Lignes.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  caractere       1    wreg     unsigned char 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  caractere       1    9[BANK0 ] unsigned char 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      unsigned char 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4109 ;;      Params:         0       0       0       0       0       0       0
  4110 ;;      Locals:         0       1       0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0
  4112 ;;      Totals:         0       1       0       0       0       0       0
  4113 ;;Total ram usage:        1 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    4
  4116 ;; This function calls:
  4117 ;;		_lcd_busy
  4118 ;;		_lcd_ecrireDonnees
  4119 ;;		_lcd_strobeEnableBit
  4120 ;; This function is called by:
  4121 ;;		_lcd_effaceChar
  4122 ;;		_lcd_ecritChar
  4123 ;;		_lcd_initCGRam
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text22
  4128  001B76                     __ptext22:
  4129                           	opt callstack 0
  4130  001B76                     _lcd_wrData:
  4131                           	opt callstack 0
  4132  001B76  FFFF               	dw	65535	; assembler added errata NOP
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;incstack = 0
  4136                           ;lcd_wrData@caractere stored from wreg
  4137  001B78  0100               	movlb	0	; force () banked
  4138  001B7A  6F69               	movwf	lcd_wrData@caractere& (0+255),b
  4139  001B7C                     
  4140                           ;Lcd4Lignes.c: 186: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 187: {;Lcd4Lignes.c: 188:     lcd_busy();
  4141  001B7C  EC8D  F00D         	call	_lcd_busy	;wreg free
  4142  001B80                     
  4143                           ;Lcd4Lignes.c: 189:     TRISA = 0b00000000;
  4144  001B80  0E00               	movlw	0
  4145  001B82  6E92               	movwf	146,c	;volatile
  4146  001B84                     
  4147                           ;Lcd4Lignes.c: 190:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4148  001B84  D000               	nop2		;2 cycle nop
  4149  001B86  D000               	nop2		;2 cycle nop
  4150  001B88  D000               	nop2		;2 cycle nop
  4151  001B8A  D000               	nop2		;2 cycle nop
  4152  001B8C                     
  4153                           ;Lcd4Lignes.c: 192:     PORTBbits.RB4 = 1;
  4154  001B8C  8881               	bsf	129,4,c	;volatile
  4155  001B8E                     
  4156                           ;Lcd4Lignes.c: 193:     PORTAbits.RA5 = 0;
  4157  001B8E  9A80               	bcf	128,5,c	;volatile
  4158  001B90                     
  4159                           ;Lcd4Lignes.c: 195:     lcd_ecrireDonnees(caractere >> 4);
  4160  001B90  0100               	movlb	0	; force () banked
  4161  001B92  3969               	swapf	lcd_wrData@caractere& (0+255),w,b
  4162  001B94  0B0F               	andlw	15
  4163  001B96  ECB9  F00C         	call	_lcd_ecrireDonnees
  4164  001B9A                     
  4165                           ;Lcd4Lignes.c: 196:     lcd_strobeEnableBit();
  4166  001B9A  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4167  001B9E                     
  4168                           ;Lcd4Lignes.c: 197:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4169  001B9E  D000               	nop2		;2 cycle nop
  4170  001BA0  D000               	nop2		;2 cycle nop
  4171  001BA2  D000               	nop2		;2 cycle nop
  4172  001BA4  D000               	nop2		;2 cycle nop
  4173  001BA6                     
  4174                           ;Lcd4Lignes.c: 199:     lcd_ecrireDonnees(caractere);
  4175  001BA6  0100               	movlb	0	; force () banked
  4176  001BA8  5169               	movf	lcd_wrData@caractere& (0+255),w,b
  4177  001BAA  ECB9  F00C         	call	_lcd_ecrireDonnees
  4178  001BAE                     
  4179                           ;Lcd4Lignes.c: 200:     lcd_strobeEnableBit();
  4180  001BAE  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4181  001BB2                     
  4182                           ;Lcd4Lignes.c: 201:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4183  001BB2  D000               	nop2		;2 cycle nop
  4184  001BB4  D000               	nop2		;2 cycle nop
  4185  001BB6  D000               	nop2		;2 cycle nop
  4186  001BB8  D000               	nop2		;2 cycle nop
  4187  001BBA                     
  4188                           ;Lcd4Lignes.c: 203:     TRISA = 0b00001111;
  4189  001BBA  0E0F               	movlw	15
  4190  001BBC  6E92               	movwf	146,c	;volatile
  4191  001BBE                     
  4192                           ;Lcd4Lignes.c: 204:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4193  001BBE  D000               	nop2		;2 cycle nop
  4194  001BC0  D000               	nop2		;2 cycle nop
  4195  001BC2  D000               	nop2		;2 cycle nop
  4196  001BC4  D000               	nop2		;2 cycle nop
  4197                           
  4198                           ;Lcd4Lignes.c: 205:     return(lcd_busy());
  4199  001BC6  EC8D  F00D         	call	_lcd_busy	;wreg free
  4200  001BCA  0012               	return		;funcret
  4201  001BCC  FFFF               	dw	65535	; errata NOP
  4202  001BCE                     __end_of_lcd_wrData:
  4203                           	opt callstack 0
  4204                           
  4205 ;; *************** function _lcd_cacheCurseur *****************
  4206 ;; Defined at:
  4207 ;;		line 399 in file "Lcd4Lignes.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;		None
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, status,2, status,0, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4221 ;;      Params:         0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    5
  4228 ;; This function calls:
  4229 ;;		_lcd_wrCom
  4230 ;; This function is called by:
  4231 ;;		_main
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text23
  4236  001D82                     __ptext23:
  4237                           	opt callstack 0
  4238  001D82                     _lcd_cacheCurseur:
  4239                           	opt callstack 0
  4240  001D82  FFFF               	dw	65535	; assembler added errata NOP
  4241  001D84                     
  4242                           ;Lcd4Lignes.c: 401:     lcd_wrCom(0x0C);
  4243  001D84  0E0C               	movlw	12
  4244  001D86  EC1D  F00B         	call	_lcd_wrCom
  4245  001D8A  0012               	return		;funcret
  4246  001D8C  FFFF               	dw	65535	; errata NOP
  4247  001D8E                     __end_of_lcd_cacheCurseur:
  4248                           	opt callstack 0
  4249                           
  4250 ;; *************** function _lcd_wrCom *****************
  4251 ;; Defined at:
  4252 ;;		line 154 in file "Lcd4Lignes.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  commande        1    wreg     unsigned char 
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;  commande        1   10[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      unsigned char 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4266 ;;      Params:         0       0       0       0       0       0       0
  4267 ;;      Locals:         0       1       0       0       0       0       0
  4268 ;;      Temps:          0       1       0       0       0       0       0
  4269 ;;      Totals:         0       2       0       0       0       0       0
  4270 ;;Total ram usage:        2 bytes
  4271 ;; Hardware stack levels used:    1
  4272 ;; Hardware stack levels required when called:    4
  4273 ;; This function calls:
  4274 ;;		_lcd_busy
  4275 ;;		_lcd_ecrireDonnees
  4276 ;;		_lcd_strobeEnableBit
  4277 ;; This function is called by:
  4278 ;;		_lcd_init
  4279 ;;		_lcd_curseurHome
  4280 ;;		_lcd_gotoXY
  4281 ;;		_lcd_ecritChar
  4282 ;;		_lcd_cacheCurseur
  4283 ;;		_lcd_initCGRam
  4284 ;;		_lcd_effaceAffichage
  4285 ;;		_lcd_montreCurseur
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text24
  4290  00163A                     __ptext24:
  4291                           	opt callstack 0
  4292  00163A                     _lcd_wrCom:
  4293                           	opt callstack 0
  4294  00163A  FFFF               	dw	65535	; assembler added errata NOP
  4295                           
  4296                           ;incstack = 0
  4297                           ;lcd_wrCom@commande stored from wreg
  4298  00163C  0100               	movlb	0	; force () banked
  4299  00163E  6F6A               	movwf	lcd_wrCom@commande& (0+255),b
  4300  001640                     
  4301                           ;Lcd4Lignes.c: 154: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           155: {;Lcd4Lignes.c: 156:     lcd_busy();
  4302  001640  EC8D  F00D         	call	_lcd_busy	;wreg free
  4303  001644                     
  4304                           ;Lcd4Lignes.c: 158:     TRISA = 0b00000000;
  4305  001644  0E00               	movlw	0
  4306  001646  6E92               	movwf	146,c	;volatile
  4307  001648                     
  4308                           ;Lcd4Lignes.c: 159:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4309  001648  D000               	nop2		;2 cycle nop
  4310  00164A  D000               	nop2		;2 cycle nop
  4311  00164C  D000               	nop2		;2 cycle nop
  4312  00164E  D000               	nop2		;2 cycle nop
  4313  001650                     
  4314                           ;Lcd4Lignes.c: 161:     PORTBbits.RB4 = 0;
  4315  001650  9881               	bcf	129,4,c	;volatile
  4316  001652                     
  4317                           ;Lcd4Lignes.c: 162:     PORTAbits.RA5 = 0;
  4318  001652  9A80               	bcf	128,5,c	;volatile
  4319  001654                     
  4320                           ;Lcd4Lignes.c: 164:     lcd_ecrireDonnees(commande >> 4);
  4321  001654  0100               	movlb	0	; force () banked
  4322  001656  396A               	swapf	lcd_wrCom@commande& (0+255),w,b
  4323  001658  0B0F               	andlw	15
  4324  00165A  ECB9  F00C         	call	_lcd_ecrireDonnees
  4325  00165E                     
  4326                           ;Lcd4Lignes.c: 165:     lcd_strobeEnableBit();
  4327  00165E  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4328  001662                     
  4329                           ;Lcd4Lignes.c: 166:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4330  001662  D000               	nop2		;2 cycle nop
  4331  001664  D000               	nop2		;2 cycle nop
  4332  001666  D000               	nop2		;2 cycle nop
  4333  001668  D000               	nop2		;2 cycle nop
  4334  00166A                     
  4335                           ;Lcd4Lignes.c: 168:     lcd_ecrireDonnees(commande);
  4336  00166A  0100               	movlb	0	; force () banked
  4337  00166C  516A               	movf	lcd_wrCom@commande& (0+255),w,b
  4338  00166E  ECB9  F00C         	call	_lcd_ecrireDonnees
  4339  001672                     
  4340                           ;Lcd4Lignes.c: 169:     lcd_strobeEnableBit();
  4341  001672  ECC7  F00E         	call	_lcd_strobeEnableBit	;wreg free
  4342  001676                     
  4343                           ;Lcd4Lignes.c: 170:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  4344  001676  0E28               	movlw	40
  4345  001678                     u1547:
  4346  001678  FFFF               	dw	65535	; errata NOP
  4347  00167A  2EE8               	decfsz	wreg,f,c
  4348  00167C  D7FD               	bra	u1547
  4349  00167E                     
  4350                           ;Lcd4Lignes.c: 172:     if ((commande == 0x01) || commande == 0x02)
  4351  00167E  0100               	movlb	0	; force () banked
  4352  001680  056A               	decf	lcd_wrCom@commande& (0+255),w,b
  4353  001682  B4D8               	btfsc	status,2,c
  4354  001684  EF46  F00B         	goto	u1001
  4355  001688  EF49  F00B         	goto	u1000
  4356  00168C                     u1001:
  4357  00168C  FFFF               	dw	65535	; assembler added errata NOP
  4358  00168E  EF55  F00B         	goto	l1957
  4359  001692                     u1000:
  4360  001692  FFFF               	dw	65535	; assembler added errata NOP
  4361  001694                     
  4362                           ; BSR set to: 0
  4363  001694  0E02               	movlw	2
  4364  001696  0100               	movlb	0	; force () banked
  4365  001698  196A               	xorwf	lcd_wrCom@commande& (0+255),w,b
  4366  00169A  A4D8               	btfss	status,2,c
  4367  00169C  EF52  F00B         	goto	u1011
  4368  0016A0  EF55  F00B         	goto	u1010
  4369  0016A4                     u1011:
  4370  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  4371  0016A6  EF60  F00B         	goto	l1959
  4372  0016AA                     u1010:
  4373  0016AA                     l1957:
  4374  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;Lcd4Lignes.c: 173:         _delay((unsigned long)((2)*(16000000/4000.0)));
  4378  0016AC  0E08               	movlw	8
  4379  0016AE  0100               	movlb	0	; force () banked
  4380  0016B0  6F69               	movwf	??_lcd_wrCom& (0+255),b
  4381  0016B2  0ECB               	movlw	203
  4382  0016B4                     u1557:
  4383  0016B4  FFFF               	dw	65535	; errata NOP
  4384  0016B6  2EE8               	decfsz	wreg,f,c
  4385  0016B8  D7FD               	bra	u1557
  4386  0016BA  2F69               	decfsz	??_lcd_wrCom& (0+255),f,b
  4387  0016BC  D7FB               	bra	u1557
  4388  0016BE  F000               	nop	
  4389  0016C0                     l1959:
  4390  0016C0  FFFF               	dw	65535	; assembler added errata NOP
  4391                           
  4392                           ;Lcd4Lignes.c: 175:     TRISA = 0b00001111;
  4393  0016C2  0E0F               	movlw	15
  4394  0016C4  6E92               	movwf	146,c	;volatile
  4395  0016C6                     
  4396                           ;Lcd4Lignes.c: 176:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  4397  0016C6  D000               	nop2		;2 cycle nop
  4398  0016C8  D000               	nop2		;2 cycle nop
  4399  0016CA  D000               	nop2		;2 cycle nop
  4400  0016CC  D000               	nop2		;2 cycle nop
  4401  0016CE                     
  4402                           ;Lcd4Lignes.c: 177:     return(lcd_busy());
  4403  0016CE  EC8D  F00D         	call	_lcd_busy	;wreg free
  4404  0016D2  0012               	return		;funcret
  4405  0016D4  FFFF               	dw	65535	; errata NOP
  4406  0016D6                     __end_of_lcd_wrCom:
  4407                           	opt callstack 0
  4408                           
  4409 ;; *************** function _lcd_strobeEnableBit *****************
  4410 ;; Defined at:
  4411 ;;		line 429 in file "Lcd4Lignes.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		None
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4425 ;;      Params:         0       0       0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0
  4428 ;;      Totals:         0       0       0       0       0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_lcd_wrCom
  4436 ;;		_lcd_wrData
  4437 ;;		_lcd_resetSequence
  4438 ;; This function uses a non-reentrant model
  4439 ;;
  4440                           
  4441                           	psect	text25
  4442  001D8E                     __ptext25:
  4443                           	opt callstack 0
  4444  001D8E                     _lcd_strobeEnableBit:
  4445                           	opt callstack 0
  4446  001D8E  FFFF               	dw	65535	; assembler added errata NOP
  4447  001D90                     
  4448                           ;Lcd4Lignes.c: 431:     PORTAbits.RA4 = 1;
  4449  001D90  8880               	bsf	128,4,c	;volatile
  4450                           
  4451                           ;Lcd4Lignes.c: 432:     __nop();
  4452  001D92  F000               	nop	
  4453                           
  4454                           ;Lcd4Lignes.c: 433:     PORTAbits.RA4 = 0;
  4455  001D94  9880               	bcf	128,4,c	;volatile
  4456  001D96  0012               	return		;funcret
  4457  001D98  FFFF               	dw	65535	; errata NOP
  4458  001D9A                     __end_of_lcd_strobeEnableBit:
  4459                           	opt callstack 0
  4460                           
  4461 ;; *************** function _lcd_ecrireDonnees *****************
  4462 ;; Defined at:
  4463 ;;		line 105 in file "Lcd4Lignes.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  donnee          1    wreg     unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  donnee          1    8[BANK0 ] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4477 ;;      Params:         0       0       0       0       0       0       0
  4478 ;;      Locals:         0       1       0       0       0       0       0
  4479 ;;      Temps:          0       1       0       0       0       0       0
  4480 ;;      Totals:         0       2       0       0       0       0       0
  4481 ;;Total ram usage:        2 bytes
  4482 ;; Hardware stack levels used:    1
  4483 ;; Hardware stack levels required when called:    2
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_lcd_wrCom
  4488 ;;		_lcd_wrData
  4489 ;;		_lcd_resetSequence
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text26
  4494  001972                     __ptext26:
  4495                           	opt callstack 0
  4496  001972                     _lcd_ecrireDonnees:
  4497                           	opt callstack 0
  4498  001972  FFFF               	dw	65535	; assembler added errata NOP
  4499                           
  4500                           ;incstack = 0
  4501                           ;lcd_ecrireDonnees@donnee stored from wreg
  4502  001974  0100               	movlb	0	; force () banked
  4503  001976  6F68               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  4504  001978                     
  4505                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  4506  001978  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4507  00197C  0E01               	movlw	1
  4508  00197E  0100               	movlb	0	; force () banked
  4509  001980  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4510  001982  5080               	movf	128,w,c	;volatile
  4511  001984  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4512  001986  0BFE               	andlw	-2
  4513  001988  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4514  00198A  6E80               	movwf	128,c	;volatile
  4515                           
  4516                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  4517  00198C  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4518  001990  90D8               	bcf	status,0,c
  4519  001992  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4520  001994  0E01               	movlw	1
  4521  001996  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4522  001998  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4523  00199A  5080               	movf	128,w,c	;volatile
  4524  00199C  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4525  00199E  0BFD               	andlw	-3
  4526  0019A0  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4527  0019A2  6E80               	movwf	128,c	;volatile
  4528                           
  4529                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  4530  0019A4  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4531  0019A8  90D8               	bcf	status,0,c
  4532  0019AA  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4533  0019AC  90D8               	bcf	status,0,c
  4534  0019AE  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4535  0019B0  0E01               	movlw	1
  4536  0019B2  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4537  0019B4  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4538  0019B6  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4539  0019B8  5080               	movf	128,w,c	;volatile
  4540  0019BA  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4541  0019BC  0BFB               	andlw	-5
  4542  0019BE  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4543  0019C0  6E80               	movwf	128,c	;volatile
  4544                           
  4545                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  4546  0019C2  C068  F067         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  4547  0019C6  90D8               	bcf	status,0,c
  4548  0019C8  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4549  0019CA  90D8               	bcf	status,0,c
  4550  0019CC  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4551  0019CE  90D8               	bcf	status,0,c
  4552  0019D0  3367               	rrcf	??_lcd_ecrireDonnees& (0+255),f,b
  4553  0019D2  0E01               	movlw	1
  4554  0019D4  1767               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  4555  0019D6  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4556  0019D8  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4557  0019DA  4767               	rlncf	??_lcd_ecrireDonnees& (0+255),f,b
  4558  0019DC  5080               	movf	128,w,c	;volatile
  4559  0019DE  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4560  0019E0  0BF7               	andlw	-9
  4561  0019E2  1967               	xorwf	??_lcd_ecrireDonnees& (0+255),w,b
  4562  0019E4  6E80               	movwf	128,c	;volatile
  4563  0019E6                     
  4564                           ; BSR set to: 0
  4565  0019E6  0012               	return		;funcret
  4566  0019E8  FFFF               	dw	65535	; errata NOP
  4567  0019EA                     __end_of_lcd_ecrireDonnees:
  4568                           	opt callstack 0
  4569                           
  4570 ;; *************** function _lcd_busy *****************
  4571 ;; Defined at:
  4572 ;;		line 122 in file "Lcd4Lignes.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  adresse         1    8[BANK0 ] unsigned char 
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      unsigned char 
  4579 ;; Registers used:
  4580 ;;		wreg, status,2, status,0, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4586 ;;      Params:         0       0       0       0       0       0       0
  4587 ;;      Locals:         0       1       0       0       0       0       0
  4588 ;;      Temps:          0       1       0       0       0       0       0
  4589 ;;      Totals:         0       2       0       0       0       0       0
  4590 ;;Total ram usage:        2 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    3
  4593 ;; This function calls:
  4594 ;;		_lcd_lireDonnees
  4595 ;; This function is called by:
  4596 ;;		_lcd_wrCom
  4597 ;;		_lcd_wrData
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text27
  4602  001B1A                     __ptext27:
  4603                           	opt callstack 0
  4604  001B1A                     _lcd_busy:
  4605                           	opt callstack 0
  4606  001B1A  FFFF               	dw	65535	; assembler added errata NOP
  4607  001B1C                     
  4608                           ;Lcd4Lignes.c: 124:     unsigned char adresse;;Lcd4Lignes.c: 126:     PORTBbits.RB4 = 0;
  4609  001B1C  9881               	bcf	129,4,c	;volatile
  4610                           
  4611                           ;Lcd4Lignes.c: 127:     PORTAbits.RA5 = 1;
  4612  001B1E  8A80               	bsf	128,5,c	;volatile
  4613  001B20                     l153:
  4614  001B20  FFFF               	dw	65535	; assembler added errata NOP
  4615                           
  4616                           ;Lcd4Lignes.c: 130:     {;Lcd4Lignes.c: 131:         PORTAbits.RA4 = 1;
  4617  001B22  8880               	bsf	128,4,c	;volatile
  4618                           
  4619                           ;Lcd4Lignes.c: 132:         __nop();
  4620  001B24  F000               	nop	
  4621  001B26                     
  4622                           ;Lcd4Lignes.c: 133:         adresse = lcd_lireDonnees() << 4;
  4623  001B26  ECCD  F00E         	call	_lcd_lireDonnees	;wreg free
  4624  001B2A  0100               	movlb	0	; force () banked
  4625  001B2C  6F67               	movwf	??_lcd_busy& (0+255),b
  4626  001B2E  3967               	swapf	??_lcd_busy& (0+255),w,b
  4627  001B30  0BF0               	andlw	240
  4628  001B32  0100               	movlb	0	; force () banked
  4629  001B34  6F68               	movwf	lcd_busy@adresse& (0+255),b
  4630  001B36                     
  4631                           ; BSR set to: 0
  4632                           ;Lcd4Lignes.c: 134:         PORTAbits.RA4 = 0;
  4633  001B36  9880               	bcf	128,4,c	;volatile
  4634  001B38                     
  4635                           ; BSR set to: 0
  4636                           ;Lcd4Lignes.c: 135:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4637  001B38  D000               	nop2		;2 cycle nop
  4638  001B3A  D000               	nop2		;2 cycle nop
  4639  001B3C  D000               	nop2		;2 cycle nop
  4640  001B3E  D000               	nop2		;2 cycle nop
  4641  001B40                     
  4642                           ;Lcd4Lignes.c: 136:         PORTAbits.RA4 = 1;
  4643  001B40  8880               	bsf	128,4,c	;volatile
  4644  001B42                     
  4645                           ;Lcd4Lignes.c: 137:         __nop();
  4646  001B42  F000               	nop	
  4647                           
  4648                           ;Lcd4Lignes.c: 138:         adresse |= lcd_lireDonnees();
  4649  001B44  ECCD  F00E         	call	_lcd_lireDonnees	;wreg free
  4650  001B48  0100               	movlb	0	; force () banked
  4651  001B4A  1368               	iorwf	lcd_busy@adresse& (0+255),f,b
  4652  001B4C                     
  4653                           ; BSR set to: 0
  4654                           ;Lcd4Lignes.c: 139:         PORTAbits.RA4 = 0;
  4655  001B4C  9880               	bcf	128,4,c	;volatile
  4656  001B4E                     
  4657                           ; BSR set to: 0
  4658                           ;Lcd4Lignes.c: 140:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  4659  001B4E  D000               	nop2		;2 cycle nop
  4660  001B50  D000               	nop2		;2 cycle nop
  4661  001B52  D000               	nop2		;2 cycle nop
  4662  001B54  D000               	nop2		;2 cycle nop
  4663  001B56                     
  4664                           ;Lcd4Lignes.c: 141:     }
  4665  001B56  0100               	movlb	0	; force () banked
  4666  001B58  BF68               	btfsc	lcd_busy@adresse& (0+255),7,b
  4667  001B5A  EFB1  F00D         	goto	u811
  4668  001B5E  EFB4  F00D         	goto	u810
  4669  001B62                     u811:
  4670  001B62  FFFF               	dw	65535	; assembler added errata NOP
  4671  001B64  EF90  F00D         	goto	l153
  4672  001B68                     u810:
  4673  001B68  FFFF               	dw	65535	; assembler added errata NOP
  4674  001B6A                     
  4675                           ; BSR set to: 0
  4676                           ;Lcd4Lignes.c: 144:     PORTAbits.RA5 = 0;
  4677  001B6A  9A80               	bcf	128,5,c	;volatile
  4678  001B6C                     
  4679                           ; BSR set to: 0
  4680                           ;Lcd4Lignes.c: 145:     return(adresse&0x7f);
  4681  001B6C  0100               	movlb	0	; force () banked
  4682  001B6E  5168               	movf	lcd_busy@adresse& (0+255),w,b
  4683  001B70  0B7F               	andlw	127
  4684  001B72                     
  4685                           ; BSR set to: 0
  4686  001B72  0012               	return		;funcret
  4687  001B74  FFFF               	dw	65535	; errata NOP
  4688  001B76                     __end_of_lcd_busy:
  4689                           	opt callstack 0
  4690                           
  4691 ;; *************** function _lcd_lireDonnees *****************
  4692 ;; Defined at:
  4693 ;;		line 92 in file "Lcd4Lignes.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4707 ;;      Params:         0       0       0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    2
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_lcd_busy
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text28
  4722  001D9A                     __ptext28:
  4723                           	opt callstack 0
  4724  001D9A                     _lcd_lireDonnees:
  4725                           	opt callstack 0
  4726  001D9A  FFFF               	dw	65535	; assembler added errata NOP
  4727  001D9C                     
  4728                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  4729  001D9C  5080               	movf	128,w,c	;volatile
  4730  001D9E  0B0F               	andlw	15
  4731  001DA0  0012               	return		;funcret
  4732  001DA2  FFFF               	dw	65535	; errata NOP
  4733  001DA4                     __end_of_lcd_lireDonnees:
  4734                           	opt callstack 0
  4735                           
  4736 ;; *************** function _initialisation *****************
  4737 ;; Defined at:
  4738 ;;		line 73 in file "main.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4752 ;;      Params:         0       0       0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    2
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text29
  4767  0017FE                     __ptext29:
  4768                           	opt callstack 0
  4769  0017FE                     _initialisation:
  4770                           	opt callstack 0
  4771  0017FE  FFFF               	dw	65535	; assembler added errata NOP
  4772  001800                     
  4773                           ;main.c: 76:     ADCON1 = 0x07;
  4774  001800  0E07               	movlw	7
  4775  001802  6EC1               	movwf	193,c	;volatile
  4776                           
  4777                           ;main.c: 77:     CMCON = 0x07;
  4778  001804  0E07               	movlw	7
  4779  001806  6EB4               	movwf	180,c	;volatile
  4780                           
  4781                           ;main.c: 78:     TRISA = 0b11000000;
  4782  001808  0EC0               	movlw	192
  4783  00180A  6E92               	movwf	146,c	;volatile
  4784  00180C                     
  4785                           ;main.c: 79:     TRISBbits.RB4 = 0;
  4786  00180C  9893               	bcf	147,4,c	;volatile
  4787  00180E                     
  4788                           ;main.c: 80:     TRISCbits.RC0 = 0;
  4789  00180E  9094               	bcf	148,0,c	;volatile
  4790  001810                     
  4791                           ;main.c: 81:  TRISCbits.RC1 = 0;
  4792  001810  9294               	bcf	148,1,c	;volatile
  4793  001812                     
  4794                           ;main.c: 82:  TRISCbits.RC2 = 1;
  4795  001812  8494               	bsf	148,2,c	;volatile
  4796  001814                     
  4797                           ;main.c: 83:     TRISDbits.RD7 = 0;
  4798  001814  9E95               	bcf	149,7,c	;volatile
  4799  001816                     
  4800                           ;main.c: 86:     T0CONbits.TMR0ON = 0;
  4801  001816  9ED5               	bcf	213,7,c	;volatile
  4802  001818                     
  4803                           ;main.c: 87:     T0CONbits.T08BIT = 0;
  4804  001818  9CD5               	bcf	213,6,c	;volatile
  4805  00181A                     
  4806                           ;main.c: 88:     T0CONbits.T0CS = 0;
  4807  00181A  9AD5               	bcf	213,5,c	;volatile
  4808  00181C                     
  4809                           ;main.c: 89:     T0CONbits.PSA = 0;
  4810  00181C  96D5               	bcf	213,3,c	;volatile
  4811                           
  4812                           ;main.c: 90:     T0CONbits.T0PS = 0b001;
  4813  00181E  50D5               	movf	213,w,c	;volatile
  4814  001820  0BF8               	andlw	-8
  4815  001822  0901               	iorlw	1
  4816  001824  6ED5               	movwf	213,c	;volatile
  4817                           
  4818                           ;main.c: 92:     TMR0H = 0b00010101;
  4819  001826  0E15               	movlw	21
  4820  001828  6ED7               	movwf	215,c	;volatile
  4821                           
  4822                           ;main.c: 93:     TMR0L = 0b10100000;
  4823  00182A  0EA0               	movlw	160
  4824  00182C  6ED6               	movwf	214,c	;volatile
  4825  00182E                     
  4826                           ;main.c: 94:     T0CONbits.TMR0ON = 1;
  4827  00182E  8ED5               	bsf	213,7,c	;volatile
  4828  001830                     
  4829                           ;main.c: 97:     INTCONbits.TMR0IF = 0;
  4830  001830  94F2               	bcf	242,2,c	;volatile
  4831  001832                     
  4832                           ;main.c: 98:     INTCONbits.TMR0IE = 1;
  4833  001832  8AF2               	bsf	242,5,c	;volatile
  4834  001834                     
  4835                           ;main.c: 99:     INTCON2bits.TMR0IP = 1;
  4836  001834  84F1               	bsf	241,2,c	;volatile
  4837  001836                     
  4838                           ;main.c: 102:     T1CONbits.TMR1ON = 0;
  4839  001836  90CD               	bcf	205,0,c	;volatile
  4840  001838                     
  4841                           ;main.c: 103:     T1CONbits.RD16 = 1;
  4842  001838  8ECD               	bsf	205,7,c	;volatile
  4843                           
  4844                           ;main.c: 104:     T1CONbits.T1CKPS = 0b11;
  4845  00183A  0E30               	movlw	48
  4846  00183C  12CD               	iorwf	205,f,c	;volatile
  4847  00183E                     
  4848                           ;main.c: 105:     T1CONbits.SOSCEN = 0;
  4849  00183E  96CD               	bcf	205,3,c	;volatile
  4850  001840                     
  4851                           ;main.c: 106:     T1CONbits.TMR1CS = 0;
  4852  001840  92CD               	bcf	205,1,c	;volatile
  4853                           
  4854                           ;main.c: 107:     TMR1 = 0b0011110010110000;
  4855  001842  0E3C               	movlw	60
  4856  001844  6ECF               	movwf	207,c	;volatile
  4857  001846  0EB0               	movlw	176
  4858  001848  6ECE               	movwf	206,c	;volatile
  4859  00184A                     
  4860                           ;main.c: 108:     T1CONbits.TMR1ON = 1;
  4861  00184A  80CD               	bsf	205,0,c	;volatile
  4862  00184C                     
  4863                           ;main.c: 111:     PIR1bits.TMR1IF = 0;
  4864  00184C  909E               	bcf	158,0,c	;volatile
  4865  00184E                     
  4866                           ;main.c: 112:     PIE1bits.TMR1IE = 1;
  4867  00184E  809D               	bsf	157,0,c	;volatile
  4868  001850                     
  4869                           ;main.c: 113:     IPR1bits.TMR1IP = 1;
  4870  001850  809F               	bsf	159,0,c	;volatile
  4871  001852                     
  4872                           ;main.c: 116:     T3CONbits.TMR3ON = 0;
  4873  001852  90B1               	bcf	177,0,c	;volatile
  4874  001854                     
  4875                           ;main.c: 117:     T3CONbits.RD16 = 1;
  4876  001854  8EB1               	bsf	177,7,c	;volatile
  4877  001856                     
  4878                           ;main.c: 118:     T3CONbits.T3ECCP1 = 1;
  4879  001856  8CB1               	bsf	177,6,c	;volatile
  4880                           
  4881                           ;main.c: 119:     T3CONbits.T3CKPS = 0b11;
  4882  001858  0E30               	movlw	48
  4883  00185A  12B1               	iorwf	177,f,c	;volatile
  4884  00185C                     
  4885                           ;main.c: 120:     T3CONbits.TMR3CS = 0;
  4886  00185C  92B1               	bcf	177,1,c	;volatile
  4887                           
  4888                           ;main.c: 126:     CCPR1 = 0;
  4889  00185E  0E00               	movlw	0
  4890  001860  6EBF               	movwf	191,c	;volatile
  4891  001862  0E00               	movlw	0
  4892  001864  6EBE               	movwf	190,c	;volatile
  4893                           
  4894                           ;main.c: 127:     CCP1CONbits.CCP1M = 0b0101;
  4895  001866  50BD               	movf	189,w,c	;volatile
  4896  001868  0BF0               	andlw	-16
  4897  00186A  0905               	iorlw	5
  4898  00186C  6EBD               	movwf	189,c	;volatile
  4899  00186E                     
  4900                           ;main.c: 130:     PIR1bits.CCP1IF = 0;
  4901  00186E  949E               	bcf	158,2,c	;volatile
  4902  001870                     
  4903                           ;main.c: 131:     PIE1bits.CCP1IE = 1;
  4904  001870  849D               	bsf	157,2,c	;volatile
  4905  001872                     
  4906                           ;main.c: 132:     IPR1bits.CCP1IP = 1;
  4907  001872  849F               	bsf	159,2,c	;volatile
  4908  001874                     
  4909                           ;main.c: 135:  INTCONbits.PEIE = 1;
  4910  001874  8CF2               	bsf	242,6,c	;volatile
  4911  001876                     
  4912                           ;main.c: 136:     INTCONbits.GIE = 1;
  4913  001876  8EF2               	bsf	242,7,c	;volatile
  4914  001878                     
  4915                           ;main.c: 137:     RCONbits.IPEN = 1;
  4916  001878  8ED0               	bsf	208,7,c	;volatile
  4917  00187A  0012               	return		;funcret
  4918  00187C  FFFF               	dw	65535	; errata NOP
  4919  00187E                     __end_of_initialisation:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function ___lwdiv *****************
  4923 ;; Defined at:
  4924 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  dividend        2    7[BANK0 ] unsigned int 
  4927 ;;  divisor         2    9[BANK0 ] unsigned int 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  quotient        2   11[BANK0 ] unsigned int 
  4930 ;;  counter         1   13[BANK0 ] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  2    7[BANK0 ] unsigned int 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  4940 ;;      Params:         0       4       0       0       0       0       0
  4941 ;;      Locals:         0       3       0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0
  4943 ;;      Totals:         0       7       0       0       0       0       0
  4944 ;;Total ram usage:        7 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    2
  4947 ;; This function calls:
  4948 ;;		Nothing
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text30
  4955  00176E                     __ptext30:
  4956                           	opt callstack 0
  4957  00176E                     ___lwdiv:
  4958                           	opt callstack 0
  4959  00176E  FFFF               	dw	65535	; assembler added errata NOP
  4960  001770  0E00               	movlw	0
  4961  001772  0100               	movlb	0	; () banked
  4962  001774  6F6C               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4963  001776  0E00               	movlw	0
  4964  001778  6F6B               	movwf	___lwdiv@quotient& (0+255),b
  4965  00177A                     
  4966                           ; BSR set to: 0
  4967  00177A  5169               	movf	___lwdiv@divisor& (0+255),w,b
  4968  00177C  116A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4969  00177E  B4D8               	btfsc	status,2,c
  4970  001780  EFC4  F00B         	goto	u1361
  4971  001784  EFC7  F00B         	goto	u1360
  4972  001788                     u1361:
  4973  001788  FFFF               	dw	65535	; assembler added errata NOP
  4974  00178A  EFF8  F00B         	goto	l790
  4975  00178E                     u1360:
  4976  00178E  FFFF               	dw	65535	; assembler added errata NOP
  4977  001790                     
  4978                           ; BSR set to: 0
  4979  001790  0E01               	movlw	1
  4980  001792  6F6D               	movwf	___lwdiv@counter& (0+255),b
  4981  001794  EFD1  F00B         	goto	l2369
  4982  001798                     l2367:
  4983  001798  FFFF               	dw	65535	; assembler added errata NOP
  4984                           
  4985                           ; BSR set to: 0
  4986  00179A  90D8               	bcf	status,0,c
  4987  00179C  3769               	rlcf	___lwdiv@divisor& (0+255),f,b
  4988  00179E  376A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4989  0017A0  2B6D               	incf	___lwdiv@counter& (0+255),f,b
  4990  0017A2                     l2369:
  4991  0017A2  FFFF               	dw	65535	; assembler added errata NOP
  4992                           
  4993                           ; BSR set to: 0
  4994  0017A4  AF6A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4995  0017A6  EFD7  F00B         	goto	u1371
  4996  0017AA  EFDA  F00B         	goto	u1370
  4997  0017AE                     u1371:
  4998  0017AE  FFFF               	dw	65535	; assembler added errata NOP
  4999  0017B0  EFCC  F00B         	goto	l2367
  5000  0017B4                     u1370:
  5001  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  5002  0017B6                     l2371:
  5003  0017B6  FFFF               	dw	65535	; assembler added errata NOP
  5004                           
  5005                           ; BSR set to: 0
  5006  0017B8  90D8               	bcf	status,0,c
  5007  0017BA  376B               	rlcf	___lwdiv@quotient& (0+255),f,b
  5008  0017BC  376C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5009  0017BE                     
  5010                           ; BSR set to: 0
  5011  0017BE  5169               	movf	___lwdiv@divisor& (0+255),w,b
  5012  0017C0  5D67               	subwf	___lwdiv@dividend& (0+255),w,b
  5013  0017C2  516A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5014  0017C4  5968               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5015  0017C6  A0D8               	btfss	status,0,c
  5016  0017C8  EFE8  F00B         	goto	u1381
  5017  0017CC  EFEB  F00B         	goto	u1380
  5018  0017D0                     u1381:
  5019  0017D0  FFFF               	dw	65535	; assembler added errata NOP
  5020  0017D2  EFF1  F00B         	goto	l2379
  5021  0017D6                     u1380:
  5022  0017D6  FFFF               	dw	65535	; assembler added errata NOP
  5023  0017D8                     
  5024                           ; BSR set to: 0
  5025  0017D8  5169               	movf	___lwdiv@divisor& (0+255),w,b
  5026  0017DA  5F67               	subwf	___lwdiv@dividend& (0+255),f,b
  5027  0017DC  516A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5028  0017DE  5B68               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5029  0017E0                     
  5030                           ; BSR set to: 0
  5031  0017E0  816B               	bsf	___lwdiv@quotient& (0+255),0,b
  5032  0017E2                     l2379:
  5033  0017E2  FFFF               	dw	65535	; assembler added errata NOP
  5034                           
  5035                           ; BSR set to: 0
  5036  0017E4  90D8               	bcf	status,0,c
  5037  0017E6  336A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5038  0017E8  3369               	rrcf	___lwdiv@divisor& (0+255),f,b
  5039  0017EA                     
  5040                           ; BSR set to: 0
  5041  0017EA  2F6D               	decfsz	___lwdiv@counter& (0+255),f,b
  5042  0017EC  EFDB  F00B         	goto	l2371
  5043  0017F0                     l790:
  5044  0017F0  FFFF               	dw	65535	; assembler added errata NOP
  5045                           
  5046                           ; BSR set to: 0
  5047  0017F2  C06B  F067         	movff	___lwdiv@quotient,?___lwdiv
  5048  0017F6  C06C  F068         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5049  0017FA                     
  5050                           ; BSR set to: 0
  5051  0017FA  0012               	return		;funcret
  5052  0017FC  FFFF               	dw	65535	; errata NOP
  5053  0017FE                     __end_of___lwdiv:
  5054                           	opt callstack 0
  5055                           
  5056 ;; *************** function ___awdiv *****************
  5057 ;; Defined at:
  5058 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  dividend        2    7[BANK0 ] int 
  5061 ;;  divisor         2    9[BANK0 ] int 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  quotient        2   13[BANK0 ] int 
  5064 ;;  sign            1   12[BANK0 ] unsigned char 
  5065 ;;  counter         1   11[BANK0 ] unsigned char 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  2    7[BANK0 ] int 
  5068 ;; Registers used:
  5069 ;;		wreg, status,2, status,0
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  5075 ;;      Params:         0       4       0       0       0       0       0
  5076 ;;      Locals:         0       4       0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0
  5078 ;;      Totals:         0       8       0       0       0       0       0
  5079 ;;Total ram usage:        8 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    2
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_main
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text31
  5090  0012DE                     __ptext31:
  5091                           	opt callstack 0
  5092  0012DE                     ___awdiv:
  5093                           	opt callstack 0
  5094  0012DE  FFFF               	dw	65535	; assembler added errata NOP
  5095  0012E0  0E00               	movlw	0
  5096  0012E2  0100               	movlb	0	; () banked
  5097  0012E4  6F6C               	movwf	___awdiv@sign& (0+255),b
  5098  0012E6                     
  5099                           ; BSR set to: 0
  5100  0012E6  BF6A               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  5101  0012E8  EF7B  F009         	goto	u1300
  5102  0012EC  EF78  F009         	goto	u1301
  5103  0012F0                     u1301:
  5104  0012F0  FFFF               	dw	65535	; assembler added errata NOP
  5105  0012F2  EF82  F009         	goto	l2325
  5106  0012F6                     u1300:
  5107  0012F6  FFFF               	dw	65535	; assembler added errata NOP
  5108  0012F8                     
  5109                           ; BSR set to: 0
  5110  0012F8  6D69               	negf	___awdiv@divisor& (0+255),b
  5111  0012FA  1F6A               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5112  0012FC  B0D8               	btfsc	status,0,c
  5113  0012FE  2B6A               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5114  001300                     
  5115                           ; BSR set to: 0
  5116  001300  0E01               	movlw	1
  5117  001302  6F6C               	movwf	___awdiv@sign& (0+255),b
  5118  001304                     l2325:
  5119  001304  FFFF               	dw	65535	; assembler added errata NOP
  5120                           
  5121                           ; BSR set to: 0
  5122  001306  BF68               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  5123  001308  EF8B  F009         	goto	u1310
  5124  00130C  EF88  F009         	goto	u1311
  5125  001310                     u1311:
  5126  001310  FFFF               	dw	65535	; assembler added errata NOP
  5127  001312  EF92  F009         	goto	l2331
  5128  001316                     u1310:
  5129  001316  FFFF               	dw	65535	; assembler added errata NOP
  5130  001318                     
  5131                           ; BSR set to: 0
  5132  001318  6D67               	negf	___awdiv@dividend& (0+255),b
  5133  00131A  1F68               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5134  00131C  B0D8               	btfsc	status,0,c
  5135  00131E  2B68               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5136  001320                     
  5137                           ; BSR set to: 0
  5138  001320  0E01               	movlw	1
  5139  001322  1B6C               	xorwf	___awdiv@sign& (0+255),f,b
  5140  001324                     l2331:
  5141  001324  FFFF               	dw	65535	; assembler added errata NOP
  5142                           
  5143                           ; BSR set to: 0
  5144  001326  0E00               	movlw	0
  5145  001328  6F6E               	movwf	(___awdiv@quotient+1)& (0+255),b
  5146  00132A  0E00               	movlw	0
  5147  00132C  6F6D               	movwf	___awdiv@quotient& (0+255),b
  5148  00132E                     
  5149                           ; BSR set to: 0
  5150  00132E  5169               	movf	___awdiv@divisor& (0+255),w,b
  5151  001330  116A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5152  001332  B4D8               	btfsc	status,2,c
  5153  001334  EF9E  F009         	goto	u1321
  5154  001338  EFA1  F009         	goto	u1320
  5155  00133C                     u1321:
  5156  00133C  FFFF               	dw	65535	; assembler added errata NOP
  5157  00133E  EFD2  F009         	goto	l2353
  5158  001342                     u1320:
  5159  001342  FFFF               	dw	65535	; assembler added errata NOP
  5160  001344                     
  5161                           ; BSR set to: 0
  5162  001344  0E01               	movlw	1
  5163  001346  6F6B               	movwf	___awdiv@counter& (0+255),b
  5164  001348  EFAB  F009         	goto	l2339
  5165  00134C                     l2337:
  5166  00134C  FFFF               	dw	65535	; assembler added errata NOP
  5167                           
  5168                           ; BSR set to: 0
  5169  00134E  90D8               	bcf	status,0,c
  5170  001350  3769               	rlcf	___awdiv@divisor& (0+255),f,b
  5171  001352  376A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5172  001354  2B6B               	incf	___awdiv@counter& (0+255),f,b
  5173  001356                     l2339:
  5174  001356  FFFF               	dw	65535	; assembler added errata NOP
  5175                           
  5176                           ; BSR set to: 0
  5177  001358  AF6A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5178  00135A  EFB1  F009         	goto	u1331
  5179  00135E  EFB4  F009         	goto	u1330
  5180  001362                     u1331:
  5181  001362  FFFF               	dw	65535	; assembler added errata NOP
  5182  001364  EFA6  F009         	goto	l2337
  5183  001368                     u1330:
  5184  001368  FFFF               	dw	65535	; assembler added errata NOP
  5185  00136A                     l2341:
  5186  00136A  FFFF               	dw	65535	; assembler added errata NOP
  5187                           
  5188                           ; BSR set to: 0
  5189  00136C  90D8               	bcf	status,0,c
  5190  00136E  376D               	rlcf	___awdiv@quotient& (0+255),f,b
  5191  001370  376E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5192  001372                     
  5193                           ; BSR set to: 0
  5194  001372  5169               	movf	___awdiv@divisor& (0+255),w,b
  5195  001374  5D67               	subwf	___awdiv@dividend& (0+255),w,b
  5196  001376  516A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5197  001378  5968               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5198  00137A  A0D8               	btfss	status,0,c
  5199  00137C  EFC2  F009         	goto	u1341
  5200  001380  EFC5  F009         	goto	u1340
  5201  001384                     u1341:
  5202  001384  FFFF               	dw	65535	; assembler added errata NOP
  5203  001386  EFCB  F009         	goto	l2349
  5204  00138A                     u1340:
  5205  00138A  FFFF               	dw	65535	; assembler added errata NOP
  5206  00138C                     
  5207                           ; BSR set to: 0
  5208  00138C  5169               	movf	___awdiv@divisor& (0+255),w,b
  5209  00138E  5F67               	subwf	___awdiv@dividend& (0+255),f,b
  5210  001390  516A               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5211  001392  5B68               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5212  001394                     
  5213                           ; BSR set to: 0
  5214  001394  816D               	bsf	___awdiv@quotient& (0+255),0,b
  5215  001396                     l2349:
  5216  001396  FFFF               	dw	65535	; assembler added errata NOP
  5217                           
  5218                           ; BSR set to: 0
  5219  001398  90D8               	bcf	status,0,c
  5220  00139A  336A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5221  00139C  3369               	rrcf	___awdiv@divisor& (0+255),f,b
  5222  00139E                     
  5223                           ; BSR set to: 0
  5224  00139E  2F6B               	decfsz	___awdiv@counter& (0+255),f,b
  5225  0013A0  EFB5  F009         	goto	l2341
  5226  0013A4                     l2353:
  5227  0013A4  FFFF               	dw	65535	; assembler added errata NOP
  5228                           
  5229                           ; BSR set to: 0
  5230  0013A6  516C               	movf	___awdiv@sign& (0+255),w,b
  5231  0013A8  B4D8               	btfsc	status,2,c
  5232  0013AA  EFD9  F009         	goto	u1351
  5233  0013AE  EFDC  F009         	goto	u1350
  5234  0013B2                     u1351:
  5235  0013B2  FFFF               	dw	65535	; assembler added errata NOP
  5236  0013B4  EFE1  F009         	goto	l2357
  5237  0013B8                     u1350:
  5238  0013B8  FFFF               	dw	65535	; assembler added errata NOP
  5239  0013BA                     
  5240                           ; BSR set to: 0
  5241  0013BA  6D6D               	negf	___awdiv@quotient& (0+255),b
  5242  0013BC  1F6E               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5243  0013BE  B0D8               	btfsc	status,0,c
  5244  0013C0  2B6E               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5245  0013C2                     l2357:
  5246  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  5247                           
  5248                           ; BSR set to: 0
  5249  0013C4  C06D  F067         	movff	___awdiv@quotient,?___awdiv
  5250  0013C8  C06E  F068         	movff	___awdiv@quotient+1,?___awdiv+1
  5251  0013CC                     
  5252                           ; BSR set to: 0
  5253  0013CC  0012               	return		;funcret
  5254  0013CE  FFFF               	dw	65535	; errata NOP
  5255  0013D0                     __end_of___awdiv:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _low_isr *****************
  5259 ;; Defined at:
  5260 ;;		line 79 in file "interrupts.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		None
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  5274 ;;      Params:         0       0       0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0
  5276 ;;      Temps:          0       1       0       0       0       0       0
  5277 ;;      Totals:         0       1       0       0       0       0       0
  5278 ;;Total ram usage:        1 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    1
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		Interrupt level 1
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	intcodelo
  5289  000018                     __pintcodelo:
  5290                           	opt callstack 0
  5291  000018                     _low_isr:
  5292                           	opt callstack 0
  5293  000018  FFFF               	dw	65535	; assembler added errata NOP
  5294                           
  5295                           ; BSR set to: 0
  5296                           ;incstack = 0
  5297  00001A  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5298  00001C  CFE0 F066          	movff	bsr,??_low_isr
  5299  000020  C066  FFE0         	movff	??_low_isr,bsr
  5300  000024  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5301  000026  0010               	retfie	
  5302  000028  FFFF               	dw	65535	; errata NOP
  5303  00002A                     __end_of_low_isr:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _high_isr *****************
  5307 ;; Defined at:
  5308 ;;		line 21 in file "interrupts.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;  i               2    4[BANK0 ] int 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  5322 ;;      Params:         0       0       0       0       0       0       0
  5323 ;;      Locals:         0       2       0       0       0       0       0
  5324 ;;      Temps:          0       4       0       0       0       0       0
  5325 ;;      Totals:         0       6       0       0       0       0       0
  5326 ;;Total ram usage:        6 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		Interrupt level 2
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	intcode
  5336  000008                     __pintcode:
  5337                           	opt callstack 0
  5338  000008                     _high_isr:
  5339                           	opt callstack 0
  5340  000008  FFFF               	dw	65535	; assembler added errata NOP
  5341                           
  5342                           ;incstack = 0
  5343  00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5344  00000C  EF31  F008         	goto	int_func
  5345                           
  5346                           	psect	intcode_body
  5347  001062                     __pintcode_body:
  5348                           	opt callstack 21
  5349  001062                     int_func:
  5350                           	opt callstack 21
  5351  001062  FFFF               	dw	65535	; errata NOP
  5352  001064  CFD9 F062          	movff	fsr2l,??_high_isr+2
  5353  001068  CFDA F063          	movff	fsr2h,??_high_isr+3
  5354  00106C                     
  5355                           ;interrupts.c: 23:     static unsigned int t1;;interrupts.c: 25:     if(INTCONbits.TMR0I
      +                          F)
  5356  00106C  A4F2               	btfss	242,2,c	;volatile
  5357  00106E  EF3B  F008         	goto	i2u142_41
  5358  001072  EF3E  F008         	goto	i2u142_40
  5359  001076                     i2u142_41:
  5360  001076  FFFF               	dw	65535	; assembler added errata NOP
  5361  001078  EF7D  F008         	goto	i2l2443
  5362  00107C                     i2u142_40:
  5363  00107C  FFFF               	dw	65535	; assembler added errata NOP
  5364  00107E                     
  5365                           ;interrupts.c: 26:     {;interrupts.c: 27:         PORTCbits.RC1 = 1;
  5366  00107E  8282               	bsf	130,1,c	;volatile
  5367  001080                     
  5368                           ;interrupts.c: 29:         for(int i = 0; i < 2; i++)
  5369  001080  0E00               	movlw	0
  5370  001082  0100               	movlb	0	; force () banked
  5371  001084  6F65               	movwf	(high_isr@i+1)& (0+255),b
  5372  001086  0E00               	movlw	0
  5373  001088  6F64               	movwf	high_isr@i& (0+255),b
  5374  00108A                     
  5375                           ; BSR set to: 0
  5376  00108A  0100               	movlb	0	; force () banked
  5377  00108C  BF65               	btfsc	(high_isr@i+1)& (0+255),7,b
  5378  00108E  EF52  F008         	goto	i2u143_41
  5379  001092  5165               	movf	(high_isr@i+1)& (0+255),w,b
  5380  001094  E10A               	bnz	i2u143_40
  5381  001096  0E02               	movlw	2
  5382  001098  5D64               	subwf	high_isr@i& (0+255),w,b
  5383  00109A  A0D8               	btfss	status,0,c
  5384  00109C  EF52  F008         	goto	i2u143_41
  5385  0010A0  EF55  F008         	goto	i2u143_40
  5386  0010A4                     i2u143_41:
  5387  0010A4  FFFF               	dw	65535	; assembler added errata NOP
  5388  0010A6  EF58  F008         	goto	i2l112
  5389  0010AA                     i2u143_40:
  5390  0010AA  FFFF               	dw	65535	; assembler added errata NOP
  5391  0010AC  EF6D  F008         	goto	i2l113
  5392  0010B0                     i2l112:
  5393  0010B0  FFFF               	dw	65535	; assembler added errata NOP
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;interrupts.c: 30:             __nop();
  5397  0010B2  F000               	nop	
  5398  0010B4  0100               	movlb	0	; force () banked
  5399  0010B6  4B64               	infsnz	high_isr@i& (0+255),f,b
  5400  0010B8  2B65               	incf	(high_isr@i+1)& (0+255),f,b
  5401  0010BA                     
  5402                           ; BSR set to: 0
  5403  0010BA  0100               	movlb	0	; force () banked
  5404  0010BC  BF65               	btfsc	(high_isr@i+1)& (0+255),7,b
  5405  0010BE  EF6A  F008         	goto	i2u144_41
  5406  0010C2  5165               	movf	(high_isr@i+1)& (0+255),w,b
  5407  0010C4  E10A               	bnz	i2u144_40
  5408  0010C6  0E02               	movlw	2
  5409  0010C8  5D64               	subwf	high_isr@i& (0+255),w,b
  5410  0010CA  A0D8               	btfss	status,0,c
  5411  0010CC  EF6A  F008         	goto	i2u144_41
  5412  0010D0  EF6D  F008         	goto	i2u144_40
  5413  0010D4                     i2u144_41:
  5414  0010D4  FFFF               	dw	65535	; assembler added errata NOP
  5415  0010D6  EF58  F008         	goto	i2l112
  5416  0010DA                     i2u144_40:
  5417  0010DA                     i2l113:
  5418  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;interrupts.c: 32:         PORTCbits.RC1 = 0;
  5422  0010DC  9282               	bcf	130,1,c	;volatile
  5423  0010DE                     
  5424                           ; BSR set to: 0
  5425                           ;interrupts.c: 34:         CCP1CONbits.CCP1M = 0b0101;
  5426  0010DE  50BD               	movf	189,w,c	;volatile
  5427  0010E0  0BF0               	andlw	-16
  5428  0010E2  0905               	iorlw	5
  5429  0010E4  6EBD               	movwf	189,c	;volatile
  5430                           
  5431                           ;interrupts.c: 36:         TMR3 = 0;
  5432  0010E6  0E00               	movlw	0
  5433  0010E8  6EB3               	movwf	179,c	;volatile
  5434  0010EA  0E00               	movlw	0
  5435  0010EC  6EB2               	movwf	178,c	;volatile
  5436  0010EE                     
  5437                           ; BSR set to: 0
  5438                           ;interrupts.c: 37:         T3CONbits.TMR3ON = 1;
  5439  0010EE  80B1               	bsf	177,0,c	;volatile
  5440  0010F0                     
  5441                           ; BSR set to: 0
  5442                           ;interrupts.c: 39:         INTCONbits.TMR0IF = 0;
  5443  0010F0  94F2               	bcf	242,2,c	;volatile
  5444                           
  5445                           ;interrupts.c: 40:         TMR0H = 0b00010101;
  5446  0010F2  0E15               	movlw	21
  5447  0010F4  6ED7               	movwf	215,c	;volatile
  5448                           
  5449                           ;interrupts.c: 41:         TMR0L = 0b10100000;
  5450  0010F6  0EA0               	movlw	160
  5451  0010F8  6ED6               	movwf	214,c	;volatile
  5452  0010FA                     i2l2443:
  5453  0010FA  FFFF               	dw	65535	; assembler added errata NOP
  5454                           
  5455                           ;interrupts.c: 43:     if (PIR1bits.TMR1IF)
  5456  0010FC  A09E               	btfss	158,0,c	;volatile
  5457  0010FE  EF83  F008         	goto	i2u145_41
  5458  001102  EF86  F008         	goto	i2u145_40
  5459  001106                     i2u145_41:
  5460  001106  FFFF               	dw	65535	; assembler added errata NOP
  5461  001108  EF8D  F008         	goto	i2l2451
  5462  00110C                     i2u145_40:
  5463  00110C  FFFF               	dw	65535	; assembler added errata NOP
  5464  00110E                     
  5465                           ;interrupts.c: 44:     {;interrupts.c: 45:         PORTDbits.RD7 ^= 1;
  5466  00110E  7E83               	btg	131,7,c	;volatile
  5467  001110                     
  5468                           ;interrupts.c: 47:         PIR1bits.TMR1IF = 0;
  5469  001110  909E               	bcf	158,0,c	;volatile
  5470  001112                     
  5471                           ;interrupts.c: 48:         TMR1 = 0b0011110010110000;
  5472  001112  0E3C               	movlw	60
  5473  001114  6ECF               	movwf	207,c	;volatile
  5474  001116  0EB0               	movlw	176
  5475  001118  6ECE               	movwf	206,c	;volatile
  5476  00111A                     i2l2451:
  5477  00111A  FFFF               	dw	65535	; assembler added errata NOP
  5478                           
  5479                           ;interrupts.c: 50:     if (PIR1bits.CCP1IF)
  5480  00111C  A49E               	btfss	158,2,c	;volatile
  5481  00111E  EF93  F008         	goto	i2u146_41
  5482  001122  EF96  F008         	goto	i2u146_40
  5483  001126                     i2u146_41:
  5484  001126  FFFF               	dw	65535	; assembler added errata NOP
  5485  001128  EFE4  F008         	goto	i2l119
  5486  00112C                     i2u146_40:
  5487  00112C  FFFF               	dw	65535	; assembler added errata NOP
  5488  00112E                     
  5489                           ;interrupts.c: 51:     {;interrupts.c: 52:         if (CCP1CONbits.CCP1M == 0b0101)
  5490  00112E  50BD               	movf	189,w,c	;volatile
  5491  001130  0B0F               	andlw	15
  5492  001132  0A05               	xorlw	5
  5493  001134  A4D8               	btfss	status,2,c
  5494  001136  EF9F  F008         	goto	i2u147_41
  5495  00113A  EFA2  F008         	goto	i2u147_40
  5496  00113E                     i2u147_41:
  5497  00113E  FFFF               	dw	65535	; assembler added errata NOP
  5498  001140  EFAE  F008         	goto	i2l2459
  5499  001144                     i2u147_40:
  5500  001144  FFFF               	dw	65535	; assembler added errata NOP
  5501  001146                     
  5502                           ;interrupts.c: 53:         {;interrupts.c: 55:             PORTCbits.RC0 = 1;
  5503  001146  8082               	bsf	130,0,c	;volatile
  5504                           
  5505                           ;interrupts.c: 56:             t1 = CCPR1;
  5506  001148  CFBE F0EE          	movff	4030,high_isr@t1	;volatile
  5507  00114C  CFBF F0EF          	movff	4031,high_isr@t1+1	;volatile
  5508  001150                     
  5509                           ;interrupts.c: 57:             CCP1CONbits.CCP1M = 0b0100;
  5510  001150  50BD               	movf	189,w,c	;volatile
  5511  001152  0BF0               	andlw	-16
  5512  001154  0904               	iorlw	4
  5513  001156  6EBD               	movwf	189,c	;volatile
  5514                           
  5515                           ;interrupts.c: 59:         }
  5516  001158  EFE2  F008         	goto	i2l2469
  5517  00115C                     i2l2459:
  5518  00115C  FFFF               	dw	65535	; assembler added errata NOP
  5519                           
  5520                           ;interrupts.c: 61:         {;interrupts.c: 62:             g_echo[g_compteEcho] = CCPR1 
      +                          - t1;
  5521  00115E  0100               	movlb	0	; force () banked
  5522  001160  51EE               	movf	high_isr@t1& (0+255),w,b
  5523  001162  5CBE               	subwf	190,w,c	;volatile
  5524  001164  0100               	movlb	0	; force () banked
  5525  001166  6F60               	movwf	??_high_isr& (0+255),b
  5526  001168  0100               	movlb	0	; force () banked
  5527  00116A  51EF               	movf	(high_isr@t1+1)& (0+255),w,b
  5528  00116C  58BF               	subwfb	191,w,c	;volatile
  5529  00116E  0100               	movlb	0	; force () banked
  5530  001170  6F61               	movwf	(??_high_isr+1)& (0+255),b
  5531  001172  90D8               	bcf	status,0,c
  5532  001174  0100               	movlb	0	; force () banked
  5533  001176  35F0               	rlcf	_g_compteEcho& (0+255),w,b
  5534  001178  6ED9               	movwf	fsr2l,c
  5535  00117A  35F1               	rlcf	(_g_compteEcho+1)& (0+255),w,b
  5536  00117C  6EDA               	movwf	fsr2h,c
  5537  00117E  0E40               	movlw	low _g_echo
  5538  001180  26D9               	addwf	fsr2l,f,c
  5539  001182  0E01               	movlw	high _g_echo
  5540  001184  22DA               	addwfc	fsr2h,f,c
  5541  001186  C060  FFDE         	movff	??_high_isr,postinc2
  5542  00118A  C061  FFDD         	movff	??_high_isr+1,postdec2
  5543  00118E                     
  5544                           ; BSR set to: 0
  5545                           ;interrupts.c: 63:             g_compteEcho++;
  5546  00118E  0100               	movlb	0	; force () banked
  5547  001190  4BF0               	infsnz	_g_compteEcho& (0+255),f,b
  5548  001192  2BF1               	incf	(_g_compteEcho+1)& (0+255),f,b
  5549  001194                     
  5550                           ; BSR set to: 0
  5551                           ;interrupts.c: 65:             if (g_compteEcho > 10)
  5552  001194  0100               	movlb	0	; force () banked
  5553  001196  BFF1               	btfsc	(_g_compteEcho+1)& (0+255),7,b
  5554  001198  EFD7  F008         	goto	i2u148_41
  5555  00119C  51F1               	movf	(_g_compteEcho+1)& (0+255),w,b
  5556  00119E  E10A               	bnz	i2u148_40
  5557  0011A0  0E0B               	movlw	11
  5558  0011A2  5DF0               	subwf	_g_compteEcho& (0+255),w,b
  5559  0011A4  A0D8               	btfss	status,0,c
  5560  0011A6  EFD7  F008         	goto	i2u148_41
  5561  0011AA  EFDA  F008         	goto	i2u148_40
  5562  0011AE                     i2u148_41:
  5563  0011AE  FFFF               	dw	65535	; assembler added errata NOP
  5564  0011B0  EFE0  F008         	goto	i2l2467
  5565  0011B4                     i2u148_40:
  5566  0011B4  FFFF               	dw	65535	; assembler added errata NOP
  5567  0011B6                     
  5568                           ; BSR set to: 0
  5569                           ;interrupts.c: 66:             {;interrupts.c: 67:                 g_compteEcho = 0;
  5570  0011B6  0E00               	movlw	0
  5571  0011B8  0100               	movlb	0	; force () banked
  5572  0011BA  6FF1               	movwf	(_g_compteEcho+1)& (0+255),b
  5573  0011BC  0E00               	movlw	0
  5574  0011BE  6FF0               	movwf	_g_compteEcho& (0+255),b
  5575  0011C0                     i2l2467:
  5576  0011C0  FFFF               	dw	65535	; assembler added errata NOP
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;interrupts.c: 71:             PORTCbits.RC0 = 0;
  5580  0011C2  9082               	bcf	130,0,c	;volatile
  5581  0011C4                     i2l2469:
  5582  0011C4  FFFF               	dw	65535	; assembler added errata NOP
  5583                           
  5584                           ;interrupts.c: 74:         PIR1bits.CCP1IF = 0;
  5585  0011C6  949E               	bcf	158,2,c	;volatile
  5586  0011C8                     i2l119:
  5587  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  5588  0011CA  C063  FFDA         	movff	??_high_isr+3,fsr2h
  5589  0011CE  C062  FFD9         	movff	??_high_isr+2,fsr2l
  5590  0011D2  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5591  0011D4  0011               	retfie		f
  5592  0011D6  FFFF               	dw	65535	; errata NOP
  5593  0011D8                     __end_of_high_isr:
  5594                           	opt callstack 0
  5595                           
  5596                           	psect	param0
  5597  0000                     
  5598                           	psect	temp
  5599  000001                     btemp:
  5600                           	opt callstack 0
  5601  000001                     	ds	1
  5602  0000                     int$flags	set	btemp
  5603  0000                     wtemp8	set	btemp+1
  5604  0000                     ttemp5	set	btemp+1
  5605  0000                     ttemp6	set	btemp+4
  5606  0000                     ttemp7	set	btemp+8
  5607                           tosu	equ	0xFFF
  5608                           tosh	equ	0xFFE
  5609                           tosl	equ	0xFFD
  5610                           stkptr	equ	0xFFC
  5611                           pclatu	equ	0xFFB
  5612                           pclath	equ	0xFFA
  5613                           pcl	equ	0xFF9
  5614                           tblptru	equ	0xFF8
  5615                           tblptrh	equ	0xFF7
  5616                           tblptrl	equ	0xFF6
  5617                           tablat	equ	0xFF5
  5618                           prodh	equ	0xFF4
  5619                           prodl	equ	0xFF3
  5620                           indf0	equ	0xFEF
  5621                           postinc0	equ	0xFEE
  5622                           postdec0	equ	0xFED
  5623                           preinc0	equ	0xFEC
  5624                           plusw0	equ	0xFEB
  5625                           fsr0h	equ	0xFEA
  5626                           fsr0l	equ	0xFE9
  5627                           wreg	equ	0xFE8
  5628                           indf1	equ	0xFE7
  5629                           postinc1	equ	0xFE6
  5630                           postdec1	equ	0xFE5
  5631                           preinc1	equ	0xFE4
  5632                           plusw1	equ	0xFE3
  5633                           fsr1h	equ	0xFE2
  5634                           fsr1l	equ	0xFE1
  5635                           bsr	equ	0xFE0
  5636                           indf2	equ	0xFDF
  5637                           postinc2	equ	0xFDE
  5638                           postdec2	equ	0xFDD
  5639                           preinc2	equ	0xFDC
  5640                           plusw2	equ	0xFDB
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8


Data Sizes:
    Strings     33
    Constant    0
    Data        64
    BSS         64
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160    134     146
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK1           256      0     116
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1842_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@message(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 20
		 -> STR_3(CODE[3]), main@message(BANK0[20]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_curseurHome->_lcd_wrCom
    _lcd_effaceLigne->_lcd_gotoXY
    _lcd_gotoXY->_lcd_wrCom
    _lcd_effaceChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_cacheCurseur->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   11059
                                            110 BANK0     24    24      0
                            ___awdiv
                            ___lwdiv
                     _initialisation
                   _lcd_cacheCurseur
                    _lcd_effaceLigne
                         _lcd_gotoXY
                           _lcd_init
                     _lcd_putMessage
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6    6536
                                             94 BANK0     16    10      6
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6169
                                             86 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5815
                                             70 BANK0     16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4406
                                             34 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2757
                                             23 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              7 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1267
                                             16 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     850
                                              7 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             25 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              7 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              7 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     763
                                             15 BANK0      9     6      3
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     445
                                             11 BANK0      4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1068
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      88
                                              9 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     758
                                             11 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _lcd_effaceLigne                                      1     1      0     904
                                             15 BANK0      1     1      0
                     _lcd_effaceChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _lcd_gotoXY                                           4     3      1     636
                                             11 BANK0      4     3      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceChar                                       2     2      0     224
                                             10 BANK0      2     2      0
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     178
                                              9 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (1) _lcd_cacheCurseur                                     0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     222
                                              9 BANK0      2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      88
                                              7 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              7 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              7 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              7 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _low_isr                                              1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            6     6      0      46
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___lwdiv
   _initialisation
   _lcd_cacheCurseur
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_effaceLigne
     _lcd_effaceChar
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _lcd_gotoXY
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _sprintf
     ___awdiv (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0       6        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0       5        0.0%
BITBANK2           100      0       0      11        0.0%
BANK2              100      0       0       4        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0      74      10       45.3%
BITBANK5            F4      0       0      14        0.0%
BANK5               F4      0       0      15        0.0%
BITBANK0            A0      0       0       8        0.0%
BANK0               A0     86      92       3       91.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     106       7        0.0%
DATA                 0      0     106      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 17 10:18:00 2020

                                                   l76 187A  
                                         ___awdiv@sign 006C  
                                                   bsr 000FE0  
                                         __CFG_CP0$OFF 000000  
                                         __CFG_CP1$OFF 000000  
                                         __CFG_CP2$OFF 000000  
                                         __CFG_CP3$OFF 000000  
                                          __CFG_OSC$HS 000000  
                         __size_of_lcd_strobeEnableBit 000C  
                                                  l202 196C  
                                                  l211 1D8A  
                                                  l221 1636  
                                                  l150 19E6  
                                                  l224 1D96  
                                                  l208 157C  
                                                  l153 1B20  
                                                  l161 16D2  
                                                  l154 1B6A  
                                                  l170 1D4E  
                                                  l147 1DA0  
                                                  l155 1B72  
                                                  l251 1230  
                                                  l164 1BCA  
                                                  l413 0D4C  
                                                  l182 1D1C  
                                                  l254 128C  
                                                  l262 06E8  
                                                  l191 1768  
                                                  l167 1A54  
                                                  l176 1D7E  
                                                  l256 12DA  
                                                  l264 06F2  
                                                  l530 13CC  
                                                  l194 1D72  
                                                  l426 0EDE  
                                                  l282 09A0  
                                                  l295 18EC  
                                                  l296 18F4  
                                                  l289 0B94  
                                                  l790 17F0  
                                                  l797 17FA  
                                                  l974 1C0C  
                                                  l977 1C16  
                                                  l996 1B0E  
                                                  l989 14B8  
                                                  l997 1B16  
                                         __CFG_CPB$OFF 000000  
                                         __CFG_CPD$OFF 000000  
                                                  u800 1C4E  
                                                  u801 1C48  
                                                  u810 1B68  
                                                  u811 1B62  
                                                  u900 0C3E  
                                                  u820 11EC  
                                                  u901 0C38  
                                                  u821 11E6  
                                                  u910 0C70  
                                                  u750 13E8  
                                                  u830 1216  
                                                  u911 0C6A  
                                                  u751 13E2  
                                                  u831 1210  
                                                  u920 0CB6  
                                                  u760 13FE  
                                                  u840 128A  
                                                  u921 0CB0  
                                                  u761 13F8  
                                                  u841 1284  
                                                  u930 0D08  
                                                  u770 142C  
                                                  u850 129E  
                                                  u931 0D02  
                                                  u771 1426  
                                                  u851 1298  
                                                  u940 0D68  
                                                  u860 1BEE  
                                                  u780 1466  
                                                  u941 0D62  
                                                  u861 1BE8  
                                                  u781 1460  
                                                  u870 0BB2  
                                                  u950 0DA0  
                                                  u790 1B0C  
                                                  u871 0BAC  
                                                  u951 0D9A  
                                                  u791 1B06  
                                                  u880 0BEA  
                                                  u960 0DE4  
                                                  u881 0BE4  
                                                  u961 0DDE  
                                                  u970 0E16  
                                                  u891 0C18  
                                                  u971 0E10  
                                                  u980 0E4A  
                                                  u981 0E44  
                                                  u990 0E9A  
                                                  u991 0E94  
                                         __CFG_BOR$OFF 000000  
                                                  _abs 1BCE  
                                                  _pad 11D8  
                                         __CFG_BORV$25 000000  
                                          lcd_gotoXY@x 006E  
                                                  wreg 000FE8  
                                          lcd_gotoXY@y 006B  
                                         __CFG_LVP$OFF 000000  
                                         __CFG_WDT$OFF 000000  
                                          main@dist_mm 00E2  
                                                 l1004 1ABA  
                                                 l1013 1C5E  
                                                 l1007 1DA6  
                                                 l2001 085A  
                                                 l2003 087C  
                                                 l2011 08F2  
                                                 ?_abs 0079  
                                                 l2101 16DC  
                                                 l2021 094E  
                                                 l2013 090C  
                                                 l2005 08A0  
                                                 l2031 1B80  
                                                 l2103 16E0  
                                                 l2023 095A  
                                                 l2015 091E  
                                                 l2007 08C0  
                                                 l2041 1B9A  
                                                 l2033 1B84  
                                                 l2105 16F0  
                                                 l2113 1726  
                                                 l2121 19F0  
                                                 l2017 0928  
                                                 l2025 096E  
                                                 l2009 08E0  
                                                 l2211 1800  
                                                 l2051 1BBA  
                                                 l2043 1B9E  
                                                 l2035 1B8C  
                                                 l2107 1702  
                                                 l2131 1A12  
                                                 l2123 1A04  
                                                 l2019 0940  
                                                 l2203 1880  
                                                 l2221 1814  
                                                 l2213 180C  
                                                 l2053 1BBE  
                                                 l2045 1BA6  
                                                 l2037 1B8E  
                                                 l2029 1B7C  
                                                 l2109 1714  
                                                 l2141 1A32  
                                                 l2133 1A1A  
                                                 l2125 1A06  
                                                 l2061 09D2  
                                                 l2205 1888  
                                                 l2301 1A6C  
                                                 l2231 182E  
                                                 l2223 1816  
                                                 l2215 180E  
                                                 l2047 1BAE  
                                                 l2039 1B90  
                                                 l2151 1A50  
                                                 l2143 1A36  
                                                 l2135 1A20  
                                                 l2127 1A08  
                                                 l2119 19EC  
                                                 l2071 0A4E  
                                                 l2063 09E0  
                                                 l2207 1896  
                                                 l2303 1A74  
                                                 l2321 12F8  
                                                 l2241 1838  
                                                 l2233 1830  
                                                 l2225 1818  
                                                 l2217 1810  
                                                 l2313 1D84  
                                                 l2049 1BB2  
                                                 l2057 1D78  
                                                 l2161 15A8  
                                                 l2153 1582  
                                                 l2145 1A3E  
                                                 l2137 1A24  
                                                 l2129 1A0E  
                                                 l2081 0B0E  
                                                 l2073 0A9A  
                                                 l2065 09F2  
                                                 l2209 18C6  
                                                 l2305 1A7C  
                                                 l2331 1324  
                                                 l2323 1300  
                                                 l2251 184E  
                                                 l2243 183E  
                                                 l2235 1832  
                                                 l2227 181A  
                                                 l2219 1812  
                                                 l2315 1D58  
                                                 l2171 1602  
                                                 l2163 15B0  
                                                 l2155 1588  
                                                 l2147 1A44  
                                                 l2139 1A2C  
                                                 l2083 0B24  
                                                 l2067 09F8  
                                                 l2059 09A6  
                                                 l2307 1AA0  
                                                 l2411 1008  
                                                 l2403 0F68  
                                                 l2341 136A  
                                                 l2333 132E  
                                                 l2325 1304  
                                                 l2317 12E0  
                                                 l2261 185C  
                                                 l2253 1850  
                                                 l2245 1840  
                                                 l2237 1834  
                                                 l2229 181C  
                                                 l2181 1CF4  
                                                 l2173 1616  
                                                 l2157 158E  
                                                 l2149 1A48  
                                                 l2077 0AD2  
                                                 l2069 0A24  
                                                 l2093 0B50  
                                                 l2309 1AB2  
                                                 l2421 1042  
                                                 l2413 100C  
                                                 l2405 0FAA  
                                                 l2351 139E  
                                                 l2343 1372  
                                                 l2335 1344  
                                                 l2327 1318  
                                                 l2319 12E6  
                                                 l2271 1876  
                                                 l2263 186E  
                                                 l2255 1852  
                                                 l2247 184A  
                                                 l2239 1836  
                                                 l2183 1CFC  
                                                 l2175 161C  
                                                 l2167 15CA  
                                                 l2191 191A  
                                                 l2095 0B7C  
                                                 l2079 0B00  
                                                 l2087 0B32  
                                                 l2415 1018  
                                                 l2407 0FB0  
                                                 l2345 138C  
                                                 l2337 134C  
                                                 l2353 13A4  
                                                 l2329 1320  
                                                 l2361 1770  
                                                 l2273 1878  
                                                 l2265 1870  
                                                 l2257 1854  
                                                 l2249 184C  
                                                 l1801 1B1C  
                                                 l2185 1D00  
                                                 l2169 15FE  
                                                 l2177 1630  
                                                 l2281 1D32  
                                                 l2193 1926  
                                                 l2097 0B8A  
                                                 l2089 0B42  
                                                 l2417 101E  
                                                 l2409 0FD0  
                                                 l2355 13BA  
                                                 l2347 1394  
                                                 l2339 1356  
                                                 l2371 17B6  
                                                 l2363 177A  
                                                 l2267 1872  
                                                 l2259 1856  
                                                 l1811 1B42  
                                                 l1803 1B26  
                                                 l2179 1CEA  
                                                 l2283 1D38  
                                                 l2275 1D22  
                                                 l2515 194C  
                                                 l2187 18FE  
                                                 l2291 14BE  
                                                 l2419 1036  
                                                 l2357 13C2  
                                                 l2349 1396  
                                                 l2381 17EA  
                                                 l2373 17BE  
                                                 l2365 1790  
                                                 l2269 1874  
                                                 l1813 1B4C  
                                                 l1805 1B36  
                                                 l2517 1740  
                                                 l2285 1D3E  
                                                 l2277 1D28  
                                                 l2189 190E  
                                                 l2197 1932  
                                                 l2293 14C8  
                                                 l1901 0D8A  
                                                 l2375 17D8  
                                                 l2367 1798  
                                                 l1815 1B4E  
                                                 l1807 1B38  
                                                 l1823 1D90  
                                                 l2287 1D44  
                                                 l2279 1D2C  
                                                 l2295 1518  
                                                 l1911 0DEE  
                                                 l1903 0D8E  
                                                 l1831 1218  
                                                 l2391 0EF0  
                                                 l2383 0EE2  
                                                 l2377 17E0  
                                                 l2369 17A2  
                                                 l1817 1B56  
                                                 l1809 1B40  
                                                 l2289 1D4A  
                                                 l2297 151C  
                                                 l1921 0E80  
                                                 l1913 0E04  
                                                 l1905 0DA2  
                                                 l1761 13D2  
                                                 l1841 12A0  
                                                 l1833 1224  
                                                 l1825 11DA  
                                                 l2393 0EF2  
                                                 l2385 0EE8  
                                                 l2379 17E2  
                                                 l1819 1B6C  
                                                 l1931 1640  
                                                 l1851 0B9C  
                                                 l1915 0E18  
                                                 l1923 0E86  
                                                 l1907 0DC2  
                                                 l1771 1466  
                                                 l1763 13EA  
                                                 l1843 12B4  
                                                 l1835 1240  
                                                 l1827 11EE  
                                                 l2299 1A5A  
                                                 l2395 0F0A  
                                                 l2387 0EEC  
                                                 l1941 1654  
                                                 l1933 1644  
                                                 l1861 0BEC  
                                                 l1853 0BA2  
                                                 l1925 0E9C  
                                                 l1917 0E4C  
                                                 l1909 0DE6  
                                                 l1773 14AE  
                                                 l1765 13FE  
                                                 l1781 1AC0  
                                                 l1837 1258  
                                                 l1829 1202  
                                                 l2397 0F2E  
                                                 l2389 0EEE  
                                                 l1951 1676  
                                                 l1943 165E  
                                                 l1935 1648  
                                                 l1871 0C48  
                                                 l1863 0C0C  
                                                 l1855 0BB4  
                                                 l1927 0EBC  
                                                 l1919 0E6C  
                                                 l1847 1BD0  
                                                 l1767 140A  
                                                 l1783 1ACE  
                                                 l1791 1C2A  
                                                 l1839 125E  
                                                 l2399 0F42  
                                                 l1777 1D9C  
                                                 l1961 16C6  
                                                 l1953 167E  
                                                 l1945 1662  
                                                 l1937 1650  
                                                 l1881 0CD8  
                                                 l1873 0C5E  
                                                 l1865 0C10  
                                                 l1857 0BD4  
                                                 l1849 1BF0  
                                                 l1769 142E  
                                                 l1785 1AE2  
                                                 l1793 1C32  
                                                 l1963 16CE  
                                                 l1955 1694  
                                                 l1947 166A  
                                                 l1939 1652  
                                                 l1891 0D2A  
                                                 l1883 0CDA  
                                                 l1875 0C72  
                                                 l1867 0C1E  
                                                 l1859 0BD8  
                                                 l1787 1AE8  
                                                 l1795 1C50  
                                                 l1971 067C  
                                                 l1957 16AA  
                                                 l1949 1672  
                                                 l1885 0CEE  
                                                 l1877 0C86  
                                                 l1869 0C40  
                                                 l1789 1C1E  
                                                 l1981 06FC  
                                                 l1973 069E  
                                                 ?_pad 0077  
                                                 l1799 1978  
                                                 l1959 16C0  
                                                 l1879 0CB8  
                                                 l1887 0CF4  
                                                 l1895 0D52  
                                                 l1991 0752  
                                                 l1983 0714  
                                                 l1975 06B4  
                                                 l1967 0626  
                                                 l1889 0D0A  
                                                 l1897 0D58  
                                                 l1993 075C  
                                                 l1985 0726  
                                                 l1977 06B8  
                                                 l1969 0646  
                                                 l1899 0D6A  
                                                 l1995 07E4  
                                                 l1987 0730  
                                                 l1979 06DA  
                                                 l1997 07EC  
                                                 l1989 073C  
                                                 l1999 07F4  
                                                 STR_1 0601  
                                                 STR_2 0611  
                                                 STR_3 061F  
                                                 u1000 1692  
                                                 u1001 168C  
                                                 u1010 16AA  
                                                 u1011 16A4  
                                                 u1100 089E  
                                                 u1020 065A  
                                                 u1101 0898  
                                                 u1021 0652  
                                                 u1110 08BE  
                                                 u1030 065E  
                                                 u1111 08B8  
                                                 u1120 08DE  
                                                 u1040 067A  
                                                 u1200 0AFE  
                                                 u1121 08D8  
                                                 u1041 0674  
                                                 u1201 0AF8  
                                                 u1210 15A2  
                                                 u1130 08F2  
                                                 u1050 06B2  
                                                 u1211 159C  
                                                 u1131 08EC  
                                                 u1051 06AC  
                                                 u1300 12F6  
                                                 u1220 15C4  
                                                 u1140 090A  
                                                 u1060 06D8  
                                                 u1301 12F0  
                                                 u1221 15BE  
                                                 u1141 0904  
                                                 u1061 06D2  
                                                 u1310 1316  
                                                 u1230 1616  
                                                 u1150 091E  
                                                 u1070 0712  
                                                 u1311 1310  
                                                 u1231 1610  
                                                 u1151 0918  
                                                 u1071 070C  
                                                 u1320 1342  
                                                 u1240 1630  
                                                 u1160 093E  
                                                 u1080 0726  
                                                 u1400 0F62  
                                                 u1321 133C  
                                                 u1241 162A  
                                                 u1161 0938  
                                                 u1081 0720  
                                                 u1401 0F5C  
                                                 u1330 1368  
                                                 u1250 1D1A  
                                                 u1090 087A  
                                                 u1170 09D0  
                                                 u1410 0FD0  
                                                 u1331 1362  
                                                 u1251 1D14  
                                                 u1091 0874  
                                                 u1171 09CA  
                                                 u1411 0FCA  
                                                 u1340 138A  
                                                 u1180 0A22  
                                                 u1260 18EA  
                                                 u1341 1384  
                                                 u1181 0A1C  
                                                 u1261 18E4  
                                                 u1350 13B8  
                                                 u1270 1514  
                                                 u1190 0A4E  
                                                 u1351 13B2  
                                                 u1191 0A48  
                                                 u1360 178E  
                                                 u1280 1568  
                                                 u1361 1788  
                                                 u1370 17B4  
                                                 u1290 157A  
                                                 u1371 17AE  
                                                 u1507 1A14  
                                                 u1291 1574  
                                                 u1380 17D6  
                                                 u1381 17D0  
                                                 u1517 1A26  
                                                 u1277 150A  
                                                 u1390 0F2C  
                                                 u1527 1A38  
                                                 u1287 155E  
                                                 u1391 0F26  
                                                 u1537 1A4A  
                                                 u1547 1678  
                                                 u1557 16B4  
                                                 u1497 19F8  
                                                 _TMR1 000FCE  
                                                 _TMR3 000FB2  
                                     ??_initialisation 0067  
                                          main@message 00CE  
                                                 abs@a 0079  
                                                 _dbuf 0154  
                                                 _main 0EE2  
                                                 _dtoa 0624  
                                                 _prec 00EA  
                                                 _nout 00E6  
                                                 pad@i 007E  
                                                 pad@p 007B  
                                                 fsr1h 000FE2  
                                                 fsr2h 000FDA  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 pad@w 0080  
                                                 fsr2l 000FD9  
                                                 btemp 0001  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
                                                 start 002A  
                                      ?_lcd_putMessage 006F  
                                         ___param_bank 000000  
                                                ??_abs 007B  
                                                ??_pad 007D  
                                        __CFG_OSCS$OFF 000000  
                                      ??_lcd_ecritChar 006B  
                                      __end_of___aodiv 0D50  
                                                ?_main 0060  
                                                ?_dtoa 0082  
                                      __end_of___aomod 0EE2  
                                      __end_of___awdiv 13D0  
                                                _CCPR1 000FBE  
                                                _CMCON 000FB4  
                                      ___awdiv@divisor 0069  
                                      __end_of___lwdiv 17FE  
                                                i1l124 0020  
                                                i2l112 10B0  
                                                i2l113 10DA  
                                                i2l119 11C8  
                                      ___awdiv@counter 006B  
                                         vfpfcnvrt@fmt 00A8  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _TRISA 000F92  
                                                _TRISB 000F93  
                                        __CFG_PWRT$OFF 000000  
                                        __CFG_WRT0$OFF 000000  
                                        __CFG_WRT1$OFF 000000  
                                        __CFG_WRT2$OFF 000000  
                                        __CFG_WRT3$OFF 000000  
                                       __CFG_EBTR0$OFF 000000  
                                       __CFG_EBTR1$OFF 000000  
                                       __CFG_EBTR2$OFF 000000  
                                       __CFG_EBTR3$OFF 000000  
                                        __CFG_STVR$OFF 000000  
                                        __CFG_WRTB$OFF 000000  
                                        __CFG_WRTC$OFF 000000  
                                        __CFG_WRTD$OFF 000000  
                                       __CFG_EBTRB$OFF 000000  
                                      ??_lcd_initCGRam 006B  
                                                _flags 00EC  
                                                _fputc 13D0  
                                                _fputs 1ABE  
                                                pad@fp 0077  
                                                _width 00E8  
                                                _putch 1DA4  
                                                main@i 00E4  
                                                dtoa@d 0084  
                                                dtoa@i 00A4  
                                                dtoa@n 009C  
                                                dtoa@p 0096  
                                                dtoa@s 009A  
                                                dtoa@w 0098  
                                      __end_of_low_isr 002A  
                                                tablat 000FF5  
                                      lcd_effaceChar@i 006B  
                                                ttemp5 0002  
                                                ttemp6 0005  
                                                ttemp7 0009  
                                                status 000FD8  
                                                wtemp8 0002  
                                      __end_of_sprintf 1ABE  
                             __end_of_lcd_cacheCurseur 1D8E  
                             __size_of_lcd_effaceLigne 0024  
                                      __initialization 1C62  
                                     ??_lcd_effaceChar 006A  
                                         __end_of_main 1062  
                                         __end_of_dtoa 09A4  
                                 lcd_putMessage@chaine 006F  
                                               ??_main 00CE  
                                               ??_dtoa 008C  
                                        __activetblptr 000003  
                                               _ADCON1 000FC1  
                                               ?_fputc 0067  
                                               ?_fputs 0070  
                                     ___awdiv@dividend 0067  
                                               ?_putch 0060  
                                               i2l2423 106C  
                                               i2l2441 10F0  
                                               i2l2433 10B4  
                                               i2l2425 107E  
                                               i2l2451 111A  
                                               i2l2435 10BA  
                                               i2l2427 1080  
                                               i2l2443 10FA  
                                               i2l2461 118E  
                                               i2l2453 112E  
                                               i2l2445 110E  
                                               i2l2437 10DE  
                                               i2l2429 108A  
                                               i2l2463 1194  
                                               i2l2455 1146  
                                               i2l2447 1110  
                                               i2l2439 10EE  
                                               i2l2465 11B6  
                                               i2l2457 1150  
                                               i2l2449 1112  
                                               i2l2467 11C0  
                                               i2l2459 115C  
                                               i2l2469 11C4  
                                       __CFG_WDTPS$128 000000  
                                       lcd_initCGRam@i 006D  
                                       lcd_initCGRam@j 006E  
                                         vfprintf@cfmt 00BC  
                                     __end_of_lcd_busy 1B76  
                                     __end_of_lcd_init 1D52  
                                     __end_of_high_isr 11D8  
                                            ??___aodiv 0077  
                                            ??___aomod 0077  
                                            ??___awdiv 006B  
                                               _g_echo 0140  
                                            ??___lwdiv 006B  
                                               clear_0 1C88  
                                               clear_1 1C94  
                                     ___awdiv@quotient 006D  
                                               pad@buf 0079  
                                               dtoa@fp 0082  
                                               _strlen 1C1C  
                                               fputc@c 0067  
                                               fputs@c 0074  
                                               fputs@i 0075  
                                               fputs@s 0070  
                                         __mediumconst 0000  
                                            ??_low_isr 0066  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                               putch@c 0060  
                                     __end_of_vfprintf 18F8  
                                            ??_sprintf 00C4  
                                     lcd_effaceLigne@y 006F  
                                    _lcd_resetSequence 19EA  
                                           __accesstop 0060  
                              __end_of__initialization 1C9A  
                                  _lcd_strobeEnableBit 1D8E  
                                   ?_lcd_resetSequence 0060  
                                        ___rparam_used 000000  
                                         __pidataBANK1 1CA4  
                                  ??_lcd_resetSequence 0069  
                                    ??_lcd_effaceLigne 006F  
                                        __end_of_fputc 14BC  
                                        __end_of_fputs 1B1A  
                                        __end_of_putch 1DAA  
                                 ?_lcd_strobeEnableBit 0060  
                                         _g_compteEcho 00F0  
                                   __size_of_lcd_wrCom 009C  
                                              ??_fputc 006B  
                                              ??_fputs 0074  
                            __end_of_lcd_resetSequence 1A58  
                                              ??_putch 0067  
                             __size_of_lcd_lireDonnees 000A  
                                    _lcd_ecrireDonnees 1972  
                                           __pbssBANK0 00E6  
                                           __pbssBANK1 0140  
                                     ??_lcd_putMessage 0072  
                                   ?_lcd_ecrireDonnees 0060  
                             __size_of_lcd_curseurHome 000C  
                                  ??_lcd_ecrireDonnees 0067  
                                ??_lcd_strobeEnableBit 0067  
                                              ?_strlen 0067  
                                           _lcd_gotoXY 16D6  
                                   __size_of_vfpfcnvrt 01F6  
                                           _lcd_wrData 1B76  
                            __end_of_lcd_ecrireDonnees 19EA  
                                            ?_lcd_busy 0060  
                                            ?_lcd_init 0060  
                              lcd_ecrireDonnees@donnee 0068  
                                            ?_high_isr 0060  
                                    ?_lcd_cacheCurseur 0060  
                                              __Hparam 0000  
                                              __Lparam 0000  
                                   ??_lcd_cacheCurseur 006B  
                                    __end_of_lcd_wrCom 16D6  
                                              ___aodiv 0B9A  
                                              ___aomod 0D50  
                                              ___awdiv 12DE  
                                              ___lwdiv 176E  
                                            ?_vfprintf 00B6  
                                         __psmallconst 0600  
                                              __pcinit 1C62  
                                              __ramtop 0600  
                                              __ptext0 0EE2  
                                              __ptext1 1A58  
                                              __ptext2 187E  
                                              __ptext3 09A4  
                                              __ptext4 0624  
                                              __ptext5 11D8  
                                              __ptext6 1C1C  
                                              __ptext7 1ABE  
                                              __ptext8 13D0  
                                              __ptext9 1DA4  
                                __end_of_lcd_ecritChar 1972  
                                            _T0CONbits 000FD5  
                                      lcd_busy@adresse 0068  
                                      __size_of_strlen 0046  
                                            _T1CONbits 000FCD  
                                         __size_of_abs 004E  
                                         __size_of_pad 0106  
                                            _T3CONbits 000FB1  
                                              _low_isr 0018  
                                     lcd_ecritChar@car 006D  
                                              _sprintf 1A58  
                                           ??_lcd_busy 0067  
                                           ??_lcd_init 006F  
                           __size_of_lcd_resetSequence 006E  
                                           ??_high_isr 0060  
                                       __pintcode_body 1062  
                                 end_of_initialization 1C9A  
                                __end_of_lcd_initCGRam 163A  
                                              fputc@fp 0069  
                                              int_func 1062  
                                              fputs@fp 0072  
                                    lcd_effaceChar@nbr 006A  
                                    ??_lcd_lireDonnees 0067  
                                    __end_of_vfpfcnvrt 0B9A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                              __size_of_initialisation 0080  
                                    ??_lcd_curseurHome 006B  
                                           ??_vfprintf 00BC  
                                  lcd_ecritChar@posRam 006E  
                                              strlen@a 0069  
                                              strlen@s 0067  
                                            _PORTAbits 000F80  
                                            _PORTBbits 000F81  
                                            _PORTCbits 000F82  
                                            _PORTDbits 000F83  
                                          ?_lcd_gotoXY 006B  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                            _TRISDbits 000F95  
                                          ?_lcd_wrData 0060  
                           __size_of_lcd_ecrireDonnees 0078  
                                           high_isr@t1 00EE  
                                          _CCP1CONbits 000FBD  
                                      _lcd_effaceLigne 1D52  
                                          vfpfcnvrt@ap 00AA  
                                          vfpfcnvrt@fp 00A6  
                                          vfpfcnvrt@ll 00AE  
                                       __end_of_strlen 1C62  
                              __size_of_lcd_effaceChar 003C  
                                  start_initialization 1C62  
                                          __end_of_abs 1C1C  
                                          __end_of_pad 12DE  
                                          vfprintf@fmt 00B8  
                                  __size_of_lcd_gotoXY 0098  
                                  __size_of_lcd_wrData 0058  
                                          __pdataBANK1 0100  
                                             ??_strlen 0069  
                                        __pcstackBANK0 0060  
                                     ___aodiv@dividend 0067  
                              __end_of_lcd_effaceLigne 1D76  
                                    __size_of_lcd_busy 005C  
                                    __size_of_lcd_init 0032  
                                    __size_of_high_isr 11D0  
                                     ___lwdiv@dividend 0067  
                                            _dtoa$1379 0094  
                          __end_of_lcd_strobeEnableBit 1D9A  
                                            __pintcode 0008  
                                       _initialisation 17FE  
                                             ?___aodiv 0067  
                                             ?___aomod 0067  
                                             ?___awdiv 0067  
                                     ___aodiv@quotient 0079  
                                             ?___lwdiv 0067  
                                          __pintcodelo 0018  
                                            _lcd_wrCom 163A  
                                    __size_of_vfprintf 007A  
                            __size_of_lcd_cacheCurseur 000C  
                                          __smallconst 0600  
                                             ?_low_isr 0060  
                                     ___lwdiv@quotient 006B  
                                      _lcd_lireDonnees 1D9A  
                                             ?_sprintf 00BE  
                                  lcd_wrData@caractere 0069  
                                       __size_of_fputc 00EC  
                                       __size_of_fputs 005C  
                                       __size_of_putch 0006  
                                      _lcd_curseurHome 1D76  
                                             _IPR1bits 000F9F  
                                             _PIE1bits 000F9D  
                               __end_of_initialisation 187E  
                                             i2u142_40 107C  
                                             i2u142_41 1076  
                                             i2u143_40 10AA  
                                             i2u143_41 10A4  
                                             i2u144_40 10DA  
                                             i2u144_41 10D4  
                                             i2u145_40 110C  
                                             i2u145_41 1106  
                                             i2u146_40 112C  
                                             i2u146_41 1126  
                                             i2u147_40 1144  
                                             i2u147_41 113E  
                                             i2u148_40 11B4  
                                             i2u148_41 11AE  
                                             _PIR1bits 000F9E  
                                             _RCONbits 000FD0  
                              __size_of_lcd_putMessage 00C4  
                                            _vfpfcnvrt 09A4  
                                           ?_lcd_wrCom 0060  
                                       _lcd_effaceChar 1CE4  
                                            high_isr@i 0064  
                                         ??_lcd_gotoXY 006C  
                                         ??_lcd_wrData 0069  
                                     ?_lcd_effaceLigne 0060  
                                    lcd_wrCom@commande 006A  
                                          _INTCON2bits 000FF1  
                                            copy_data0 1C76  
                                             __Hparam0 0000  
                               __size_of_lcd_ecritChar 007A  
                                             __Lparam0 0000  
                                      ?_initialisation 0060  
                                           vfprintf@ap 00BA  
                                           vfprintf@fp 00B6  
                                   __end_of_lcd_gotoXY 176E  
                                   __end_of_lcd_wrData 1BCE  
                                     __size_of___aodiv 01B6  
                                     __size_of___aomod 0192  
                                     __size_of___awdiv 00F2  
                                           ?_vfpfcnvrt 00A6  
                                     __size_of___lwdiv 0090  
                               __size_of_lcd_initCGRam 00BA  
                                      lcd_putMessage@j 0077  
                               __end_of_lcd_effaceChar 1D20  
                                      ___aodiv@divisor 006F  
                                      ___aodiv@counter 0077  
                              __end_of_lcd_lireDonnees 1DA4  
                                           sprintf@fmt 00C0  
                                           sprintf@ret 00C4  
                                      ___lwdiv@divisor 0069  
                                             _matCGRAM 0100  
                                      ___lwdiv@counter 006D  
                              __end_of_lcd_curseurHome 1D82  
                                     __size_of_low_isr 0012  
                                             __ptext10 1BCE  
                                             __ptext11 0D50  
                                             __ptext20 16D6  
                                             __ptext12 0B9A  
                                             __ptext21 1CE4  
                                             __ptext13 14BC  
                                             __ptext30 176E  
                                             __ptext22 1B76  
                                             __ptext14 18F8  
                                             __ptext31 12DE  
                                             __ptext23 1D82  
                                             __ptext15 1D20  
                                             __ptext24 163A  
                                             __ptext16 19EA  
                                             __ptext25 1D8E  
                                             __ptext17 1580  
                                             __ptext26 1972  
                                             __ptext18 1D76  
                                             __ptext27 1B1A  
                                             __ptext19 1D52  
                                             __ptext28 1D9A  
                                             __ptext29 17FE  
                                             _lcd_busy 1B1A  
                                             _lcd_init 1D20  
                                             _high_isr 0008  
                                     __size_of_sprintf 0066  
                                        __size_of_main 0180  
                                        __size_of_dtoa 0380  
                                             int$flags 0001  
                                             _vfprintf 187E  
                                          ??_lcd_wrCom 0069  
                                      ?_lcd_effaceChar 0060  
                                     _lcd_cacheCurseur 1D82  
                                     ___aomod@dividend 0067  
                                        _lcd_ecritChar 18F8  
                                           _INTCONbits 000FF2  
                                             intlevel1 1DAA  
                                             intlevel2 1DAA  
                                            sprintf@ap 00C6  
                                        _lcd_initCGRam 1580  
                                       _lcd_putMessage 14BC  
                                      ___aomod@divisor 006F  
                                          ??_vfpfcnvrt 00AC  
                                      ___aomod@counter 0077  
                                       ?_lcd_ecritChar 0060  
                                             sprintf@f 00C8  
                                             sprintf@s 00BE  
                                     ?_lcd_lireDonnees 0060  
                                     ?_lcd_curseurHome 0060  
                                       ?_lcd_initCGRam 0060  
                                         ___aodiv@sign 0078  
                               __end_of_lcd_putMessage 1580  
                                         ___aomod@sign 0078  
