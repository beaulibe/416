

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 16:40:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1,minocg
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1,minocg
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    26  0000                     
    27                           ; Version 2.10
    28                           ; Generated 31/07/2019 GMT
    29                           ; 
    30                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F458 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	idataBANK0
    63  000448                     __pidataBANK0:
    64                           	opt callstack 0
    65                           
    66                           ;initializer for high_isr@sensUp
    67  000448  01                 	db	1
    68                           
    69                           ;initializer for high_isr@dutyWiper
    70  000449  09                 	db	9
    71                           
    72                           ;initializer for _g_chargeTMR0
    73  00044A  F2                 	db	242
    74                           
    75                           	psect	nvBANK0
    76  00007A                     __pnvBANK0:
    77                           	opt callstack 0
    78  00007A                     _g_etat:
    79                           	opt callstack 0
    80  00007A                     	ds	2
    81  0000                     _PIE2bits	set	4000
    82  0000                     _T3CON	set	4017
    83  0000                     _T2CONbits	set	4042
    84  0000                     _TRISCbits	set	3988
    85  0000                     _CCP1CONbits	set	4029
    86  0000                     _PR2	set	4043
    87  0000                     _PIE1bits	set	3997
    88  0000                     _ADCON1bits	set	4033
    89  0000                     _ADCON1	set	4033
    90  0000                     _TRISAbits	set	3986
    91  0000                     _TRISD	set	3989
    92  0000                     _PORTCbits	set	3970
    93  0000                     _PIR2bits	set	4001
    94  0000                     _TMR0L	set	4054
    95  0000                     _TMR0H	set	4055
    96  0000                     _INTCONbits	set	4082
    97  0000                     _ADCON0bits	set	4034
    98  0000                     _ADRESH	set	4036
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTD	set	3971
   101  0000                     _CCPR1L	set	4030
   102  0000                     _T0CONbits	set	4053
   103                           
   104                           ; #config settings
   105  0000                     
   106                           	psect	cinit
   107  000342                     __pcinit:
   108                           	opt callstack 0
   109  000342                     start_initialization:
   110                           	opt callstack 0
   111  000342                     __initialization:
   112                           	opt callstack 0
   113                           
   114                           ; Initialize objects allocated to BANK0 (3 bytes)
   115                           ; load TBLPTR registers with __pidataBANK0
   116  000342  0E48               	movlw	low __pidataBANK0
   117  000344  6EF6               	movwf	tblptrl,c
   118  000346  0E04               	movlw	high __pidataBANK0
   119  000348  6EF7               	movwf	tblptrh,c
   120  00034A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   121  00034C  6EF8               	movwf	tblptru,c
   122  00034E  0009               	tblrd		*+	;fetch initializer
   123  000350  CFF5 F077          	movff	tablat,__pdataBANK0
   124  000354  0009               	tblrd		*+	;fetch initializer
   125  000356  CFF5 F078          	movff	tablat,__pdataBANK0+1
   126  00035A  0009               	tblrd		*+	;fetch initializer
   127  00035C  CFF5 F079          	movff	tablat,__pdataBANK0+2
   128                           
   129                           ; Clear objects allocated to BANK0 (6 bytes)
   130  000360  0100               	movlb	0
   131  000362  6B76               	clrf	(__pbssBANK0+5)& (0+255),b
   132  000364  6B75               	clrf	(__pbssBANK0+4)& (0+255),b
   133  000366  6B74               	clrf	(__pbssBANK0+3)& (0+255),b
   134  000368  6B73               	clrf	(__pbssBANK0+2)& (0+255),b
   135  00036A  6B72               	clrf	(__pbssBANK0+1)& (0+255),b
   136  00036C  6B71               	clrf	__pbssBANK0& (0+255),b
   137  00036E                     end_of_initialization:
   138                           	opt callstack 0
   139  00036E                     __end_of__initialization:
   140                           	opt callstack 0
   141  00036E  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142  000370  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143  000372  0100               	movlb	0
   144  000374  EF89  F000         	goto	_main	;jump to C main() function
   145                           
   146                           	psect	bssBANK0
   147  000071                     __pbssBANK0:
   148                           	opt callstack 0
   149  000071                     	ds	2
   150  000073                     _g_compteurTmr3:
   151                           	opt callstack 0
   152  000073                     	ds	2
   153  000075                     _g_resAN:
   154                           	opt callstack 0
   155  000075                     	ds	2
   156                           
   157                           	psect	dataBANK0
   158  000077                     __pdataBANK0:
   159                           	opt callstack 0
   160  000077                     high_isr@sensUp:
   161                           	opt callstack 0
   162  000077                     	ds	1
   163  000078                     high_isr@dutyWiper:
   164                           	opt callstack 0
   165  000078                     	ds	1
   166  000079                     _g_chargeTMR0:
   167                           	opt callstack 0
   168  000079                     	ds	1
   169                           
   170                           	psect	cstackBANK0
   171  000060                     __pcstackBANK0:
   172                           	opt callstack 0
   173  000060                     ?___wmul:
   174                           	opt callstack 0
   175  000060                     ___wmul@multiplier:
   176                           	opt callstack 0
   177                           
   178                           ; 2 bytes @ 0x0
   179  000060                     	ds	2
   180  000062                     ___wmul@multiplicand:
   181                           	opt callstack 0
   182                           
   183                           ; 2 bytes @ 0x2
   184  000062                     	ds	2
   185  000064                     ___wmul@product:
   186                           	opt callstack 0
   187                           
   188                           ; 2 bytes @ 0x4
   189  000064                     	ds	2
   190  000066                     ?___awdiv:
   191                           	opt callstack 0
   192  000066                     ___awdiv@dividend:
   193                           	opt callstack 0
   194                           
   195                           ; 2 bytes @ 0x6
   196  000066                     	ds	2
   197  000068                     ___awdiv@divisor:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x8
   201  000068                     	ds	2
   202  00006A                     ___awdiv@counter:
   203                           	opt callstack 0
   204                           
   205                           ; 1 bytes @ 0xA
   206  00006A                     	ds	1
   207  00006B                     ___awdiv@sign:
   208                           	opt callstack 0
   209                           
   210                           ; 1 bytes @ 0xB
   211  00006B                     	ds	1
   212  00006C                     ___awdiv@quotient:
   213                           	opt callstack 0
   214                           
   215                           ; 2 bytes @ 0xC
   216  00006C                     	ds	2
   217  00006E                     ??_main:
   218                           
   219                           ; 1 bytes @ 0xE
   220  00006E                     	ds	2
   221  000070                     main@dutyWiper:
   222                           	opt callstack 0
   223                           
   224                           ; 1 bytes @ 0x10
   225  000070                     	ds	1
   226                           
   227 ;;
   228 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   229 ;;
   230 ;; *************** function _main *****************
   231 ;; Defined at:
   232 ;;		line 54 in file "main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  dutyWiper       1   16[BANK0 ] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   246 ;;      Params:         0       0       0       0       0       0       0
   247 ;;      Locals:         0       1       0       0       0       0       0
   248 ;;      Temps:          0       2       0       0       0       0       0
   249 ;;      Totals:         0       3       0       0       0       0       0
   250 ;;Total ram usage:        3 bytes
   251 ;; Hardware stack levels required when called:    3
   252 ;; This function calls:
   253 ;;		___awdiv
   254 ;;		___wmul
   255 ;;		_initialisation
   256 ;; This function is called by:
   257 ;;		Startup code after reset
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	text0
   262  000112                     __ptext0:
   263                           	opt callstack 0
   264  000112                     _main:
   265                           	opt callstack 28
   266  000112  FFFF               	dw	65535	; assembler added errata NOP
   267                           
   268                           ;main.c: 56: unsigned char dutyWiper = 9;
   269  000114  0E09               	movlw	9
   270  000116  0100               	movlb	0	; force () banked
   271  000118  6F70               	movwf	main@dutyWiper& (0+255),b
   272  00011A                     
   273                           ; BSR set to: 0
   274                           ;main.c: 58: initialisation();
   275  00011A  ECD2  F001         	call	_initialisation	;wreg free
   276  00011E                     
   277                           ;main.c: 59: T0CONbits.TMR0ON = 1;
   278  00011E  8ED5               	bsf	213,7,c	;volatile
   279  000120                     
   280                           ;main.c: 60: CCPR1L = 9;
   281  000120  0E09               	movlw	9
   282  000122  6EBE               	movwf	190,c	;volatile
   283  000124                     l1227:
   284  000124  FFFF               	dw	65535	; assembler added errata NOP
   285                           
   286                           ;main.c: 65: {;main.c: 68: g_etat = g_resAN * enumEtatMax / 256;
   287  000126  C075  F060         	movff	_g_resAN,___wmul@multiplier
   288  00012A  C076  F061         	movff	_g_resAN+1,___wmul@multiplier+1
   289  00012E  0E00               	movlw	0
   290  000130  0100               	movlb	0	; force () banked
   291  000132  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   292  000134  0E06               	movlw	6
   293  000136  6F62               	movwf	___wmul@multiplicand& (0+255),b
   294  000138  ECBC  F001         	call	___wmul	;wreg free
   295  00013C  C060  F066         	movff	?___wmul,___awdiv@dividend
   296  000140  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
   297  000144  0E01               	movlw	1
   298  000146  0100               	movlb	0	; force () banked
   299  000148  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
   300  00014A  0E00               	movlw	0
   301  00014C  6F68               	movwf	___awdiv@divisor& (0+255),b
   302  00014E  EC28  F001         	call	___awdiv	;wreg free
   303  000152  C066  F07A         	movff	?___awdiv,_g_etat
   304  000156  C067  F07B         	movff	?___awdiv+1,_g_etat+1
   305  00015A                     
   306                           ;main.c: 69: PORTD = g_etat << 5;
   307  00015A  0100               	movlb	0	; force () banked
   308  00015C  397A               	swapf	_g_etat& (0+255),w,b
   309  00015E  46E8               	rlncf	wreg,f,c
   310  000160  0BE0               	andlw	224
   311  000162  6E83               	movwf	131,c	;volatile
   312                           
   313                           ;main.c: 71: switch (g_etat)
   314  000164  EFFD  F000         	goto	l1257
   315  000168                     l1231:
   316  000168  FFFF               	dw	65535	; assembler added errata NOP
   317                           
   318                           ; BSR set to: 0
   319                           ;main.c: 81: if (g_compteurTmr3 > 15)
   320  00016A  0100               	movlb	0	; force () banked
   321  00016C  5174               	movf	(_g_compteurTmr3+1)& (0+255),w,b
   322  00016E  E10A               	bnz	u240
   323  000170  0E10               	movlw	16
   324  000172  5D73               	subwf	_g_compteurTmr3& (0+255),w,b
   325  000174  A0D8               	btfss	status,0,c
   326  000176  EFBF  F000         	goto	u241
   327  00017A  EFC2  F000         	goto	u240
   328  00017E                     u241:
   329  00017E  FFFF               	dw	65535	; assembler added errata NOP
   330  000180  EF92  F000         	goto	l1227
   331  000184                     u240:
   332  000184  FFFF               	dw	65535	; assembler added errata NOP
   333  000186                     
   334                           ; BSR set to: 0
   335                           ;main.c: 82: {;main.c: 84: g_chargeTMR0 = 0xED;
   336  000186  0EED               	movlw	237
   337  000188  0100               	movlb	0	; force () banked
   338  00018A  6F79               	movwf	_g_chargeTMR0& (0+255),b
   339  00018C                     
   340                           ; BSR set to: 0
   341                           ;main.c: 85: T0CONbits.TMR0ON = 1;
   342  00018C  8ED5               	bsf	213,7,c	;volatile
   343                           
   344                           ;main.c: 86: g_compteurTmr3 = 0;
   345  00018E  0E00               	movlw	0
   346  000190  0100               	movlb	0	; force () banked
   347  000192  6F74               	movwf	(_g_compteurTmr3+1)& (0+255),b
   348  000194  0E00               	movlw	0
   349  000196  6F73               	movwf	_g_compteurTmr3& (0+255),b
   350  000198  EF92  F000         	goto	l1227
   351  00019C                     l1237:
   352  00019C  FFFF               	dw	65535	; assembler added errata NOP
   353                           
   354                           ; BSR set to: 0
   355                           ;main.c: 91: if (g_compteurTmr3 > 11)
   356  00019E  0100               	movlb	0	; force () banked
   357  0001A0  5174               	movf	(_g_compteurTmr3+1)& (0+255),w,b
   358  0001A2  E10A               	bnz	u250
   359  0001A4  0E0C               	movlw	12
   360  0001A6  5D73               	subwf	_g_compteurTmr3& (0+255),w,b
   361  0001A8  A0D8               	btfss	status,0,c
   362  0001AA  EFD9  F000         	goto	u251
   363  0001AE  EFDC  F000         	goto	u250
   364  0001B2                     u251:
   365  0001B2  FFFF               	dw	65535	; assembler added errata NOP
   366  0001B4  EF92  F000         	goto	l1227
   367  0001B8                     u250:
   368  0001B8  FFFF               	dw	65535	; assembler added errata NOP
   369  0001BA                     
   370                           ; BSR set to: 0
   371                           ;main.c: 92: {;main.c: 93: g_chargeTMR0 = 0xED;
   372  0001BA  0EED               	movlw	237
   373  0001BC  0100               	movlb	0	; force () banked
   374  0001BE  6F79               	movwf	_g_chargeTMR0& (0+255),b
   375  0001C0                     
   376                           ; BSR set to: 0
   377                           ;main.c: 94: T0CONbits.TMR0ON = 1;
   378  0001C0  8ED5               	bsf	213,7,c	;volatile
   379                           
   380                           ;main.c: 95: g_compteurTmr3 = 0;
   381  0001C2  0E00               	movlw	0
   382  0001C4  0100               	movlb	0	; force () banked
   383  0001C6  6F74               	movwf	(_g_compteurTmr3+1)& (0+255),b
   384  0001C8  0E00               	movlw	0
   385  0001CA  6F73               	movwf	_g_compteurTmr3& (0+255),b
   386  0001CC  EF92  F000         	goto	l1227
   387  0001D0                     l1243:
   388  0001D0  FFFF               	dw	65535	; assembler added errata NOP
   389                           
   390                           ; BSR set to: 0
   391                           ;main.c: 100: g_chargeTMR0 = 0xE8;
   392  0001D2  0EE8               	movlw	232
   393  0001D4  0100               	movlb	0	; force () banked
   394  0001D6  6F79               	movwf	_g_chargeTMR0& (0+255),b
   395  0001D8                     
   396                           ; BSR set to: 0
   397                           ;main.c: 101: T0CONbits.TMR0ON = 1;
   398  0001D8  8ED5               	bsf	213,7,c	;volatile
   399                           
   400                           ;main.c: 102: break;
   401  0001DA  EF92  F000         	goto	l1227
   402  0001DE                     l1247:
   403  0001DE  FFFF               	dw	65535	; assembler added errata NOP
   404                           
   405                           ; BSR set to: 0
   406                           ;main.c: 105: g_chargeTMR0 = 0xED;
   407  0001E0  0EED               	movlw	237
   408  0001E2  0100               	movlb	0	; force () banked
   409  0001E4  6F79               	movwf	_g_chargeTMR0& (0+255),b
   410  0001E6                     
   411                           ; BSR set to: 0
   412                           ;main.c: 106: T0CONbits.TMR0ON = 1;
   413  0001E6  8ED5               	bsf	213,7,c	;volatile
   414                           
   415                           ;main.c: 107: break;
   416  0001E8  EF92  F000         	goto	l1227
   417  0001EC                     l1251:
   418  0001EC  FFFF               	dw	65535	; assembler added errata NOP
   419                           
   420                           ; BSR set to: 0
   421                           ;main.c: 110: g_chargeTMR0 = 0xF2;
   422  0001EE  0EF2               	movlw	242
   423  0001F0  0100               	movlb	0	; force () banked
   424  0001F2  6F79               	movwf	_g_chargeTMR0& (0+255),b
   425  0001F4                     
   426                           ; BSR set to: 0
   427                           ;main.c: 111: T0CONbits.TMR0ON = 1;
   428  0001F4  8ED5               	bsf	213,7,c	;volatile
   429                           
   430                           ;main.c: 112: break;
   431  0001F6  EF92  F000         	goto	l1227
   432  0001FA                     l1257:
   433  0001FA  FFFF               	dw	65535	; assembler added errata NOP
   434                           
   435                           ; BSR set to: 0
   436  0001FC  C07A  F06E         	movff	_g_etat,??_main
   437  000200  C07B  F06F         	movff	_g_etat+1,??_main+1
   438                           
   439                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   440                           ; Switch size 1, requested type "simple"
   441                           ; Number of cases is 1, Range of values is 0 to 0
   442                           ; switch strategies available:
   443                           ; Name         Instructions Cycles
   444                           ; simple_byte            4     3 (average)
   445                           ;	Chosen strategy is simple_byte
   446  000204  0100               	movlb	0	; force () banked
   447  000206  516F               	movf	(??_main+1)& (0+255),w,b
   448  000208  0A00               	xorlw	0	; case 0
   449  00020A  B4D8               	btfsc	status,2,c
   450  00020C  EF0A  F001         	goto	l1319
   451  000210  EF92  F000         	goto	l1227
   452  000214                     l1319:
   453  000214  FFFF               	dw	65535	; assembler added errata NOP
   454                           
   455                           ; BSR set to: 0
   456                           ; Switch size 1, requested type "simple"
   457                           ; Number of cases is 6, Range of values is 0 to 5
   458                           ; switch strategies available:
   459                           ; Name         Instructions Cycles
   460                           ; simple_byte           19    10 (average)
   461                           ;	Chosen strategy is simple_byte
   462  000216  516E               	movf	??_main& (0+255),w,b
   463  000218  0A00               	xorlw	0	; case 0
   464  00021A  B4D8               	btfsc	status,2,c
   465  00021C  EF92  F000         	goto	l1227
   466  000220  0A01               	xorlw	1	; case 1
   467  000222  B4D8               	btfsc	status,2,c
   468  000224  EFB4  F000         	goto	l1231
   469  000228  0A03               	xorlw	3	; case 2
   470  00022A  B4D8               	btfsc	status,2,c
   471  00022C  EFCE  F000         	goto	l1237
   472  000230  0A01               	xorlw	1	; case 3
   473  000232  B4D8               	btfsc	status,2,c
   474  000234  EFE8  F000         	goto	l1243
   475  000238  0A07               	xorlw	7	; case 4
   476  00023A  B4D8               	btfsc	status,2,c
   477  00023C  EFEF  F000         	goto	l1247
   478  000240  0A01               	xorlw	1	; case 5
   479  000242  B4D8               	btfsc	status,2,c
   480  000244  EFF6  F000         	goto	l1251
   481  000248  EF92  F000         	goto	l1227
   482  00024C  EF87  F000         	goto	start
   483  000250                     __end_of_main:
   484                           	opt callstack 0
   485                           
   486 ;; *************** function _initialisation *****************
   487 ;; Defined at:
   488 ;;		line 42 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, status,2, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   502 ;;      Params:         0       0       0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    2
   509 ;; This function calls:
   510 ;;		_initialisation_ActiverIntAdc
   511 ;;		_initialisation_ActiverInterruptions
   512 ;;		_initialisation_ActiverPWM
   513 ;;		_initialisation_ConfigTmr0
   514 ;;		_initialisation_ConfigTmr3
   515 ;;		_initialisation_ConfigurerAdc
   516 ;;		_initialisation_ConfigurerPortDSortie
   517 ;; This function is called by:
   518 ;;		_main
   519 ;; This function uses a non-reentrant model
   520 ;;
   521                           
   522                           	psect	text1
   523  0003A4                     __ptext1:
   524                           	opt callstack 0
   525  0003A4                     _initialisation:
   526                           	opt callstack 0
   527  0003A4  FFFF               	dw	65535	; assembler added errata NOP
   528  0003A6                     
   529                           ;main.c: 44: initialisation_ConfigurerPortDSortie();
   530  0003A6  EC1A  F002         	call	_initialisation_ConfigurerPortDSortie	;wreg free
   531                           
   532                           ;main.c: 45: initialisation_ConfigurerAdc();
   533  0003AA  EC00  F002         	call	_initialisation_ConfigurerAdc	;wreg free
   534  0003AE                     
   535                           ;main.c: 46: initialisation_ActiverIntAdc();
   536  0003AE  EC14  F002         	call	_initialisation_ActiverIntAdc	;wreg free
   537  0003B2                     
   538                           ;main.c: 47: initialisation_ActiverPWM();
   539  0003B2  ECE3  F001         	call	_initialisation_ActiverPWM	;wreg free
   540  0003B6                     
   541                           ;main.c: 48: initialisation_ConfigTmr0();
   542  0003B6  ECF2  F001         	call	_initialisation_ConfigTmr0	;wreg free
   543  0003BA                     
   544                           ;main.c: 49: initialisation_ConfigTmr3();
   545  0003BA  EC0D  F002         	call	_initialisation_ConfigTmr3	;wreg free
   546                           
   547                           ;main.c: 50: initialisation_ActiverInterruptions();
   548  0003BE  EC1F  F002         	call	_initialisation_ActiverInterruptions	;wreg free
   549  0003C2  0012               	return		;funcret
   550  0003C4  FFFF               	dw	65535	; errata NOP
   551  0003C6                     __end_of_initialisation:
   552                           	opt callstack 0
   553                           
   554 ;; *************** function _initialisation_ConfigurerPortDSortie *****************
   555 ;; Defined at:
   556 ;;		line 17 in file "initialisation.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, status,2
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   570 ;;      Params:         0       0       0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_initialisation
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585  000434                     __ptext2:
   586                           	opt callstack 0
   587  000434                     _initialisation_ConfigurerPortDSortie:
   588                           	opt callstack 0
   589  000434  FFFF               	dw	65535	; assembler added errata NOP
   590  000436                     
   591                           ;initialisation.c: 19: TRISD = 0;
   592  000436  0E00               	movlw	0
   593  000438  6E95               	movwf	149,c	;volatile
   594  00043A  0012               	return		;funcret
   595  00043C  FFFF               	dw	65535	; errata NOP
   596  00043E                     __end_of_initialisation_ConfigurerPortDSortie:
   597                           	opt callstack 0
   598                           
   599 ;; *************** function _initialisation_ConfigurerAdc *****************
   600 ;; Defined at:
   601 ;;		line 35 in file "initialisation.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   615 ;;      Params:         0       0       0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    1
   622 ;; This function calls:
   623 ;;		Nothing
   624 ;; This function is called by:
   625 ;;		_initialisation
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           	psect	text3
   630  000400                     __ptext3:
   631                           	opt callstack 0
   632  000400                     _initialisation_ConfigurerAdc:
   633                           	opt callstack 0
   634  000400  FFFF               	dw	65535	; assembler added errata NOP
   635  000402                     
   636                           ;initialisation.c: 38: TRISAbits.TRISA0 = 1;
   637  000402  8092               	bsf	146,0,c	;volatile
   638  000404                     
   639                           ;initialisation.c: 40: ADCON1 = 0;
   640  000404  0E00               	movlw	0
   641  000406  6EC1               	movwf	193,c	;volatile
   642  000408                     
   643                           ;initialisation.c: 42: ADCON0bits.ADON = 1;
   644  000408  80C2               	bsf	194,0,c	;volatile
   645  00040A                     
   646                           ;initialisation.c: 43: ADCON1bits.ADFM = 0;
   647  00040A  9EC1               	bcf	193,7,c	;volatile
   648                           
   649                           ;initialisation.c: 46: ADCON0bits.ADCS = 0b10;
   650  00040C  50C2               	movf	194,w,c	;volatile
   651  00040E  0B3F               	andlw	-193
   652  000410  0980               	iorlw	128
   653  000412  6EC2               	movwf	194,c	;volatile
   654  000414                     
   655                           ;initialisation.c: 47: ADCON1bits.ADCS2 = 1;
   656  000414  8CC1               	bsf	193,6,c	;volatile
   657  000416  0012               	return		;funcret
   658  000418  FFFF               	dw	65535	; errata NOP
   659  00041A                     __end_of_initialisation_ConfigurerAdc:
   660                           	opt callstack 0
   661                           
   662 ;; *************** function _initialisation_ConfigTmr3 *****************
   663 ;; Defined at:
   664 ;;		line 123 in file "initialisation.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   678 ;;      Params:         0       0       0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    1
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_initialisation
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text4
   693  00041A                     __ptext4:
   694                           	opt callstack 0
   695  00041A                     _initialisation_ConfigTmr3:
   696                           	opt callstack 0
   697  00041A  FFFF               	dw	65535	; assembler added errata NOP
   698  00041C                     
   699                           ;initialisation.c: 126: T3CON = 1;
   700  00041C  0E01               	movlw	1
   701  00041E  6EB1               	movwf	177,c	;volatile
   702  000420                     
   703                           ;initialisation.c: 127: PIE2bits.TMR3IE = 1;
   704  000420  82A0               	bsf	160,1,c	;volatile
   705  000422                     
   706                           ;initialisation.c: 128: TRISCbits.RC0 = 0;
   707  000422  9094               	bcf	148,0,c	;volatile
   708  000424  0012               	return		;funcret
   709  000426  FFFF               	dw	65535	; errata NOP
   710  000428                     __end_of_initialisation_ConfigTmr3:
   711                           	opt callstack 0
   712                           
   713 ;; *************** function _initialisation_ConfigTmr0 *****************
   714 ;; Defined at:
   715 ;;		line 98 in file "initialisation.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   729 ;;      Params:         0       0       0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0       0       0
   731 ;;      Temps:          0       0       0       0       0       0       0
   732 ;;      Totals:         0       0       0       0       0       0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_initialisation
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text5
   744  0003E4                     __ptext5:
   745                           	opt callstack 0
   746  0003E4                     _initialisation_ConfigTmr0:
   747                           	opt callstack 0
   748  0003E4  FFFF               	dw	65535	; assembler added errata NOP
   749  0003E6                     
   750                           ;initialisation.c: 100: T0CONbits.TMR0ON = 0;
   751  0003E6  9ED5               	bcf	213,7,c	;volatile
   752                           
   753                           ;initialisation.c: 101: T0CONbits.T08BIT = 0;
   754  0003E8  9CD5               	bcf	213,6,c	;volatile
   755                           
   756                           ;initialisation.c: 102: T0CONbits.PSA = 0;
   757  0003EA  96D5               	bcf	213,3,c	;volatile
   758                           
   759                           ;initialisation.c: 103: T0CONbits.T0CS = 0;
   760  0003EC  9AD5               	bcf	213,5,c	;volatile
   761  0003EE                     
   762                           ;initialisation.c: 104: T0CONbits.T0PS = 0b000;
   763  0003EE  0EF8               	movlw	-8
   764  0003F0  16D5               	andwf	213,f,c	;volatile
   765  0003F2                     
   766                           ;initialisation.c: 105: INTCONbits.TMR0IE = 1;
   767  0003F2  8AF2               	bsf	242,5,c	;volatile
   768                           
   769                           ;initialisation.c: 113: TMR0H = 0xF2;
   770  0003F4  0EF2               	movlw	242
   771  0003F6  6ED7               	movwf	215,c	;volatile
   772                           
   773                           ;initialisation.c: 114: TMR0L = 0x0D;
   774  0003F8  0E0D               	movlw	13
   775  0003FA  6ED6               	movwf	214,c	;volatile
   776  0003FC  0012               	return		;funcret
   777  0003FE  FFFF               	dw	65535	; errata NOP
   778  000400                     __end_of_initialisation_ConfigTmr0:
   779                           	opt callstack 0
   780                           
   781 ;; *************** function _initialisation_ActiverPWM *****************
   782 ;; Defined at:
   783 ;;		line 65 in file "initialisation.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   797 ;;      Params:         0       0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_initialisation
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text6
   812  0003C6                     __ptext6:
   813                           	opt callstack 0
   814  0003C6                     _initialisation_ActiverPWM:
   815                           	opt callstack 0
   816  0003C6  FFFF               	dw	65535	; assembler added errata NOP
   817  0003C8                     
   818                           ;initialisation.c: 73: PR2 = 255;
   819  0003C8  68CB               	setf	203,c	;volatile
   820  0003CA                     
   821                           ;initialisation.c: 76: CCPR1L = 0x80;
   822  0003CA  0E80               	movlw	128
   823  0003CC  6EBE               	movwf	190,c	;volatile
   824                           
   825                           ;initialisation.c: 77: CCP1CONbits.DC1B = 0b00;
   826  0003CE  0ECF               	movlw	-49
   827  0003D0  16BD               	andwf	189,f,c	;volatile
   828  0003D2                     
   829                           ;initialisation.c: 81: TRISCbits.RC2 = 0;
   830  0003D2  9494               	bcf	148,2,c	;volatile
   831  0003D4                     
   832                           ;initialisation.c: 85: PIR1bits.TMR2IF = 0;
   833  0003D4  929E               	bcf	158,1,c	;volatile
   834                           
   835                           ;initialisation.c: 86: T2CONbits.T2CKPS = 3;
   836  0003D6  0E03               	movlw	3
   837  0003D8  12CA               	iorwf	202,f,c	;volatile
   838  0003DA                     
   839                           ;initialisation.c: 87: T2CONbits.TMR2ON = 1;
   840  0003DA  84CA               	bsf	202,2,c	;volatile
   841                           
   842                           ;initialisation.c: 91: CCP1CONbits.CCP1M = 0b1111;
   843  0003DC  0E0F               	movlw	15
   844  0003DE  12BD               	iorwf	189,f,c	;volatile
   845  0003E0  0012               	return		;funcret
   846  0003E2  FFFF               	dw	65535	; errata NOP
   847  0003E4                     __end_of_initialisation_ActiverPWM:
   848                           	opt callstack 0
   849                           
   850 ;; *************** function _initialisation_ActiverInterruptions *****************
   851 ;; Defined at:
   852 ;;		line 25 in file "initialisation.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		None
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   866 ;;      Params:         0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       0       0       0       0       0
   868 ;;      Temps:          0       0       0       0       0       0       0
   869 ;;      Totals:         0       0       0       0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_initialisation
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text7
   881  00043E                     __ptext7:
   882                           	opt callstack 0
   883  00043E                     _initialisation_ActiverInterruptions:
   884                           	opt callstack 0
   885  00043E  FFFF               	dw	65535	; assembler added errata NOP
   886  000440                     
   887                           ;initialisation.c: 27: INTCONbits.PEIE = 1;
   888  000440  8CF2               	bsf	242,6,c	;volatile
   889                           
   890                           ;initialisation.c: 28: INTCONbits.GIE = 1;
   891  000442  8EF2               	bsf	242,7,c	;volatile
   892  000444  0012               	return		;funcret
   893  000446  FFFF               	dw	65535	; errata NOP
   894  000448                     __end_of_initialisation_ActiverInterruptions:
   895                           	opt callstack 0
   896                           
   897 ;; *************** function _initialisation_ActiverIntAdc *****************
   898 ;; Defined at:
   899 ;;		line 54 in file "initialisation.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		None
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used:    1
   919 ;; Hardware stack levels required when called:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_initialisation
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	text8
   928  000428                     __ptext8:
   929                           	opt callstack 0
   930  000428                     _initialisation_ActiverIntAdc:
   931                           	opt callstack 0
   932  000428  FFFF               	dw	65535	; assembler added errata NOP
   933  00042A                     
   934                           ;initialisation.c: 57: PIR1bits.ADIF = 0;
   935  00042A  9C9E               	bcf	158,6,c	;volatile
   936                           
   937                           ;initialisation.c: 58: PIE1bits.ADIE = 1;
   938  00042C  8C9D               	bsf	157,6,c	;volatile
   939                           
   940                           ;initialisation.c: 59: ADCON0bits.GO_DONE = 1;
   941  00042E  84C2               	bsf	194,2,c	;volatile
   942  000430  0012               	return		;funcret
   943  000432  FFFF               	dw	65535	; errata NOP
   944  000434                     __end_of_initialisation_ActiverIntAdc:
   945                           	opt callstack 0
   946                           
   947 ;; *************** function ___wmul *****************
   948 ;; Defined at:
   949 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  multiplier      2    0[BANK0 ] unsigned int 
   952 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   953 ;; Auto vars:     Size  Location     Type
   954 ;;  product         2    4[BANK0 ] unsigned int 
   955 ;; Return value:  Size  Location     Type
   956 ;;                  2    0[BANK0 ] unsigned int 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, prodl, prodh
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   964 ;;      Params:         0       4       0       0       0       0       0
   965 ;;      Locals:         0       2       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0
   967 ;;      Totals:         0       6       0       0       0       0       0
   968 ;;Total ram usage:        6 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text9
   979  000378                     __ptext9:
   980                           	opt callstack 0
   981  000378                     ___wmul:
   982                           	opt callstack 0
   983  000378  FFFF               	dw	65535	; assembler added errata NOP
   984  00037A  0100               	movlb	0	; () banked
   985  00037C  5160               	movf	___wmul@multiplier& (0+255),w,b
   986  00037E  0362               	mulwf	___wmul@multiplicand& (0+255),b
   987  000380  CFF3 F064          	movff	prodl,___wmul@product
   988  000384  CFF4 F065          	movff	prodh,___wmul@product+1
   989  000388  5160               	movf	___wmul@multiplier& (0+255),w,b
   990  00038A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   991  00038C  50F3               	movf	243,w,c
   992  00038E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   993  000390  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
   994  000392  0362               	mulwf	___wmul@multiplicand& (0+255),b
   995  000394  50F3               	movf	243,w,c
   996  000396  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   997  000398                     
   998                           ; BSR set to: 0
   999  000398  C064  F060         	movff	___wmul@product,?___wmul
  1000  00039C  C065  F061         	movff	___wmul@product+1,?___wmul+1
  1001  0003A0                     
  1002                           ; BSR set to: 0
  1003  0003A0  0012               	return		;funcret
  1004  0003A2  FFFF               	dw	65535	; errata NOP
  1005  0003A4                     __end_of___wmul:
  1006                           	opt callstack 0
  1007                           
  1008 ;; *************** function ___awdiv *****************
  1009 ;; Defined at:
  1010 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  dividend        2    6[BANK0 ] int 
  1013 ;;  divisor         2    8[BANK0 ] int 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  quotient        2   12[BANK0 ] int 
  1016 ;;  sign            1   11[BANK0 ] unsigned char 
  1017 ;;  counter         1   10[BANK0 ] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  2    6[BANK0 ] int 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1027 ;;      Params:         0       4       0       0       0       0       0
  1028 ;;      Locals:         0       4       0       0       0       0       0
  1029 ;;      Temps:          0       0       0       0       0       0       0
  1030 ;;      Totals:         0       8       0       0       0       0       0
  1031 ;;Total ram usage:        8 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text10
  1042  000250                     __ptext10:
  1043                           	opt callstack 0
  1044  000250                     ___awdiv:
  1045                           	opt callstack 0
  1046  000250  FFFF               	dw	65535	; assembler added errata NOP
  1047  000252  0E00               	movlw	0
  1048  000254  0100               	movlb	0	; () banked
  1049  000256  6F6B               	movwf	___awdiv@sign& (0+255),b
  1050  000258                     
  1051                           ; BSR set to: 0
  1052  000258  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  1053  00025A  EF34  F001         	goto	u180
  1054  00025E  EF31  F001         	goto	u181
  1055  000262                     u181:
  1056  000262  FFFF               	dw	65535	; assembler added errata NOP
  1057  000264  EF3B  F001         	goto	l1183
  1058  000268                     u180:
  1059  000268  FFFF               	dw	65535	; assembler added errata NOP
  1060  00026A                     
  1061                           ; BSR set to: 0
  1062  00026A  6D68               	negf	___awdiv@divisor& (0+255),b
  1063  00026C  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  1064  00026E  B0D8               	btfsc	status,0,c
  1065  000270  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  1066  000272                     
  1067                           ; BSR set to: 0
  1068  000272  0E01               	movlw	1
  1069  000274  6F6B               	movwf	___awdiv@sign& (0+255),b
  1070  000276                     l1183:
  1071  000276  FFFF               	dw	65535	; assembler added errata NOP
  1072                           
  1073                           ; BSR set to: 0
  1074  000278  BF67               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  1075  00027A  EF44  F001         	goto	u190
  1076  00027E  EF41  F001         	goto	u191
  1077  000282                     u191:
  1078  000282  FFFF               	dw	65535	; assembler added errata NOP
  1079  000284  EF4B  F001         	goto	l1189
  1080  000288                     u190:
  1081  000288  FFFF               	dw	65535	; assembler added errata NOP
  1082  00028A                     
  1083                           ; BSR set to: 0
  1084  00028A  6D66               	negf	___awdiv@dividend& (0+255),b
  1085  00028C  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  1086  00028E  B0D8               	btfsc	status,0,c
  1087  000290  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  1088  000292                     
  1089                           ; BSR set to: 0
  1090  000292  0E01               	movlw	1
  1091  000294  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  1092  000296                     l1189:
  1093  000296  FFFF               	dw	65535	; assembler added errata NOP
  1094                           
  1095                           ; BSR set to: 0
  1096  000298  0E00               	movlw	0
  1097  00029A  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  1098  00029C  0E00               	movlw	0
  1099  00029E  6F6C               	movwf	___awdiv@quotient& (0+255),b
  1100  0002A0                     
  1101                           ; BSR set to: 0
  1102  0002A0  5168               	movf	___awdiv@divisor& (0+255),w,b
  1103  0002A2  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  1104  0002A4  B4D8               	btfsc	status,2,c
  1105  0002A6  EF57  F001         	goto	u201
  1106  0002AA  EF5A  F001         	goto	u200
  1107  0002AE                     u201:
  1108  0002AE  FFFF               	dw	65535	; assembler added errata NOP
  1109  0002B0  EF8B  F001         	goto	l1211
  1110  0002B4                     u200:
  1111  0002B4  FFFF               	dw	65535	; assembler added errata NOP
  1112  0002B6                     
  1113                           ; BSR set to: 0
  1114  0002B6  0E01               	movlw	1
  1115  0002B8  6F6A               	movwf	___awdiv@counter& (0+255),b
  1116  0002BA  EF64  F001         	goto	l1197
  1117  0002BE                     l1195:
  1118  0002BE  FFFF               	dw	65535	; assembler added errata NOP
  1119                           
  1120                           ; BSR set to: 0
  1121  0002C0  90D8               	bcf	status,0,c
  1122  0002C2  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  1123  0002C4  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  1124  0002C6  2B6A               	incf	___awdiv@counter& (0+255),f,b
  1125  0002C8                     l1197:
  1126  0002C8  FFFF               	dw	65535	; assembler added errata NOP
  1127                           
  1128                           ; BSR set to: 0
  1129  0002CA  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  1130  0002CC  EF6A  F001         	goto	u211
  1131  0002D0  EF6D  F001         	goto	u210
  1132  0002D4                     u211:
  1133  0002D4  FFFF               	dw	65535	; assembler added errata NOP
  1134  0002D6  EF5F  F001         	goto	l1195
  1135  0002DA                     u210:
  1136  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  1137  0002DC                     l1199:
  1138  0002DC  FFFF               	dw	65535	; assembler added errata NOP
  1139                           
  1140                           ; BSR set to: 0
  1141  0002DE  90D8               	bcf	status,0,c
  1142  0002E0  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  1143  0002E2  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  1144  0002E4                     
  1145                           ; BSR set to: 0
  1146  0002E4  5168               	movf	___awdiv@divisor& (0+255),w,b
  1147  0002E6  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  1148  0002E8  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1149  0002EA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1150  0002EC  A0D8               	btfss	status,0,c
  1151  0002EE  EF7B  F001         	goto	u221
  1152  0002F2  EF7E  F001         	goto	u220
  1153  0002F6                     u221:
  1154  0002F6  FFFF               	dw	65535	; assembler added errata NOP
  1155  0002F8  EF84  F001         	goto	l1207
  1156  0002FC                     u220:
  1157  0002FC  FFFF               	dw	65535	; assembler added errata NOP
  1158  0002FE                     
  1159                           ; BSR set to: 0
  1160  0002FE  5168               	movf	___awdiv@divisor& (0+255),w,b
  1161  000300  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  1162  000302  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1163  000304  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1164  000306                     
  1165                           ; BSR set to: 0
  1166  000306  816C               	bsf	___awdiv@quotient& (0+255),0,b
  1167  000308                     l1207:
  1168  000308  FFFF               	dw	65535	; assembler added errata NOP
  1169                           
  1170                           ; BSR set to: 0
  1171  00030A  90D8               	bcf	status,0,c
  1172  00030C  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1173  00030E  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  1174  000310                     
  1175                           ; BSR set to: 0
  1176  000310  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  1177  000312  EF6E  F001         	goto	l1199
  1178  000316                     l1211:
  1179  000316  FFFF               	dw	65535	; assembler added errata NOP
  1180                           
  1181                           ; BSR set to: 0
  1182  000318  516B               	movf	___awdiv@sign& (0+255),w,b
  1183  00031A  B4D8               	btfsc	status,2,c
  1184  00031C  EF92  F001         	goto	u231
  1185  000320  EF95  F001         	goto	u230
  1186  000324                     u231:
  1187  000324  FFFF               	dw	65535	; assembler added errata NOP
  1188  000326  EF9A  F001         	goto	l1215
  1189  00032A                     u230:
  1190  00032A  FFFF               	dw	65535	; assembler added errata NOP
  1191  00032C                     
  1192                           ; BSR set to: 0
  1193  00032C  6D6C               	negf	___awdiv@quotient& (0+255),b
  1194  00032E  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1195  000330  B0D8               	btfsc	status,0,c
  1196  000332  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1197  000334                     l1215:
  1198  000334  FFFF               	dw	65535	; assembler added errata NOP
  1199                           
  1200                           ; BSR set to: 0
  1201  000336  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  1202  00033A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  1203  00033E                     
  1204                           ; BSR set to: 0
  1205  00033E  0012               	return		;funcret
  1206  000340  FFFF               	dw	65535	; errata NOP
  1207  000342                     __end_of___awdiv:
  1208                           	opt callstack 0
  1209                           
  1210 ;; *************** function _high_isr *****************
  1211 ;; Defined at:
  1212 ;;		line 30 in file "interrupts.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1226 ;;      Params:         0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; This function calls:
  1233 ;;		Nothing
  1234 ;; This function is called by:
  1235 ;;		Interrupt level 2
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	intcode
  1240  000008                     __pintcode:
  1241                           	opt callstack 0
  1242  000008                     _high_isr:
  1243                           	opt callstack 0
  1244  000008  FFFF               	dw	65535	; assembler added errata NOP
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;incstack = 0
  1248  00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1249  00000C                     
  1250                           ;interrupts.c: 32: static unsigned char dutyWiper = 9;;interrupts.c: 33: static bool sen
      +                          sUp = 1;;interrupts.c: 34: static int compte = 0;;interrupts.c: 37: if (PIR1bits.ADIF)
  1251  00000C  AC9E               	btfss	158,6,c	;volatile
  1252  00000E  EF0B  F000         	goto	i2u26_41
  1253  000012  EF0E  F000         	goto	i2u26_40
  1254  000016                     i2u26_41:
  1255  000016  FFFF               	dw	65535	; assembler added errata NOP
  1256  000018  EF15  F000         	goto	i2l88
  1257  00001C                     i2u26_40:
  1258  00001C  FFFF               	dw	65535	; assembler added errata NOP
  1259  00001E                     
  1260                           ;interrupts.c: 38: {;interrupts.c: 39: g_resAN = ADRESH;
  1261  00001E  CFC4 F075          	movff	4036,_g_resAN	;volatile
  1262  000022  0100               	movlb	0	; force () banked
  1263  000024  6B76               	clrf	(_g_resAN+1)& (0+255),b
  1264                           
  1265                           ;interrupts.c: 41: PIR1bits.ADIF = 0;
  1266  000026  9C9E               	bcf	158,6,c	;volatile
  1267                           
  1268                           ;interrupts.c: 42: ADCON0bits.GO_DONE = 1;
  1269  000028  84C2               	bsf	194,2,c	;volatile
  1270  00002A                     i2l88:
  1271  00002A  FFFF               	dw	65535	; assembler added errata NOP
  1272                           
  1273                           ;interrupts.c: 43: };interrupts.c: 46: if (INTCONbits.TMR0IF)
  1274  00002C  A4F2               	btfss	242,2,c	;volatile
  1275  00002E  EF1B  F000         	goto	i2u27_41
  1276  000032  EF1E  F000         	goto	i2u27_40
  1277  000036                     i2u27_41:
  1278  000036  FFFF               	dw	65535	; assembler added errata NOP
  1279  000038  EF68  F000         	goto	i2l1291
  1280  00003C                     i2u27_40:
  1281  00003C  FFFF               	dw	65535	; assembler added errata NOP
  1282  00003E                     
  1283                           ;interrupts.c: 47: {;interrupts.c: 49: CCPR1L = dutyWiper;
  1284  00003E  C078  FFBE         	movff	high_isr@dutyWiper,4030	;volatile
  1285  000042                     
  1286                           ;interrupts.c: 50: if (sensUp)
  1287  000042  0100               	movlb	0	; force () banked
  1288  000044  5177               	movf	high_isr@sensUp& (0+255),w,b
  1289  000046  B4D8               	btfsc	status,2,c
  1290  000048  EF28  F000         	goto	i2u28_41
  1291  00004C  EF2B  F000         	goto	i2u28_40
  1292  000050                     i2u28_41:
  1293  000050  FFFF               	dw	65535	; assembler added errata NOP
  1294  000052  EF3E  F000         	goto	i2l1277
  1295  000056                     i2u28_40:
  1296  000056  FFFF               	dw	65535	; assembler added errata NOP
  1297  000058                     
  1298                           ; BSR set to: 0
  1299                           ;interrupts.c: 51: {;interrupts.c: 52: dutyWiper++;
  1300  000058  0100               	movlb	0	; force () banked
  1301  00005A  2B78               	incf	high_isr@dutyWiper& (0+255),f,b
  1302  00005C                     
  1303                           ; BSR set to: 0
  1304                           ;interrupts.c: 53: if (dutyWiper >= 0x25)
  1305  00005C  0E24               	movlw	36
  1306  00005E  0100               	movlb	0	; force () banked
  1307  000060  6578               	cpfsgt	high_isr@dutyWiper& (0+255),b
  1308  000062  EF35  F000         	goto	i2u29_41
  1309  000066  EF38  F000         	goto	i2u29_40
  1310  00006A                     i2u29_41:
  1311  00006A  FFFF               	dw	65535	; assembler added errata NOP
  1312  00006C  EF62  F000         	goto	i2l1287
  1313  000070                     i2u29_40:
  1314  000070  FFFF               	dw	65535	; assembler added errata NOP
  1315  000072                     
  1316                           ; BSR set to: 0
  1317                           ;interrupts.c: 54: sensUp = 0;
  1318  000072  0E00               	movlw	0
  1319  000074  0100               	movlb	0	; force () banked
  1320  000076  6F77               	movwf	high_isr@sensUp& (0+255),b
  1321  000078  EF62  F000         	goto	i2l1287
  1322  00007C                     i2l1277:
  1323  00007C  FFFF               	dw	65535	; assembler added errata NOP
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;interrupts.c: 56: else;interrupts.c: 57: {;interrupts.c: 58: dutyWiper--;
  1327  00007E  0100               	movlb	0	; force () banked
  1328  000080  0778               	decf	high_isr@dutyWiper& (0+255),f,b
  1329  000082                     
  1330                           ; BSR set to: 0
  1331                           ;interrupts.c: 59: if (dutyWiper <= 9)
  1332  000082  0E0A               	movlw	10
  1333  000084  0100               	movlb	0	; force () banked
  1334  000086  6178               	cpfslt	high_isr@dutyWiper& (0+255),b
  1335  000088  EF48  F000         	goto	i2u30_41
  1336  00008C  EF4B  F000         	goto	i2u30_40
  1337  000090                     i2u30_41:
  1338  000090  FFFF               	dw	65535	; assembler added errata NOP
  1339  000092  EF62  F000         	goto	i2l1287
  1340  000096                     i2u30_40:
  1341  000096  FFFF               	dw	65535	; assembler added errata NOP
  1342  000098                     
  1343                           ; BSR set to: 0
  1344                           ;interrupts.c: 60: {;interrupts.c: 61: if (g_etat <= enumDelaiDeux )
  1345  000098  0100               	movlb	0	; force () banked
  1346  00009A  BF7B               	btfsc	(_g_etat+1)& (0+255),7,b
  1347  00009C  EF5C  F000         	goto	i2u31_40
  1348  0000A0  517B               	movf	(_g_etat+1)& (0+255),w,b
  1349  0000A2  E107               	bnz	i2u31_41
  1350  0000A4  0E03               	movlw	3
  1351  0000A6  5D7A               	subwf	_g_etat& (0+255),w,b
  1352  0000A8  B0D8               	btfsc	status,0,c
  1353  0000AA  EF59  F000         	goto	i2u31_41
  1354  0000AE  EF5C  F000         	goto	i2u31_40
  1355  0000B2                     i2u31_41:
  1356  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  1357  0000B4  EF5E  F000         	goto	i2l1285
  1358  0000B8                     i2u31_40:
  1359  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  1360  0000BA                     
  1361                           ; BSR set to: 0
  1362                           ;interrupts.c: 62: {;interrupts.c: 63: T0CONbits.TMR0ON = 0;
  1363  0000BA  9ED5               	bcf	213,7,c	;volatile
  1364  0000BC                     i2l1285:
  1365  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;interrupts.c: 66: };interrupts.c: 67: sensUp = 1;
  1369  0000BE  0E01               	movlw	1
  1370  0000C0  0100               	movlb	0	; force () banked
  1371  0000C2  6F77               	movwf	high_isr@sensUp& (0+255),b
  1372  0000C4                     i2l1287:
  1373  0000C4  FFFF               	dw	65535	; assembler added errata NOP
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;interrupts.c: 68: };interrupts.c: 69: };interrupts.c: 72: INTCONbits.TMR0IF = 0;
  1377  0000C6  94F2               	bcf	242,2,c	;volatile
  1378  0000C8                     
  1379                           ; BSR set to: 0
  1380                           ;interrupts.c: 78: TMR0H = g_chargeTMR0;
  1381  0000C8  C079  FFD7         	movff	_g_chargeTMR0,4055	;volatile
  1382                           
  1383                           ;interrupts.c: 80: TMR0L = 0x00;
  1384  0000CC  0E00               	movlw	0
  1385  0000CE  6ED6               	movwf	214,c	;volatile
  1386  0000D0                     i2l1291:
  1387  0000D0  FFFF               	dw	65535	; assembler added errata NOP
  1388                           
  1389                           ;interrupts.c: 84: };interrupts.c: 87: if (PIR2bits.TMR3IF)
  1390  0000D2  A2A1               	btfss	161,1,c	;volatile
  1391  0000D4  EF6E  F000         	goto	i2u32_41
  1392  0000D8  EF71  F000         	goto	i2u32_40
  1393  0000DC                     i2u32_41:
  1394  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  1395  0000DE  EF82  F000         	goto	i2l96
  1396  0000E2                     i2u32_40:
  1397  0000E2  FFFF               	dw	65535	; assembler added errata NOP
  1398  0000E4                     
  1399                           ;interrupts.c: 88: {;interrupts.c: 89: g_compteurTmr3++;
  1400  0000E4  0100               	movlb	0	; force () banked
  1401  0000E6  4B73               	infsnz	_g_compteurTmr3& (0+255),f,b
  1402  0000E8  2B74               	incf	(_g_compteurTmr3+1)& (0+255),f,b
  1403  0000EA                     
  1404                           ; BSR set to: 0
  1405                           ;interrupts.c: 91: PORTCbits.RC0 = PORTCbits.RC0 ^ 1;
  1406  0000EA  A082               	btfss	130,0,c	;volatile
  1407  0000EC  EF7A  F000         	goto	i2u33_41
  1408  0000F0  EF7E  F000         	goto	i2u33_40
  1409  0000F4                     i2u33_41:
  1410  0000F4  FFFF               	dw	65535	; assembler added errata NOP
  1411  0000F6  8082               	bsf	130,0,c	;volatile
  1412  0000F8  EF80  F000         	goto	i2u34_45
  1413  0000FC                     i2u33_40:
  1414  0000FC  FFFF               	dw	65535	; assembler added errata NOP
  1415  0000FE  9082               	bcf	130,0,c	;volatile
  1416  000100                     i2u34_45:
  1417  000100  FFFF               	dw	65535	; assembler added errata NOP
  1418  000102                     
  1419                           ;interrupts.c: 92: PIR2bits.TMR3IF = 0;
  1420  000102  92A1               	bcf	161,1,c	;volatile
  1421  000104                     i2l96:
  1422  000104  FFFF               	dw	65535	; assembler added errata NOP
  1423  000106  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1424  000108  0011               	retfie		f
  1425  00010A  FFFF               	dw	65535	; errata NOP
  1426  00010C                     __end_of_high_isr:
  1427                           	opt callstack 0
  1428  00010C  FFFF               	dw	65535	; assembler added errata NOP
  1429                           
  1430                           	psect	param0
  1431  0000                     
  1432                           	psect	temp
  1433  000001                     btemp:
  1434                           	opt callstack 0
  1435  000001                     	ds	1
  1436  0000                     int$flags	set	btemp
  1437  0000                     wtemp8	set	btemp+1
  1438  0000                     ttemp5	set	btemp+1
  1439  0000                     ttemp6	set	btemp+4
  1440  0000                     ttemp7	set	btemp+8
  1441                           tosu	equ	0xFFF
  1442                           tosh	equ	0xFFE
  1443                           tosl	equ	0xFFD
  1444                           stkptr	equ	0xFFC
  1445                           pclatu	equ	0xFFB
  1446                           pclath	equ	0xFFA
  1447                           pcl	equ	0xFF9
  1448                           tblptru	equ	0xFF8
  1449                           tblptrh	equ	0xFF7
  1450                           tblptrl	equ	0xFF6
  1451                           tablat	equ	0xFF5
  1452                           prodh	equ	0xFF4
  1453                           prodl	equ	0xFF3
  1454                           indf0	equ	0xFEF
  1455                           postinc0	equ	0xFEE
  1456                           postdec0	equ	0xFED
  1457                           preinc0	equ	0xFEC
  1458                           plusw0	equ	0xFEB
  1459                           fsr0h	equ	0xFEA
  1460                           fsr0l	equ	0xFE9
  1461                           wreg	equ	0xFE8
  1462                           indf1	equ	0xFE7
  1463                           postinc1	equ	0xFE6
  1464                           postdec1	equ	0xFE5
  1465                           preinc1	equ	0xFE4
  1466                           plusw1	equ	0xFE3
  1467                           fsr1h	equ	0xFE2
  1468                           fsr1l	equ	0xFE1
  1469                           bsr	equ	0xFE0
  1470                           indf2	equ	0xFDF
  1471                           postinc2	equ	0xFDE
  1472                           postdec2	equ	0xFDD
  1473                           preinc2	equ	0xFDC
  1474                           plusw2	equ	0xFDB
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         6
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     17      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     764
                                             14 BANK0      3     3      0
                            ___awdiv
                             ___wmul
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
       _initialisation_ActiverIntAdc
_initialisation_ActiverInterruptions
          _initialisation_ActiverPWM
          _initialisation_ConfigTmr0
          _initialisation_ConfigTmr3
       _initialisation_ConfigurerAdc
_initialisation_ConfigurerPortDSorti
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerPortDSortie                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigTmr3                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigTmr0                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverPWM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverInterruptions                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverIntAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _initialisation
     _initialisation_ActiverIntAdc
     _initialisation_ActiverInterruptions
     _initialisation_ActiverPWM
     _initialisation_ConfigTmr0
     _initialisation_ConfigTmr3
     _initialisation_ConfigurerAdc
     _initialisation_ConfigurerPortDSortie

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     11      1C       4       17.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C       9        0.0%
DATA                 0      0      1C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 16:40:04 2020

                                      __end_of_initialisation_ActiverIntAdc 0434  
                                     __size_of_initialisation_ActiverIntAdc 000C  
                                              _initialisation_ActiverIntAdc 0428  
                                                                        l31 03C2  
                                                              ___awdiv@sign 006B  
                                                       ___wmul@multiplicand 0062  
                                                              __CFG_CP0$OFF 000000  
                                                              __CFG_CP1$OFF 000000  
                                                              __CFG_CP2$OFF 000000  
                                                              __CFG_CP3$OFF 000000  
                                                               __CFG_OSC$HS 000000  
                                                                       l141 0416  
                                                                       l150 03FC  
                                                                       l135 043A  
                                                                       l144 0430  
                                                                       l153 0424  
                                                                       l138 0444  
                                                                       l147 03E0  
                                                                       l156 03A0  
                                                                       l387 033E  
                                                              __CFG_CPB$OFF 000000  
                                                                       u200 02B4  
                                                                       u201 02AE  
                                                                       u210 02DA  
                                                                       u211 02D4  
                                                                       u220 02FC  
                                                                       u221 02F6  
                                                                       u230 032A  
                                                                       u231 0324  
                                                                       u240 0184  
                                                                       u241 017E  
                                                                       u250 01B8  
                                                                       u251 01B2  
                                                                       u180 0268  
                                                                       u181 0262  
                                                                       u190 0288  
                                                                       _PR2 000FCB  
                                                                       u191 0282  
                                                              __CFG_CPD$OFF 000000  
                                                              __CFG_BOR$OFF 000000  
                                               ??_initialisation_ConfigTmr0 0060  
                                               ??_initialisation_ConfigTmr3 0060  
                                                              __CFG_BORV$25 000000  
                                                                       wreg 000FE8  
                                                              __CFG_LVP$OFF 000000  
                                                              __CFG_WDT$OFF 000000  
                                                                      l1201 02E4  
                                                                      l1121 0436  
                                                                      l1203 02FE  
                                                                      l1211 0316  
                                                                      l1131 0414  
                                                                      l1123 0402  
                                                                      l1213 032C  
                                                                      l1205 0306  
                                                                      l1133 042A  
                                                                      l1141 03D4  
                                                                      l1125 0404  
                                                                      l1221 011A  
                                                                      l1215 0334  
                                                                      l1207 0308  
                                                                      l1143 03DA  
                                                                      l1135 03C8  
                                                                      l1151 041C  
                                                                      l1127 0408  
                                                                      l1231 0168  
                                                                      l1223 011E  
                                                                      l1209 0310  
                                                                      l1137 03CA  
                                                                      l1145 03E6  
                                                                      l1153 0420  
                                                                      l1129 040A  
                                                                      l1161 03AE  
                                                                      l1241 01C0  
                                                                      l1233 0186  
                                                                      l1225 0120  
                                                                      l1171 0398  
                                                                      l1139 03D2  
                                                                      l1147 03EE  
                                                                      l1155 0422  
                                                                      l1163 03B2  
                                                                      l1251 01EC  
                                                                      l1243 01D0  
                                                                      l1235 018C  
                                                                      l1227 0124  
                                                                      l1219 0112  
                                                                      l1181 0272  
                                                                      l1157 0440  
                                                                      l1149 03F2  
                                                                      l1165 03B6  
                                                                      l1253 01F4  
                                                                      l1245 01D8  
                                                                      l1237 019C  
                                                                      l1229 015A  
                                                                      l1191 02A0  
                                                                      l1183 0276  
                                                                      l1175 0252  
                                                                      l1167 03BA  
                                                                      l1159 03A6  
                                                                      l1319 0214  
                                                                      l1247 01DE  
                                                                      l1239 01BA  
                                                                      l1193 02B6  
                                                                      l1185 028A  
                                                                      l1177 0258  
                                                                      l1169 037A  
                                                                      l1249 01E6  
                                                                      l1257 01FA  
                                                                      l1195 02BE  
                                                                      l1187 0292  
                                                                      l1179 026A  
                                                                      l1197 02C8  
                                                                      l1189 0296  
                                                                      l1199 02DC  
                                                                      i2l96 0104  
                                                                      i2l88 002A  
                                                          ??_initialisation 0060  
                                                                      _main 0112  
                                                                      btemp 0001  
                                                                      prodh 000FF4  
                                                                      prodl 000FF3  
                                                                      start 010E  
                                                              ___param_bank 000000  
                                                 _initialisation_ActiverPWM 03C6  
                                                             __CFG_OSCS$OFF 000000  
                                             ?_initialisation_ActiverIntAdc 0060  
                                                                     ?_main 0060  
                                                           __end_of___awdiv 0342  
                                                           ___awdiv@divisor 0068  
                                                                     _T3CON 000FB1  
                                                           ___awdiv@counter 006A  
                                                                     _TMR0H 000FD7  
                                                                     _TMR0L 000FD6  
                                                                     _PORTD 000F83  
                                                                     _TRISD 000F95  
                                                             __CFG_PWRT$OFF 000000  
                                                             __CFG_WRT0$OFF 000000  
                                                             __CFG_WRT1$OFF 000000  
                                                             __CFG_WRT2$OFF 000000  
                                                             __CFG_WRT3$OFF 000000  
                                                            __CFG_EBTR0$OFF 000000  
                                                            __CFG_EBTR1$OFF 000000  
                                                            __CFG_EBTR2$OFF 000000  
                                                            __CFG_EBTR3$OFF 000000  
                                                             __CFG_STVR$OFF 000000  
                                                             __CFG_WRTB$OFF 000000  
                                                             __CFG_WRTC$OFF 000000  
                                                             __CFG_WRTD$OFF 000000  
                                                            __CFG_EBTRB$OFF 000000  
                                                                     tablat 000FF5  
                                                                     ttemp5 0002  
                                                                     ttemp6 0005  
                                                                     ttemp7 0009  
                                                                     status 000FD8  
                                                                     wtemp8 0002  
                                                 _initialisation_ConfigTmr0 03E4  
                                                 _initialisation_ConfigTmr3 041A  
                                                           __initialization 0342  
                                                              __end_of_main 0250  
                                                                    ??_main 006E  
                                                             __activetblptr 000003  
                                                                    _ADCON1 000FC1  
                                                                    _ADRESH 000FC4  
                                                                    _CCPR1L 000FBE  
                                                          ___awdiv@dividend 0066  
                                                                    i2l1271 0058  
                                                                    i2l1263 000C  
                                                                    i2l1281 0098  
                                                                    i2l1273 005C  
                                                                    i2l1265 001E  
                                                                    i2l1283 00BA  
                                                                    i2l1275 0072  
                                                                    i2l1267 003E  
                                                                    i2l1291 00D0  
                                                                    i2l1293 00E4  
                                                                    i2l1285 00BC  
                                                                    i2l1277 007C  
                                                                    i2l1269 0042  
                                                                    i2l1295 00EA  
                                                                    i2l1279 0082  
                                                                    i2l1287 00C4  
                                                                    i2l1297 0102  
                                                                    i2l1289 00C8  
                                                            __CFG_WDTPS$128 000000  
                                                             main@dutyWiper 0070  
                                                          __end_of_high_isr 010C  
                                                                    ___wmul 0378  
                                                                 ??___awdiv 006A  
                                                            _g_compteurTmr3 0073  
                                                                    _g_etat 007A  
                                                          ___awdiv@quotient 006C  
                                            ??_initialisation_ActiverIntAdc 0060  
                                                                    tblptrh 000FF7  
                                                                    tblptrl 000FF6  
                                                                    tblptru 000FF8  
                                                              _g_chargeTMR0 0079  
                              __end_of_initialisation_ConfigurerPortDSortie 043E  
                             __size_of_initialisation_ConfigurerPortDSortie 000A  
                                    ??_initialisation_ConfigurerPortDSortie 0060  
                                     ?_initialisation_ConfigurerPortDSortie 0060  
                                      _initialisation_ConfigurerPortDSortie 0434  
                                                                __accesstop 0060  
                                                   __end_of__initialization 036E  
                                                             ___rparam_used 000000  
                                                              __pidataBANK0 0448  
                                                            high_isr@compte 0071  
                                                            high_isr@sensUp 0077  
                                        __size_of_initialisation_ActiverPWM 001E  
                                                         high_isr@dutyWiper 0078  
                                                                __pbssBANK0 0071  
                                                                   ?___wmul 0060  
                                        __size_of_initialisation_ConfigTmr0 001C  
                                        __size_of_initialisation_ConfigTmr3 000E  
                                                                   i2u30_40 0096  
                                                                   i2u30_41 0090  
                                                                   i2u31_40 00B8  
                                                                   i2u31_41 00B2  
                                                                   i2u32_40 00E2  
                                                                   i2u32_41 00DC  
                                                                   i2u33_40 00FC  
                                                                   i2u33_41 00F4  
                                                                   i2u26_40 001C  
                                                                   i2u26_41 0016  
                                                                   i2u34_45 0100  
                                                                   i2u27_40 003C  
                                                                   i2u27_41 0036  
                                                                   i2u28_40 0056  
                                                                   i2u28_41 0050  
                                                                   i2u29_40 0070  
                                                                   i2u29_41 006A  
                                                                 ?_high_isr 0060  
                                         __end_of_initialisation_ActiverPWM 03E4  
                                      __end_of_initialisation_ConfigurerAdc 041A  
                                     __size_of_initialisation_ConfigurerAdc 001A  
                                              _initialisation_ConfigurerAdc 0400  
                                                                   __Hparam 0000  
                                                                   __Lparam 0000  
                                                                   ___awdiv 0250  
                                                           __size_of___wmul 002C  
                                                                   __pcinit 0342  
                                                                   _g_resAN 0075  
                                                                   __ramtop 0600  
                                                                   __ptext0 0112  
                                                                   __ptext1 03A4  
                                                                   __ptext2 0434  
                                                                   __ptext3 0400  
                                                                   __ptext4 041A  
                                                                   __ptext5 03E4  
                                                                   __ptext6 03C6  
                                                                   __ptext7 043E  
                                                                   __ptext8 0428  
                                                                   __ptext9 0378  
                                         __end_of_initialisation_ConfigTmr0 0400  
                                         __end_of_initialisation_ConfigTmr3 0428  
                                                                 _T0CONbits 000FD5  
                                                                 _T2CONbits 000FCA  
                                                                ??_high_isr 0060  
                                                      end_of_initialization 036E  
                                             ?_initialisation_ConfigurerAdc 0060  
                                                   __size_of_initialisation 0022  
                                                                 _PORTCbits 000F82  
                                                                 _TRISAbits 000F92  
                                                                 _TRISCbits 000F94  
                                                               _CCP1CONbits 000FBD  
                                                            __end_of___wmul 03A4  
                                                       start_initialization 0342  
                                                                  ??___wmul 0064  
                                                               __pdataBANK0 0077  
                                            ??_initialisation_ConfigurerAdc 0060  
                               __end_of_initialisation_ActiverInterruptions 0448  
                              __size_of_initialisation_ActiverInterruptions 000A  
                                     ??_initialisation_ActiverInterruptions 0060  
                                      ?_initialisation_ActiverInterruptions 0060  
                                       _initialisation_ActiverInterruptions 043E  
                                                             __pcstackBANK0 0060  
                                                         __size_of_high_isr 0104  
                                                                 __pnvBANK0 007A  
                                                                 __pintcode 0008  
                                                            _initialisation 03A4  
                                                                  ?___awdiv 0066  
                                                ?_initialisation_ActiverPWM 0060  
                                                            ___wmul@product 0064  
                                                                  _PIE1bits 000F9D  
                                                                  _PIE2bits 000FA0  
                                                    __end_of_initialisation 03C6  
                                                                  _PIR1bits 000F9E  
                                                                  _PIR2bits 000FA1  
                                                                _ADCON0bits 000FC2  
                                                                _ADCON1bits 000FC1  
                                                         ___wmul@multiplier 0060  
                                                ?_initialisation_ConfigTmr0 0060  
                                                ?_initialisation_ConfigTmr3 0060  
                                                                  __Hparam0 0000  
                                                                  __Lparam0 0000  
                                                           ?_initialisation 0060  
                                                          __size_of___awdiv 00F2  
                                                                  __ptext10 0250  
                                                                  _high_isr 0008  
                                                             __size_of_main 013E  
                                                                  int$flags 0001  
                                                                _INTCONbits 000FF2  
                                                                  intlevel2 044C  
                                               ??_initialisation_ActiverPWM 0060  
