

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 06 10:45:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1,minocg
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           ; Version 2.10
    26                           ; Generated 31/07/2019 GMT
    27                           ; 
    28                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F458 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataBANK0
    61  000400                     __pidataBANK0:
    62                           	opt callstack 0
    63                           
    64                           ;initializer for high_isr@sensUp
    65  000400  01                 	db	1
    66                           
    67                           ;initializer for high_isr@dutyWiper
    68  000401  09                 	db	9
    69  0000                     _PIE2bits	set	4000
    70  0000                     _T3CON	set	4017
    71  0000                     _T2CONbits	set	4042
    72  0000                     _TRISCbits	set	3988
    73  0000                     _CCP1CONbits	set	4029
    74  0000                     _PR2	set	4043
    75  0000                     _PIE1bits	set	3997
    76  0000                     _ADCON1bits	set	4033
    77  0000                     _ADCON1	set	4033
    78  0000                     _TRISAbits	set	3986
    79  0000                     _TRISD	set	3989
    80  0000                     _PIR2bits	set	4001
    81  0000                     _TMR0L	set	4054
    82  0000                     _TMR0H	set	4055
    83  0000                     _CCPR1L	set	4030
    84  0000                     _INTCONbits	set	4082
    85  0000                     _ADCON0bits	set	4034
    86  0000                     _ADRESH	set	4036
    87  0000                     _PIR1bits	set	3998
    88  0000                     _T0CONbits	set	4053
    89  0000                     _PORTDbits	set	3971
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  000352                     __pcinit:
    95                           	opt callstack 0
    96  000352                     start_initialization:
    97                           	opt callstack 0
    98  000352                     __initialization:
    99                           	opt callstack 0
   100                           
   101                           ; Initialize objects allocated to BANK0 (2 bytes)
   102                           ; load TBLPTR registers with __pidataBANK0
   103  000352  0E00               	movlw	low __pidataBANK0
   104  000354  6EF6               	movwf	tblptrl,c
   105  000356  0E04               	movlw	high __pidataBANK0
   106  000358  6EF7               	movwf	tblptrh,c
   107  00035A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   108  00035C  6EF8               	movwf	tblptru,c
   109  00035E  0009               	tblrd		*+	;fetch initializer
   110  000360  CFF5 F072          	movff	tablat,__pdataBANK0
   111  000364  0009               	tblrd		*+	;fetch initializer
   112  000366  CFF5 F073          	movff	tablat,__pdataBANK0+1
   113                           
   114                           ; Clear objects allocated to BANK0 (6 bytes)
   115  00036A  0100               	movlb	0
   116  00036C  6B71               	clrf	(__pbssBANK0+5)& (0+255),b
   117  00036E  6B70               	clrf	(__pbssBANK0+4)& (0+255),b
   118  000370  6B6F               	clrf	(__pbssBANK0+3)& (0+255),b
   119  000372  6B6E               	clrf	(__pbssBANK0+2)& (0+255),b
   120  000374  6B6D               	clrf	(__pbssBANK0+1)& (0+255),b
   121  000376  6B6C               	clrf	__pbssBANK0& (0+255),b
   122  000378                     end_of_initialization:
   123                           	opt callstack 0
   124  000378                     __end_of__initialization:
   125                           	opt callstack 0
   126  000378  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  00037A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  00037C  0100               	movlb	0
   129  00037E  EF1E  F001         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssBANK0
   132  00006C                     __pbssBANK0:
   133                           	opt callstack 0
   134  00006C                     high_isr@compte:
   135                           	opt callstack 0
   136  00006C                     	ds	2
   137  00006E                     _g_etat:
   138                           	opt callstack 0
   139  00006E                     	ds	2
   140  000070                     _g_resAN:
   141                           	opt callstack 0
   142  000070                     	ds	2
   143                           
   144                           	psect	dataBANK0
   145  000072                     __pdataBANK0:
   146                           	opt callstack 0
   147  000072                     high_isr@sensUp:
   148                           	opt callstack 0
   149  000072                     	ds	1
   150  000073                     high_isr@dutyWiper:
   151                           	opt callstack 0
   152  000073                     	ds	1
   153                           
   154                           	psect	cstackBANK0
   155  000060                     __pcstackBANK0:
   156                           	opt callstack 0
   157  000060                     ?___awdiv:
   158                           	opt callstack 0
   159  000060                     ___awdiv@dividend:
   160                           	opt callstack 0
   161                           
   162                           ; 2 bytes @ 0x0
   163  000060                     	ds	2
   164  000062                     ___awdiv@divisor:
   165                           	opt callstack 0
   166                           
   167                           ; 2 bytes @ 0x2
   168  000062                     	ds	2
   169  000064                     ___awdiv@counter:
   170                           	opt callstack 0
   171                           
   172                           ; 1 bytes @ 0x4
   173  000064                     	ds	1
   174  000065                     ___awdiv@sign:
   175                           	opt callstack 0
   176                           
   177                           ; 1 bytes @ 0x5
   178  000065                     	ds	1
   179  000066                     ___awdiv@quotient:
   180                           	opt callstack 0
   181                           
   182                           ; 2 bytes @ 0x6
   183  000066                     	ds	2
   184  000068                     ??_main:
   185                           
   186                           ; 1 bytes @ 0x8
   187  000068                     	ds	2
   188  00006A                     main@dutyWiper:
   189                           	opt callstack 0
   190                           
   191                           ; 1 bytes @ 0xA
   192  00006A                     	ds	1
   193  00006B                     main@sensUp:
   194                           	opt callstack 0
   195                           
   196                           ; 1 bytes @ 0xB
   197  00006B                     	ds	1
   198                           
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 40 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;  sensUp          1   11[BANK0 ] unsigned char 
   209 ;;  dutyWiper       1   10[BANK0 ] unsigned char 
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   219 ;;      Params:         0       0       0       0       0       0       0
   220 ;;      Locals:         0       2       0       0       0       0       0
   221 ;;      Temps:          0       2       0       0       0       0       0
   222 ;;      Totals:         0       4       0       0       0       0       0
   223 ;;Total ram usage:        4 bytes
   224 ;; Hardware stack levels required when called:    3
   225 ;; This function calls:
   226 ;;		___awdiv
   227 ;;		_initialisation
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  00023C                     __ptext0:
   235                           	opt callstack 0
   236  00023C                     _main:
   237                           	opt callstack 28
   238  00023C  FFFF               	dw	65535	; assembler added errata NOP
   239                           
   240                           ;main.c: 42: unsigned char dutyWiper = 9;
   241  00023E  0E09               	movlw	9
   242  000240  0100               	movlb	0	; force () banked
   243  000242  6F6A               	movwf	main@dutyWiper& (0+255),b
   244                           
   245                           ;main.c: 43: bool sensUp = 1;
   246  000244  0E01               	movlw	1
   247  000246  0100               	movlb	0	; force () banked
   248  000248  6F6B               	movwf	main@sensUp& (0+255),b
   249  00024A                     
   250                           ; BSR set to: 0
   251                           ;main.c: 45: initialisation();
   252  00024A  ECC1  F001         	call	_initialisation	;wreg free
   253  00024E                     l1178:
   254  00024E  FFFF               	dw	65535	; assembler added errata NOP
   255                           
   256                           ;main.c: 50: {;main.c: 52: if (g_resAN > 128)
   257  000250  0100               	movlb	0	; force () banked
   258  000252  BF71               	btfsc	(_g_resAN+1)& (0+255),7,b
   259  000254  EF35  F001         	goto	u251
   260  000258  5171               	movf	(_g_resAN+1)& (0+255),w,b
   261  00025A  E10A               	bnz	u250
   262  00025C  0E81               	movlw	129
   263  00025E  5D70               	subwf	_g_resAN& (0+255),w,b
   264  000260  A0D8               	btfss	status,0,c
   265  000262  EF35  F001         	goto	u251
   266  000266  EF38  F001         	goto	u250
   267  00026A                     u251:
   268  00026A  FFFF               	dw	65535	; assembler added errata NOP
   269  00026C  EF3C  F001         	goto	l31
   270  000270                     u250:
   271  000270  FFFF               	dw	65535	; assembler added errata NOP
   272  000272                     
   273                           ; BSR set to: 0
   274                           ;main.c: 53: PORTDbits.RD7 = 1;
   275  000272  8E83               	bsf	131,7,c	;volatile
   276  000274  EF3E  F001         	goto	l1182
   277  000278                     l31:
   278  000278  FFFF               	dw	65535	; assembler added errata NOP
   279                           
   280                           ; BSR set to: 0
   281                           ;main.c: 54: else;main.c: 55: PORTDbits.RD7 = 0;
   282  00027A  9E83               	bcf	131,7,c	;volatile
   283  00027C                     l1182:
   284  00027C  FFFF               	dw	65535	; assembler added errata NOP
   285                           
   286                           ; BSR set to: 0
   287                           ;main.c: 61: g_etat = g_resAN / enumEtatMax;
   288  00027E  C070  F060         	movff	_g_resAN,___awdiv@dividend
   289  000282  C071  F061         	movff	_g_resAN+1,___awdiv@dividend+1
   290  000286  0E00               	movlw	0
   291  000288  0100               	movlb	0	; force () banked
   292  00028A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
   293  00028C  0E07               	movlw	7
   294  00028E  6F62               	movwf	___awdiv@divisor& (0+255),b
   295  000290  ECA5  F000         	call	___awdiv	;wreg free
   296  000294  C060  F06E         	movff	?___awdiv,_g_etat
   297  000298  C061  F06F         	movff	?___awdiv+1,_g_etat+1
   298                           
   299                           ;main.c: 63: switch (g_etat)
   300  00029C  EF67  F001         	goto	l1192
   301  0002A0                     l34:
   302  0002A0  FFFF               	dw	65535	; assembler added errata NOP
   303                           
   304                           ; BSR set to: 0
   305                           ;main.c: 67: T0CONbits.TMR0ON = 0;
   306  0002A2  9ED5               	bcf	213,7,c	;volatile
   307                           
   308                           ;main.c: 68: break;
   309  0002A4  EF27  F001         	goto	l1178
   310  0002A8                     l1184:
   311  0002A8  FFFF               	dw	65535	; assembler added errata NOP
   312                           
   313                           ; BSR set to: 0
   314                           ;main.c: 70: T0CONbits.T0PS = 2;
   315  0002AA  50D5               	movf	213,w,c	;volatile
   316  0002AC  0BF8               	andlw	-8
   317  0002AE  0902               	iorlw	2
   318  0002B0  6ED5               	movwf	213,c	;volatile
   319                           
   320                           ;main.c: 72: break;
   321  0002B2  EF27  F001         	goto	l1178
   322  0002B6                     l1186:
   323  0002B6  FFFF               	dw	65535	; assembler added errata NOP
   324                           
   325                           ; BSR set to: 0
   326                           ;main.c: 75: T0CONbits.T0PS = 1;
   327  0002B8  50D5               	movf	213,w,c	;volatile
   328  0002BA  0BF8               	andlw	-8
   329  0002BC  0901               	iorlw	1
   330  0002BE  6ED5               	movwf	213,c	;volatile
   331                           
   332                           ;main.c: 77: break;
   333  0002C0  EF27  F001         	goto	l1178
   334  0002C4                     l1188:
   335  0002C4  FFFF               	dw	65535	; assembler added errata NOP
   336                           
   337                           ; BSR set to: 0
   338                           ;main.c: 79: T0CONbits.T0PS = 0;
   339  0002C6  0EF8               	movlw	-8
   340  0002C8  16D5               	andwf	213,f,c	;volatile
   341                           
   342                           ;main.c: 81: break;
   343  0002CA  EF27  F001         	goto	l1178
   344  0002CE                     l1192:
   345  0002CE  FFFF               	dw	65535	; assembler added errata NOP
   346  0002D0  C06E  F068         	movff	_g_etat,??_main
   347  0002D4  C06F  F069         	movff	_g_etat+1,??_main+1
   348                           
   349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   350                           ; Switch size 1, requested type "simple"
   351                           ; Number of cases is 1, Range of values is 0 to 0
   352                           ; switch strategies available:
   353                           ; Name         Instructions Cycles
   354                           ; simple_byte            4     3 (average)
   355                           ;	Chosen strategy is simple_byte
   356  0002D8  0100               	movlb	0	; force () banked
   357  0002DA  5169               	movf	(??_main+1)& (0+255),w,b
   358  0002DC  0A00               	xorlw	0	; case 0
   359  0002DE  B4D8               	btfsc	status,2,c
   360  0002E0  EF74  F001         	goto	l1270
   361  0002E4  EF27  F001         	goto	l1178
   362  0002E8                     l1270:
   363  0002E8  FFFF               	dw	65535	; assembler added errata NOP
   364                           
   365                           ; BSR set to: 0
   366                           ; Switch size 1, requested type "simple"
   367                           ; Number of cases is 5, Range of values is 0 to 4
   368                           ; switch strategies available:
   369                           ; Name         Instructions Cycles
   370                           ; simple_byte           16     9 (average)
   371                           ;	Chosen strategy is simple_byte
   372  0002EA  5168               	movf	??_main& (0+255),w,b
   373  0002EC  0A00               	xorlw	0	; case 0
   374  0002EE  B4D8               	btfsc	status,2,c
   375  0002F0  EF50  F001         	goto	l34
   376  0002F4  0A01               	xorlw	1	; case 1
   377  0002F6  B4D8               	btfsc	status,2,c
   378  0002F8  EF54  F001         	goto	l1184
   379  0002FC  0A03               	xorlw	3	; case 2
   380  0002FE  B4D8               	btfsc	status,2,c
   381  000300  EF5B  F001         	goto	l1186
   382  000304  0A01               	xorlw	1	; case 3
   383  000306  B4D8               	btfsc	status,2,c
   384  000308  EF62  F001         	goto	l1188
   385  00030C  0A07               	xorlw	7	; case 4
   386  00030E  B4D8               	btfsc	status,2,c
   387  000310  EF27  F001         	goto	l1178
   388  000314  EF27  F001         	goto	l1178
   389  000318  EFA3  F000         	goto	start
   390  00031C                     __end_of_main:
   391                           	opt callstack 0
   392                           
   393 ;; *************** function _initialisation *****************
   394 ;; Defined at:
   395 ;;		line 28 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, status,2, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   409 ;;      Params:         0       0       0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; Hardware stack levels required when called:    2
   416 ;; This function calls:
   417 ;;		_initialisation_ActiverIntAdc
   418 ;;		_initialisation_ActiverInterruptions
   419 ;;		_initialisation_ActiverPWM
   420 ;;		_initialisation_ActiverTmr0
   421 ;;		_initialisation_ConfigTmr3
   422 ;;		_initialisation_ConfigurerAdc
   423 ;;		_initialisation_ConfigurerPortDSortie
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text1
   430  000382                     __ptext1:
   431                           	opt callstack 0
   432  000382                     _initialisation:
   433                           	opt callstack 0
   434  000382  FFFF               	dw	65535	; assembler added errata NOP
   435  000384                     
   436                           ;main.c: 30: initialisation_ConfigurerPortDSortie();
   437  000384  ECF6  F001         	call	_initialisation_ConfigurerPortDSortie	;wreg free
   438                           
   439                           ;main.c: 31: initialisation_ConfigurerAdc();
   440  000388  ECD2  F001         	call	_initialisation_ConfigurerAdc	;wreg free
   441  00038C                     
   442                           ;main.c: 32: initialisation_ActiverIntAdc();
   443  00038C  ECF0  F001         	call	_initialisation_ActiverIntAdc	;wreg free
   444  000390                     
   445                           ;main.c: 33: initialisation_ActiverPWM();
   446  000390  EC8E  F001         	call	_initialisation_ActiverPWM	;wreg free
   447  000394                     
   448                           ;main.c: 34: initialisation_ActiverTmr0();
   449  000394  ECDF  F001         	call	_initialisation_ActiverTmr0	;wreg free
   450  000398                     
   451                           ;main.c: 35: initialisation_ConfigTmr3();
   452  000398  ECEA  F001         	call	_initialisation_ConfigTmr3	;wreg free
   453                           
   454                           ;main.c: 36: initialisation_ActiverInterruptions();
   455  00039C  ECFB  F001         	call	_initialisation_ActiverInterruptions	;wreg free
   456  0003A0  0012               	return		;funcret
   457  0003A2  FFFF               	dw	65535	; errata NOP
   458  0003A4                     __end_of_initialisation:
   459                           	opt callstack 0
   460                           
   461 ;; *************** function _initialisation_ConfigurerPortDSortie *****************
   462 ;; Defined at:
   463 ;;		line 17 in file "initialisation.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   477 ;;      Params:         0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_initialisation
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text2
   492  0003EC                     __ptext2:
   493                           	opt callstack 0
   494  0003EC                     _initialisation_ConfigurerPortDSortie:
   495                           	opt callstack 0
   496  0003EC  FFFF               	dw	65535	; assembler added errata NOP
   497  0003EE                     
   498                           ;initialisation.c: 19: TRISD = 0;
   499  0003EE  0E00               	movlw	0
   500  0003F0  6E95               	movwf	149,c	;volatile
   501  0003F2  0012               	return		;funcret
   502  0003F4  FFFF               	dw	65535	; errata NOP
   503  0003F6                     __end_of_initialisation_ConfigurerPortDSortie:
   504                           	opt callstack 0
   505                           
   506 ;; *************** function _initialisation_ConfigurerAdc *****************
   507 ;; Defined at:
   508 ;;		line 35 in file "initialisation.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;		None
   511 ;; Auto vars:     Size  Location     Type
   512 ;;		None
   513 ;; Return value:  Size  Location     Type
   514 ;;                  1    wreg      void 
   515 ;; Registers used:
   516 ;;		wreg, status,2
   517 ;; Tracked objects:
   518 ;;		On entry : 0/0
   519 ;;		On exit  : 0/0
   520 ;;		Unchanged: 0/0
   521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   522 ;;      Params:         0       0       0       0       0       0       0
   523 ;;      Locals:         0       0       0       0       0       0       0
   524 ;;      Temps:          0       0       0       0       0       0       0
   525 ;;      Totals:         0       0       0       0       0       0       0
   526 ;;Total ram usage:        0 bytes
   527 ;; Hardware stack levels used:    1
   528 ;; Hardware stack levels required when called:    1
   529 ;; This function calls:
   530 ;;		Nothing
   531 ;; This function is called by:
   532 ;;		_initialisation
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text3
   537  0003A4                     __ptext3:
   538                           	opt callstack 0
   539  0003A4                     _initialisation_ConfigurerAdc:
   540                           	opt callstack 0
   541  0003A4  FFFF               	dw	65535	; assembler added errata NOP
   542  0003A6                     
   543                           ;initialisation.c: 38: TRISAbits.TRISA0 = 1;
   544  0003A6  8092               	bsf	146,0,c	;volatile
   545  0003A8                     
   546                           ;initialisation.c: 40: ADCON1 = 0;
   547  0003A8  0E00               	movlw	0
   548  0003AA  6EC1               	movwf	193,c	;volatile
   549  0003AC                     
   550                           ;initialisation.c: 42: ADCON0bits.ADON = 1;
   551  0003AC  80C2               	bsf	194,0,c	;volatile
   552  0003AE                     
   553                           ;initialisation.c: 43: ADCON1bits.ADFM = 0;
   554  0003AE  9EC1               	bcf	193,7,c	;volatile
   555                           
   556                           ;initialisation.c: 46: ADCON0bits.ADCS = 0b10;
   557  0003B0  50C2               	movf	194,w,c	;volatile
   558  0003B2  0B3F               	andlw	-193
   559  0003B4  0980               	iorlw	128
   560  0003B6  6EC2               	movwf	194,c	;volatile
   561  0003B8                     
   562                           ;initialisation.c: 47: ADCON1bits.ADCS2 = 1;
   563  0003B8  8CC1               	bsf	193,6,c	;volatile
   564  0003BA  0012               	return		;funcret
   565  0003BC  FFFF               	dw	65535	; errata NOP
   566  0003BE                     __end_of_initialisation_ConfigurerAdc:
   567                           	opt callstack 0
   568                           
   569 ;; *************** function _initialisation_ConfigTmr3 *****************
   570 ;; Defined at:
   571 ;;		line 118 in file "initialisation.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   585 ;;      Params:         0       0       0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_initialisation
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text4
   600  0003D4                     __ptext4:
   601                           	opt callstack 0
   602  0003D4                     _initialisation_ConfigTmr3:
   603                           	opt callstack 0
   604  0003D4  FFFF               	dw	65535	; assembler added errata NOP
   605  0003D6                     
   606                           ;initialisation.c: 121: T3CON = 0;
   607  0003D6  0E00               	movlw	0
   608  0003D8  6EB1               	movwf	177,c	;volatile
   609  0003DA                     
   610                           ;initialisation.c: 122: PIE2bits.TMR3IE = 1;
   611  0003DA  82A0               	bsf	160,1,c	;volatile
   612  0003DC  0012               	return		;funcret
   613  0003DE  FFFF               	dw	65535	; errata NOP
   614  0003E0                     __end_of_initialisation_ConfigTmr3:
   615                           	opt callstack 0
   616                           
   617 ;; *************** function _initialisation_ActiverTmr0 *****************
   618 ;; Defined at:
   619 ;;		line 104 in file "initialisation.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   633 ;;      Params:         0       0       0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_initialisation
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text5
   648  0003BE                     __ptext5:
   649                           	opt callstack 0
   650  0003BE                     _initialisation_ActiverTmr0:
   651                           	opt callstack 0
   652  0003BE  FFFF               	dw	65535	; assembler added errata NOP
   653  0003C0                     
   654                           ;initialisation.c: 106: T0CONbits.TMR0ON = 1;
   655  0003C0  8ED5               	bsf	213,7,c	;volatile
   656                           
   657                           ;initialisation.c: 107: T0CONbits.PSA = 0;
   658  0003C2  96D5               	bcf	213,3,c	;volatile
   659                           
   660                           ;initialisation.c: 108: T0CONbits.T0CS = 0;
   661  0003C4  9AD5               	bcf	213,5,c	;volatile
   662                           
   663                           ;initialisation.c: 109: INTCONbits.TMR0IE = 1;
   664  0003C6  8AF2               	bsf	242,5,c	;volatile
   665  0003C8                     
   666                           ;initialisation.c: 110: TMR0H = 0xE2;
   667  0003C8  0EE2               	movlw	226
   668  0003CA  6ED7               	movwf	215,c	;volatile
   669                           
   670                           ;initialisation.c: 111: TMR0L = 0xB4;
   671  0003CC  0EB4               	movlw	180
   672  0003CE  6ED6               	movwf	214,c	;volatile
   673  0003D0  0012               	return		;funcret
   674  0003D2  FFFF               	dw	65535	; errata NOP
   675  0003D4                     __end_of_initialisation_ActiverTmr0:
   676                           	opt callstack 0
   677                           
   678 ;; *************** function _initialisation_ActiverPWM *****************
   679 ;; Defined at:
   680 ;;		line 65 in file "initialisation.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   694 ;;      Params:         0       0       0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_initialisation
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text6
   709  00031C                     __ptext6:
   710                           	opt callstack 0
   711  00031C                     _initialisation_ActiverPWM:
   712                           	opt callstack 0
   713  00031C  FFFF               	dw	65535	; assembler added errata NOP
   714  00031E                     
   715                           ;initialisation.c: 73: PR2 = 255;
   716  00031E  68CB               	setf	203,c	;volatile
   717  000320                     
   718                           ;initialisation.c: 76: CCPR1L = 0x80;
   719  000320  0E80               	movlw	128
   720  000322  6EBE               	movwf	190,c	;volatile
   721                           
   722                           ;initialisation.c: 77: CCP1CONbits.DC1B = 0b00;
   723  000324  0ECF               	movlw	-49
   724  000326  16BD               	andwf	189,f,c	;volatile
   725  000328                     
   726                           ;initialisation.c: 81: TRISCbits.RC0 = 1;
   727  000328  8094               	bsf	148,0,c	;volatile
   728  00032A                     
   729                           ;initialisation.c: 82: TRISCbits.RC2 = 0;
   730  00032A  9494               	bcf	148,2,c	;volatile
   731  00032C                     
   732                           ;initialisation.c: 86: PIR1bits.TMR2IF = 0;
   733  00032C  929E               	bcf	158,1,c	;volatile
   734                           
   735                           ;initialisation.c: 87: T2CONbits.T2CKPS = 3;
   736  00032E  0E03               	movlw	3
   737  000330  12CA               	iorwf	202,f,c	;volatile
   738  000332                     
   739                           ;initialisation.c: 88: T2CONbits.TMR2ON = 1;
   740  000332  84CA               	bsf	202,2,c	;volatile
   741                           
   742                           ;initialisation.c: 92: CCP1CONbits.CCP1M = 0b1111;
   743  000334  0E0F               	movlw	15
   744  000336  12BD               	iorwf	189,f,c	;volatile
   745  000338                     l135:
   746  000338  FFFF               	dw	65535	; assembler added errata NOP
   747  00033A  A29E               	btfss	158,1,c	;volatile
   748  00033C  EFA2  F001         	goto	u181
   749  000340  EFA5  F001         	goto	u180
   750  000344                     u181:
   751  000344  FFFF               	dw	65535	; assembler added errata NOP
   752  000346  EF9C  F001         	goto	l135
   753  00034A                     u180:
   754  00034A  FFFF               	dw	65535	; assembler added errata NOP
   755  00034C                     
   756                           ;initialisation.c: 97: TRISCbits.RC1 = 0;
   757  00034C  9294               	bcf	148,1,c	;volatile
   758  00034E  0012               	return		;funcret
   759  000350  FFFF               	dw	65535	; errata NOP
   760  000352                     __end_of_initialisation_ActiverPWM:
   761                           	opt callstack 0
   762                           
   763 ;; *************** function _initialisation_ActiverInterruptions *****************
   764 ;; Defined at:
   765 ;;		line 25 in file "initialisation.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;		None
   768 ;; Auto vars:     Size  Location     Type
   769 ;;		None
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		None
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   779 ;;      Params:         0       0       0       0       0       0       0
   780 ;;      Locals:         0       0       0       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0       0       0
   782 ;;      Totals:         0       0       0       0       0       0       0
   783 ;;Total ram usage:        0 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_initialisation
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           	psect	text7
   794  0003F6                     __ptext7:
   795                           	opt callstack 0
   796  0003F6                     _initialisation_ActiverInterruptions:
   797                           	opt callstack 0
   798  0003F6  FFFF               	dw	65535	; assembler added errata NOP
   799  0003F8                     
   800                           ;initialisation.c: 27: INTCONbits.PEIE = 1;
   801  0003F8  8CF2               	bsf	242,6,c	;volatile
   802                           
   803                           ;initialisation.c: 28: INTCONbits.GIE = 1;
   804  0003FA  8EF2               	bsf	242,7,c	;volatile
   805  0003FC  0012               	return		;funcret
   806  0003FE  FFFF               	dw	65535	; errata NOP
   807  000400                     __end_of_initialisation_ActiverInterruptions:
   808                           	opt callstack 0
   809                           
   810 ;; *************** function _initialisation_ActiverIntAdc *****************
   811 ;; Defined at:
   812 ;;		line 54 in file "initialisation.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		None
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   826 ;;      Params:         0       0       0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0
   829 ;;      Totals:         0       0       0       0       0       0       0
   830 ;;Total ram usage:        0 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_initialisation
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text8
   841  0003E0                     __ptext8:
   842                           	opt callstack 0
   843  0003E0                     _initialisation_ActiverIntAdc:
   844                           	opt callstack 0
   845  0003E0  FFFF               	dw	65535	; assembler added errata NOP
   846  0003E2                     
   847                           ;initialisation.c: 57: PIR1bits.ADIF = 0;
   848  0003E2  9C9E               	bcf	158,6,c	;volatile
   849                           
   850                           ;initialisation.c: 58: PIE1bits.ADIE = 1;
   851  0003E4  8C9D               	bsf	157,6,c	;volatile
   852                           
   853                           ;initialisation.c: 59: ADCON0bits.GO_DONE = 1;
   854  0003E6  84C2               	bsf	194,2,c	;volatile
   855  0003E8  0012               	return		;funcret
   856  0003EA  FFFF               	dw	65535	; errata NOP
   857  0003EC                     __end_of_initialisation_ActiverIntAdc:
   858                           	opt callstack 0
   859                           
   860 ;; *************** function ___awdiv *****************
   861 ;; Defined at:
   862 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  dividend        2    0[BANK0 ] int 
   865 ;;  divisor         2    2[BANK0 ] int 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  quotient        2    6[BANK0 ] int 
   868 ;;  sign            1    5[BANK0 ] unsigned char 
   869 ;;  counter         1    4[BANK0 ] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  2    0[BANK0 ] int 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   879 ;;      Params:         0       4       0       0       0       0       0
   880 ;;      Locals:         0       4       0       0       0       0       0
   881 ;;      Temps:          0       0       0       0       0       0       0
   882 ;;      Totals:         0       8       0       0       0       0       0
   883 ;;Total ram usage:        8 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           	psect	text9
   894  00014A                     __ptext9:
   895                           	opt callstack 0
   896  00014A                     ___awdiv:
   897                           	opt callstack 0
   898  00014A  FFFF               	dw	65535	; assembler added errata NOP
   899  00014C  0E00               	movlw	0
   900  00014E  0100               	movlb	0	; () banked
   901  000150  6F65               	movwf	___awdiv@sign& (0+255),b
   902  000152                     
   903                           ; BSR set to: 0
   904  000152  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
   905  000154  EFB1  F000         	goto	u190
   906  000158  EFAE  F000         	goto	u191
   907  00015C                     u191:
   908  00015C  FFFF               	dw	65535	; assembler added errata NOP
   909  00015E  EFB8  F000         	goto	l1138
   910  000162                     u190:
   911  000162  FFFF               	dw	65535	; assembler added errata NOP
   912  000164                     
   913                           ; BSR set to: 0
   914  000164  6D62               	negf	___awdiv@divisor& (0+255),b
   915  000166  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
   916  000168  B0D8               	btfsc	status,0,c
   917  00016A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
   918  00016C                     
   919                           ; BSR set to: 0
   920  00016C  0E01               	movlw	1
   921  00016E  6F65               	movwf	___awdiv@sign& (0+255),b
   922  000170                     l1138:
   923  000170  FFFF               	dw	65535	; assembler added errata NOP
   924                           
   925                           ; BSR set to: 0
   926  000172  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
   927  000174  EFC1  F000         	goto	u200
   928  000178  EFBE  F000         	goto	u201
   929  00017C                     u201:
   930  00017C  FFFF               	dw	65535	; assembler added errata NOP
   931  00017E  EFC8  F000         	goto	l1144
   932  000182                     u200:
   933  000182  FFFF               	dw	65535	; assembler added errata NOP
   934  000184                     
   935                           ; BSR set to: 0
   936  000184  6D60               	negf	___awdiv@dividend& (0+255),b
   937  000186  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
   938  000188  B0D8               	btfsc	status,0,c
   939  00018A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
   940  00018C                     
   941                           ; BSR set to: 0
   942  00018C  0E01               	movlw	1
   943  00018E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
   944  000190                     l1144:
   945  000190  FFFF               	dw	65535	; assembler added errata NOP
   946                           
   947                           ; BSR set to: 0
   948  000192  0E00               	movlw	0
   949  000194  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
   950  000196  0E00               	movlw	0
   951  000198  6F66               	movwf	___awdiv@quotient& (0+255),b
   952  00019A                     
   953                           ; BSR set to: 0
   954  00019A  5162               	movf	___awdiv@divisor& (0+255),w,b
   955  00019C  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
   956  00019E  B4D8               	btfsc	status,2,c
   957  0001A0  EFD4  F000         	goto	u211
   958  0001A4  EFD7  F000         	goto	u210
   959  0001A8                     u211:
   960  0001A8  FFFF               	dw	65535	; assembler added errata NOP
   961  0001AA  EF08  F001         	goto	l1166
   962  0001AE                     u210:
   963  0001AE  FFFF               	dw	65535	; assembler added errata NOP
   964  0001B0                     
   965                           ; BSR set to: 0
   966  0001B0  0E01               	movlw	1
   967  0001B2  6F64               	movwf	___awdiv@counter& (0+255),b
   968  0001B4  EFE1  F000         	goto	l1152
   969  0001B8                     l1150:
   970  0001B8  FFFF               	dw	65535	; assembler added errata NOP
   971                           
   972                           ; BSR set to: 0
   973  0001BA  90D8               	bcf	status,0,c
   974  0001BC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
   975  0001BE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
   976  0001C0  2B64               	incf	___awdiv@counter& (0+255),f,b
   977  0001C2                     l1152:
   978  0001C2  FFFF               	dw	65535	; assembler added errata NOP
   979                           
   980                           ; BSR set to: 0
   981  0001C4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
   982  0001C6  EFE7  F000         	goto	u221
   983  0001CA  EFEA  F000         	goto	u220
   984  0001CE                     u221:
   985  0001CE  FFFF               	dw	65535	; assembler added errata NOP
   986  0001D0  EFDC  F000         	goto	l1150
   987  0001D4                     u220:
   988  0001D4  FFFF               	dw	65535	; assembler added errata NOP
   989  0001D6                     l1154:
   990  0001D6  FFFF               	dw	65535	; assembler added errata NOP
   991                           
   992                           ; BSR set to: 0
   993  0001D8  90D8               	bcf	status,0,c
   994  0001DA  3766               	rlcf	___awdiv@quotient& (0+255),f,b
   995  0001DC  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
   996  0001DE                     
   997                           ; BSR set to: 0
   998  0001DE  5162               	movf	___awdiv@divisor& (0+255),w,b
   999  0001E0  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  1000  0001E2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1001  0001E4  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  1002  0001E6  A0D8               	btfss	status,0,c
  1003  0001E8  EFF8  F000         	goto	u231
  1004  0001EC  EFFB  F000         	goto	u230
  1005  0001F0                     u231:
  1006  0001F0  FFFF               	dw	65535	; assembler added errata NOP
  1007  0001F2  EF01  F001         	goto	l1162
  1008  0001F6                     u230:
  1009  0001F6  FFFF               	dw	65535	; assembler added errata NOP
  1010  0001F8                     
  1011                           ; BSR set to: 0
  1012  0001F8  5162               	movf	___awdiv@divisor& (0+255),w,b
  1013  0001FA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  1014  0001FC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  1015  0001FE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  1016  000200                     
  1017                           ; BSR set to: 0
  1018  000200  8166               	bsf	___awdiv@quotient& (0+255),0,b
  1019  000202                     l1162:
  1020  000202  FFFF               	dw	65535	; assembler added errata NOP
  1021                           
  1022                           ; BSR set to: 0
  1023  000204  90D8               	bcf	status,0,c
  1024  000206  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  1025  000208  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  1026  00020A                     
  1027                           ; BSR set to: 0
  1028  00020A  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  1029  00020C  EFEB  F000         	goto	l1154
  1030  000210                     l1166:
  1031  000210  FFFF               	dw	65535	; assembler added errata NOP
  1032                           
  1033                           ; BSR set to: 0
  1034  000212  5165               	movf	___awdiv@sign& (0+255),w,b
  1035  000214  B4D8               	btfsc	status,2,c
  1036  000216  EF0F  F001         	goto	u241
  1037  00021A  EF12  F001         	goto	u240
  1038  00021E                     u241:
  1039  00021E  FFFF               	dw	65535	; assembler added errata NOP
  1040  000220  EF17  F001         	goto	l1170
  1041  000224                     u240:
  1042  000224  FFFF               	dw	65535	; assembler added errata NOP
  1043  000226                     
  1044                           ; BSR set to: 0
  1045  000226  6D66               	negf	___awdiv@quotient& (0+255),b
  1046  000228  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  1047  00022A  B0D8               	btfsc	status,0,c
  1048  00022C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  1049  00022E                     l1170:
  1050  00022E  FFFF               	dw	65535	; assembler added errata NOP
  1051                           
  1052                           ; BSR set to: 0
  1053  000230  C066  F060         	movff	___awdiv@quotient,?___awdiv
  1054  000234  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  1055  000238                     
  1056                           ; BSR set to: 0
  1057  000238  0012               	return		;funcret
  1058  00023A  FFFF               	dw	65535	; errata NOP
  1059  00023C                     __end_of___awdiv:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _high_isr *****************
  1063 ;; Defined at:
  1064 ;;		line 27 in file "interrupts.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         0       0       0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		Interrupt level 2
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	intcode
  1092  000008                     __pintcode:
  1093                           	opt callstack 0
  1094  000008                     _high_isr:
  1095                           	opt callstack 0
  1096  000008  FFFF               	dw	65535	; assembler added errata NOP
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;incstack = 0
  1100  00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1101  00000C                     
  1102                           ;interrupts.c: 29: static unsigned char dutyWiper = 9;;interrupts.c: 30: static bool sen
      +                          sUp = 1;;interrupts.c: 31: static int compte = 0;;interrupts.c: 34: if (PIR1bits.ADIF)
  1103  00000C  AC9E               	btfss	158,6,c	;volatile
  1104  00000E  EF0B  F000         	goto	i2u26_41
  1105  000012  EF0E  F000         	goto	i2u26_40
  1106  000016                     i2u26_41:
  1107  000016  FFFF               	dw	65535	; assembler added errata NOP
  1108  000018  EF15  F000         	goto	i2l75
  1109  00001C                     i2u26_40:
  1110  00001C  FFFF               	dw	65535	; assembler added errata NOP
  1111  00001E                     
  1112                           ;interrupts.c: 35: {;interrupts.c: 36: g_resAN = ADRESH;
  1113  00001E  CFC4 F070          	movff	4036,_g_resAN	;volatile
  1114  000022  0100               	movlb	0	; force () banked
  1115  000024  6B71               	clrf	(_g_resAN+1)& (0+255),b
  1116                           
  1117                           ;interrupts.c: 38: PIR1bits.ADIF = 0;
  1118  000026  9C9E               	bcf	158,6,c	;volatile
  1119                           
  1120                           ;interrupts.c: 39: ADCON0bits.GO_DONE = 1;
  1121  000028  84C2               	bsf	194,2,c	;volatile
  1122  00002A                     i2l75:
  1123  00002A  FFFF               	dw	65535	; assembler added errata NOP
  1124                           
  1125                           ;interrupts.c: 40: };interrupts.c: 43: if (INTCONbits.TMR0IF)
  1126  00002C  A4F2               	btfss	242,2,c	;volatile
  1127  00002E  EF1B  F000         	goto	i2u27_41
  1128  000032  EF1E  F000         	goto	i2u27_40
  1129  000036                     i2u27_41:
  1130  000036  FFFF               	dw	65535	; assembler added errata NOP
  1131  000038  EF9E  F000         	goto	i2l84
  1132  00003C                     i2u27_40:
  1133  00003C  FFFF               	dw	65535	; assembler added errata NOP
  1134  00003E                     
  1135                           ;interrupts.c: 44: {;interrupts.c: 46: CCPR1L = dutyWiper;
  1136  00003E  C073  FFBE         	movff	high_isr@dutyWiper,4030	;volatile
  1137  000042                     
  1138                           ;interrupts.c: 47: if (sensUp)
  1139  000042  0100               	movlb	0	; force () banked
  1140  000044  5172               	movf	high_isr@sensUp& (0+255),w,b
  1141  000046  B4D8               	btfsc	status,2,c
  1142  000048  EF28  F000         	goto	i2u28_41
  1143  00004C  EF2B  F000         	goto	i2u28_40
  1144  000050                     i2u28_41:
  1145  000050  FFFF               	dw	65535	; assembler added errata NOP
  1146  000052  EF3E  F000         	goto	i2l1214
  1147  000056                     i2u28_40:
  1148  000056  FFFF               	dw	65535	; assembler added errata NOP
  1149  000058                     
  1150                           ; BSR set to: 0
  1151                           ;interrupts.c: 48: {;interrupts.c: 49: dutyWiper++;
  1152  000058  0100               	movlb	0	; force () banked
  1153  00005A  2B73               	incf	high_isr@dutyWiper& (0+255),f,b
  1154  00005C                     
  1155                           ; BSR set to: 0
  1156                           ;interrupts.c: 50: if (dutyWiper >= 0x25)
  1157  00005C  0E24               	movlw	36
  1158  00005E  0100               	movlb	0	; force () banked
  1159  000060  6573               	cpfsgt	high_isr@dutyWiper& (0+255),b
  1160  000062  EF35  F000         	goto	i2u29_41
  1161  000066  EF38  F000         	goto	i2u29_40
  1162  00006A                     i2u29_41:
  1163  00006A  FFFF               	dw	65535	; assembler added errata NOP
  1164  00006C  EF62  F000         	goto	i2l1224
  1165  000070                     i2u29_40:
  1166  000070  FFFF               	dw	65535	; assembler added errata NOP
  1167  000072                     
  1168                           ; BSR set to: 0
  1169                           ;interrupts.c: 51: sensUp = 0;
  1170  000072  0E00               	movlw	0
  1171  000074  0100               	movlb	0	; force () banked
  1172  000076  6F72               	movwf	high_isr@sensUp& (0+255),b
  1173  000078  EF62  F000         	goto	i2l1224
  1174  00007C                     i2l1214:
  1175  00007C  FFFF               	dw	65535	; assembler added errata NOP
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;interrupts.c: 53: else;interrupts.c: 54: {;interrupts.c: 55: dutyWiper--;
  1179  00007E  0100               	movlb	0	; force () banked
  1180  000080  0773               	decf	high_isr@dutyWiper& (0+255),f,b
  1181  000082                     
  1182                           ; BSR set to: 0
  1183                           ;interrupts.c: 56: if (dutyWiper <= 9)
  1184  000082  0E0A               	movlw	10
  1185  000084  0100               	movlb	0	; force () banked
  1186  000086  6173               	cpfslt	high_isr@dutyWiper& (0+255),b
  1187  000088  EF48  F000         	goto	i2u30_41
  1188  00008C  EF4B  F000         	goto	i2u30_40
  1189  000090                     i2u30_41:
  1190  000090  FFFF               	dw	65535	; assembler added errata NOP
  1191  000092  EF62  F000         	goto	i2l1224
  1192  000096                     i2u30_40:
  1193  000096  FFFF               	dw	65535	; assembler added errata NOP
  1194  000098                     
  1195                           ; BSR set to: 0
  1196                           ;interrupts.c: 57: {;interrupts.c: 58: if (g_etat >= enumDelaiUn )
  1197  000098  0100               	movlb	0	; force () banked
  1198  00009A  BF6F               	btfsc	(_g_etat+1)& (0+255),7,b
  1199  00009C  EF59  F000         	goto	i2u31_41
  1200  0000A0  516F               	movf	(_g_etat+1)& (0+255),w,b
  1201  0000A2  E10A               	bnz	i2u31_40
  1202  0000A4  0E04               	movlw	4
  1203  0000A6  5D6E               	subwf	_g_etat& (0+255),w,b
  1204  0000A8  A0D8               	btfss	status,0,c
  1205  0000AA  EF59  F000         	goto	i2u31_41
  1206  0000AE  EF5C  F000         	goto	i2u31_40
  1207  0000B2                     i2u31_41:
  1208  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  1209  0000B4  EF5E  F000         	goto	i2l1222
  1210  0000B8                     i2u31_40:
  1211  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  1212  0000BA                     
  1213                           ; BSR set to: 0
  1214                           ;interrupts.c: 59: {;interrupts.c: 60: T0CONbits.TMR0ON = 0;
  1215  0000BA  9ED5               	bcf	213,7,c	;volatile
  1216  0000BC                     i2l1222:
  1217  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;interrupts.c: 61: };interrupts.c: 62: sensUp = 1;
  1221  0000BE  0E01               	movlw	1
  1222  0000C0  0100               	movlb	0	; force () banked
  1223  0000C2  6F72               	movwf	high_isr@sensUp& (0+255),b
  1224  0000C4                     i2l1224:
  1225  0000C4  FFFF               	dw	65535	; assembler added errata NOP
  1226                           
  1227                           ; BSR set to: 0
  1228                           ;interrupts.c: 63: };interrupts.c: 64: };interrupts.c: 66: INTCONbits.TMR0IF = 0;
  1229  0000C6  94F2               	bcf	242,2,c	;volatile
  1230                           
  1231                           ;interrupts.c: 67: TMR0H = 0xE2;
  1232  0000C8  0EE2               	movlw	226
  1233  0000CA  6ED7               	movwf	215,c	;volatile
  1234                           
  1235                           ;interrupts.c: 68: TMR0L = 0xB4;
  1236  0000CC  0EB4               	movlw	180
  1237  0000CE  6ED6               	movwf	214,c	;volatile
  1238  0000D0                     
  1239                           ; BSR set to: 0
  1240                           ;interrupts.c: 72: if (PIR2bits.TMR3IF)
  1241  0000D0  A2A1               	btfss	161,1,c	;volatile
  1242  0000D2  EF6D  F000         	goto	i2u32_41
  1243  0000D6  EF70  F000         	goto	i2u32_40
  1244  0000DA                     i2u32_41:
  1245  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  1246  0000DC  EF9E  F000         	goto	i2l84
  1247  0000E0                     i2u32_40:
  1248  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  1249  0000E2                     
  1250                           ; BSR set to: 0
  1251                           ;interrupts.c: 73: {;interrupts.c: 75: compte++;
  1252  0000E2  0100               	movlb	0	; force () banked
  1253  0000E4  4B6C               	infsnz	high_isr@compte& (0+255),f,b
  1254  0000E6  2B6D               	incf	(high_isr@compte+1)& (0+255),f,b
  1255  0000E8                     
  1256                           ; BSR set to: 0
  1257                           ;interrupts.c: 77: if (g_etat == enumDelaiUn && compte > 10)
  1258  0000E8  0E04               	movlw	4
  1259  0000EA  0100               	movlb	0	; force () banked
  1260  0000EC  196E               	xorwf	_g_etat& (0+255),w,b
  1261  0000EE  116F               	iorwf	(_g_etat+1)& (0+255),w,b
  1262  0000F0  A4D8               	btfss	status,2,c
  1263  0000F2  EF7D  F000         	goto	i2u33_41
  1264  0000F6  EF80  F000         	goto	i2u33_40
  1265  0000FA                     i2u33_41:
  1266  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  1267  0000FC  EF9C  F000         	goto	i2l1238
  1268  000100                     i2u33_40:
  1269  000100  FFFF               	dw	65535	; assembler added errata NOP
  1270  000102                     
  1271                           ; BSR set to: 0
  1272  000102  0100               	movlb	0	; force () banked
  1273  000104  BF6D               	btfsc	(high_isr@compte+1)& (0+255),7,b
  1274  000106  EF8E  F000         	goto	i2u34_41
  1275  00010A  516D               	movf	(high_isr@compte+1)& (0+255),w,b
  1276  00010C  E10A               	bnz	i2u34_40
  1277  00010E  0E0B               	movlw	11
  1278  000110  5D6C               	subwf	high_isr@compte& (0+255),w,b
  1279  000112  A0D8               	btfss	status,0,c
  1280  000114  EF8E  F000         	goto	i2u34_41
  1281  000118  EF91  F000         	goto	i2u34_40
  1282  00011C                     i2u34_41:
  1283  00011C  FFFF               	dw	65535	; assembler added errata NOP
  1284  00011E  EF9C  F000         	goto	i2l1238
  1285  000122                     i2u34_40:
  1286  000122  FFFF               	dw	65535	; assembler added errata NOP
  1287  000124                     
  1288                           ; BSR set to: 0
  1289                           ;interrupts.c: 78: {;interrupts.c: 79: T0CONbits.T0PS = 1;
  1290  000124  50D5               	movf	213,w,c	;volatile
  1291  000126  0BF8               	andlw	-8
  1292  000128  0901               	iorlw	1
  1293  00012A  6ED5               	movwf	213,c	;volatile
  1294  00012C                     
  1295                           ; BSR set to: 0
  1296                           ;interrupts.c: 80: T0CONbits.TMR0ON = 1;
  1297  00012C  8ED5               	bsf	213,7,c	;volatile
  1298                           
  1299                           ;interrupts.c: 81: compte = 0;
  1300  00012E  0E00               	movlw	0
  1301  000130  0100               	movlb	0	; force () banked
  1302  000132  6F6D               	movwf	(high_isr@compte+1)& (0+255),b
  1303  000134  0E00               	movlw	0
  1304  000136  6F6C               	movwf	high_isr@compte& (0+255),b
  1305  000138                     i2l1238:
  1306  000138  FFFF               	dw	65535	; assembler added errata NOP
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;interrupts.c: 82: };interrupts.c: 84: PIR2bits.TMR3IF = 0;
  1310  00013A  92A1               	bcf	161,1,c	;volatile
  1311  00013C                     i2l84:
  1312  00013C  FFFF               	dw	65535	; assembler added errata NOP
  1313  00013E  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1314  000140  0011               	retfie		f
  1315  000142  FFFF               	dw	65535	; errata NOP
  1316  000144                     __end_of_high_isr:
  1317                           	opt callstack 0
  1318  000144  FFFF               	dw	65535	; assembler added errata NOP
  1319                           
  1320                           	psect	param0
  1321  0000                     
  1322                           	psect	temp
  1323  000001                     btemp:
  1324                           	opt callstack 0
  1325  000001                     	ds	1
  1326  0000                     int$flags	set	btemp
  1327  0000                     wtemp8	set	btemp+1
  1328  0000                     ttemp5	set	btemp+1
  1329  0000                     ttemp6	set	btemp+4
  1330  0000                     ttemp7	set	btemp+8
  1331                           tosu	equ	0xFFF
  1332                           tosh	equ	0xFFE
  1333                           tosl	equ	0xFFD
  1334                           stkptr	equ	0xFFC
  1335                           pclatu	equ	0xFFB
  1336                           pclath	equ	0xFFA
  1337                           pcl	equ	0xFF9
  1338                           tblptru	equ	0xFF8
  1339                           tblptrh	equ	0xFF7
  1340                           tblptrl	equ	0xFF6
  1341                           tablat	equ	0xFF5
  1342                           prodh	equ	0xFF4
  1343                           prodl	equ	0xFF3
  1344                           indf0	equ	0xFEF
  1345                           postinc0	equ	0xFEE
  1346                           postdec0	equ	0xFED
  1347                           preinc0	equ	0xFEC
  1348                           plusw0	equ	0xFEB
  1349                           fsr0h	equ	0xFEA
  1350                           fsr0l	equ	0xFE9
  1351                           wreg	equ	0xFE8
  1352                           indf1	equ	0xFE7
  1353                           postinc1	equ	0xFE6
  1354                           postdec1	equ	0xFE5
  1355                           preinc1	equ	0xFE4
  1356                           plusw1	equ	0xFE3
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           bsr	equ	0xFE0
  1360                           indf2	equ	0xFDF
  1361                           postinc2	equ	0xFDE
  1362                           postdec2	equ	0xFDD
  1363                           preinc2	equ	0xFDC
  1364                           plusw2	equ	0xFDB
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     12      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     454
                                              8 BANK0      4     4      0
                            ___awdiv
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
       _initialisation_ActiverIntAdc
_initialisation_ActiverInterruptions
          _initialisation_ActiverPWM
         _initialisation_ActiverTmr0
          _initialisation_ConfigTmr3
       _initialisation_ConfigurerAdc
_initialisation_ConfigurerPortDSorti
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerPortDSortie                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigTmr3                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverTmr0                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverPWM                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverInterruptions                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverIntAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _initialisation
     _initialisation_ActiverIntAdc
     _initialisation_ActiverInterruptions
     _initialisation_ActiverPWM
     _initialisation_ActiverTmr0
     _initialisation_ConfigTmr3
     _initialisation_ConfigurerAdc
     _initialisation_ConfigurerPortDSortie

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      C      14       4       12.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      14       9        0.0%
DATA                 0      0      14      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 06 10:45:41 2020

                                      __end_of_initialisation_ActiverIntAdc 03EC  
                                     __size_of_initialisation_ActiverIntAdc 000C  
                                              _initialisation_ActiverIntAdc 03E0  
                                                                        l31 0278  
                                                                        l25 03A0  
                                                                        l34 02A0  
                                                              ___awdiv@sign 0065  
                                                              __CFG_CP0$OFF 000000  
                                                              __CFG_CP1$OFF 000000  
                                                              __CFG_CP2$OFF 000000  
                                                              __CFG_CP3$OFF 000000  
                                                               __CFG_OSC$HS 000000  
                                                                       l123 03F2  
                                                                       l132 03E8  
                                                                       l141 03D0  
                                                                       l126 03FC  
                                                                       l135 0338  
                                                                       l144 03DC  
                                               ?_initialisation_ActiverTmr0 0060  
                                                                       l137 034C  
                                                                       l129 03BA  
                                                                       l138 034E  
                                                                       l378 0238  
                                                              __CFG_CPB$OFF 000000  
                                                                       u200 0182  
                                                                       u201 017C  
                                                                       u210 01AE  
                                                                       u211 01A8  
                                                                       u220 01D4  
                                                                       u221 01CE  
                                                                       u230 01F6  
                                                                       u231 01F0  
                                                                       u240 0224  
                                                                       u241 021E  
                                                                       u250 0270  
                                                                       u251 026A  
                                                                       u180 034A  
                                                                       u181 0344  
                                                                       u190 0162  
                                                                       _PR2 000FCB  
                                                                       u191 015C  
                                                              __CFG_CPD$OFF 000000  
                                                              __CFG_BOR$OFF 000000  
                                               ??_initialisation_ConfigTmr3 0060  
                                                              __CFG_BORV$25 000000  
                                                              __CFG_LVP$OFF 000000  
                                                              __CFG_WDT$OFF 000000  
                                                                      l1100 0320  
                                                                      l1102 0328  
                                                                      l1110 03C0  
                                                                      l1104 032A  
                                                                      l1112 03C8  
                                                                      l1120 0384  
                                                                      l1130 014C  
                                                                      l1106 032C  
                                                                      l1114 03D6  
                                                                      l1122 038C  
                                                                      l1140 0184  
                                                                      l1132 0152  
                                                                      l1108 0332  
                                                                      l1116 03DA  
                                                                      l1124 0390  
                                                                      l1150 01B8  
                                                                      l1142 018C  
                                                                      l1134 0164  
                                                                      l1118 03F8  
                                                                      l1126 0394  
                                                                      l1160 0200  
                                                                      l1152 01C2  
                                                                      l1144 0190  
                                                                      l1136 016C  
                                                                      l1128 0398  
                                                                      l1170 022E  
                                                                      l1162 0202  
                                                                      l1154 01D6  
                                                                      l1146 019A  
                                                                      l1138 0170  
                                                                      l1090 03AC  
                                                                      l1164 020A  
                                                                      l1156 01DE  
                                                                      l1148 01B0  
                                                                      l1092 03AE  
                                                                      l1084 03EE  
                                                                      l1180 0272  
                                                                      l1158 01F8  
                                                                      l1166 0210  
                                                                      l1094 03B8  
                                                                      l1086 03A6  
                                                                      l1270 02E8  
                                                                      l1182 027C  
                                                                      l1174 023C  
                                                                      l1168 0226  
                                                                      l1096 03E2  
                                                                      l1088 03A8  
                                                                      l1184 02A8  
                                                                      l1192 02CE  
                                                                      l1176 024A  
                                                                      l1098 031E  
                                                                      l1186 02B6  
                                                                      l1178 024E  
                                                                      l1188 02C4  
                                                                      i2l75 002A  
                                                                      i2l84 013C  
                                                          ??_initialisation 0060  
                                                                      _main 023C  
                                                                      btemp 0001  
                                                                      start 0146  
                                                              ___param_bank 000000  
                                                 _initialisation_ActiverPWM 031C  
                                                             __CFG_OSCS$OFF 000000  
                                             ?_initialisation_ActiverIntAdc 0060  
                                                                     ?_main 0060  
                                                           __end_of___awdiv 023C  
                                                           ___awdiv@divisor 0062  
                                                                     _T3CON 000FB1  
                                                           ___awdiv@counter 0064  
                                                                     _TMR0H 000FD7  
                                                                     _TMR0L 000FD6  
                                                                     _TRISD 000F95  
                                                             __CFG_PWRT$OFF 000000  
                                                             __CFG_WRT0$OFF 000000  
                                                             __CFG_WRT1$OFF 000000  
                                                             __CFG_WRT2$OFF 000000  
                                                             __CFG_WRT3$OFF 000000  
                                                            __CFG_EBTR0$OFF 000000  
                                                            __CFG_EBTR1$OFF 000000  
                                                            __CFG_EBTR2$OFF 000000  
                                                            __CFG_EBTR3$OFF 000000  
                                                             __CFG_STVR$OFF 000000  
                                                             __CFG_WRTB$OFF 000000  
                                                             __CFG_WRTC$OFF 000000  
                                                             __CFG_WRTD$OFF 000000  
                                                            __CFG_EBTRB$OFF 000000  
                                                                     tablat 000FF5  
                                                                     ttemp5 0002  
                                                                     ttemp6 0005  
                                                                     ttemp7 0009  
                                                                     status 000FD8  
                                                                     wtemp8 0002  
                                                 _initialisation_ConfigTmr3 03D4  
                                                           __initialization 0352  
                                                              __end_of_main 031C  
                                                                    ??_main 0068  
                                                             __activetblptr 000003  
                                                                    _ADCON1 000FC1  
                                                                    _ADRESH 000FC4  
                                                                    _CCPR1L 000FBE  
                                                          ___awdiv@dividend 0060  
                                                                    i2l1200 000C  
                                                                    i2l1210 005C  
                                                                    i2l1202 001E  
                                                                    i2l1220 00BA  
                                                                    i2l1212 0072  
                                                                    i2l1204 003E  
                                                                    i2l1230 00E8  
                                                                    i2l1222 00BC  
                                                                    i2l1214 007C  
                                                                    i2l1206 0042  
                                                                    i2l1232 0102  
                                                                    i2l1216 0082  
                                                                    i2l1224 00C4  
                                                                    i2l1208 0058  
                                                                    i2l1234 0124  
                                                                    i2l1226 00D0  
                                                                    i2l1218 0098  
                                                                    i2l1236 012C  
                                                                    i2l1228 00E2  
                                                                    i2l1238 0138  
                                                            __CFG_WDTPS$128 000000  
                                                             main@dutyWiper 006A  
                                                          __end_of_high_isr 0144  
                                                                 ??___awdiv 0064  
                                                                    _g_etat 006E  
                                                          ___awdiv@quotient 0066  
                                            ??_initialisation_ActiverIntAdc 0060  
                                                                    tblptrh 000FF7  
                                                                    tblptrl 000FF6  
                                                                    tblptru 000FF8  
                              __end_of_initialisation_ConfigurerPortDSortie 03F6  
                             __size_of_initialisation_ConfigurerPortDSortie 000A  
                                    ??_initialisation_ConfigurerPortDSortie 0060  
                                     ?_initialisation_ConfigurerPortDSortie 0060  
                                      _initialisation_ConfigurerPortDSortie 03EC  
                                                                __accesstop 0060  
                                                   __end_of__initialization 0378  
                                                             ___rparam_used 000000  
                                                              __pidataBANK0 0400  
                                                            high_isr@compte 006C  
                                                            high_isr@sensUp 0072  
                                        __size_of_initialisation_ActiverPWM 0036  
                                                         high_isr@dutyWiper 0073  
                                                                __pbssBANK0 006C  
                                        __size_of_initialisation_ConfigTmr3 000C  
                                                                   i2u30_40 0096  
                                                                   i2u30_41 0090  
                                                                   i2u31_40 00B8  
                                                                   i2u31_41 00B2  
                                                                   i2u32_40 00E0  
                                                                   i2u32_41 00DA  
                                                                   i2u33_40 0100  
                                                                   i2u33_41 00FA  
                                                                   i2u34_40 0122  
                                                                   i2u26_40 001C  
                                                                   i2u34_41 011C  
                                                                   i2u26_41 0016  
                                                                   i2u27_40 003C  
                                                                   i2u27_41 0036  
                                                                   i2u28_40 0056  
                                                                   i2u28_41 0050  
                                                                   i2u29_40 0070  
                                                                   i2u29_41 006A  
                                                                 ?_high_isr 0060  
                                         __end_of_initialisation_ActiverPWM 0352  
                                      __end_of_initialisation_ConfigurerAdc 03BE  
                                     __size_of_initialisation_ConfigurerAdc 001A  
                                              _initialisation_ConfigurerAdc 03A4  
                                                                   __Hparam 0000  
                                                                   __Lparam 0000  
                                                                   ___awdiv 014A  
                                                                   __pcinit 0352  
                                                                   _g_resAN 0070  
                                                                   __ramtop 0600  
                                                                   __ptext0 023C  
                                                                   __ptext1 0382  
                                                                   __ptext2 03EC  
                                                                   __ptext3 03A4  
                                                                   __ptext4 03D4  
                                                                   __ptext5 03BE  
                                                                   __ptext6 031C  
                                                                   __ptext7 03F6  
                                                                   __ptext8 03E0  
                                                                   __ptext9 014A  
                                         __end_of_initialisation_ConfigTmr3 03E0  
                                                                 _T0CONbits 000FD5  
                                                                 _T2CONbits 000FCA  
                                                                ??_high_isr 0060  
                                                      end_of_initialization 0378  
                                             ?_initialisation_ConfigurerAdc 0060  
                                                   __size_of_initialisation 0022  
                                                                 _PORTDbits 000F83  
                                                                 _TRISAbits 000F92  
                                                                 _TRISCbits 000F94  
                                                               _CCP1CONbits 000FBD  
                                                                main@sensUp 006B  
                                              ??_initialisation_ActiverTmr0 0060  
                                                       start_initialization 0352  
                                       __size_of_initialisation_ActiverTmr0 0016  
                                                               __pdataBANK0 0072  
                                            ??_initialisation_ConfigurerAdc 0060  
                               __end_of_initialisation_ActiverInterruptions 0400  
                              __size_of_initialisation_ActiverInterruptions 000A  
                                     ??_initialisation_ActiverInterruptions 0060  
                                      ?_initialisation_ActiverInterruptions 0060  
                                       _initialisation_ActiverInterruptions 03F6  
                                                             __pcstackBANK0 0060  
                                                         __size_of_high_isr 013C  
                                                                 __pintcode 0008  
                                                            _initialisation 0382  
                                                                  ?___awdiv 0060  
                                                ?_initialisation_ActiverPWM 0060  
                                                                  _PIE1bits 000F9D  
                                                                  _PIE2bits 000FA0  
                                                    __end_of_initialisation 03A4  
                                                                  _PIR1bits 000F9E  
                                                                  _PIR2bits 000FA1  
                                                                _ADCON0bits 000FC2  
                                                                _ADCON1bits 000FC1  
                                        __end_of_initialisation_ActiverTmr0 03D4  
                                                _initialisation_ActiverTmr0 03BE  
                                                ?_initialisation_ConfigTmr3 0060  
                                                                  __Hparam0 0000  
                                                                  __Lparam0 0000  
                                                           ?_initialisation 0060  
                                                          __size_of___awdiv 00F2  
                                                                  _high_isr 0008  
                                                             __size_of_main 00E0  
                                                                  int$flags 0001  
                                                                _INTCONbits 000FF2  
                                                                  intlevel2 0402  
                                               ??_initialisation_ActiverPWM 0060  
