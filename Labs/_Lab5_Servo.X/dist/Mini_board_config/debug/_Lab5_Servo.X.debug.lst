

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 14:27:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F458 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataBANK0
    60  0003EE                     __pidataBANK0:
    61                           	opt callstack 0
    62                           
    63                           ;initializer for high_isr@sensUp
    64  0003EE  01                 	db	1
    65                           
    66                           ;initializer for high_isr@dutyWiper
    67  0003EF  09                 	db	9
    68  0000                     _TRISCbits	set	3988
    69  0000                     _TRISAbits	set	3986
    70  0000                     _TRISD	set	3989
    71  0000                     _PORTDbits	set	3971
    72  0000                     _PIE2bits	set	4000
    73  0000                     _T3CON	set	4017
    74  0000                     _T2CONbits	set	4042
    75  0000                     _CCP1CONbits	set	4029
    76  0000                     _PR2	set	4043
    77  0000                     _PIE1bits	set	3997
    78  0000                     _ADCON1bits	set	4033
    79  0000                     _ADCON1	set	4033
    80  0000                     _PIR2bits	set	4001
    81  0000                     _CCPR1L	set	4030
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADRESH	set	4036
    84  0000                     _PIR1bits	set	3998
    85  0000                     _TMR0L	set	4054
    86  0000                     _TMR0H	set	4055
    87  0000                     _T0CONbits	set	4053
    88  0000                     _INTCONbits	set	4082
    89                           
    90                           ; #config settings
    91  0000                     
    92                           	psect	cinit
    93  000332                     __pcinit:
    94                           	opt callstack 0
    95  000332                     start_initialization:
    96                           	opt callstack 0
    97  000332                     __initialization:
    98                           	opt callstack 0
    99                           
   100                           ; Initialize objects allocated to BANK0 (2 bytes)
   101                           ; load TBLPTR registers with __pidataBANK0
   102  000332  0EEE               	movlw	low __pidataBANK0
   103  000334  6EF6               	movwf	tblptrl,c
   104  000336  0E03               	movlw	high __pidataBANK0
   105  000338  6EF7               	movwf	tblptrh,c
   106  00033A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   107  00033C  6EF8               	movwf	tblptru,c
   108  00033E  0009               	tblrd		*+	;fetch initializer
   109  000340  CFF5 F078          	movff	tablat,__pdataBANK0
   110  000344  0009               	tblrd		*+	;fetch initializer
   111  000346  CFF5 F079          	movff	tablat,__pdataBANK0+1
   112                           
   113                           ; Clear objects allocated to BANK0 (6 bytes)
   114  00034A  0100               	movlb	0
   115  00034C  6B77               	clrf	(__pbssBANK0+5)& (0+255),b
   116  00034E  6B76               	clrf	(__pbssBANK0+4)& (0+255),b
   117  000350  6B75               	clrf	(__pbssBANK0+3)& (0+255),b
   118  000352  6B74               	clrf	(__pbssBANK0+2)& (0+255),b
   119  000354  6B73               	clrf	(__pbssBANK0+1)& (0+255),b
   120  000356  6B72               	clrf	__pbssBANK0& (0+255),b
   121  000358                     end_of_initialization:
   122                           	opt callstack 0
   123  000358                     __end_of__initialization:
   124                           	opt callstack 0
   125  000358  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   126  00035A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   127  00035C  0100               	movlb	0
   128  00035E  EFA5  F000         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	bssBANK0
   131  000072                     __pbssBANK0:
   132                           	opt callstack 0
   133  000072                     high_isr@compte:
   134                           	opt callstack 0
   135  000072                     	ds	2
   136  000074                     _g_etat:
   137                           	opt callstack 0
   138  000074                     	ds	2
   139  000076                     _g_resAN:
   140                           	opt callstack 0
   141  000076                     	ds	2
   142                           
   143                           	psect	dataBANK0
   144  000078                     __pdataBANK0:
   145                           	opt callstack 0
   146  000078                     high_isr@sensUp:
   147                           	opt callstack 0
   148  000078                     	ds	1
   149  000079                     high_isr@dutyWiper:
   150                           	opt callstack 0
   151  000079                     	ds	1
   152                           
   153                           	psect	cstackBANK0
   154  000060                     __pcstackBANK0:
   155                           	opt callstack 0
   156  000060                     ?___wmul:
   157                           	opt callstack 0
   158  000060                     ___wmul@multiplier:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0x0
   162  000060                     	ds	2
   163  000062                     ___wmul@multiplicand:
   164                           	opt callstack 0
   165                           
   166                           ; 2 bytes @ 0x2
   167  000062                     	ds	2
   168  000064                     ___wmul@product:
   169                           	opt callstack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172  000064                     	ds	2
   173  000066                     ?___awdiv:
   174                           	opt callstack 0
   175  000066                     ___awdiv@dividend:
   176                           	opt callstack 0
   177                           
   178                           ; 2 bytes @ 0x6
   179  000066                     	ds	2
   180  000068                     ___awdiv@divisor:
   181                           	opt callstack 0
   182                           
   183                           ; 2 bytes @ 0x8
   184  000068                     	ds	2
   185  00006A                     ___awdiv@counter:
   186                           	opt callstack 0
   187                           
   188                           ; 1 bytes @ 0xA
   189  00006A                     	ds	1
   190  00006B                     ___awdiv@sign:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0xB
   194  00006B                     	ds	1
   195  00006C                     ___awdiv@quotient:
   196                           	opt callstack 0
   197                           
   198                           ; 2 bytes @ 0xC
   199  00006C                     	ds	2
   200  00006E                     ??_main:
   201                           
   202                           ; 1 bytes @ 0xE
   203  00006E                     	ds	2
   204  000070                     main@dutyWiper:
   205                           	opt callstack 0
   206                           
   207                           ; 1 bytes @ 0x10
   208  000070                     	ds	1
   209  000071                     main@sensUp:
   210                           	opt callstack 0
   211                           
   212                           ; 1 bytes @ 0x11
   213  000071                     	ds	1
   214                           
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 40 in file "main.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;  sensUp          1   17[BANK0 ] unsigned char 
   225 ;;  dutyWiper       1   16[BANK0 ] unsigned char 
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   235 ;;      Params:         0       0       0       0       0       0       0
   236 ;;      Locals:         0       2       0       0       0       0       0
   237 ;;      Temps:          0       2       0       0       0       0       0
   238 ;;      Totals:         0       4       0       0       0       0       0
   239 ;;Total ram usage:        4 bytes
   240 ;; Hardware stack levels required when called:    3
   241 ;; This function calls:
   242 ;;		___awdiv
   243 ;;		___wmul
   244 ;;		_initialisation
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251  00014A                     __ptext0:
   252                           	opt callstack 0
   253  00014A                     _main:
   254                           	opt callstack 28
   255  00014A  FFFF               	dw	65535	; assembler added errata NOP
   256                           
   257                           ;main.c: 42: unsigned char dutyWiper = 9;
   258  00014C  0E09               	movlw	9
   259  00014E  0100               	movlb	0	; force () banked
   260  000150  6F70               	movwf	main@dutyWiper& (0+255),b
   261                           
   262                           ;main.c: 43: bool sensUp = 1;
   263  000152  0E01               	movlw	1
   264  000154  0100               	movlb	0	; force () banked
   265  000156  6F71               	movwf	main@sensUp& (0+255),b
   266  000158                     
   267                           ; BSR set to: 0
   268                           ;main.c: 45: initialisation();
   269  000158  ECC7  F001         	call	_initialisation	;wreg free
   270  00015C                     l1162:
   271  00015C  FFFF               	dw	65535	; assembler added errata NOP
   272                           
   273                           ;main.c: 50: {;main.c: 52: if (g_resAN > 128)
   274  00015E  0100               	movlb	0	; force () banked
   275  000160  BF77               	btfsc	(_g_resAN+1)& (0+255),7,b
   276  000162  EFBC  F000         	goto	u241
   277  000166  5177               	movf	(_g_resAN+1)& (0+255),w,b
   278  000168  E10A               	bnz	u240
   279  00016A  0E81               	movlw	129
   280  00016C  5D76               	subwf	_g_resAN& (0+255),w,b
   281  00016E  A0D8               	btfss	status,0,c
   282  000170  EFBC  F000         	goto	u241
   283  000174  EFBF  F000         	goto	u240
   284  000178                     u241:
   285  000178  FFFF               	dw	65535	; assembler added errata NOP
   286  00017A  EFC3  F000         	goto	l27
   287  00017E                     u240:
   288  00017E  FFFF               	dw	65535	; assembler added errata NOP
   289  000180                     
   290                           ; BSR set to: 0
   291                           ;main.c: 53: PORTDbits.RD7 = 1;
   292  000180  8E83               	bsf	131,7,c	;volatile
   293  000182  EFC5  F000         	goto	l1166
   294  000186                     l27:
   295  000186  FFFF               	dw	65535	; assembler added errata NOP
   296                           
   297                           ; BSR set to: 0
   298                           ;main.c: 54: else;main.c: 55: PORTDbits.RD7 = 0;
   299  000188  9E83               	bcf	131,7,c	;volatile
   300  00018A                     l1166:
   301  00018A  FFFF               	dw	65535	; assembler added errata NOP
   302                           
   303                           ; BSR set to: 0
   304                           ;main.c: 61: g_etat = g_resAN * enumEtatMax / 256;
   305  00018C  C076  F060         	movff	_g_resAN,___wmul@multiplier
   306  000190  C077  F061         	movff	_g_resAN+1,___wmul@multiplier+1
   307  000194  0E00               	movlw	0
   308  000196  0100               	movlb	0	; force () banked
   309  000198  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
   310  00019A  0E07               	movlw	7
   311  00019C  6F62               	movwf	___wmul@multiplicand& (0+255),b
   312  00019E  ECB1  F001         	call	___wmul	;wreg free
   313  0001A2  C060  F066         	movff	?___wmul,___awdiv@dividend
   314  0001A6  C061  F067         	movff	?___wmul+1,___awdiv@dividend+1
   315  0001AA  0E01               	movlw	1
   316  0001AC  0100               	movlb	0	; force () banked
   317  0001AE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
   318  0001B0  0E00               	movlw	0
   319  0001B2  6F68               	movwf	___awdiv@divisor& (0+255),b
   320  0001B4  EC20  F001         	call	___awdiv	;wreg free
   321  0001B8  C066  F074         	movff	?___awdiv,_g_etat
   322  0001BC  C067  F075         	movff	?___awdiv+1,_g_etat+1
   323                           
   324                           ;main.c: 63: switch (g_etat)
   325  0001C0  EFF9  F000         	goto	l1176
   326  0001C4                     l30:
   327  0001C4  FFFF               	dw	65535	; assembler added errata NOP
   328                           
   329                           ; BSR set to: 0
   330                           ;main.c: 67: T0CONbits.TMR0ON = 0;
   331  0001C6  9ED5               	bcf	213,7,c	;volatile
   332                           
   333                           ;main.c: 68: break;
   334  0001C8  EFAE  F000         	goto	l1162
   335  0001CC                     l1168:
   336  0001CC  FFFF               	dw	65535	; assembler added errata NOP
   337                           
   338                           ; BSR set to: 0
   339                           ;main.c: 70: T0CONbits.T0PS = 2;
   340  0001CE  50D5               	movf	213,w,c	;volatile
   341  0001D0  0BF8               	andlw	-8
   342  0001D2  0902               	iorlw	2
   343  0001D4  6ED5               	movwf	213,c	;volatile
   344                           
   345                           ;main.c: 72: break;
   346  0001D6  EFAE  F000         	goto	l1162
   347  0001DA                     l1170:
   348  0001DA  FFFF               	dw	65535	; assembler added errata NOP
   349                           
   350                           ; BSR set to: 0
   351                           ;main.c: 75: T0CONbits.T0PS = 1;
   352  0001DC  50D5               	movf	213,w,c	;volatile
   353  0001DE  0BF8               	andlw	-8
   354  0001E0  0901               	iorlw	1
   355  0001E2  6ED5               	movwf	213,c	;volatile
   356                           
   357                           ;main.c: 77: break;
   358  0001E4  EFAE  F000         	goto	l1162
   359  0001E8                     l1172:
   360  0001E8  FFFF               	dw	65535	; assembler added errata NOP
   361                           
   362                           ; BSR set to: 0
   363                           ;main.c: 79: T0CONbits.T0PS = 0;
   364  0001EA  0EF8               	movlw	-8
   365  0001EC  16D5               	andwf	213,f,c	;volatile
   366                           
   367                           ;main.c: 81: break;
   368  0001EE  EFAE  F000         	goto	l1162
   369  0001F2                     l1176:
   370  0001F2  FFFF               	dw	65535	; assembler added errata NOP
   371  0001F4  C074  F06E         	movff	_g_etat,??_main
   372  0001F8  C075  F06F         	movff	_g_etat+1,??_main+1
   373                           
   374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   375                           ; Switch size 1, requested type "simple"
   376                           ; Number of cases is 1, Range of values is 0 to 0
   377                           ; switch strategies available:
   378                           ; Name         Instructions Cycles
   379                           ; simple_byte            4     3 (average)
   380                           ;	Chosen strategy is simple_byte
   381  0001FC  0100               	movlb	0	; force () banked
   382  0001FE  516F               	movf	(??_main+1)& (0+255),w,b
   383  000200  0A00               	xorlw	0	; case 0
   384  000202  B4D8               	btfsc	status,2,c
   385  000204  EF06  F001         	goto	l1254
   386  000208  EFAE  F000         	goto	l1162
   387  00020C                     l1254:
   388  00020C  FFFF               	dw	65535	; assembler added errata NOP
   389                           
   390                           ; BSR set to: 0
   391                           ; Switch size 1, requested type "simple"
   392                           ; Number of cases is 5, Range of values is 0 to 4
   393                           ; switch strategies available:
   394                           ; Name         Instructions Cycles
   395                           ; simple_byte           16     9 (average)
   396                           ;	Chosen strategy is simple_byte
   397  00020E  516E               	movf	??_main& (0+255),w,b
   398  000210  0A00               	xorlw	0	; case 0
   399  000212  B4D8               	btfsc	status,2,c
   400  000214  EFE2  F000         	goto	l30
   401  000218  0A01               	xorlw	1	; case 1
   402  00021A  B4D8               	btfsc	status,2,c
   403  00021C  EFE6  F000         	goto	l1168
   404  000220  0A03               	xorlw	3	; case 2
   405  000222  B4D8               	btfsc	status,2,c
   406  000224  EFED  F000         	goto	l1170
   407  000228  0A01               	xorlw	1	; case 3
   408  00022A  B4D8               	btfsc	status,2,c
   409  00022C  EFF4  F000         	goto	l1172
   410  000230  0A07               	xorlw	7	; case 4
   411  000232  B4D8               	btfsc	status,2,c
   412  000234  EFAE  F000         	goto	l1162
   413  000238  EFAE  F000         	goto	l1162
   414  00023C  EFA3  F000         	goto	start
   415  000240                     __end_of_main:
   416                           	opt callstack 0
   417                           
   418 ;; *************** function _initialisation *****************
   419 ;; Defined at:
   420 ;;		line 28 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   434 ;;      Params:         0       0       0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    2
   441 ;; This function calls:
   442 ;;		_initialisation_ActiverIntAdc
   443 ;;		_initialisation_ActiverInterruptions
   444 ;;		_initialisation_ConfigTmr3
   445 ;;		_initialisation_ConfigurerAdc
   446 ;;		_initialisation_ConfigurerPortDSortie
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text1
   453  00038E                     __ptext1:
   454                           	opt callstack 0
   455  00038E                     _initialisation:
   456                           	opt callstack 0
   457  00038E  FFFF               	dw	65535	; assembler added errata NOP
   458  000390                     
   459                           ;main.c: 30: initialisation_ConfigurerPortDSortie();
   460  000390  ECED  F001         	call	_initialisation_ConfigurerPortDSortie	;wreg free
   461                           
   462                           ;main.c: 31: initialisation_ConfigurerAdc();
   463  000394  ECD4  F001         	call	_initialisation_ConfigurerAdc	;wreg free
   464  000398                     
   465                           ;main.c: 32: initialisation_ActiverIntAdc();
   466  000398  ECE7  F001         	call	_initialisation_ActiverIntAdc	;wreg free
   467  00039C                     
   468                           ;main.c: 35: initialisation_ConfigTmr3();
   469  00039C  ECE1  F001         	call	_initialisation_ConfigTmr3	;wreg free
   470                           
   471                           ;main.c: 36: initialisation_ActiverInterruptions();
   472  0003A0  ECF2  F001         	call	_initialisation_ActiverInterruptions	;wreg free
   473  0003A4  0012               	return		;funcret
   474  0003A6  FFFF               	dw	65535	; errata NOP
   475  0003A8                     __end_of_initialisation:
   476                           	opt callstack 0
   477                           
   478 ;; *************** function _initialisation_ConfigurerPortDSortie *****************
   479 ;; Defined at:
   480 ;;		line 17 in file "initialisation.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;		None
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, status,2
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   494 ;;      Params:         0       0       0       0       0       0       0
   495 ;;      Locals:         0       0       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:         0       0       0       0       0       0       0
   498 ;;Total ram usage:        0 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_initialisation
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509  0003DA                     __ptext2:
   510                           	opt callstack 0
   511  0003DA                     _initialisation_ConfigurerPortDSortie:
   512                           	opt callstack 0
   513  0003DA  FFFF               	dw	65535	; assembler added errata NOP
   514  0003DC                     
   515                           ;initialisation.c: 19: TRISD = 0;
   516  0003DC  0E00               	movlw	0
   517  0003DE  6E95               	movwf	149,c	;volatile
   518  0003E0  0012               	return		;funcret
   519  0003E2  FFFF               	dw	65535	; errata NOP
   520  0003E4                     __end_of_initialisation_ConfigurerPortDSortie:
   521                           	opt callstack 0
   522                           
   523 ;; *************** function _initialisation_ConfigurerAdc *****************
   524 ;; Defined at:
   525 ;;		line 35 in file "initialisation.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, status,2
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   539 ;;      Params:         0       0       0       0       0       0       0
   540 ;;      Locals:         0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0
   542 ;;      Totals:         0       0       0       0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_initialisation
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text3
   554  0003A8                     __ptext3:
   555                           	opt callstack 0
   556  0003A8                     _initialisation_ConfigurerAdc:
   557                           	opt callstack 0
   558  0003A8  FFFF               	dw	65535	; assembler added errata NOP
   559  0003AA                     
   560                           ;initialisation.c: 38: TRISAbits.TRISA0 = 1;
   561  0003AA  8092               	bsf	146,0,c	;volatile
   562  0003AC                     
   563                           ;initialisation.c: 40: ADCON1 = 0;
   564  0003AC  0E00               	movlw	0
   565  0003AE  6EC1               	movwf	193,c	;volatile
   566  0003B0                     
   567                           ;initialisation.c: 42: ADCON0bits.ADON = 1;
   568  0003B0  80C2               	bsf	194,0,c	;volatile
   569  0003B2                     
   570                           ;initialisation.c: 43: ADCON1bits.ADFM = 0;
   571  0003B2  9EC1               	bcf	193,7,c	;volatile
   572                           
   573                           ;initialisation.c: 46: ADCON0bits.ADCS = 0b10;
   574  0003B4  50C2               	movf	194,w,c	;volatile
   575  0003B6  0B3F               	andlw	-193
   576  0003B8  0980               	iorlw	128
   577  0003BA  6EC2               	movwf	194,c	;volatile
   578  0003BC                     
   579                           ;initialisation.c: 47: ADCON1bits.ADCS2 = 1;
   580  0003BC  8CC1               	bsf	193,6,c	;volatile
   581  0003BE  0012               	return		;funcret
   582  0003C0  FFFF               	dw	65535	; errata NOP
   583  0003C2                     __end_of_initialisation_ConfigurerAdc:
   584                           	opt callstack 0
   585                           
   586 ;; *************** function _initialisation_ConfigTmr3 *****************
   587 ;; Defined at:
   588 ;;		line 118 in file "initialisation.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   602 ;;      Params:         0       0       0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_initialisation
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text4
   617  0003C2                     __ptext4:
   618                           	opt callstack 0
   619  0003C2                     _initialisation_ConfigTmr3:
   620                           	opt callstack 0
   621  0003C2  FFFF               	dw	65535	; assembler added errata NOP
   622  0003C4                     
   623                           ;initialisation.c: 121: T3CON = 0;
   624  0003C4  0E00               	movlw	0
   625  0003C6  6EB1               	movwf	177,c	;volatile
   626  0003C8                     
   627                           ;initialisation.c: 122: PIE2bits.TMR3IE = 1;
   628  0003C8  82A0               	bsf	160,1,c	;volatile
   629  0003CA  0012               	return		;funcret
   630  0003CC  FFFF               	dw	65535	; errata NOP
   631  0003CE                     __end_of_initialisation_ConfigTmr3:
   632                           	opt callstack 0
   633                           
   634 ;; *************** function _initialisation_ActiverInterruptions *****************
   635 ;; Defined at:
   636 ;;		line 25 in file "initialisation.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		None
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   650 ;;      Params:         0       0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_initialisation
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text5
   665  0003E4                     __ptext5:
   666                           	opt callstack 0
   667  0003E4                     _initialisation_ActiverInterruptions:
   668                           	opt callstack 0
   669  0003E4  FFFF               	dw	65535	; assembler added errata NOP
   670  0003E6                     
   671                           ;initialisation.c: 27: INTCONbits.PEIE = 1;
   672  0003E6  8CF2               	bsf	242,6,c	;volatile
   673                           
   674                           ;initialisation.c: 28: INTCONbits.GIE = 1;
   675  0003E8  8EF2               	bsf	242,7,c	;volatile
   676  0003EA  0012               	return		;funcret
   677  0003EC  FFFF               	dw	65535	; errata NOP
   678  0003EE                     __end_of_initialisation_ActiverInterruptions:
   679                           	opt callstack 0
   680                           
   681 ;; *************** function _initialisation_ActiverIntAdc *****************
   682 ;; Defined at:
   683 ;;		line 54 in file "initialisation.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		None
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   697 ;;      Params:         0       0       0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_initialisation
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text6
   712  0003CE                     __ptext6:
   713                           	opt callstack 0
   714  0003CE                     _initialisation_ActiverIntAdc:
   715                           	opt callstack 0
   716  0003CE  FFFF               	dw	65535	; assembler added errata NOP
   717  0003D0                     
   718                           ;initialisation.c: 57: PIR1bits.ADIF = 0;
   719  0003D0  9C9E               	bcf	158,6,c	;volatile
   720                           
   721                           ;initialisation.c: 58: PIE1bits.ADIE = 1;
   722  0003D2  8C9D               	bsf	157,6,c	;volatile
   723                           
   724                           ;initialisation.c: 59: ADCON0bits.GO_DONE = 1;
   725  0003D4  84C2               	bsf	194,2,c	;volatile
   726  0003D6  0012               	return		;funcret
   727  0003D8  FFFF               	dw	65535	; errata NOP
   728  0003DA                     __end_of_initialisation_ActiverIntAdc:
   729                           	opt callstack 0
   730                           
   731 ;; *************** function ___wmul *****************
   732 ;; Defined at:
   733 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  multiplier      2    0[BANK0 ] unsigned int 
   736 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  product         2    4[BANK0 ] unsigned int 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  2    0[BANK0 ] unsigned int 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, prodl, prodh
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   748 ;;      Params:         0       4       0       0       0       0       0
   749 ;;      Locals:         0       2       0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0       0       0
   751 ;;      Totals:         0       6       0       0       0       0       0
   752 ;;Total ram usage:        6 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    1
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text7
   763  000362                     __ptext7:
   764                           	opt callstack 0
   765  000362                     ___wmul:
   766                           	opt callstack 0
   767  000362  FFFF               	dw	65535	; assembler added errata NOP
   768  000364  0100               	movlb	0	; () banked
   769  000366  5160               	movf	___wmul@multiplier& (0+255),w,b
   770  000368  0362               	mulwf	___wmul@multiplicand& (0+255),b
   771  00036A  CFF3 F064          	movff	prodl,___wmul@product
   772  00036E  CFF4 F065          	movff	prodh,___wmul@product+1
   773  000372  5160               	movf	___wmul@multiplier& (0+255),w,b
   774  000374  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   775  000376  50F3               	movf	243,w,c
   776  000378  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   777  00037A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
   778  00037C  0362               	mulwf	___wmul@multiplicand& (0+255),b
   779  00037E  50F3               	movf	243,w,c
   780  000380  2765               	addwf	(___wmul@product+1)& (0+255),f,b
   781  000382                     
   782                           ; BSR set to: 0
   783  000382  C064  F060         	movff	___wmul@product,?___wmul
   784  000386  C065  F061         	movff	___wmul@product+1,?___wmul+1
   785  00038A                     
   786                           ; BSR set to: 0
   787  00038A  0012               	return		;funcret
   788  00038C  FFFF               	dw	65535	; errata NOP
   789  00038E                     __end_of___wmul:
   790                           	opt callstack 0
   791                           
   792 ;; *************** function ___awdiv *****************
   793 ;; Defined at:
   794 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  dividend        2    6[BANK0 ] int 
   797 ;;  divisor         2    8[BANK0 ] int 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  quotient        2   12[BANK0 ] int 
   800 ;;  sign            1   11[BANK0 ] unsigned char 
   801 ;;  counter         1   10[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2    6[BANK0 ] int 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
   811 ;;      Params:         0       4       0       0       0       0       0
   812 ;;      Locals:         0       4       0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0       0       0
   814 ;;      Totals:         0       8       0       0       0       0       0
   815 ;;Total ram usage:        8 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    1
   818 ;; This function calls:
   819 ;;		Nothing
   820 ;; This function is called by:
   821 ;;		_main
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           	psect	text8
   826  000240                     __ptext8:
   827                           	opt callstack 0
   828  000240                     ___awdiv:
   829                           	opt callstack 0
   830  000240  FFFF               	dw	65535	; assembler added errata NOP
   831  000242  0E00               	movlw	0
   832  000244  0100               	movlb	0	; () banked
   833  000246  6F6B               	movwf	___awdiv@sign& (0+255),b
   834  000248                     
   835                           ; BSR set to: 0
   836  000248  BF69               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
   837  00024A  EF2C  F001         	goto	u180
   838  00024E  EF29  F001         	goto	u181
   839  000252                     u181:
   840  000252  FFFF               	dw	65535	; assembler added errata NOP
   841  000254  EF33  F001         	goto	l1122
   842  000258                     u180:
   843  000258  FFFF               	dw	65535	; assembler added errata NOP
   844  00025A                     
   845                           ; BSR set to: 0
   846  00025A  6D68               	negf	___awdiv@divisor& (0+255),b
   847  00025C  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
   848  00025E  B0D8               	btfsc	status,0,c
   849  000260  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
   850  000262                     
   851                           ; BSR set to: 0
   852  000262  0E01               	movlw	1
   853  000264  6F6B               	movwf	___awdiv@sign& (0+255),b
   854  000266                     l1122:
   855  000266  FFFF               	dw	65535	; assembler added errata NOP
   856                           
   857                           ; BSR set to: 0
   858  000268  BF67               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
   859  00026A  EF3C  F001         	goto	u190
   860  00026E  EF39  F001         	goto	u191
   861  000272                     u191:
   862  000272  FFFF               	dw	65535	; assembler added errata NOP
   863  000274  EF43  F001         	goto	l1128
   864  000278                     u190:
   865  000278  FFFF               	dw	65535	; assembler added errata NOP
   866  00027A                     
   867                           ; BSR set to: 0
   868  00027A  6D66               	negf	___awdiv@dividend& (0+255),b
   869  00027C  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
   870  00027E  B0D8               	btfsc	status,0,c
   871  000280  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
   872  000282                     
   873                           ; BSR set to: 0
   874  000282  0E01               	movlw	1
   875  000284  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
   876  000286                     l1128:
   877  000286  FFFF               	dw	65535	; assembler added errata NOP
   878                           
   879                           ; BSR set to: 0
   880  000288  0E00               	movlw	0
   881  00028A  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
   882  00028C  0E00               	movlw	0
   883  00028E  6F6C               	movwf	___awdiv@quotient& (0+255),b
   884  000290                     
   885                           ; BSR set to: 0
   886  000290  5168               	movf	___awdiv@divisor& (0+255),w,b
   887  000292  1169               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
   888  000294  B4D8               	btfsc	status,2,c
   889  000296  EF4F  F001         	goto	u201
   890  00029A  EF52  F001         	goto	u200
   891  00029E                     u201:
   892  00029E  FFFF               	dw	65535	; assembler added errata NOP
   893  0002A0  EF83  F001         	goto	l1150
   894  0002A4                     u200:
   895  0002A4  FFFF               	dw	65535	; assembler added errata NOP
   896  0002A6                     
   897                           ; BSR set to: 0
   898  0002A6  0E01               	movlw	1
   899  0002A8  6F6A               	movwf	___awdiv@counter& (0+255),b
   900  0002AA  EF5C  F001         	goto	l1136
   901  0002AE                     l1134:
   902  0002AE  FFFF               	dw	65535	; assembler added errata NOP
   903                           
   904                           ; BSR set to: 0
   905  0002B0  90D8               	bcf	status,0,c
   906  0002B2  3768               	rlcf	___awdiv@divisor& (0+255),f,b
   907  0002B4  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
   908  0002B6  2B6A               	incf	___awdiv@counter& (0+255),f,b
   909  0002B8                     l1136:
   910  0002B8  FFFF               	dw	65535	; assembler added errata NOP
   911                           
   912                           ; BSR set to: 0
   913  0002BA  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
   914  0002BC  EF62  F001         	goto	u211
   915  0002C0  EF65  F001         	goto	u210
   916  0002C4                     u211:
   917  0002C4  FFFF               	dw	65535	; assembler added errata NOP
   918  0002C6  EF57  F001         	goto	l1134
   919  0002CA                     u210:
   920  0002CA  FFFF               	dw	65535	; assembler added errata NOP
   921  0002CC                     l1138:
   922  0002CC  FFFF               	dw	65535	; assembler added errata NOP
   923                           
   924                           ; BSR set to: 0
   925  0002CE  90D8               	bcf	status,0,c
   926  0002D0  376C               	rlcf	___awdiv@quotient& (0+255),f,b
   927  0002D2  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
   928  0002D4                     
   929                           ; BSR set to: 0
   930  0002D4  5168               	movf	___awdiv@divisor& (0+255),w,b
   931  0002D6  5D66               	subwf	___awdiv@dividend& (0+255),w,b
   932  0002D8  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
   933  0002DA  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
   934  0002DC  A0D8               	btfss	status,0,c
   935  0002DE  EF73  F001         	goto	u221
   936  0002E2  EF76  F001         	goto	u220
   937  0002E6                     u221:
   938  0002E6  FFFF               	dw	65535	; assembler added errata NOP
   939  0002E8  EF7C  F001         	goto	l1146
   940  0002EC                     u220:
   941  0002EC  FFFF               	dw	65535	; assembler added errata NOP
   942  0002EE                     
   943                           ; BSR set to: 0
   944  0002EE  5168               	movf	___awdiv@divisor& (0+255),w,b
   945  0002F0  5F66               	subwf	___awdiv@dividend& (0+255),f,b
   946  0002F2  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
   947  0002F4  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
   948  0002F6                     
   949                           ; BSR set to: 0
   950  0002F6  816C               	bsf	___awdiv@quotient& (0+255),0,b
   951  0002F8                     l1146:
   952  0002F8  FFFF               	dw	65535	; assembler added errata NOP
   953                           
   954                           ; BSR set to: 0
   955  0002FA  90D8               	bcf	status,0,c
   956  0002FC  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
   957  0002FE  3368               	rrcf	___awdiv@divisor& (0+255),f,b
   958  000300                     
   959                           ; BSR set to: 0
   960  000300  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
   961  000302  EF66  F001         	goto	l1138
   962  000306                     l1150:
   963  000306  FFFF               	dw	65535	; assembler added errata NOP
   964                           
   965                           ; BSR set to: 0
   966  000308  516B               	movf	___awdiv@sign& (0+255),w,b
   967  00030A  B4D8               	btfsc	status,2,c
   968  00030C  EF8A  F001         	goto	u231
   969  000310  EF8D  F001         	goto	u230
   970  000314                     u231:
   971  000314  FFFF               	dw	65535	; assembler added errata NOP
   972  000316  EF92  F001         	goto	l1154
   973  00031A                     u230:
   974  00031A  FFFF               	dw	65535	; assembler added errata NOP
   975  00031C                     
   976                           ; BSR set to: 0
   977  00031C  6D6C               	negf	___awdiv@quotient& (0+255),b
   978  00031E  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
   979  000320  B0D8               	btfsc	status,0,c
   980  000322  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
   981  000324                     l1154:
   982  000324  FFFF               	dw	65535	; assembler added errata NOP
   983                           
   984                           ; BSR set to: 0
   985  000326  C06C  F066         	movff	___awdiv@quotient,?___awdiv
   986  00032A  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
   987  00032E                     
   988                           ; BSR set to: 0
   989  00032E  0012               	return		;funcret
   990  000330  FFFF               	dw	65535	; errata NOP
   991  000332                     __end_of___awdiv:
   992                           	opt callstack 0
   993                           
   994 ;; *************** function _high_isr *****************
   995 ;; Defined at:
   996 ;;		line 27 in file "interrupts.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK2   BANK3   BANK4   BANK1   BANK5
  1010 ;;      Params:         0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		Interrupt level 2
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	intcode
  1024  000008                     __pintcode:
  1025                           	opt callstack 0
  1026  000008                     _high_isr:
  1027                           	opt callstack 0
  1028  000008  FFFF               	dw	65535	; assembler added errata NOP
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;incstack = 0
  1032  00000A  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1033  00000C                     
  1034                           ;interrupts.c: 29: static unsigned char dutyWiper = 9;;interrupts.c: 30: static bool sen
      +                          sUp = 1;;interrupts.c: 31: static int compte = 0;;interrupts.c: 34: if (PIR1bits.ADIF)
  1035  00000C  AC9E               	btfss	158,6,c	;volatile
  1036  00000E  EF0B  F000         	goto	i2u25_41
  1037  000012  EF0E  F000         	goto	i2u25_40
  1038  000016                     i2u25_41:
  1039  000016  FFFF               	dw	65535	; assembler added errata NOP
  1040  000018  EF15  F000         	goto	i2l71
  1041  00001C                     i2u25_40:
  1042  00001C  FFFF               	dw	65535	; assembler added errata NOP
  1043  00001E                     
  1044                           ;interrupts.c: 35: {;interrupts.c: 36: g_resAN = ADRESH;
  1045  00001E  CFC4 F076          	movff	4036,_g_resAN	;volatile
  1046  000022  0100               	movlb	0	; force () banked
  1047  000024  6B77               	clrf	(_g_resAN+1)& (0+255),b
  1048                           
  1049                           ;interrupts.c: 38: PIR1bits.ADIF = 0;
  1050  000026  9C9E               	bcf	158,6,c	;volatile
  1051                           
  1052                           ;interrupts.c: 39: ADCON0bits.GO_DONE = 1;
  1053  000028  84C2               	bsf	194,2,c	;volatile
  1054  00002A                     i2l71:
  1055  00002A  FFFF               	dw	65535	; assembler added errata NOP
  1056                           
  1057                           ;interrupts.c: 40: };interrupts.c: 43: if (INTCONbits.TMR0IF)
  1058  00002C  A4F2               	btfss	242,2,c	;volatile
  1059  00002E  EF1B  F000         	goto	i2u26_41
  1060  000032  EF1E  F000         	goto	i2u26_40
  1061  000036                     i2u26_41:
  1062  000036  FFFF               	dw	65535	; assembler added errata NOP
  1063  000038  EF9E  F000         	goto	i2l80
  1064  00003C                     i2u26_40:
  1065  00003C  FFFF               	dw	65535	; assembler added errata NOP
  1066  00003E                     
  1067                           ;interrupts.c: 44: {;interrupts.c: 46: CCPR1L = dutyWiper;
  1068  00003E  C079  FFBE         	movff	high_isr@dutyWiper,4030	;volatile
  1069  000042                     
  1070                           ;interrupts.c: 47: if (sensUp)
  1071  000042  0100               	movlb	0	; force () banked
  1072  000044  5178               	movf	high_isr@sensUp& (0+255),w,b
  1073  000046  B4D8               	btfsc	status,2,c
  1074  000048  EF28  F000         	goto	i2u27_41
  1075  00004C  EF2B  F000         	goto	i2u27_40
  1076  000050                     i2u27_41:
  1077  000050  FFFF               	dw	65535	; assembler added errata NOP
  1078  000052  EF3E  F000         	goto	i2l1198
  1079  000056                     i2u27_40:
  1080  000056  FFFF               	dw	65535	; assembler added errata NOP
  1081  000058                     
  1082                           ; BSR set to: 0
  1083                           ;interrupts.c: 48: {;interrupts.c: 49: dutyWiper++;
  1084  000058  0100               	movlb	0	; force () banked
  1085  00005A  2B79               	incf	high_isr@dutyWiper& (0+255),f,b
  1086  00005C                     
  1087                           ; BSR set to: 0
  1088                           ;interrupts.c: 50: if (dutyWiper >= 0x25)
  1089  00005C  0E24               	movlw	36
  1090  00005E  0100               	movlb	0	; force () banked
  1091  000060  6579               	cpfsgt	high_isr@dutyWiper& (0+255),b
  1092  000062  EF35  F000         	goto	i2u28_41
  1093  000066  EF38  F000         	goto	i2u28_40
  1094  00006A                     i2u28_41:
  1095  00006A  FFFF               	dw	65535	; assembler added errata NOP
  1096  00006C  EF62  F000         	goto	i2l1208
  1097  000070                     i2u28_40:
  1098  000070  FFFF               	dw	65535	; assembler added errata NOP
  1099  000072                     
  1100                           ; BSR set to: 0
  1101                           ;interrupts.c: 51: sensUp = 0;
  1102  000072  0E00               	movlw	0
  1103  000074  0100               	movlb	0	; force () banked
  1104  000076  6F78               	movwf	high_isr@sensUp& (0+255),b
  1105  000078  EF62  F000         	goto	i2l1208
  1106  00007C                     i2l1198:
  1107  00007C  FFFF               	dw	65535	; assembler added errata NOP
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;interrupts.c: 53: else;interrupts.c: 54: {;interrupts.c: 55: dutyWiper--;
  1111  00007E  0100               	movlb	0	; force () banked
  1112  000080  0779               	decf	high_isr@dutyWiper& (0+255),f,b
  1113  000082                     
  1114                           ; BSR set to: 0
  1115                           ;interrupts.c: 56: if (dutyWiper <= 9)
  1116  000082  0E0A               	movlw	10
  1117  000084  0100               	movlb	0	; force () banked
  1118  000086  6179               	cpfslt	high_isr@dutyWiper& (0+255),b
  1119  000088  EF48  F000         	goto	i2u29_41
  1120  00008C  EF4B  F000         	goto	i2u29_40
  1121  000090                     i2u29_41:
  1122  000090  FFFF               	dw	65535	; assembler added errata NOP
  1123  000092  EF62  F000         	goto	i2l1208
  1124  000096                     i2u29_40:
  1125  000096  FFFF               	dw	65535	; assembler added errata NOP
  1126  000098                     
  1127                           ; BSR set to: 0
  1128                           ;interrupts.c: 57: {;interrupts.c: 58: if (g_etat >= enumDelaiUn )
  1129  000098  0100               	movlb	0	; force () banked
  1130  00009A  BF75               	btfsc	(_g_etat+1)& (0+255),7,b
  1131  00009C  EF59  F000         	goto	i2u30_41
  1132  0000A0  5175               	movf	(_g_etat+1)& (0+255),w,b
  1133  0000A2  E10A               	bnz	i2u30_40
  1134  0000A4  0E04               	movlw	4
  1135  0000A6  5D74               	subwf	_g_etat& (0+255),w,b
  1136  0000A8  A0D8               	btfss	status,0,c
  1137  0000AA  EF59  F000         	goto	i2u30_41
  1138  0000AE  EF5C  F000         	goto	i2u30_40
  1139  0000B2                     i2u30_41:
  1140  0000B2  FFFF               	dw	65535	; assembler added errata NOP
  1141  0000B4  EF5E  F000         	goto	i2l1206
  1142  0000B8                     i2u30_40:
  1143  0000B8  FFFF               	dw	65535	; assembler added errata NOP
  1144  0000BA                     
  1145                           ; BSR set to: 0
  1146                           ;interrupts.c: 59: {;interrupts.c: 60: T0CONbits.TMR0ON = 0;
  1147  0000BA  9ED5               	bcf	213,7,c	;volatile
  1148  0000BC                     i2l1206:
  1149  0000BC  FFFF               	dw	65535	; assembler added errata NOP
  1150                           
  1151                           ; BSR set to: 0
  1152                           ;interrupts.c: 61: };interrupts.c: 62: sensUp = 1;
  1153  0000BE  0E01               	movlw	1
  1154  0000C0  0100               	movlb	0	; force () banked
  1155  0000C2  6F78               	movwf	high_isr@sensUp& (0+255),b
  1156  0000C4                     i2l1208:
  1157  0000C4  FFFF               	dw	65535	; assembler added errata NOP
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;interrupts.c: 63: };interrupts.c: 64: };interrupts.c: 66: INTCONbits.TMR0IF = 0;
  1161  0000C6  94F2               	bcf	242,2,c	;volatile
  1162                           
  1163                           ;interrupts.c: 67: TMR0H = 0xE2;
  1164  0000C8  0EE2               	movlw	226
  1165  0000CA  6ED7               	movwf	215,c	;volatile
  1166                           
  1167                           ;interrupts.c: 68: TMR0L = 0xB4;
  1168  0000CC  0EB4               	movlw	180
  1169  0000CE  6ED6               	movwf	214,c	;volatile
  1170  0000D0                     
  1171                           ; BSR set to: 0
  1172                           ;interrupts.c: 72: if (PIR2bits.TMR3IF)
  1173  0000D0  A2A1               	btfss	161,1,c	;volatile
  1174  0000D2  EF6D  F000         	goto	i2u31_41
  1175  0000D6  EF70  F000         	goto	i2u31_40
  1176  0000DA                     i2u31_41:
  1177  0000DA  FFFF               	dw	65535	; assembler added errata NOP
  1178  0000DC  EF9E  F000         	goto	i2l80
  1179  0000E0                     i2u31_40:
  1180  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  1181  0000E2                     
  1182                           ; BSR set to: 0
  1183                           ;interrupts.c: 73: {;interrupts.c: 75: compte++;
  1184  0000E2  0100               	movlb	0	; force () banked
  1185  0000E4  4B72               	infsnz	high_isr@compte& (0+255),f,b
  1186  0000E6  2B73               	incf	(high_isr@compte+1)& (0+255),f,b
  1187  0000E8                     
  1188                           ; BSR set to: 0
  1189                           ;interrupts.c: 77: if (g_etat == enumDelaiUn && compte > 10)
  1190  0000E8  0E04               	movlw	4
  1191  0000EA  0100               	movlb	0	; force () banked
  1192  0000EC  1974               	xorwf	_g_etat& (0+255),w,b
  1193  0000EE  1175               	iorwf	(_g_etat+1)& (0+255),w,b
  1194  0000F0  A4D8               	btfss	status,2,c
  1195  0000F2  EF7D  F000         	goto	i2u32_41
  1196  0000F6  EF80  F000         	goto	i2u32_40
  1197  0000FA                     i2u32_41:
  1198  0000FA  FFFF               	dw	65535	; assembler added errata NOP
  1199  0000FC  EF9C  F000         	goto	i2l1222
  1200  000100                     i2u32_40:
  1201  000100  FFFF               	dw	65535	; assembler added errata NOP
  1202  000102                     
  1203                           ; BSR set to: 0
  1204  000102  0100               	movlb	0	; force () banked
  1205  000104  BF73               	btfsc	(high_isr@compte+1)& (0+255),7,b
  1206  000106  EF8E  F000         	goto	i2u33_41
  1207  00010A  5173               	movf	(high_isr@compte+1)& (0+255),w,b
  1208  00010C  E10A               	bnz	i2u33_40
  1209  00010E  0E0B               	movlw	11
  1210  000110  5D72               	subwf	high_isr@compte& (0+255),w,b
  1211  000112  A0D8               	btfss	status,0,c
  1212  000114  EF8E  F000         	goto	i2u33_41
  1213  000118  EF91  F000         	goto	i2u33_40
  1214  00011C                     i2u33_41:
  1215  00011C  FFFF               	dw	65535	; assembler added errata NOP
  1216  00011E  EF9C  F000         	goto	i2l1222
  1217  000122                     i2u33_40:
  1218  000122  FFFF               	dw	65535	; assembler added errata NOP
  1219  000124                     
  1220                           ; BSR set to: 0
  1221                           ;interrupts.c: 78: {;interrupts.c: 79: T0CONbits.T0PS = 1;
  1222  000124  50D5               	movf	213,w,c	;volatile
  1223  000126  0BF8               	andlw	-8
  1224  000128  0901               	iorlw	1
  1225  00012A  6ED5               	movwf	213,c	;volatile
  1226  00012C                     
  1227                           ; BSR set to: 0
  1228                           ;interrupts.c: 80: T0CONbits.TMR0ON = 1;
  1229  00012C  8ED5               	bsf	213,7,c	;volatile
  1230                           
  1231                           ;interrupts.c: 81: compte = 0;
  1232  00012E  0E00               	movlw	0
  1233  000130  0100               	movlb	0	; force () banked
  1234  000132  6F73               	movwf	(high_isr@compte+1)& (0+255),b
  1235  000134  0E00               	movlw	0
  1236  000136  6F72               	movwf	high_isr@compte& (0+255),b
  1237  000138                     i2l1222:
  1238  000138  FFFF               	dw	65535	; assembler added errata NOP
  1239                           
  1240                           ; BSR set to: 0
  1241                           ;interrupts.c: 82: };interrupts.c: 84: PIR2bits.TMR3IF = 0;
  1242  00013A  92A1               	bcf	161,1,c	;volatile
  1243  00013C                     i2l80:
  1244  00013C  FFFF               	dw	65535	; assembler added errata NOP
  1245  00013E  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1246  000140  0011               	retfie		f
  1247  000142  FFFF               	dw	65535	; errata NOP
  1248  000144                     __end_of_high_isr:
  1249                           	opt callstack 0
  1250  000144  FFFF               	dw	65535	; assembler added errata NOP
  1251                           
  1252                           	psect	param0
  1253  0000                     
  1254                           	psect	temp
  1255  000001                     btemp:
  1256                           	opt callstack 0
  1257  000001                     	ds	1
  1258  0000                     int$flags	set	btemp
  1259  0000                     wtemp8	set	btemp+1
  1260  0000                     ttemp5	set	btemp+1
  1261  0000                     ttemp6	set	btemp+4
  1262  0000                     ttemp7	set	btemp+8
  1263                           tosu	equ	0xFFF
  1264                           tosh	equ	0xFFE
  1265                           tosl	equ	0xFFD
  1266                           stkptr	equ	0xFFC
  1267                           pclatu	equ	0xFFB
  1268                           pclath	equ	0xFFA
  1269                           pcl	equ	0xFF9
  1270                           tblptru	equ	0xFF8
  1271                           tblptrh	equ	0xFF7
  1272                           tblptrl	equ	0xFF6
  1273                           tablat	equ	0xFF5
  1274                           prodh	equ	0xFF4
  1275                           prodl	equ	0xFF3
  1276                           indf0	equ	0xFEF
  1277                           postinc0	equ	0xFEE
  1278                           postdec0	equ	0xFED
  1279                           preinc0	equ	0xFEC
  1280                           plusw0	equ	0xFEB
  1281                           fsr0h	equ	0xFEA
  1282                           fsr0l	equ	0xFE9
  1283                           wreg	equ	0xFE8
  1284                           indf1	equ	0xFE7
  1285                           postinc1	equ	0xFE6
  1286                           postdec1	equ	0xFE5
  1287                           preinc1	equ	0xFE4
  1288                           plusw1	equ	0xFE3
  1289                           fsr1h	equ	0xFE2
  1290                           fsr1l	equ	0xFE1
  1291                           bsr	equ	0xFE0
  1292                           indf2	equ	0xFDF
  1293                           postinc2	equ	0xFDE
  1294                           postdec2	equ	0xFDD
  1295                           preinc2	equ	0xFDC
  1296                           plusw2	equ	0xFDB
  1297                           fsr2h	equ	0xFDA
  1298                           fsr2l	equ	0xFD9
  1299                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     18      26
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK1           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___awdiv
    ___awdiv->___wmul

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     765
                                             14 BANK0      4     4      0
                            ___awdiv
                             ___wmul
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
       _initialisation_ActiverIntAdc
_initialisation_ActiverInterruptions
          _initialisation_ConfigTmr3
       _initialisation_ConfigurerAdc
_initialisation_ConfigurerPortDSorti
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerPortDSortie                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigurerAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ConfigTmr3                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverInterruptions                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initialisation_ActiverIntAdc                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___wmul
   _initialisation
     _initialisation_ActiverIntAdc
     _initialisation_ActiverInterruptions
     _initialisation_ConfigTmr3
     _initialisation_ConfigurerAdc
     _initialisation_ConfigurerPortDSortie

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0       6        0.0%
BITBANK3           100      0       0      12        0.0%
BANK3              100      0       0       5        0.0%
BITBANK2           100      0       0      11        0.0%
BANK2              100      0       0       4        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0      10        0.0%
BITBANK5            EF      0       0      14        0.0%
BANK5               EF      0       0      15        0.0%
BITBANK0            A0      0       0       8        0.0%
BANK0               A0     12      1A       3       16.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A       7        0.0%
DATA                 0      0      1A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 14:27:39 2020

                            __end_of_initialisation_ActiverIntAdc 03DA  
                           __size_of_initialisation_ActiverIntAdc 000C  
                                    _initialisation_ActiverIntAdc 03CE  
                                                              l21 03A4  
                                                              l30 01C4  
                                                              l27 0186  
                                                    ___awdiv@sign 006B  
                                             ___wmul@multiplicand 0062  
                                                    __CFG_CP0$OFF 000000  
                                                    __CFG_CP1$OFF 000000  
                                                    __CFG_CP2$OFF 000000  
                                                    __CFG_CP3$OFF 000000  
                                                     __CFG_OSC$HS 000000  
                                                             l122 03EA  
                                                             l140 03CA  
                                                             l125 03BE  
                                                             l143 038A  
                                                             l119 03E0  
                                                             l128 03D6  
                                                             l374 032E  
                                                    __CFG_CPB$OFF 000000  
                                                             u200 02A4  
                                                             u201 029E  
                                                             u210 02CA  
                                                             u211 02C4  
                                                             u220 02EC  
                                                             u221 02E6  
                                                             u230 031A  
                                                             u231 0314  
                                                             u240 017E  
                                                             u241 0178  
                                                             u180 0258  
                                                             u181 0252  
                                                             u190 0278  
                                                             _PR2 000FCB  
                                                             u191 0272  
                                                    __CFG_CPD$OFF 000000  
                                                    __CFG_BOR$OFF 000000  
                                     ??_initialisation_ConfigTmr3 0060  
                                                    __CFG_BORV$25 000000  
                                                    __CFG_LVP$OFF 000000  
                                                    __CFG_WDT$OFF 000000  
                                                            l1100 03E6  
                                                            l1110 0382  
                                                            l1102 0390  
                                                            l1120 0262  
                                                            l1104 0398  
                                                            l1130 0290  
                                                            l1122 0266  
                                                            l1114 0242  
                                                            l1106 039C  
                                                            l1140 02D4  
                                                            l1132 02A6  
                                                            l1124 027A  
                                                            l1116 0248  
                                                            l1108 0364  
                                                            l1142 02EE  
                                                            l1134 02AE  
                                                            l1150 0306  
                                                            l1126 0282  
                                                            l1118 025A  
                                                            l1152 031C  
                                                            l1144 02F6  
                                                            l1136 02B8  
                                                            l1128 0286  
                                                            l1160 0158  
                                                            l1154 0324  
                                                            l1146 02F8  
                                                            l1138 02CC  
                                                            l1090 03B2  
                                                            l1082 03DC  
                                                            l1170 01DA  
                                                            l1162 015C  
                                                            l1148 0300  
                                                            l1092 03BC  
                                                            l1084 03AA  
                                                            l1172 01E8  
                                                            l1164 0180  
                                                            l1094 03D0  
                                                            l1086 03AC  
                                                            l1254 020C  
                                                            l1166 018A  
                                                            l1158 014A  
                                                            l1096 03C4  
                                                            l1088 03B0  
                                                            l1168 01CC  
                                                            l1176 01F2  
                                                            l1098 03C8  
                                                            i2l71 002A  
                                                            i2l80 013C  
                                                ??_initialisation 0060  
                                                            _main 014A  
                                                            btemp 0001  
                                                            prodh 000FF4  
                                                            prodl 000FF3  
                                                            start 0146  
                                                    ___param_bank 000000  
                                                   __CFG_OSCS$OFF 000000  
                                   ?_initialisation_ActiverIntAdc 0060  
                                                           ?_main 0060  
                                                 __end_of___awdiv 0332  
                                                 ___awdiv@divisor 0068  
                                                           _T3CON 000FB1  
                                                 ___awdiv@counter 006A  
                                                           _TMR0H 000FD7  
                                                           _TMR0L 000FD6  
                                                           _TRISD 000F95  
                                                   __CFG_PWRT$OFF 000000  
                                                   __CFG_WRT0$OFF 000000  
                                                   __CFG_WRT1$OFF 000000  
                                                   __CFG_WRT2$OFF 000000  
                                                   __CFG_WRT3$OFF 000000  
                                                  __CFG_EBTR0$OFF 000000  
                                                  __CFG_EBTR1$OFF 000000  
                                                  __CFG_EBTR2$OFF 000000  
                                                  __CFG_EBTR3$OFF 000000  
                                                   __CFG_STVR$OFF 000000  
                                                   __CFG_WRTB$OFF 000000  
                                                   __CFG_WRTC$OFF 000000  
                                                   __CFG_WRTD$OFF 000000  
                                                  __CFG_EBTRB$OFF 000000  
                                                           tablat 000FF5  
                                                           ttemp5 0002  
                                                           ttemp6 0005  
                                                           ttemp7 0009  
                                                           status 000FD8  
                                                           wtemp8 0002  
                                       _initialisation_ConfigTmr3 03C2  
                                                 __initialization 0332  
                                                    __end_of_main 0240  
                                                          ??_main 006E  
                                                   __activetblptr 000003  
                                                          _ADCON1 000FC1  
                                                          _ADRESH 000FC4  
                                                          _CCPR1L 000FBE  
                                                ___awdiv@dividend 0066  
                                                          i2l1200 0082  
                                                          i2l1210 00D0  
                                                          i2l1202 0098  
                                                          i2l1220 012C  
                                                          i2l1212 00E2  
                                                          i2l1204 00BA  
                                                          i2l1222 0138  
                                                          i2l1214 00E8  
                                                          i2l1206 00BC  
                                                          i2l1216 0102  
                                                          i2l1208 00C4  
                                                          i2l1218 0124  
                                                          i2l1190 0042  
                                                          i2l1192 0058  
                                                          i2l1184 000C  
                                                          i2l1194 005C  
                                                          i2l1186 001E  
                                                          i2l1196 0072  
                                                          i2l1188 003E  
                                                          i2l1198 007C  
                                                  __CFG_WDTPS$128 000000  
                                                   main@dutyWiper 0070  
                                                __end_of_high_isr 0144  
                                                          ___wmul 0362  
                                                       ??___awdiv 006A  
                                                          _g_etat 0074  
                                                ___awdiv@quotient 006C  
                                  ??_initialisation_ActiverIntAdc 0060  
                                                          tblptrh 000FF7  
                                                          tblptrl 000FF6  
                                                          tblptru 000FF8  
                    __end_of_initialisation_ConfigurerPortDSortie 03E4  
                   __size_of_initialisation_ConfigurerPortDSortie 000A  
                          ??_initialisation_ConfigurerPortDSortie 0060  
                           ?_initialisation_ConfigurerPortDSortie 0060  
                            _initialisation_ConfigurerPortDSortie 03DA  
                                                      __accesstop 0060  
                                         __end_of__initialization 0358  
                                                   ___rparam_used 000000  
                                                    __pidataBANK0 03EE  
                                                  high_isr@compte 0072  
                                                  high_isr@sensUp 0078  
                                               high_isr@dutyWiper 0079  
                                                      __pbssBANK0 0072  
                                                         ?___wmul 0060  
                              __size_of_initialisation_ConfigTmr3 000C  
                                                         i2u30_40 00B8  
                                                         i2u30_41 00B2  
                                                         i2u31_40 00E0  
                                                         i2u31_41 00DA  
                                                         i2u32_40 0100  
                                                         i2u32_41 00FA  
                                                         i2u33_40 0122  
                                                         i2u25_40 001C  
                                                         i2u33_41 011C  
                                                         i2u25_41 0016  
                                                         i2u26_40 003C  
                                                         i2u26_41 0036  
                                                         i2u27_40 0056  
                                                         i2u27_41 0050  
                                                         i2u28_40 0070  
                                                         i2u28_41 006A  
                                                         i2u29_40 0096  
                                                         i2u29_41 0090  
                                                       ?_high_isr 0060  
                            __end_of_initialisation_ConfigurerAdc 03C2  
                           __size_of_initialisation_ConfigurerAdc 001A  
                                    _initialisation_ConfigurerAdc 03A8  
                                                         __Hparam 0000  
                                                         __Lparam 0000  
                                                         ___awdiv 0240  
                                                 __size_of___wmul 002C  
                                                         __pcinit 0332  
                                                         _g_resAN 0076  
                                                         __ramtop 0600  
                                                         __ptext0 014A  
                                                         __ptext1 038E  
                                                         __ptext2 03DA  
                                                         __ptext3 03A8  
                                                         __ptext4 03C2  
                                                         __ptext5 03E4  
                                                         __ptext6 03CE  
                                                         __ptext7 0362  
                                                         __ptext8 0240  
                               __end_of_initialisation_ConfigTmr3 03CE  
                                                       _T0CONbits 000FD5  
                                                       _T2CONbits 000FCA  
                                                      ??_high_isr 0060  
                                            end_of_initialization 0358  
                                   ?_initialisation_ConfigurerAdc 0060  
                                         __size_of_initialisation 001A  
                                                       _PORTDbits 000F83  
                                                       _TRISAbits 000F92  
                                                       _TRISCbits 000F94  
                                                     _CCP1CONbits 000FBD  
                                                      main@sensUp 0071  
                                                  __end_of___wmul 038E  
                                             start_initialization 0332  
                                                        ??___wmul 0064  
                                                     __pdataBANK0 0078  
                                  ??_initialisation_ConfigurerAdc 0060  
                     __end_of_initialisation_ActiverInterruptions 03EE  
                    __size_of_initialisation_ActiverInterruptions 000A  
                           ??_initialisation_ActiverInterruptions 0060  
                            ?_initialisation_ActiverInterruptions 0060  
                             _initialisation_ActiverInterruptions 03E4  
                                                   __pcstackBANK0 0060  
                                               __size_of_high_isr 013C  
                                                       __pintcode 0008  
                                                  _initialisation 038E  
                                                        ?___awdiv 0066  
                                                  ___wmul@product 0064  
                                                        _PIE1bits 000F9D  
                                                        _PIE2bits 000FA0  
                                          __end_of_initialisation 03A8  
                                                        _PIR1bits 000F9E  
                                                        _PIR2bits 000FA1  
                                                      _ADCON0bits 000FC2  
                                                      _ADCON1bits 000FC1  
                                               ___wmul@multiplier 0060  
                                      ?_initialisation_ConfigTmr3 0060  
                                                        __Hparam0 0000  
                                                        __Lparam0 0000  
                                                 ?_initialisation 0060  
                                                __size_of___awdiv 00F2  
                                                        _high_isr 0008  
                                                   __size_of_main 00F6  
                                                        int$flags 0001  
                                                      _INTCONbits 000FF2  
                                                        intlevel2 03F0  
