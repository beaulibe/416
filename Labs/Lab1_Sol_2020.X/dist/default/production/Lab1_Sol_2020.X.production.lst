

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jan 13 17:01:22 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F458 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataBANK0
    68  000A62                     __pidataBANK0:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for _matCGRAM
    72  000A62  08                 	db	8
    73  000A63  04                 	db	4
    74  000A64  04                 	db	4
    75  000A65  0A                 	db	10
    76  000A66  11                 	db	17
    77  000A67  1F                 	db	31
    78  000A68  11                 	db	17
    79  000A69  00                 	db	0
    80  000A6A  02                 	db	2
    81  000A6B  04                 	db	4
    82  000A6C  0E                 	db	14
    83  000A6D  11                 	db	17
    84  000A6E  1F                 	db	31
    85  000A6F  10                 	db	16
    86  000A70  0E                 	db	14
    87  000A71  00                 	db	0
    88  000A72  02                 	db	2
    89  000A73  04                 	db	4
    90  000A74  1F                 	db	31
    91  000A75  10                 	db	16
    92  000A76  1E                 	db	30
    93  000A77  10                 	db	16
    94  000A78  1F                 	db	31
    95  000A79  00                 	db	0
    96  000A7A  08                 	db	8
    97  000A7B  04                 	db	4
    98  000A7C  0E                 	db	14
    99  000A7D  11                 	db	17
   100  000A7E  1F                 	db	31
   101  000A7F  10                 	db	16
   102  000A80  0E                 	db	14
   103  000A81  00                 	db	0
   104  000A82  08                 	db	8
   105  000A83  04                 	db	4
   106  000A84  1F                 	db	31
   107  000A85  10                 	db	16
   108  000A86  1E                 	db	30
   109  000A87  10                 	db	16
   110  000A88  1F                 	db	31
   111  000A89  00                 	db	0
   112  000A8A  04                 	db	4
   113  000A8B  0A                 	db	10
   114  000A8C  0E                 	db	14
   115  000A8D  11                 	db	17
   116  000A8E  1F                 	db	31
   117  000A8F  10                 	db	16
   118  000A90  0E                 	db	14
   119  000A91  00                 	db	0
   120  000A92  08                 	db	8
   121  000A93  04                 	db	4
   122  000A94  0E                 	db	14
   123  000A95  01                 	db	1
   124  000A96  0F                 	db	15
   125  000A97  11                 	db	17
   126  000A98  0F                 	db	15
   127  000A99  00                 	db	0
   128  000A9A  04                 	db	4
   129  000A9B  0A                 	db	10
   130  000A9C  0E                 	db	14
   131  000A9D  01                 	db	1
   132  000A9E  0F                 	db	15
   133  000A9F  11                 	db	17
   134  000AA0  0F                 	db	15
   135  000AA1  00                 	db	0
   136  0000                     _INTCON2bits	set	4081
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISD	set	3989
   139  0000                     _CMCON	set	4020
   140  0000                     _TRISBbits	set	3987
   141  0000                     _ADCON1	set	4033
   142  0000                     _PORTCbits	set	3970
   143  0000                     _PORTDbits	set	3971
   144  0000                     _PORTD	set	3971
   145  0000                     _INTCONbits	set	4082
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISA	set	3986
   148  0000                     _PORTBbits	set	3969
   149  0000                     _PORTAbits	set	3968
   150  0000                     _PORTA	set	3968
   151                           
   152                           	psect	smallconst
   153  000600                     __psmallconst:
   154                           	opt callstack 0
   155  000600  00                 	db	0
   156  000601                     STR_1:
   157  000601  4C                 	db	76	;'L'
   158  000602  61                 	db	97	;'a'
   159  000603  62                 	db	98	;'b'
   160  000604  31                 	db	49	;'1'
   161  000605  20                 	db	32
   162  000606  42                 	db	66	;'B'
   163  000607  65                 	db	101	;'e'
   164  000608  6E                 	db	110	;'n'
   165  000609  6F                 	db	111	;'o'
   166  00060A  69                 	db	105	;'i'
   167  00060B  74                 	db	116	;'t'
   168  00060C  20                 	db	32
   169  00060D  32                 	db	50	;'2'
   170  00060E  30                 	db	48	;'0'
   171  00060F  32                 	db	50	;'2'
   172  000610  30                 	db	48	;'0'
   173  000611  00                 	db	0
   174                           
   175                           ; #config settings
   176  000612  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           	psect	cinit
   179  000AA2                     __pcinit:
   180                           	opt callstack 0
   181  000AA2                     start_initialization:
   182                           	opt callstack 0
   183  000AA2                     __initialization:
   184                           	opt callstack 0
   185                           
   186                           ; Initialize objects allocated to BANK0 (64 bytes)
   187                           ; load TBLPTR registers with __pidataBANK0
   188  000AA2  0E62               	movlw	low __pidataBANK0
   189  000AA4  6EF6               	movwf	tblptrl,c
   190  000AA6  0E0A               	movlw	high __pidataBANK0
   191  000AA8  6EF7               	movwf	tblptrh,c
   192  000AAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   193  000AAC  6EF8               	movwf	tblptru,c
   194  000AAE  EE00  F060         	lfsr	0,__pdataBANK0
   195  000AB2  EE10 F040          	lfsr	1,64
   196  000AB6                     copy_data0:
   197  000AB6  0009               	tblrd		*+
   198  000AB8  CFF5 FFEE          	movff	tablat,postinc0
   199  000ABC  50E5               	movf	postdec1,w,c
   200  000ABE  50E1               	movf	fsr1l,w,c
   201  000AC0  E1FA               	bnz	copy_data0
   202                           
   203                           ; Clear objects allocated to COMRAM (12 bytes)
   204  000AC2  EE00  F014         	lfsr	0,__pbssCOMRAM
   205  000AC6  0E0C               	movlw	12
   206  000AC8                     clear_0:
   207  000AC8  6AEE               	clrf	postinc0,c
   208  000ACA  06E8               	decf	wreg,f,c
   209  000ACC  E1FD               	bnz	clear_0
   210  000ACE                     end_of_initialization:
   211                           	opt callstack 0
   212  000ACE                     __end_of__initialization:
   213                           	opt callstack 0
   214  000ACE  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   215  000AD0  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   216  000AD2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   217  000AD4  6EF8               	movwf	tblptru,c
   218  000AD6  0100               	movlb	0
   219  000AD8  EF52  F003         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	bssCOMRAM
   222  000014                     __pbssCOMRAM:
   223                           	opt callstack 0
   224  000014                     _g_temponClavier:
   225                           	opt callstack 0
   226  000014                     	ds	10
   227  00001E                     _g_nombreCar:
   228                           	opt callstack 0
   229  00001E                     	ds	2
   230                           
   231                           	psect	dataBANK0
   232  000060                     __pdataBANK0:
   233                           	opt callstack 0
   234  000060                     _matCGRAM:
   235                           	opt callstack 0
   236  000060                     	ds	64
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	opt callstack 0
   241  000001                     ??_high_isr:
   242  000001                     
   243                           ; 1 bytes @ 0x0
   244  000001                     	ds	2
   245  000003                     high_isr@nLecture:
   246                           	opt callstack 0
   247                           
   248                           ; 1 bytes @ 0x2
   249  000003                     	ds	1
   250  000004                     ??_low_isr:
   251                           
   252                           ; 1 bytes @ 0x3
   253  000004                     	ds	1
   254  000005                     ??_lcd_ecrireDonnees:
   255  000005                     ??_lcd_busy:
   256                           
   257                           ; 1 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     lcd_ecrireDonnees@donnee:
   260                           	opt callstack 0
   261  000006                     lcd_busy@adresse:
   262                           	opt callstack 0
   263                           
   264                           ; 1 bytes @ 0x5
   265  000006                     	ds	1
   266  000007                     ??_lcd_wrCom:
   267  000007                     ??_lcd_resetSequence:
   268  000007                     lcd_wrData@caractere:
   269                           	opt callstack 0
   270                           
   271                           ; 1 bytes @ 0x6
   272  000007                     	ds	1
   273  000008                     lcd_wrCom@commande:
   274                           	opt callstack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277  000008                     	ds	1
   278  000009                     ??_lcd_initCGRam:
   279  000009                     ??_lcd_ecritChar:
   280                           
   281                           ; 1 bytes @ 0x8
   282  000009                     	ds	2
   283  00000B                     lcd_ecritChar@car:
   284                           	opt callstack 0
   285  00000B                     lcd_initCGRam@i:
   286                           	opt callstack 0
   287                           
   288                           ; 1 bytes @ 0xA
   289  00000B                     	ds	1
   290  00000C                     lcd_ecritChar@posRam:
   291                           	opt callstack 0
   292  00000C                     lcd_initCGRam@j:
   293                           	opt callstack 0
   294                           
   295                           ; 1 bytes @ 0xB
   296  00000C                     	ds	1
   297  00000D                     lcd_putMessage@chaine:
   298                           	opt callstack 0
   299                           
   300                           ; 2 bytes @ 0xC
   301  00000D                     	ds	2
   302  00000F                     ??_lcd_putMessage:
   303                           
   304                           ; 1 bytes @ 0xE
   305  00000F                     	ds	2
   306  000011                     lcd_putMessage@j:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x10
   310  000011                     	ds	1
   311  000012                     ??_main:
   312                           
   313                           ; 1 bytes @ 0x11
   314  000012                     	ds	2
   315                           
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 32 in file "main.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   335 ;;      Params:         0       0       0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0
   337 ;;      Temps:          2       0       0       0       0       0       0
   338 ;;      Totals:         2       0       0       0       0       0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; Hardware stack levels required when called:    8
   341 ;; This function calls:
   342 ;;		_initialisation
   343 ;;		_lcd_ecritChar
   344 ;;		_lcd_init
   345 ;;		_lcd_putMessage
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  0006A4                     __ptext0:
   353                           	opt callstack 0
   354  0006A4                     _main:
   355                           	opt callstack 23
   356  0006A4  FFFF               	dw	65535	; assembler added errata NOP
   357                           
   358                           ;main.c: 34:     initialisation();
   359  0006A6  EC87  F005         	call	_initialisation	;wreg free
   360  0006AA                     
   361                           ;main.c: 35:     lcd_init();
   362  0006AA  EC6E  F005         	call	_lcd_init	;wreg free
   363  0006AE                     
   364                           ;main.c: 37:     PORTCbits.RC0 = 1;
   365  0006AE  8082               	bsf	130,0,c	;volatile
   366  0006B0                     
   367                           ;main.c: 38:     _delay((unsigned long)((500)*(16000000/4000.0)));
   368  0006B0  0E08               	movlw	8
   369  0006B2  6E13               	movwf	(??_main+1)^0,c
   370  0006B4  0E9E               	movlw	158
   371  0006B6  6E12               	movwf	??_main^0,c
   372  0006B8  0E4C               	movlw	76
   373  0006BA                     u197:
   374  0006BA  FFFF               	dw	65535	; errata NOP
   375  0006BC  2EE8               	decfsz	wreg,f,c
   376  0006BE  D7FD               	bra	u197
   377  0006C0  2E12               	decfsz	??_main^0,f,c
   378  0006C2  D7FB               	bra	u197
   379  0006C4  2E13               	decfsz	(??_main+1)^0,f,c
   380  0006C6  D7F9               	bra	u197
   381  0006C8                     
   382                           ;main.c: 39:     PORTDbits.RD7 = 1;
   383  0006C8  8E83               	bsf	131,7,c	;volatile
   384  0006CA                     
   385                           ;main.c: 43:     lcd_putMessage("Lab1 Benoit 2020");
   386  0006CA  0E01               	movlw	low STR_1
   387  0006CC  6E0D               	movwf	lcd_putMessage@chaine^0,c
   388  0006CE  0E06               	movlw	high STR_1
   389  0006D0  6E0E               	movwf	(lcd_putMessage@chaine+1)^0,c
   390  0006D2  ECAF  F004         	call	_lcd_putMessage	;wreg free
   391  0006D6                     l1371:
   392  0006D6  FFFF               	dw	65535	; assembler added errata NOP
   393                           
   394                           ;main.c: 45:     {;main.c: 48:         PORTCbits.RC0 ^= 1;
   395  0006D8  7082               	btg	130,0,c	;volatile
   396  0006DA                     
   397                           ;main.c: 49:          _delay((unsigned long)((50)*(16000000/4000.0)));
   398  0006DA  0E01               	movlw	1
   399  0006DC  6E13               	movwf	(??_main+1)^0,c
   400  0006DE  0EC3               	movlw	195
   401  0006E0  6E12               	movwf	??_main^0,c
   402  0006E2  0EED               	movlw	237
   403  0006E4                     u207:
   404  0006E4  FFFF               	dw	65535	; errata NOP
   405  0006E6  2EE8               	decfsz	wreg,f,c
   406  0006E8  D7FD               	bra	u207
   407  0006EA  2E12               	decfsz	??_main^0,f,c
   408  0006EC  D7FB               	bra	u207
   409  0006EE  2E13               	decfsz	(??_main+1)^0,f,c
   410  0006F0  D7F9               	bra	u207
   411  0006F2                     
   412                           ;main.c: 52:         if (g_nombreCar >= 1 )
   413  0006F2  501E               	movf	_g_nombreCar^0,w,c
   414  0006F4  101F               	iorwf	(_g_nombreCar+1)^0,w,c
   415  0006F6  B4D8               	btfsc	status,2,c
   416  0006F8  EF80  F003         	goto	u181
   417  0006FC  EF83  F003         	goto	u180
   418  000700                     u181:
   419  000700  FFFF               	dw	65535	; assembler added errata NOP
   420  000702  EF6B  F003         	goto	l1371
   421  000706                     u180:
   422  000706  FFFF               	dw	65535	; assembler added errata NOP
   423  000708                     
   424                           ;main.c: 53:         {;main.c: 54:             lcd_ecritChar(g_temponClavier[g_nombreCar
      +                          -1]);
   425  000708  0E13               	movlw	low (_g_temponClavier+65535)
   426  00070A  241E               	addwf	_g_nombreCar^0,w,c
   427  00070C  6ED9               	movwf	fsr2l,c
   428  00070E  0E00               	movlw	high (_g_temponClavier+65535)
   429  000710  201F               	addwfc	(_g_nombreCar+1)^0,w,c
   430  000712  6EDA               	movwf	fsr2h,c
   431  000714  50DF               	movf	indf2,w,c
   432  000716  EC0A  F004         	call	_lcd_ecritChar
   433  00071A                     
   434                           ;main.c: 55:             g_nombreCar--;
   435  00071A  061E               	decf	_g_nombreCar^0,f,c
   436  00071C  A0D8               	btfss	status,0,c
   437  00071E  061F               	decf	(_g_nombreCar+1)^0,f,c
   438  000720  EF6B  F003         	goto	l1371
   439  000724  EF15  F000         	goto	start
   440  000728                     __end_of_main:
   441                           	opt callstack 0
   442                           
   443 ;; *************** function _lcd_putMessage *****************
   444 ;; Defined at:
   445 ;;		line 385 in file "Lcd4Lignes.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  chaine          2   12[COMRAM] PTR const unsigned char 
   448 ;;		 -> STR_1(17), 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  j               1   16[COMRAM] unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   460 ;;      Params:         2       0       0       0       0       0       0
   461 ;;      Locals:         1       0       0       0       0       0       0
   462 ;;      Temps:          2       0       0       0       0       0       0
   463 ;;      Totals:         5       0       0       0       0       0       0
   464 ;;Total ram usage:        5 bytes
   465 ;; Hardware stack levels used:    1
   466 ;; Hardware stack levels required when called:    6
   467 ;; This function calls:
   468 ;;		_lcd_ecritChar
   469 ;; This function is called by:
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text1
   475  00095E                     __ptext1:
   476                           	opt callstack 0
   477  00095E                     _lcd_putMessage:
   478                           	opt callstack 0
   479  00095E  FFFF               	dw	65535	; assembler added errata NOP
   480  000960                     
   481                           ;Lcd4Lignes.c: 385: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 386: 
      +                          {;Lcd4Lignes.c: 387:     unsigned char j;;Lcd4Lignes.c: 389:     for(j = 0; chaine[j] !=
      +                           0; j++)
   482  000960  0E00               	movlw	0
   483  000962  6E11               	movwf	lcd_putMessage@j^0,c
   484  000964  EFC5  F004         	goto	l1349
   485  000968                     l1345:
   486  000968  FFFF               	dw	65535	; assembler added errata NOP
   487                           
   488                           ;Lcd4Lignes.c: 390:         lcd_ecritChar(chaine[j]);
   489  00096A  5011               	movf	lcd_putMessage@j^0,w,c
   490  00096C  240D               	addwf	lcd_putMessage@chaine^0,w,c
   491  00096E  6E0F               	movwf	??_lcd_putMessage^0,c
   492  000970  0E00               	movlw	0
   493  000972  200E               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
   494  000974  6E10               	movwf	(??_lcd_putMessage+1)^0,c
   495  000976  C00F  FFF6         	movff	??_lcd_putMessage,tblptrl
   496  00097A  C010  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   497  00097E                     	if	0	;tblptru may be non-zero
   498  00097E                     	endif
   499  00097E                     	if	0	;tblptru may be non-zero
   500  00097E                     	endif
   501  00097E  0008               	tblrd		*
   502  000980  FFFF               	dw	65535	; errata NOP
   503  000982  50F5               	movf	tablat,w,c
   504  000984  EC0A  F004         	call	_lcd_ecritChar
   505  000988  2A11               	incf	lcd_putMessage@j^0,f,c
   506  00098A                     l1349:
   507  00098A  FFFF               	dw	65535	; assembler added errata NOP
   508  00098C  5011               	movf	lcd_putMessage@j^0,w,c
   509  00098E  240D               	addwf	lcd_putMessage@chaine^0,w,c
   510  000990  6E0F               	movwf	??_lcd_putMessage^0,c
   511  000992  0E00               	movlw	0
   512  000994  200E               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
   513  000996  6E10               	movwf	(??_lcd_putMessage+1)^0,c
   514  000998  C00F  FFF6         	movff	??_lcd_putMessage,tblptrl
   515  00099C  C010  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   516  0009A0                     	if	0	;tblptru may be non-zero
   517  0009A0                     	endif
   518  0009A0                     	if	0	;tblptru may be non-zero
   519  0009A0                     	endif
   520  0009A0  0008               	tblrd		*
   521  0009A2  FFFF               	dw	65535	; errata NOP
   522  0009A4  50F5               	movf	tablat,w,c
   523  0009A6  0900               	iorlw	0
   524  0009A8  A4D8               	btfss	status,2,c
   525  0009AA  EFD9  F004         	goto	u171
   526  0009AE  EFDC  F004         	goto	u170
   527  0009B2                     u171:
   528  0009B2  FFFF               	dw	65535	; assembler added errata NOP
   529  0009B4  EFB4  F004         	goto	l1345
   530  0009B8                     u170:
   531  0009B8  FFFF               	dw	65535	; assembler added errata NOP
   532  0009BA  0012               	return		;funcret
   533  0009BC  FFFF               	dw	65535	; errata NOP
   534  0009BE                     __end_of_lcd_putMessage:
   535                           	opt callstack 0
   536                           
   537 ;; *************** function _lcd_ecritChar *****************
   538 ;; Defined at:
   539 ;;		line 357 in file "Lcd4Lignes.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  car             1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  car             1   10[COMRAM] unsigned char 
   544 ;;  posRam          1   11[COMRAM] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, status,2, status,0, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   554 ;;      Params:         0       0       0       0       0       0       0
   555 ;;      Locals:         2       0       0       0       0       0       0
   556 ;;      Temps:          2       0       0       0       0       0       0
   557 ;;      Totals:         4       0       0       0       0       0       0
   558 ;;Total ram usage:        4 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; Hardware stack levels required when called:    5
   561 ;; This function calls:
   562 ;;		_lcd_wrCom
   563 ;;		_lcd_wrData
   564 ;; This function is called by:
   565 ;;		_lcd_putMessage
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text2
   571  000814                     __ptext2:
   572                           	opt callstack 0
   573  000814                     _lcd_ecritChar:
   574                           	opt callstack 0
   575  000814  FFFF               	dw	65535	; assembler added errata NOP
   576                           
   577                           ;incstack = 0
   578                           ;lcd_ecritChar@car stored from wreg
   579  000816  6E0B               	movwf	lcd_ecritChar@car^0,c
   580  000818                     
   581                           ;Lcd4Lignes.c: 357: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 358: {;Lcd4Ligne
      +                          s.c: 359:     unsigned char posRam;;Lcd4Lignes.c: 361:     posRam = lcd_wrData(car);
   582  000818  500B               	movf	lcd_ecritChar@car^0,w,c
   583  00081A  ECDF  F004         	call	_lcd_wrData
   584  00081E  6E0C               	movwf	lcd_ecritChar@posRam^0,c
   585                           
   586                           ;Lcd4Lignes.c: 362:     switch(posRam)
   587  000820  EF24  F004         	goto	l1295
   588  000824                     l1287:
   589  000824  FFFF               	dw	65535	; assembler added errata NOP
   590                           
   591                           ;Lcd4Lignes.c: 365:             lcd_wrCom(0x40|0x80);
   592  000826  0EC0               	movlw	192
   593  000828  EC0A  F003         	call	_lcd_wrCom
   594                           
   595                           ;Lcd4Lignes.c: 366:             break;
   596  00082C  EF3F  F004         	goto	l78
   597  000830                     l1289:
   598  000830  FFFF               	dw	65535	; assembler added errata NOP
   599                           
   600                           ;Lcd4Lignes.c: 368:             lcd_wrCom(0x14|0x80);
   601  000832  0E94               	movlw	148
   602  000834  EC0A  F003         	call	_lcd_wrCom
   603                           
   604                           ;Lcd4Lignes.c: 369:             break;
   605  000838  EF3F  F004         	goto	l78
   606  00083C                     l1291:
   607  00083C  FFFF               	dw	65535	; assembler added errata NOP
   608                           
   609                           ;Lcd4Lignes.c: 371:             lcd_wrCom(0x54|0x80);
   610  00083E  0ED4               	movlw	212
   611  000840  EC0A  F003         	call	_lcd_wrCom
   612                           
   613                           ;Lcd4Lignes.c: 372:             break;
   614  000844  EF3F  F004         	goto	l78
   615  000848                     l1295:
   616  000848  FFFF               	dw	65535	; assembler added errata NOP
   617  00084A  500C               	movf	lcd_ecritChar@posRam^0,w,c
   618  00084C  6E09               	movwf	??_lcd_ecritChar^0,c
   619  00084E  6A0A               	clrf	(??_lcd_ecritChar+1)^0,c
   620                           
   621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   622                           ; Switch size 1, requested type "simple"
   623                           ; Number of cases is 1, Range of values is 0 to 0
   624                           ; switch strategies available:
   625                           ; Name         Instructions Cycles
   626                           ; simple_byte            4     3 (average)
   627                           ;	Chosen strategy is simple_byte
   628  000850  500A               	movf	(??_lcd_ecritChar+1)^0,w,c
   629  000852  0A00               	xorlw	0	; case 0
   630  000854  B4D8               	btfsc	status,2,c
   631  000856  EF2F  F004         	goto	l1385
   632  00085A  EF3F  F004         	goto	l78
   633  00085E                     l1385:
   634  00085E  FFFF               	dw	65535	; assembler added errata NOP
   635                           
   636                           ; Switch size 1, requested type "simple"
   637                           ; Number of cases is 3, Range of values is 20 to 84
   638                           ; switch strategies available:
   639                           ; Name         Instructions Cycles
   640                           ; simple_byte           10     6 (average)
   641                           ;	Chosen strategy is simple_byte
   642  000860  5009               	movf	??_lcd_ecritChar^0,w,c
   643  000862  0A14               	xorlw	20	; case 20
   644  000864  B4D8               	btfsc	status,2,c
   645  000866  EF12  F004         	goto	l1287
   646  00086A  0A54               	xorlw	84	; case 64
   647  00086C  B4D8               	btfsc	status,2,c
   648  00086E  EF1E  F004         	goto	l1291
   649  000872  0A14               	xorlw	20	; case 84
   650  000874  B4D8               	btfsc	status,2,c
   651  000876  EF18  F004         	goto	l1289
   652  00087A  EF3F  F004         	goto	l78
   653  00087E                     l78:
   654  00087E  FFFF               	dw	65535	; assembler added errata NOP
   655  000880  0012               	return		;funcret
   656  000882  FFFF               	dw	65535	; errata NOP
   657  000884                     __end_of_lcd_ecritChar:
   658                           	opt callstack 0
   659                           
   660 ;; *************** function _lcd_init *****************
   661 ;; Defined at:
   662 ;;		line 256 in file "Lcd4Lignes.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   676 ;;      Params:         0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    7
   683 ;; This function calls:
   684 ;;		_lcd_initCGRam
   685 ;;		_lcd_resetSequence
   686 ;;		_lcd_wrCom
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text3
   693  000ADC                     __ptext3:
   694                           	opt callstack 0
   695  000ADC                     _lcd_init:
   696                           	opt callstack 0
   697  000ADC  FFFF               	dw	65535	; assembler added errata NOP
   698  000ADE                     
   699                           ;Lcd4Lignes.c: 258:     TRISB = TRISB & 0xEF;
   700  000ADE  5093               	movf	147,w,c	;volatile
   701  000AE0  0BEF               	andlw	239
   702  000AE2  6E93               	movwf	147,c	;volatile
   703  000AE4                     
   704                           ;Lcd4Lignes.c: 259:     lcd_resetSequence();
   705  000AE4  EC79  F004         	call	_lcd_resetSequence	;wreg free
   706  000AE8                     
   707                           ;Lcd4Lignes.c: 260:     lcd_wrCom(0x28);
   708  000AE8  0E28               	movlw	40
   709  000AEA  EC0A  F003         	call	_lcd_wrCom
   710  000AEE                     
   711                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x0F);
   712  000AEE  0E0F               	movlw	15
   713  000AF0  EC0A  F003         	call	_lcd_wrCom
   714  000AF4                     
   715                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x01);
   716  000AF4  0E01               	movlw	1
   717  000AF6  EC0A  F003         	call	_lcd_wrCom
   718  000AFA                     
   719                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x06);
   720  000AFA  0E06               	movlw	6
   721  000AFC  EC0A  F003         	call	_lcd_wrCom
   722  000B00                     
   723                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x80);
   724  000B00  0E80               	movlw	128
   725  000B02  EC0A  F003         	call	_lcd_wrCom
   726  000B06                     
   727                           ;Lcd4Lignes.c: 265:     lcd_initCGRam();
   728  000B06  EC42  F004         	call	_lcd_initCGRam	;wreg free
   729  000B0A  0012               	return		;funcret
   730  000B0C  FFFF               	dw	65535	; errata NOP
   731  000B0E                     __end_of_lcd_init:
   732                           	opt callstack 0
   733                           
   734 ;; *************** function _lcd_resetSequence *****************
   735 ;; Defined at:
   736 ;;		line 219 in file "Lcd4Lignes.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;		None
   741 ;; Return value:  Size  Location     Type
   742 ;;                  1    wreg      void 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0, cstack
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   750 ;;      Params:         0       0       0       0       0       0       0
   751 ;;      Locals:         0       0       0       0       0       0       0
   752 ;;      Temps:          1       0       0       0       0       0       0
   753 ;;      Totals:         1       0       0       0       0       0       0
   754 ;;Total ram usage:        1 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; Hardware stack levels required when called:    3
   757 ;; This function calls:
   758 ;;		_lcd_ecrireDonnees
   759 ;;		_lcd_strobeEnableBit
   760 ;; This function is called by:
   761 ;;		_lcd_init
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text4
   766  0008F2                     __ptext4:
   767                           	opt callstack 0
   768  0008F2                     _lcd_resetSequence:
   769                           	opt callstack 0
   770  0008F2  FFFF               	dw	65535	; assembler added errata NOP
   771  0008F4                     
   772                           ;Lcd4Lignes.c: 224:     TRISA = 0b00000000;
   773  0008F4  0E00               	movlw	0
   774  0008F6  6E92               	movwf	146,c	;volatile
   775  0008F8                     
   776                           ;Lcd4Lignes.c: 226:     _delay((unsigned long)((40)*(16000000/4000.0)));
   777  0008F8  0E9C               	movlw	156
   778  0008FA  6E07               	movwf	??_lcd_resetSequence^0,c
   779  0008FC  0EF1               	movlw	241
   780  0008FE                     u217:
   781  0008FE  FFFF               	dw	65535	; errata NOP
   782  000900  2EE8               	decfsz	wreg,f,c
   783  000902  D7FD               	bra	u217
   784  000904  2E07               	decfsz	??_lcd_resetSequence^0,f,c
   785  000906  D7FB               	bra	u217
   786  000908  D000               	nop2	
   787  00090A                     
   788                           ;Lcd4Lignes.c: 227:     PORTBbits.RB4 = 0;
   789  00090A  9881               	bcf	129,4,c	;volatile
   790  00090C                     
   791                           ;Lcd4Lignes.c: 228:     PORTAbits.RA5 = 0;
   792  00090C  9A80               	bcf	128,5,c	;volatile
   793  00090E                     
   794                           ;Lcd4Lignes.c: 230:     lcd_ecrireDonnees(0x03);
   795  00090E  0E03               	movlw	3
   796  000910  ECD0  F003         	call	_lcd_ecrireDonnees
   797  000914                     
   798                           ;Lcd4Lignes.c: 231:     lcd_strobeEnableBit();
   799  000914  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
   800  000918                     
   801                           ;Lcd4Lignes.c: 232:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   802  000918  0E28               	movlw	40
   803  00091A                     u227:
   804  00091A  FFFF               	dw	65535	; errata NOP
   805  00091C  2EE8               	decfsz	wreg,f,c
   806  00091E  D7FD               	bra	u227
   807  000920                     
   808                           ;Lcd4Lignes.c: 235:     lcd_ecrireDonnees(0x03);
   809  000920  0E03               	movlw	3
   810  000922  ECD0  F003         	call	_lcd_ecrireDonnees
   811  000926                     
   812                           ;Lcd4Lignes.c: 236:     lcd_strobeEnableBit();
   813  000926  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
   814  00092A                     
   815                           ;Lcd4Lignes.c: 237:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   816  00092A  0E28               	movlw	40
   817  00092C                     u237:
   818  00092C  FFFF               	dw	65535	; errata NOP
   819  00092E  2EE8               	decfsz	wreg,f,c
   820  000930  D7FD               	bra	u237
   821  000932                     
   822                           ;Lcd4Lignes.c: 239:     lcd_ecrireDonnees(0x03);
   823  000932  0E03               	movlw	3
   824  000934  ECD0  F003         	call	_lcd_ecrireDonnees
   825  000938                     
   826                           ;Lcd4Lignes.c: 240:     lcd_strobeEnableBit();
   827  000938  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
   828  00093C                     
   829                           ;Lcd4Lignes.c: 241:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   830  00093C  0E28               	movlw	40
   831  00093E                     u247:
   832  00093E  FFFF               	dw	65535	; errata NOP
   833  000940  2EE8               	decfsz	wreg,f,c
   834  000942  D7FD               	bra	u247
   835  000944                     
   836                           ;Lcd4Lignes.c: 243:     lcd_ecrireDonnees(0x02);
   837  000944  0E02               	movlw	2
   838  000946  ECD0  F003         	call	_lcd_ecrireDonnees
   839  00094A                     
   840                           ;Lcd4Lignes.c: 244:     lcd_strobeEnableBit();
   841  00094A  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
   842  00094E                     
   843                           ;Lcd4Lignes.c: 245:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   844  00094E  0E28               	movlw	40
   845  000950                     u257:
   846  000950  FFFF               	dw	65535	; errata NOP
   847  000952  2EE8               	decfsz	wreg,f,c
   848  000954  D7FD               	bra	u257
   849  000956                     
   850                           ;Lcd4Lignes.c: 247:     TRISA = 0b00001111;
   851  000956  0E0F               	movlw	15
   852  000958  6E92               	movwf	146,c	;volatile
   853  00095A  0012               	return		;funcret
   854  00095C  FFFF               	dw	65535	; errata NOP
   855  00095E                     __end_of_lcd_resetSequence:
   856                           	opt callstack 0
   857                           
   858 ;; *************** function _lcd_initCGRam *****************
   859 ;; Defined at:
   860 ;;		line 415 in file "Lcd4Lignes.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  j               1   11[COMRAM] unsigned char 
   865 ;;  i               1   10[COMRAM] unsigned char 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   875 ;;      Params:         0       0       0       0       0       0       0
   876 ;;      Locals:         2       0       0       0       0       0       0
   877 ;;      Temps:          2       0       0       0       0       0       0
   878 ;;      Totals:         4       0       0       0       0       0       0
   879 ;;Total ram usage:        4 bytes
   880 ;; Hardware stack levels used:    1
   881 ;; Hardware stack levels required when called:    6
   882 ;; This function calls:
   883 ;;		_lcd_curseurHome
   884 ;;		_lcd_wrCom
   885 ;;		_lcd_wrData
   886 ;; This function is called by:
   887 ;;		_lcd_init
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text5
   892  000884                     __ptext5:
   893                           	opt callstack 0
   894  000884                     _lcd_initCGRam:
   895                           	opt callstack 0
   896  000884  FFFF               	dw	65535	; assembler added errata NOP
   897  000886                     
   898                           ;Lcd4Lignes.c: 417:     char i,j;;Lcd4Lignes.c: 419:     lcd_wrCom(0x40);
   899  000886  0E40               	movlw	64
   900  000888  EC0A  F003         	call	_lcd_wrCom
   901  00088C                     
   902                           ;Lcd4Lignes.c: 420:     for(i=0;i<8;i++)
   903  00088C  0E00               	movlw	0
   904  00088E  6E0B               	movwf	lcd_initCGRam@i^0,c
   905  000890                     l1267:
   906  000890  FFFF               	dw	65535	; assembler added errata NOP
   907                           
   908                           ;Lcd4Lignes.c: 421:     {;Lcd4Lignes.c: 422:         for(j=0;j<8;j++)
   909  000892  0E00               	movlw	0
   910  000894  6E0C               	movwf	lcd_initCGRam@j^0,c
   911  000896                     l1273:
   912  000896  FFFF               	dw	65535	; assembler added errata NOP
   913                           
   914                           ;Lcd4Lignes.c: 423:             lcd_wrData(matCGRAM[i][j]);
   915  000898  500B               	movf	lcd_initCGRam@i^0,w,c
   916  00089A  0D08               	mullw	8
   917  00089C  0E60               	movlw	low _matCGRAM
   918  00089E  6E09               	movwf	??_lcd_initCGRam^0,c
   919  0008A0  0E00               	movlw	high _matCGRAM
   920  0008A2  6E0A               	movwf	(??_lcd_initCGRam+1)^0,c
   921  0008A4  50F3               	movf	243,w,c
   922  0008A6  2609               	addwf	??_lcd_initCGRam^0,f,c
   923  0008A8  50F4               	movf	244,w,c
   924  0008AA  220A               	addwfc	(??_lcd_initCGRam+1)^0,f,c
   925  0008AC  500C               	movf	lcd_initCGRam@j^0,w,c
   926  0008AE  2409               	addwf	??_lcd_initCGRam^0,w,c
   927  0008B0  6ED9               	movwf	fsr2l,c
   928  0008B2  0E00               	movlw	0
   929  0008B4  200A               	addwfc	(??_lcd_initCGRam+1)^0,w,c
   930  0008B6  6EDA               	movwf	fsr2h,c
   931  0008B8  50DF               	movf	indf2,w,c
   932  0008BA  ECDF  F004         	call	_lcd_wrData
   933  0008BE  2A0C               	incf	lcd_initCGRam@j^0,f,c
   934  0008C0  0E07               	movlw	7
   935  0008C2  640C               	cpfsgt	lcd_initCGRam@j^0,c
   936  0008C4  EF66  F004         	goto	u141
   937  0008C8  EF69  F004         	goto	u140
   938  0008CC                     u141:
   939  0008CC  FFFF               	dw	65535	; assembler added errata NOP
   940  0008CE  EF4B  F004         	goto	l1273
   941  0008D2                     u140:
   942  0008D2  FFFF               	dw	65535	; assembler added errata NOP
   943  0008D4                     
   944                           ;Lcd4Lignes.c: 424:     }
   945  0008D4  2A0B               	incf	lcd_initCGRam@i^0,f,c
   946  0008D6  0E07               	movlw	7
   947  0008D8  640B               	cpfsgt	lcd_initCGRam@i^0,c
   948  0008DA  EF71  F004         	goto	u151
   949  0008DE  EF74  F004         	goto	u150
   950  0008E2                     u151:
   951  0008E2  FFFF               	dw	65535	; assembler added errata NOP
   952  0008E4  EF48  F004         	goto	l1267
   953  0008E8                     u150:
   954  0008E8  FFFF               	dw	65535	; assembler added errata NOP
   955  0008EA                     
   956                           ;Lcd4Lignes.c: 425:     lcd_curseurHome();
   957  0008EA  EC9A  F005         	call	_lcd_curseurHome	;wreg free
   958  0008EE  0012               	return		;funcret
   959  0008F0  FFFF               	dw	65535	; errata NOP
   960  0008F2                     __end_of_lcd_initCGRam:
   961                           	opt callstack 0
   962                           
   963 ;; *************** function _lcd_wrData *****************
   964 ;; Defined at:
   965 ;;		line 186 in file "Lcd4Lignes.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  caractere       1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  caractere       1    6[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      unsigned char 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   979 ;;      Params:         0       0       0       0       0       0       0
   980 ;;      Locals:         1       0       0       0       0       0       0
   981 ;;      Temps:          0       0       0       0       0       0       0
   982 ;;      Totals:         1       0       0       0       0       0       0
   983 ;;Total ram usage:        1 bytes
   984 ;; Hardware stack levels used:    1
   985 ;; Hardware stack levels required when called:    4
   986 ;; This function calls:
   987 ;;		_lcd_busy
   988 ;;		_lcd_ecrireDonnees
   989 ;;		_lcd_strobeEnableBit
   990 ;; This function is called by:
   991 ;;		_lcd_ecritChar
   992 ;;		_lcd_initCGRam
   993 ;;		_lcd_effaceChar
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text6
   998  0009BE                     __ptext6:
   999                           	opt callstack 0
  1000  0009BE                     _lcd_wrData:
  1001                           	opt callstack 0
  1002  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  1003                           
  1004                           ;incstack = 0
  1005                           ;lcd_wrData@caractere stored from wreg
  1006  0009C0  6E07               	movwf	lcd_wrData@caractere^0,c
  1007  0009C2                     
  1008                           ;Lcd4Lignes.c: 186: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 187: {;Lcd4Lignes.c: 188:     lcd_busy();
  1009  0009C2  EC08  F005         	call	_lcd_busy	;wreg free
  1010  0009C6                     
  1011                           ;Lcd4Lignes.c: 189:     TRISA = 0b00000000;
  1012  0009C6  0E00               	movlw	0
  1013  0009C8  6E92               	movwf	146,c	;volatile
  1014  0009CA                     
  1015                           ;Lcd4Lignes.c: 190:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1016  0009CA  D000               	nop2		;2 cycle nop
  1017  0009CC  D000               	nop2		;2 cycle nop
  1018  0009CE  D000               	nop2		;2 cycle nop
  1019  0009D0  D000               	nop2		;2 cycle nop
  1020  0009D2                     
  1021                           ;Lcd4Lignes.c: 192:     PORTBbits.RB4 = 1;
  1022  0009D2  8881               	bsf	129,4,c	;volatile
  1023  0009D4                     
  1024                           ;Lcd4Lignes.c: 193:     PORTAbits.RA5 = 0;
  1025  0009D4  9A80               	bcf	128,5,c	;volatile
  1026  0009D6                     
  1027                           ;Lcd4Lignes.c: 195:     lcd_ecrireDonnees(caractere >> 4);
  1028  0009D6  3807               	swapf	lcd_wrData@caractere^0,w,c
  1029  0009D8  0B0F               	andlw	15
  1030  0009DA  ECD0  F003         	call	_lcd_ecrireDonnees
  1031  0009DE                     
  1032                           ;Lcd4Lignes.c: 196:     lcd_strobeEnableBit();
  1033  0009DE  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
  1034  0009E2                     
  1035                           ;Lcd4Lignes.c: 197:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1036  0009E2  D000               	nop2		;2 cycle nop
  1037  0009E4  D000               	nop2		;2 cycle nop
  1038  0009E6  D000               	nop2		;2 cycle nop
  1039  0009E8  D000               	nop2		;2 cycle nop
  1040  0009EA                     
  1041                           ;Lcd4Lignes.c: 199:     lcd_ecrireDonnees(caractere);
  1042  0009EA  5007               	movf	lcd_wrData@caractere^0,w,c
  1043  0009EC  ECD0  F003         	call	_lcd_ecrireDonnees
  1044  0009F0                     
  1045                           ;Lcd4Lignes.c: 200:     lcd_strobeEnableBit();
  1046  0009F0  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
  1047  0009F4                     
  1048                           ;Lcd4Lignes.c: 201:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1049  0009F4  D000               	nop2		;2 cycle nop
  1050  0009F6  D000               	nop2		;2 cycle nop
  1051  0009F8  D000               	nop2		;2 cycle nop
  1052  0009FA  D000               	nop2		;2 cycle nop
  1053  0009FC                     
  1054                           ;Lcd4Lignes.c: 203:     TRISA = 0b00001111;
  1055  0009FC  0E0F               	movlw	15
  1056  0009FE  6E92               	movwf	146,c	;volatile
  1057  000A00                     
  1058                           ;Lcd4Lignes.c: 204:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1059  000A00  D000               	nop2		;2 cycle nop
  1060  000A02  D000               	nop2		;2 cycle nop
  1061  000A04  D000               	nop2		;2 cycle nop
  1062  000A06  D000               	nop2		;2 cycle nop
  1063                           
  1064                           ;Lcd4Lignes.c: 205:     return(lcd_busy());
  1065  000A08  EC08  F005         	call	_lcd_busy	;wreg free
  1066  000A0C  0012               	return		;funcret
  1067  000A0E  FFFF               	dw	65535	; errata NOP
  1068  000A10                     __end_of_lcd_wrData:
  1069                           	opt callstack 0
  1070                           
  1071 ;; *************** function _lcd_curseurHome *****************
  1072 ;; Defined at:
  1073 ;;		line 286 in file "Lcd4Lignes.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1087 ;;      Params:         0       0       0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0
  1090 ;;      Totals:         0       0       0       0       0       0       0
  1091 ;;Total ram usage:        0 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    5
  1094 ;; This function calls:
  1095 ;;		_lcd_wrCom
  1096 ;; This function is called by:
  1097 ;;		_lcd_initCGRam
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text7
  1102  000B34                     __ptext7:
  1103                           	opt callstack 0
  1104  000B34                     _lcd_curseurHome:
  1105                           	opt callstack 0
  1106  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1107  000B36                     
  1108                           ;Lcd4Lignes.c: 288:     lcd_wrCom(0x02);
  1109  000B36  0E02               	movlw	2
  1110  000B38  EC0A  F003         	call	_lcd_wrCom
  1111  000B3C  0012               	return		;funcret
  1112  000B3E  FFFF               	dw	65535	; errata NOP
  1113  000B40                     __end_of_lcd_curseurHome:
  1114                           	opt callstack 0
  1115                           
  1116 ;; *************** function _lcd_wrCom *****************
  1117 ;; Defined at:
  1118 ;;		line 154 in file "Lcd4Lignes.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  commande        1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  commande        1    7[COMRAM] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      unsigned char 
  1125 ;; Registers used:
  1126 ;;		wreg, status,2, status,0, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1132 ;;      Params:         0       0       0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0       0       0
  1134 ;;      Temps:          1       0       0       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used:    1
  1138 ;; Hardware stack levels required when called:    4
  1139 ;; This function calls:
  1140 ;;		_lcd_busy
  1141 ;;		_lcd_ecrireDonnees
  1142 ;;		_lcd_strobeEnableBit
  1143 ;; This function is called by:
  1144 ;;		_lcd_init
  1145 ;;		_lcd_curseurHome
  1146 ;;		_lcd_ecritChar
  1147 ;;		_lcd_initCGRam
  1148 ;;		_lcd_effaceAffichage
  1149 ;;		_lcd_gotoXY
  1150 ;;		_lcd_cacheCurseur
  1151 ;;		_lcd_montreCurseur
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text8
  1156  000614                     __ptext8:
  1157                           	opt callstack 0
  1158  000614                     _lcd_wrCom:
  1159                           	opt callstack 0
  1160  000614  FFFF               	dw	65535	; assembler added errata NOP
  1161                           
  1162                           ;incstack = 0
  1163                           ;lcd_wrCom@commande stored from wreg
  1164  000616  6E08               	movwf	lcd_wrCom@commande^0,c
  1165  000618                     
  1166                           ;Lcd4Lignes.c: 154: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           155: {;Lcd4Lignes.c: 156:     lcd_busy();
  1167  000618  EC08  F005         	call	_lcd_busy	;wreg free
  1168  00061C                     
  1169                           ;Lcd4Lignes.c: 158:     TRISA = 0b00000000;
  1170  00061C  0E00               	movlw	0
  1171  00061E  6E92               	movwf	146,c	;volatile
  1172  000620                     
  1173                           ;Lcd4Lignes.c: 159:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1174  000620  D000               	nop2		;2 cycle nop
  1175  000622  D000               	nop2		;2 cycle nop
  1176  000624  D000               	nop2		;2 cycle nop
  1177  000626  D000               	nop2		;2 cycle nop
  1178  000628                     
  1179                           ;Lcd4Lignes.c: 161:     PORTBbits.RB4 = 0;
  1180  000628  9881               	bcf	129,4,c	;volatile
  1181  00062A                     
  1182                           ;Lcd4Lignes.c: 162:     PORTAbits.RA5 = 0;
  1183  00062A  9A80               	bcf	128,5,c	;volatile
  1184  00062C                     
  1185                           ;Lcd4Lignes.c: 164:     lcd_ecrireDonnees(commande >> 4);
  1186  00062C  3808               	swapf	lcd_wrCom@commande^0,w,c
  1187  00062E  0B0F               	andlw	15
  1188  000630  ECD0  F003         	call	_lcd_ecrireDonnees
  1189  000634                     
  1190                           ;Lcd4Lignes.c: 165:     lcd_strobeEnableBit();
  1191  000634  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
  1192  000638                     
  1193                           ;Lcd4Lignes.c: 166:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1194  000638  D000               	nop2		;2 cycle nop
  1195  00063A  D000               	nop2		;2 cycle nop
  1196  00063C  D000               	nop2		;2 cycle nop
  1197  00063E  D000               	nop2		;2 cycle nop
  1198  000640                     
  1199                           ;Lcd4Lignes.c: 168:     lcd_ecrireDonnees(commande);
  1200  000640  5008               	movf	lcd_wrCom@commande^0,w,c
  1201  000642  ECD0  F003         	call	_lcd_ecrireDonnees
  1202  000646                     
  1203                           ;Lcd4Lignes.c: 169:     lcd_strobeEnableBit();
  1204  000646  ECA0  F005         	call	_lcd_strobeEnableBit	;wreg free
  1205  00064A                     
  1206                           ;Lcd4Lignes.c: 170:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1207  00064A  0E28               	movlw	40
  1208  00064C                     u267:
  1209  00064C  FFFF               	dw	65535	; errata NOP
  1210  00064E  2EE8               	decfsz	wreg,f,c
  1211  000650  D7FD               	bra	u267
  1212  000652                     
  1213                           ;Lcd4Lignes.c: 172:     if ((commande == 0x01) || commande == 0x02)
  1214  000652  0408               	decf	lcd_wrCom@commande^0,w,c
  1215  000654  B4D8               	btfsc	status,2,c
  1216  000656  EF2F  F003         	goto	u121
  1217  00065A  EF32  F003         	goto	u120
  1218  00065E                     u121:
  1219  00065E  FFFF               	dw	65535	; assembler added errata NOP
  1220  000660  EF3D  F003         	goto	l1185
  1221  000664                     u120:
  1222  000664  FFFF               	dw	65535	; assembler added errata NOP
  1223  000666  0E02               	movlw	2
  1224  000668  1808               	xorwf	lcd_wrCom@commande^0,w,c
  1225  00066A  A4D8               	btfss	status,2,c
  1226  00066C  EF3A  F003         	goto	u131
  1227  000670  EF3D  F003         	goto	u130
  1228  000674                     u131:
  1229  000674  FFFF               	dw	65535	; assembler added errata NOP
  1230  000676  EF47  F003         	goto	l1187
  1231  00067A                     u130:
  1232  00067A                     l1185:
  1233  00067A  FFFF               	dw	65535	; assembler added errata NOP
  1234                           
  1235                           ;Lcd4Lignes.c: 173:         _delay((unsigned long)((2)*(16000000/4000.0)));
  1236  00067C  0E08               	movlw	8
  1237  00067E  6E07               	movwf	??_lcd_wrCom^0,c
  1238  000680  0ECB               	movlw	203
  1239  000682                     u277:
  1240  000682  FFFF               	dw	65535	; errata NOP
  1241  000684  2EE8               	decfsz	wreg,f,c
  1242  000686  D7FD               	bra	u277
  1243  000688  2E07               	decfsz	??_lcd_wrCom^0,f,c
  1244  00068A  D7FB               	bra	u277
  1245  00068C  D000               	nop2	
  1246  00068E                     l1187:
  1247  00068E  FFFF               	dw	65535	; assembler added errata NOP
  1248                           
  1249                           ;Lcd4Lignes.c: 175:     TRISA = 0b00001111;
  1250  000690  0E0F               	movlw	15
  1251  000692  6E92               	movwf	146,c	;volatile
  1252  000694                     
  1253                           ;Lcd4Lignes.c: 176:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1254  000694  D000               	nop2		;2 cycle nop
  1255  000696  D000               	nop2		;2 cycle nop
  1256  000698  D000               	nop2		;2 cycle nop
  1257  00069A  D000               	nop2		;2 cycle nop
  1258  00069C                     
  1259                           ;Lcd4Lignes.c: 177:     return(lcd_busy());;	Return value of _lcd_wrCom is never used
  1260  00069C  EC08  F005         	call	_lcd_busy	;wreg free
  1261  0006A0  0012               	return		;funcret
  1262  0006A2  FFFF               	dw	65535	; errata NOP
  1263  0006A4                     __end_of_lcd_wrCom:
  1264                           	opt callstack 0
  1265                           
  1266 ;; *************** function _lcd_strobeEnableBit *****************
  1267 ;; Defined at:
  1268 ;;		line 429 in file "Lcd4Lignes.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		None
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1282 ;;      Params:         0       0       0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_lcd_wrCom
  1293 ;;		_lcd_wrData
  1294 ;;		_lcd_resetSequence
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text9
  1299  000B40                     __ptext9:
  1300                           	opt callstack 0
  1301  000B40                     _lcd_strobeEnableBit:
  1302                           	opt callstack 0
  1303  000B40  FFFF               	dw	65535	; assembler added errata NOP
  1304  000B42                     
  1305                           ;Lcd4Lignes.c: 431:     PORTAbits.RA4 = 1;
  1306  000B42  8880               	bsf	128,4,c	;volatile
  1307                           
  1308                           ;Lcd4Lignes.c: 432:     __nop();
  1309  000B44  F000               	nop	
  1310                           
  1311                           ;Lcd4Lignes.c: 433:     PORTAbits.RA4 = 0;
  1312  000B46  9880               	bcf	128,4,c	;volatile
  1313  000B48  0012               	return		;funcret
  1314  000B4A  FFFF               	dw	65535	; errata NOP
  1315  000B4C                     __end_of_lcd_strobeEnableBit:
  1316                           	opt callstack 0
  1317                           
  1318 ;; *************** function _lcd_ecrireDonnees *****************
  1319 ;; Defined at:
  1320 ;;		line 105 in file "Lcd4Lignes.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  donnee          1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  donnee          1    5[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         0       0       0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0       0       0
  1337 ;;      Totals:         2       0       0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    2
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_lcd_wrCom
  1345 ;;		_lcd_wrData
  1346 ;;		_lcd_resetSequence
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text10
  1351  0007A0                     __ptext10:
  1352                           	opt callstack 0
  1353  0007A0                     _lcd_ecrireDonnees:
  1354                           	opt callstack 0
  1355  0007A0  FFFF               	dw	65535	; assembler added errata NOP
  1356                           
  1357                           ;incstack = 0
  1358                           ;lcd_ecrireDonnees@donnee stored from wreg
  1359  0007A2  6E06               	movwf	lcd_ecrireDonnees@donnee^0,c
  1360  0007A4                     
  1361                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  1362  0007A4  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1363  0007A8  0E01               	movlw	1
  1364  0007AA  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1365  0007AC  5080               	movf	128,w,c	;volatile
  1366  0007AE  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1367  0007B0  0BFE               	andlw	-2
  1368  0007B2  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1369  0007B4  6E80               	movwf	128,c	;volatile
  1370                           
  1371                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  1372  0007B6  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1373  0007BA  90D8               	bcf	status,0,c
  1374  0007BC  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1375  0007BE  0E01               	movlw	1
  1376  0007C0  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1377  0007C2  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1378  0007C4  5080               	movf	128,w,c	;volatile
  1379  0007C6  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1380  0007C8  0BFD               	andlw	-3
  1381  0007CA  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1382  0007CC  6E80               	movwf	128,c	;volatile
  1383                           
  1384                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  1385  0007CE  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1386  0007D2  90D8               	bcf	status,0,c
  1387  0007D4  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1388  0007D6  90D8               	bcf	status,0,c
  1389  0007D8  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1390  0007DA  0E01               	movlw	1
  1391  0007DC  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1392  0007DE  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1393  0007E0  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1394  0007E2  5080               	movf	128,w,c	;volatile
  1395  0007E4  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1396  0007E6  0BFB               	andlw	-5
  1397  0007E8  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1398  0007EA  6E80               	movwf	128,c	;volatile
  1399                           
  1400                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  1401  0007EC  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1402  0007F0  90D8               	bcf	status,0,c
  1403  0007F2  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1404  0007F4  90D8               	bcf	status,0,c
  1405  0007F6  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1406  0007F8  90D8               	bcf	status,0,c
  1407  0007FA  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1408  0007FC  0E01               	movlw	1
  1409  0007FE  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1410  000800  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1411  000802  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1412  000804  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1413  000806  5080               	movf	128,w,c	;volatile
  1414  000808  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1415  00080A  0BF7               	andlw	-9
  1416  00080C  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1417  00080E  6E80               	movwf	128,c	;volatile
  1418  000810  0012               	return		;funcret
  1419  000812  FFFF               	dw	65535	; errata NOP
  1420  000814                     __end_of_lcd_ecrireDonnees:
  1421                           	opt callstack 0
  1422                           
  1423 ;; *************** function _lcd_busy *****************
  1424 ;; Defined at:
  1425 ;;		line 122 in file "Lcd4Lignes.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  adresse         1    5[COMRAM] unsigned char 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      unsigned char 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1439 ;;      Params:         0       0       0       0       0       0       0
  1440 ;;      Locals:         1       0       0       0       0       0       0
  1441 ;;      Temps:          1       0       0       0       0       0       0
  1442 ;;      Totals:         2       0       0       0       0       0       0
  1443 ;;Total ram usage:        2 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    3
  1446 ;; This function calls:
  1447 ;;		_lcd_lireDonnees
  1448 ;; This function is called by:
  1449 ;;		_lcd_wrCom
  1450 ;;		_lcd_wrData
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text11
  1455  000A10                     __ptext11:
  1456                           	opt callstack 0
  1457  000A10                     _lcd_busy:
  1458                           	opt callstack 0
  1459  000A10  FFFF               	dw	65535	; assembler added errata NOP
  1460  000A12                     
  1461                           ;Lcd4Lignes.c: 124:     unsigned char adresse;;Lcd4Lignes.c: 126:     PORTBbits.RB4 = 0;
  1462  000A12  9881               	bcf	129,4,c	;volatile
  1463                           
  1464                           ;Lcd4Lignes.c: 127:     PORTAbits.RA5 = 1;
  1465  000A14  8A80               	bsf	128,5,c	;volatile
  1466  000A16                     l29:
  1467  000A16  FFFF               	dw	65535	; assembler added errata NOP
  1468                           
  1469                           ;Lcd4Lignes.c: 130:     {;Lcd4Lignes.c: 131:         PORTAbits.RA4 = 1;
  1470  000A18  8880               	bsf	128,4,c	;volatile
  1471                           
  1472                           ;Lcd4Lignes.c: 132:         __nop();
  1473  000A1A  F000               	nop	
  1474  000A1C                     
  1475                           ;Lcd4Lignes.c: 133:         adresse = lcd_lireDonnees() << 4;
  1476  000A1C  ECA6  F005         	call	_lcd_lireDonnees	;wreg free
  1477  000A20  6E05               	movwf	??_lcd_busy^0,c
  1478  000A22  3805               	swapf	??_lcd_busy^0,w,c
  1479  000A24  0BF0               	andlw	240
  1480  000A26  6E06               	movwf	lcd_busy@adresse^0,c
  1481  000A28                     
  1482                           ;Lcd4Lignes.c: 134:         PORTAbits.RA4 = 0;
  1483  000A28  9880               	bcf	128,4,c	;volatile
  1484  000A2A                     
  1485                           ;Lcd4Lignes.c: 135:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1486  000A2A  D000               	nop2		;2 cycle nop
  1487  000A2C  D000               	nop2		;2 cycle nop
  1488  000A2E  D000               	nop2		;2 cycle nop
  1489  000A30  D000               	nop2		;2 cycle nop
  1490  000A32                     
  1491                           ;Lcd4Lignes.c: 136:         PORTAbits.RA4 = 1;
  1492  000A32  8880               	bsf	128,4,c	;volatile
  1493  000A34                     
  1494                           ;Lcd4Lignes.c: 137:         __nop();
  1495  000A34  F000               	nop	
  1496                           
  1497                           ;Lcd4Lignes.c: 138:         adresse |= lcd_lireDonnees();
  1498  000A36  ECA6  F005         	call	_lcd_lireDonnees	;wreg free
  1499  000A3A  1206               	iorwf	lcd_busy@adresse^0,f,c
  1500  000A3C                     
  1501                           ;Lcd4Lignes.c: 139:         PORTAbits.RA4 = 0;
  1502  000A3C  9880               	bcf	128,4,c	;volatile
  1503  000A3E                     
  1504                           ;Lcd4Lignes.c: 140:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1505  000A3E  D000               	nop2		;2 cycle nop
  1506  000A40  D000               	nop2		;2 cycle nop
  1507  000A42  D000               	nop2		;2 cycle nop
  1508  000A44  D000               	nop2		;2 cycle nop
  1509  000A46                     
  1510                           ;Lcd4Lignes.c: 141:     }
  1511  000A46  BE06               	btfsc	lcd_busy@adresse^0,7,c
  1512  000A48  EF28  F005         	goto	u111
  1513  000A4C  EF2B  F005         	goto	u110
  1514  000A50                     u111:
  1515  000A50  FFFF               	dw	65535	; assembler added errata NOP
  1516  000A52  EF0B  F005         	goto	l29
  1517  000A56                     u110:
  1518  000A56  FFFF               	dw	65535	; assembler added errata NOP
  1519  000A58                     
  1520                           ;Lcd4Lignes.c: 144:     PORTAbits.RA5 = 0;
  1521  000A58  9A80               	bcf	128,5,c	;volatile
  1522  000A5A                     
  1523                           ;Lcd4Lignes.c: 145:     return(adresse&0x7f);
  1524  000A5A  5006               	movf	lcd_busy@adresse^0,w,c
  1525  000A5C  0B7F               	andlw	127
  1526  000A5E  0012               	return		;funcret
  1527  000A60  FFFF               	dw	65535	; errata NOP
  1528  000A62                     __end_of_lcd_busy:
  1529                           	opt callstack 0
  1530                           
  1531 ;; *************** function _lcd_lireDonnees *****************
  1532 ;; Defined at:
  1533 ;;		line 92 in file "Lcd4Lignes.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    2
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_lcd_busy
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text12
  1562  000B4C                     __ptext12:
  1563                           	opt callstack 0
  1564  000B4C                     _lcd_lireDonnees:
  1565                           	opt callstack 0
  1566  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  1567  000B4E                     
  1568                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  1569  000B4E  5080               	movf	128,w,c	;volatile
  1570  000B50  0B0F               	andlw	15
  1571  000B52  0012               	return		;funcret
  1572  000B54  FFFF               	dw	65535	; errata NOP
  1573  000B56                     __end_of_lcd_lireDonnees:
  1574                           	opt callstack 0
  1575                           
  1576 ;; *************** function _initialisation *****************
  1577 ;; Defined at:
  1578 ;;		line 64 in file "main.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		wreg, status,2
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1592 ;;      Params:         0       0       0       0       0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used:    1
  1598 ;; Hardware stack levels required when called:    2
  1599 ;; This function calls:
  1600 ;;		Nothing
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           
  1606                           	psect	text13
  1607  000B0E                     __ptext13:
  1608                           	opt callstack 0
  1609  000B0E                     _initialisation:
  1610                           	opt callstack 0
  1611  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  1612  000B10                     
  1613                           ;main.c: 69:     ADCON1 = 0x07;
  1614  000B10  0E07               	movlw	7
  1615  000B12  6EC1               	movwf	193,c	;volatile
  1616                           
  1617                           ;main.c: 70:     TRISA = 0;
  1618  000B14  0E00               	movlw	0
  1619  000B16  6E92               	movwf	146,c	;volatile
  1620  000B18                     
  1621                           ;main.c: 71:     TRISBbits.RB4 = 0;
  1622  000B18  9893               	bcf	147,4,c	;volatile
  1623                           
  1624                           ;main.c: 75:     CMCON = 0x07;
  1625  000B1A  0E07               	movlw	7
  1626  000B1C  6EB4               	movwf	180,c	;volatile
  1627                           
  1628                           ;main.c: 76:     TRISD = 0x7F;
  1629  000B1E  0E7F               	movlw	127
  1630  000B20  6E95               	movwf	149,c	;volatile
  1631                           
  1632                           ;main.c: 78:     TRISC = 0;
  1633  000B22  0E00               	movlw	0
  1634  000B24  6E94               	movwf	148,c	;volatile
  1635  000B26                     
  1636                           ;main.c: 82:     TRISBbits.RB0 = 1;
  1637  000B26  8093               	bsf	147,0,c	;volatile
  1638  000B28                     
  1639                           ;main.c: 84:     INTCON2bits.INTEDG0 = 0;
  1640  000B28  9CF1               	bcf	241,6,c	;volatile
  1641  000B2A                     
  1642                           ;main.c: 85:     INTCONbits.INT0IF = 0;
  1643  000B2A  92F2               	bcf	242,1,c	;volatile
  1644  000B2C                     
  1645                           ;main.c: 86:     INTCONbits.INT0IE = 1;
  1646  000B2C  88F2               	bsf	242,4,c	;volatile
  1647  000B2E                     
  1648                           ;main.c: 87:     INTCONbits.GIE = 1;
  1649  000B2E  8EF2               	bsf	242,7,c	;volatile
  1650  000B30  0012               	return		;funcret
  1651  000B32  FFFF               	dw	65535	; errata NOP
  1652  000B34                     __end_of_initialisation:
  1653                           	opt callstack 0
  1654                           
  1655 ;; *************** function _low_isr *****************
  1656 ;; Defined at:
  1657 ;;		line 48 in file "interrupts.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;		None
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;		None
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		None
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1671 ;;      Params:         0       0       0       0       0       0       0
  1672 ;;      Locals:         0       0       0       0       0       0       0
  1673 ;;      Temps:          1       0       0       0       0       0       0
  1674 ;;      Totals:         1       0       0       0       0       0       0
  1675 ;;Total ram usage:        1 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		Interrupt level 1
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	intcodelo
  1686  000018                     __pintcodelo:
  1687                           	opt callstack 0
  1688  000018                     _low_isr:
  1689                           	opt callstack 0
  1690  000018  FFFF               	dw	65535	; assembler added errata NOP
  1691                           
  1692                           ;incstack = 0
  1693  00001A  8020               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1694  00001C  CFE0 F004          	movff	bsr,??_low_isr
  1695  000020  C004  FFE0         	movff	??_low_isr,bsr
  1696  000024  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1697  000026  0010               	retfie	
  1698  000028  FFFF               	dw	65535	; errata NOP
  1699  00002A                     __end_of_low_isr:
  1700                           	opt callstack 0
  1701                           
  1702 ;; *************** function _high_isr *****************
  1703 ;; Defined at:
  1704 ;;		line 22 in file "interrupts.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  nLecture        1    2[COMRAM] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1718 ;;      Params:         0       0       0       0       0       0       0
  1719 ;;      Locals:         1       0       0       0       0       0       0
  1720 ;;      Temps:          2       0       0       0       0       0       0
  1721 ;;      Totals:         3       0       0       0       0       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		Interrupt level 2
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	intcode
  1732  000008                     __pintcode:
  1733                           	opt callstack 0
  1734  000008                     _high_isr:
  1735                           	opt callstack 0
  1736  000008  FFFF               	dw	65535	; assembler added errata NOP
  1737                           
  1738                           ;incstack = 0
  1739  00000A  8220               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1740  00000C  EF94  F003         	goto	int_func
  1741                           
  1742                           	psect	intcode_body
  1743  000728                     __pintcode_body:
  1744                           	opt callstack 23
  1745  000728                     int_func:
  1746                           	opt callstack 23
  1747  000728  FFFF               	dw	65535	; errata NOP
  1748  00072A  CFD9 F001          	movff	fsr2l,??_high_isr
  1749  00072E  CFDA F002          	movff	fsr2h,??_high_isr+1
  1750  000732                     
  1751                           ;interrupts.c: 24:     unsigned char nLecture;;interrupts.c: 26:     if(INTCONbits.INT0F
      +                          )
  1752  000732  A2F2               	btfss	242,1,c	;volatile
  1753  000734  EF9E  F003         	goto	i2u8_41
  1754  000738  EFA1  F003         	goto	i2u8_40
  1755  00073C                     i2u8_41:
  1756  00073C  FFFF               	dw	65535	; assembler added errata NOP
  1757  00073E  EFC8  F003         	goto	i2l118
  1758  000742                     i2u8_40:
  1759  000742  FFFF               	dw	65535	; assembler added errata NOP
  1760  000744                     
  1761                           ;interrupts.c: 27:     {;interrupts.c: 28:         nLecture = PORTD & 0x7f;
  1762  000744  5083               	movf	131,w,c	;volatile
  1763  000746  0B7F               	andlw	127
  1764  000748  6E03               	movwf	high_isr@nLecture^0,c
  1765                           
  1766                           ;interrupts.c: 29:         PORTDbits.RD7 ^= 1;
  1767  00074A  7E83               	btg	131,7,c	;volatile
  1768                           
  1769                           ;interrupts.c: 31:         if(g_nombreCar < 10)
  1770  00074C  501F               	movf	(_g_nombreCar+1)^0,w,c
  1771  00074E  E107               	bnz	i2u9_41
  1772  000750  0E0A               	movlw	10
  1773  000752  5C1E               	subwf	_g_nombreCar^0,w,c
  1774  000754  B0D8               	btfsc	status,0,c
  1775  000756  EFAF  F003         	goto	i2u9_41
  1776  00075A  EFB2  F003         	goto	i2u9_40
  1777  00075E                     i2u9_41:
  1778  00075E  FFFF               	dw	65535	; assembler added errata NOP
  1779  000760  EFBF  F003         	goto	i2l1097
  1780  000764                     i2u9_40:
  1781  000764  FFFF               	dw	65535	; assembler added errata NOP
  1782  000766                     
  1783                           ;interrupts.c: 32:         {;interrupts.c: 33:             g_temponClavier[g_nombreCar] 
      +                          = nLecture;
  1784  000766  0E14               	movlw	low _g_temponClavier
  1785  000768  241E               	addwf	_g_nombreCar^0,w,c
  1786  00076A  6ED9               	movwf	fsr2l,c
  1787  00076C  0E00               	movlw	high _g_temponClavier
  1788  00076E  201F               	addwfc	(_g_nombreCar+1)^0,w,c
  1789  000770  6EDA               	movwf	fsr2h,c
  1790  000772  C003  FFDF         	movff	high_isr@nLecture,indf2
  1791  000776                     
  1792                           ;interrupts.c: 34:             g_nombreCar++;
  1793  000776  4A1E               	infsnz	_g_nombreCar^0,f,c
  1794  000778  2A1F               	incf	(_g_nombreCar+1)^0,f,c
  1795                           
  1796                           ;interrupts.c: 35:         }
  1797  00077A  EFC6  F003         	goto	i2l1101
  1798  00077E                     i2l1097:
  1799  00077E  FFFF               	dw	65535	; assembler added errata NOP
  1800                           
  1801                           ;interrupts.c: 37:         {;interrupts.c: 38:             g_nombreCar = 1;
  1802  000780  0E00               	movlw	0
  1803  000782  6E1F               	movwf	(_g_nombreCar+1)^0,c
  1804  000784  0E01               	movlw	1
  1805  000786  6E1E               	movwf	_g_nombreCar^0,c
  1806  000788                     
  1807                           ;interrupts.c: 39:             g_temponClavier[0] = nLecture;
  1808  000788  C003  F014         	movff	high_isr@nLecture,_g_temponClavier
  1809  00078C                     i2l1101:
  1810  00078C  FFFF               	dw	65535	; assembler added errata NOP
  1811                           
  1812                           ;interrupts.c: 42:         INTCONbits.INT0F = 0;
  1813  00078E  92F2               	bcf	242,1,c	;volatile
  1814  000790                     i2l118:
  1815  000790  FFFF               	dw	65535	; assembler added errata NOP
  1816  000792  C002  FFDA         	movff	??_high_isr+1,fsr2h
  1817  000796  C001  FFD9         	movff	??_high_isr,fsr2l
  1818  00079A  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1819  00079C  0011               	retfie		f
  1820  00079E  FFFF               	dw	65535	; errata NOP
  1821  0007A0                     __end_of_high_isr:
  1822                           	opt callstack 0
  1823                           
  1824                           	psect	rparam
  1825  0000                     
  1826                           	psect	temp
  1827  000020                     btemp:
  1828                           	opt callstack 0
  1829  000020                     	ds	1
  1830  0000                     int$flags	set	btemp
  1831  0000                     wtemp8	set	btemp+1
  1832  0000                     ttemp5	set	btemp+1
  1833  0000                     ttemp6	set	btemp+4
  1834  0000                     ttemp7	set	btemp+8
  1835                           tosu	equ	0xFFF
  1836                           tosh	equ	0xFFE
  1837                           tosl	equ	0xFFD
  1838                           stkptr	equ	0xFFC
  1839                           pclatu	equ	0xFFB
  1840                           pclath	equ	0xFFA
  1841                           pcl	equ	0xFF9
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           prodh	equ	0xFF4
  1847                           prodl	equ	0xFF3
  1848                           indf0	equ	0xFEF
  1849                           postinc0	equ	0xFEE
  1850                           postdec0	equ	0xFED
  1851                           preinc0	equ	0xFEC
  1852                           plusw0	equ	0xFEB
  1853                           fsr0h	equ	0xFEA
  1854                           fsr0l	equ	0xFE9
  1855                           wreg	equ	0xFE8
  1856                           indf1	equ	0xFE7
  1857                           postinc1	equ	0xFE6
  1858                           postdec1	equ	0xFE5
  1859                           preinc1	equ	0xFE4
  1860                           plusw1	equ	0xFE3
  1861                           fsr1h	equ	0xFE2
  1862                           fsr1l	equ	0xFE1
  1863                           bsr	equ	0xFE0
  1864                           indf2	equ	0xFDF
  1865                           postinc2	equ	0xFDE
  1866                           postdec2	equ	0xFDD
  1867                           preinc2	equ	0xFDC
  1868                           plusw2	equ	0xFDB
  1869                           fsr2h	equ	0xFDA
  1870                           fsr2l	equ	0xFD9
  1871                           status	equ	0xFD8


Data Sizes:
    Strings     17
    Constant    0
    Data        64
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      31
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2124
                                             17 COMRAM     2     2      0
                     _initialisation
                      _lcd_ecritChar
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     611
                                             12 COMRAM     5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     445
                                              8 COMRAM     4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1068
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      88
                                              6 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     758
                                              8 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     178
                                              6 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     222
                                              6 COMRAM     2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      88
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              4 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_isr                                             3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _lcd_ecritChar
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrData
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      40       4       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      1F       1       33.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F       9        0.0%
DATA                 0      0      5F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jan 13 17:01:22 2020

                                                                l30 0A58  
                                                                l23 0B52  
                                                                l31 0A5E  
                                                                l40 0A0C  
                                                                l26 0810  
                                                                l43 095A  
                                                                l52 0B3C  
                                                                l29 0A16  
                                                                l37 06A0  
                                                                l46 0B0A  
                                                                l84 09BA  
                                                                l78 087E  
                                                                l97 08EE  
                                                                bsr 000FE0  
                                                      __CFG_CP0$OFF 000000  
                                                      __CFG_CP1$OFF 000000  
                                                      __CFG_CP2$OFF 000000  
                                                      __CFG_CP3$OFF 000000  
                                                       __CFG_OSC$HS 000000  
                                      __size_of_lcd_strobeEnableBit 000C  
                                                               l100 0B48  
                                                               l169 0B30  
                                                      __CFG_CPB$OFF 000000  
                                                               u110 0A56  
                                                               u111 0A50  
                                                               u120 0664  
                                                               u121 065E  
                                                               u130 067A  
                                                               u131 0674  
                                                               u140 08D2  
                                                               u141 08CC  
                                                               u150 08E8  
                                                               u151 08E2  
                                                               u207 06E4  
                                                               u217 08FE  
                                                               u170 09B8  
                                                               u227 091A  
                                                               u171 09B2  
                                                               u180 0706  
                                                               u237 092C  
                                                               u181 0700  
                                                               u247 093E  
                                                               u257 0950  
                                                      __CFG_CPD$OFF 000000  
                                                               u267 064C  
                                                               u277 0682  
                                                               u197 06BA  
                                                      __CFG_BOR$OFF 000000  
                                                      __CFG_BORV$25 000000  
                                                               wreg 000FE8  
                                                      __CFG_LVP$OFF 000000  
                                                      __CFG_WDT$OFF 000000  
                                                              l1201 09D2  
                                                              l1211 09EA  
                                                              l1203 09D4  
                                                              l1141 0A2A  
                                                              l1133 07A4  
                                                              l1213 09F0  
                                                              l1205 09D6  
                                                              l1301 0ADE  
                                                              l1071 0B26  
                                                              l1151 0A46  
                                                              l1143 0A32  
                                                              l1135 0A12  
                                                              l1223 0B36  
                                                              l1215 09F4  
                                                              l1207 09DE  
                                                              l1231 090C  
                                                              l1311 0AFA  
                                                              l1303 0AE4  
                                                              l1073 0B28  
                                                              l1129 0B4E  
                                                              l1153 0A5A  
                                                              l1145 0A34  
                                                              l1137 0A1C  
                                                              l1161 061C  
                                                              l1217 09FC  
                                                              l1209 09E2  
                                                              l1241 0926  
                                                              l1233 090E  
                                                              l1225 08F4  
                                                              l1313 0B00  
                                                              l1305 0AE8  
                                                              l1075 0B2A  
                                                              l1067 0B10  
                                                              l1147 0A3C  
                                                              l1139 0A28  
                                                              l1171 0634  
                                                              l1163 0620  
                                                              l1219 0A00  
                                                              l1251 0944  
                                                              l1243 092A  
                                                              l1235 0914  
                                                              l1227 08F8  
                                                              l1315 0B06  
                                                              l1307 0AEE  
                                                              l1077 0B2C  
                                                              l1069 0B18  
                                                              l1149 0A3E  
                                                              l1157 0B42  
                                                              l1181 0652  
                                                              l1173 0638  
                                                              l1165 0628  
                                                              l1261 088C  
                                                              l1253 094A  
                                                              l1245 0932  
                                                              l1237 0918  
                                                              l1229 090A  
                                                              l1309 0AF4  
                                                              l1079 0B2E  
                                                              l1191 069C  
                                                              l1183 0666  
                                                              l1175 0640  
                                                              l1167 062A  
                                                              l1159 0618  
                                                              l1255 094E  
                                                              l1247 0938  
                                                              l1239 0920  
                                                              l1343 0960  
                                                              l1185 067A  
                                                              l1177 0646  
                                                              l1169 062C  
                                                              l1281 08D6  
                                                              l1273 0896  
                                                              l1257 0956  
                                                              l1249 093C  
                                                              l1345 0968  
                                                              l1361 06AA  
                                                              l1187 068E  
                                                              l1179 064A  
                                                              l1195 09C2  
                                                              l1283 08EA  
                                                              l1275 08BE  
                                                              l1267 0890  
                                                              l1259 0886  
                                                              l1291 083C  
                                                              l1347 0988  
                                                              l1371 06D6  
                                                              l1363 06AE  
                                                              l1189 0694  
                                                              l1197 09C6  
                                                              l1277 08C0  
                                                              l1285 0818  
                                                              l1349 098A  
                                                              l1373 06DA  
                                                              l1365 06B0  
                                                              l1199 09CA  
                                                              l1279 08D4  
                                                              l1287 0824  
                                                              l1295 0848  
                                                              l1375 06F2  
                                                              l1367 06C8  
                                                              l1359 06A4  
                                                              l1385 085E  
                                                              l1289 0830  
                                                              l1377 0708  
                                                              l1369 06CA  
                                                              l1379 071A  
                                                              STR_1 0601  
                                                  ??_initialisation 0005  
                                                              _main 06A4  
                                                              fsr2h 000FDA  
                                                              indf2 000FDF  
                                                              fsr1l 000FE1  
                                                              fsr2l 000FD9  
                                                              btemp 0020  
                                                              prodh 000FF4  
                                                              prodl 000FF3  
                                                              start 002A  
                                                   ?_lcd_putMessage 000D  
                                                      ___param_bank 000000  
                                                     __CFG_OSCS$OFF 000000  
                                                   ??_lcd_ecritChar 0009  
                                                             ?_main 0001  
                                                             _CMCON 000FB4  
                                                             i1l123 0020  
                                                             i2l118 0790  
                                                             _PORTA 000F80  
                                                             _PORTD 000F83  
                                                             _TRISA 000F92  
                                                             _TRISB 000F93  
                                                             _TRISC 000F94  
                                                             _TRISD 000F95  
                                                     __CFG_PWRT$OFF 000000  
                                                     __CFG_WRT0$OFF 000000  
                                                     __CFG_WRT1$OFF 000000  
                                                     __CFG_WRT2$OFF 000000  
                                                     __CFG_WRT3$OFF 000000  
                                                    __CFG_EBTR0$OFF 000000  
                                                    __CFG_EBTR1$OFF 000000  
                                                    __CFG_EBTR2$OFF 000000  
                                                    __CFG_EBTR3$OFF 000000  
                                                     __CFG_STVR$OFF 000000  
                                                     __CFG_WRTB$OFF 000000  
                                                     __CFG_WRTC$OFF 000000  
                                                     __CFG_WRTD$OFF 000000  
                                                    __CFG_EBTRB$OFF 000000  
                                                   ??_lcd_initCGRam 0009  
                                                   __end_of_low_isr 002A  
                                                             tablat 000FF5  
                                                             ttemp5 0021  
                                                             ttemp6 0024  
                                                             ttemp7 0028  
                                                             status 000FD8  
                                                  high_isr@nLecture 0003  
                                                             wtemp8 0021  
                                                   __initialization 0AA2  
                                                      __end_of_main 0728  
                                              lcd_putMessage@chaine 000D  
                                                            ??_main 0012  
                                                     __activetblptr 000002  
                                                            _ADCON1 000FC1  
                                                   _g_temponClavier 0014  
                                                            i2l1101 078C  
                                                            i2l1091 0744  
                                                            i2l1093 0766  
                                                            i2l1095 0776  
                                                            i2l1097 077E  
                                                            i2l1089 0732  
                                                            i2l1099 0788  
                                                    __CFG_WDTPS$128 000000  
                                                            i2u8_40 0742  
                                                            i2u8_41 073C  
                                                            i2u9_40 0764  
                                                            i2u9_41 075E  
                                                    lcd_initCGRam@i 000B  
                                                    lcd_initCGRam@j 000C  
                                                  __end_of_lcd_busy 0A62  
                                                  __end_of_lcd_init 0B0E  
                                                  __end_of_high_isr 07A0  
                                                            clear_0 0AC8  
                                                      __mediumconst 0000  
                                                         ??_low_isr 0004  
                                                            tblptrh 000FF7  
                                                            tblptrl 000FF6  
                                                            tblptru 000FF8  
                                                 _lcd_resetSequence 08F2  
                                                        __accesstop 0060  
                                           __end_of__initialization 0ACE  
                                               _lcd_strobeEnableBit 0B40  
                                                ?_lcd_resetSequence 0001  
                                                     ___rparam_used 000001  
                                                    __pcstackCOMRAM 0001  
                                                      __pidataBANK0 0A62  
                                               ??_lcd_resetSequence 0007  
                                              ?_lcd_strobeEnableBit 0001  
                                                __size_of_lcd_wrCom 0090  
                                         __end_of_lcd_resetSequence 095E  
                                          __size_of_lcd_lireDonnees 000A  
                                                 _lcd_ecrireDonnees 07A0  
                                                  ??_lcd_putMessage 000F  
                                                ?_lcd_ecrireDonnees 0001  
                                          __size_of_lcd_curseurHome 000C  
                                               ??_lcd_ecrireDonnees 0005  
                                             ??_lcd_strobeEnableBit 0005  
                                                        _lcd_wrData 09BE  
                                         __end_of_lcd_ecrireDonnees 0814  
                                                         ?_lcd_busy 0001  
                                                         ?_lcd_init 0001  
                                           lcd_ecrireDonnees@donnee 0006  
                                                         ?_high_isr 0001  
                                                           __Hparam 0000  
                                                           __Lparam 0000  
                                                 __end_of_lcd_wrCom 06A4  
                                                      __psmallconst 0600  
                                                           __pcinit 0AA2  
                                                           __ramtop 0600  
                                                           __ptext0 06A4  
                                                           __ptext1 095E  
                                                           __ptext2 0814  
                                                           __ptext3 0ADC  
                                                           __ptext4 08F2  
                                                           __ptext5 0884  
                                                           __ptext6 09BE  
                                                           __ptext7 0B34  
                                                           __ptext8 0614  
                                                           __ptext9 0B40  
                                             __end_of_lcd_ecritChar 0884  
                                                   lcd_busy@adresse 0006  
                                                           _low_isr 0018  
                                                  lcd_ecritChar@car 000B  
                                                        ??_lcd_busy 0005  
                                                        ??_lcd_init 000D  
                                        __size_of_lcd_resetSequence 006C  
                                                        ??_high_isr 0001  
                                                    __pintcode_body 0728  
                                              end_of_initialization 0ACE  
                                             __end_of_lcd_initCGRam 08F2  
                                                     __Lmediumconst 0000  
                                                           int_func 0728  
                                                 ??_lcd_lireDonnees 0005  
                                                           postdec1 000FE5  
                                                           postinc0 000FEE  
                                           __size_of_initialisation 0026  
                                                 ??_lcd_curseurHome 0009  
                                               lcd_ecritChar@posRam 000C  
                                                         _PORTAbits 000F80  
                                                         _PORTBbits 000F81  
                                                         _PORTCbits 000F82  
                                                         _PORTDbits 000F83  
                                                         _TRISBbits 000F93  
                                                       ?_lcd_wrData 0001  
                                        __size_of_lcd_ecrireDonnees 0074  
                                               start_initialization 0AA2  
                                               __size_of_lcd_wrData 0052  
                                                       __pdataBANK0 0060  
                                                       __pbssCOMRAM 0014  
                                                 __size_of_lcd_busy 0052  
                                                 __size_of_lcd_init 0032  
                                                 __size_of_high_isr 0798  
                                       __end_of_lcd_strobeEnableBit 0B4C  
                                                         __pintcode 0008  
                                                    _initialisation 0B0E  
                                                       __pintcodelo 0018  
                                                         _lcd_wrCom 0614  
                                                       _g_nombreCar 001E  
                                                       __smallconst 0600  
                                                          ?_low_isr 0001  
                                                   _lcd_lireDonnees 0B4C  
                                               lcd_wrData@caractere 0007  
                                                   _lcd_curseurHome 0B34  
                                            __end_of_initialisation 0B34  
                                           __size_of_lcd_putMessage 0060  
                                                        ?_lcd_wrCom 0001  
                                                      ??_lcd_wrData 0007  
                                                 lcd_wrCom@commande 0008  
                                                       _INTCON2bits 000FF1  
                                                         copy_data0 0AB6  
                                            __size_of_lcd_ecritChar 0070  
                                                          __Hrparam 0000  
                                                   ?_initialisation 0001  
                                                          __Lrparam 0000  
                                                __end_of_lcd_wrData 0A10  
                                            __size_of_lcd_initCGRam 006E  
                                                   lcd_putMessage@j 0011  
                                           __end_of_lcd_lireDonnees 0B56  
                                                          _matCGRAM 0060  
                                           __end_of_lcd_curseurHome 0B40  
                                                  __size_of_low_isr 0012  
                                                          __ptext10 07A0  
                                                          __ptext11 0A10  
                                                          __ptext12 0B4C  
                                                          __ptext13 0B0E  
                                                          _lcd_busy 0A10  
                                                          _lcd_init 0ADC  
                                                          _high_isr 0008  
                                                     __size_of_main 0084  
                                                          int$flags 0020  
                                                       ??_lcd_wrCom 0007  
                                                     _lcd_ecritChar 0814  
                                                        _INTCONbits 000FF2  
                                                          intlevel1 0B56  
                                                          intlevel2 0B56  
                                                     _lcd_initCGRam 0884  
                                                    _lcd_putMessage 095E  
                                                    ?_lcd_ecritChar 0001  
                                                  ?_lcd_lireDonnees 0001  
                                                  ?_lcd_curseurHome 0001  
                                                    ?_lcd_initCGRam 0001  
                                            __end_of_lcd_putMessage 09BE  
