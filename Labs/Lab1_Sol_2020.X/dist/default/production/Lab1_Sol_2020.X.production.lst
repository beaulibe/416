

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 03 14:27:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F458
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           ; Version 2.10
    33                           ; Generated 31/07/2019 GMT
    34                           ; 
    35                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F458 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataBANK0
    68  000A56                     __pidataBANK0:
    69                           	opt callstack 0
    70                           
    71                           ;initializer for _matCGRAM
    72  000A56  08                 	db	8
    73  000A57  04                 	db	4
    74  000A58  04                 	db	4
    75  000A59  0A                 	db	10
    76  000A5A  11                 	db	17
    77  000A5B  1F                 	db	31
    78  000A5C  11                 	db	17
    79  000A5D  00                 	db	0
    80  000A5E  02                 	db	2
    81  000A5F  04                 	db	4
    82  000A60  0E                 	db	14
    83  000A61  11                 	db	17
    84  000A62  1F                 	db	31
    85  000A63  10                 	db	16
    86  000A64  0E                 	db	14
    87  000A65  00                 	db	0
    88  000A66  02                 	db	2
    89  000A67  04                 	db	4
    90  000A68  1F                 	db	31
    91  000A69  10                 	db	16
    92  000A6A  1E                 	db	30
    93  000A6B  10                 	db	16
    94  000A6C  1F                 	db	31
    95  000A6D  00                 	db	0
    96  000A6E  08                 	db	8
    97  000A6F  04                 	db	4
    98  000A70  0E                 	db	14
    99  000A71  11                 	db	17
   100  000A72  1F                 	db	31
   101  000A73  10                 	db	16
   102  000A74  0E                 	db	14
   103  000A75  00                 	db	0
   104  000A76  08                 	db	8
   105  000A77  04                 	db	4
   106  000A78  1F                 	db	31
   107  000A79  10                 	db	16
   108  000A7A  1E                 	db	30
   109  000A7B  10                 	db	16
   110  000A7C  1F                 	db	31
   111  000A7D  00                 	db	0
   112  000A7E  04                 	db	4
   113  000A7F  0A                 	db	10
   114  000A80  0E                 	db	14
   115  000A81  11                 	db	17
   116  000A82  1F                 	db	31
   117  000A83  10                 	db	16
   118  000A84  0E                 	db	14
   119  000A85  00                 	db	0
   120  000A86  08                 	db	8
   121  000A87  04                 	db	4
   122  000A88  0E                 	db	14
   123  000A89  01                 	db	1
   124  000A8A  0F                 	db	15
   125  000A8B  11                 	db	17
   126  000A8C  0F                 	db	15
   127  000A8D  00                 	db	0
   128  000A8E  04                 	db	4
   129  000A8F  0A                 	db	10
   130  000A90  0E                 	db	14
   131  000A91  01                 	db	1
   132  000A92  0F                 	db	15
   133  000A93  11                 	db	17
   134  000A94  0F                 	db	15
   135  000A95  00                 	db	0
   136                           
   137                           	psect	smallconst
   138  000600                     __psmallconst:
   139                           	opt callstack 0
   140  000600  00                 	db	0
   141  000601                     main@t:
   142                           	opt callstack 0
   143  000601  61                 	db	97
   144  000602  6C                 	db	108
   145  000603  6C                 	db	108
   146  000604  6F                 	db	111
   147  000605  00                 	db	0
   148  000606                     __end_ofmain@t:
   149                           	opt callstack 0
   150  0000                     _INTCON2bits	set	4081
   151  0000                     _TRISC	set	3988
   152  0000                     _TRISD	set	3989
   153  0000                     _CMCON	set	4020
   154  0000                     _TRISBbits	set	3987
   155  0000                     _ADCON1	set	4033
   156  0000                     _PORTCbits	set	3970
   157  0000                     _PORTDbits	set	3971
   158  0000                     _PORTD	set	3971
   159  0000                     _INTCONbits	set	4082
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISA	set	3986
   162  0000                     _PORTBbits	set	3969
   163  0000                     _PORTAbits	set	3968
   164  0000                     _PORTA	set	3968
   165                           
   166                           ; #config settings
   167  000606  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	cinit
   170  000A96                     __pcinit:
   171                           	opt callstack 0
   172  000A96                     start_initialization:
   173                           	opt callstack 0
   174  000A96                     __initialization:
   175                           	opt callstack 0
   176                           
   177                           ; Initialize objects allocated to BANK0 (64 bytes)
   178                           ; load TBLPTR registers with __pidataBANK0
   179  000A96  0E56               	movlw	low __pidataBANK0
   180  000A98  6EF6               	movwf	tblptrl,c
   181  000A9A  0E0A               	movlw	high __pidataBANK0
   182  000A9C  6EF7               	movwf	tblptrh,c
   183  000A9E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   184  000AA0  6EF8               	movwf	tblptru,c
   185  000AA2  EE00  F060         	lfsr	0,__pdataBANK0
   186  000AA6  EE10 F040          	lfsr	1,64
   187  000AAA                     copy_data0:
   188  000AAA  0009               	tblrd		*+
   189  000AAC  CFF5 FFEE          	movff	tablat,postinc0
   190  000AB0  50E5               	movf	postdec1,w,c
   191  000AB2  50E1               	movf	fsr1l,w,c
   192  000AB4  E1FA               	bnz	copy_data0
   193                           
   194                           ; Clear objects allocated to COMRAM (12 bytes)
   195  000AB6  EE00  F014         	lfsr	0,__pbssCOMRAM
   196  000ABA  0E0C               	movlw	12
   197  000ABC                     clear_0:
   198  000ABC  6AEE               	clrf	postinc0,c
   199  000ABE  06E8               	decf	wreg,f,c
   200  000AC0  E1FD               	bnz	clear_0
   201  000AC2                     end_of_initialization:
   202                           	opt callstack 0
   203  000AC2                     __end_of__initialization:
   204                           	opt callstack 0
   205  000AC2  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  000AC4  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  000AC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   208  000AC8  6EF8               	movwf	tblptru,c
   209  000ACA  0100               	movlb	0
   210  000ACC  EF4C  F003         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213  000014                     __pbssCOMRAM:
   214                           	opt callstack 0
   215  000014                     _g_temponClavier:
   216                           	opt callstack 0
   217  000014                     	ds	10
   218  00001E                     _g_nombreCar:
   219                           	opt callstack 0
   220  00001E                     	ds	2
   221                           
   222                           	psect	dataBANK0
   223  000060                     __pdataBANK0:
   224                           	opt callstack 0
   225  000060                     _matCGRAM:
   226                           	opt callstack 0
   227  000060                     	ds	64
   228                           
   229                           	psect	cstackCOMRAM
   230  000001                     __pcstackCOMRAM:
   231                           	opt callstack 0
   232  000001                     ??_high_isr:
   233  000001                     
   234                           ; 1 bytes @ 0x0
   235  000001                     	ds	2
   236  000003                     high_isr@nLecture:
   237                           	opt callstack 0
   238                           
   239                           ; 1 bytes @ 0x2
   240  000003                     	ds	1
   241  000004                     ??_low_isr:
   242                           
   243                           ; 1 bytes @ 0x3
   244  000004                     	ds	1
   245  000005                     ??_lcd_ecrireDonnees:
   246  000005                     ??_lcd_busy:
   247                           
   248                           ; 1 bytes @ 0x4
   249  000005                     	ds	1
   250  000006                     lcd_ecrireDonnees@donnee:
   251                           	opt callstack 0
   252  000006                     lcd_busy@adresse:
   253                           	opt callstack 0
   254                           
   255                           ; 1 bytes @ 0x5
   256  000006                     	ds	1
   257  000007                     ??_lcd_wrCom:
   258  000007                     ??_lcd_resetSequence:
   259  000007                     lcd_wrData@caractere:
   260                           	opt callstack 0
   261                           
   262                           ; 1 bytes @ 0x6
   263  000007                     	ds	1
   264  000008                     lcd_wrCom@commande:
   265                           	opt callstack 0
   266                           
   267                           ; 1 bytes @ 0x7
   268  000008                     	ds	1
   269  000009                     ??_lcd_initCGRam:
   270  000009                     ??_lcd_ecritChar:
   271                           
   272                           ; 1 bytes @ 0x8
   273  000009                     	ds	2
   274  00000B                     lcd_ecritChar@car:
   275                           	opt callstack 0
   276  00000B                     lcd_initCGRam@i:
   277                           	opt callstack 0
   278                           
   279                           ; 1 bytes @ 0xA
   280  00000B                     	ds	1
   281  00000C                     lcd_ecritChar@posRam:
   282                           	opt callstack 0
   283  00000C                     lcd_initCGRam@j:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0xB
   287  00000C                     	ds	1
   288  00000D                     lcd_putMessage@chaine:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0xC
   292  00000D                     	ds	2
   293  00000F                     ??_lcd_putMessage:
   294                           
   295                           ; 1 bytes @ 0xE
   296  00000F                     	ds	2
   297  000011                     lcd_putMessage@j:
   298                           	opt callstack 0
   299                           
   300                           ; 1 bytes @ 0x10
   301  000011                     	ds	1
   302  000012                     ??_main:
   303                           
   304                           ; 1 bytes @ 0x11
   305  000012                     	ds	2
   306                           
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 33 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   326 ;;      Params:         0       0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0       0       0
   329 ;;      Totals:         2       0       0       0       0       0       0
   330 ;;Total ram usage:        2 bytes
   331 ;; Hardware stack levels required when called:    8
   332 ;; This function calls:
   333 ;;		_initialisation
   334 ;;		_lcd_ecritChar
   335 ;;		_lcd_init
   336 ;;		_lcd_putMessage
   337 ;; This function is called by:
   338 ;;		Startup code after reset
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           	psect	text0
   343  000698                     __ptext0:
   344                           	opt callstack 0
   345  000698                     _main:
   346                           	opt callstack 23
   347  000698  FFFF               	dw	65535	; assembler added errata NOP
   348                           
   349                           ;main.c: 35:     const unsigned char t[] = "allo";;main.c: 36:     initialisation();
   350  00069A  EC81  F005         	call	_initialisation	;wreg free
   351  00069E                     
   352                           ;main.c: 37:     lcd_init();
   353  00069E  EC68  F005         	call	_lcd_init	;wreg free
   354  0006A2                     
   355                           ;main.c: 39:     PORTCbits.RC0 = 1;
   356  0006A2  8082               	bsf	130,0,c	;volatile
   357  0006A4                     
   358                           ;main.c: 40:     _delay((unsigned long)((500)*(16000000/4000.0)));
   359  0006A4  0E08               	movlw	8
   360  0006A6  6E13               	movwf	(??_main+1)^0,c
   361  0006A8  0E9E               	movlw	158
   362  0006AA  6E12               	movwf	??_main^0,c
   363  0006AC  0E4C               	movlw	76
   364  0006AE                     u197:
   365  0006AE  FFFF               	dw	65535	; errata NOP
   366  0006B0  2EE8               	decfsz	wreg,f,c
   367  0006B2  D7FD               	bra	u197
   368  0006B4  2E12               	decfsz	??_main^0,f,c
   369  0006B6  D7FB               	bra	u197
   370  0006B8  2E13               	decfsz	(??_main+1)^0,f,c
   371  0006BA  D7F9               	bra	u197
   372  0006BC                     
   373                           ;main.c: 41:     PORTDbits.RD7 = 1;
   374  0006BC  8E83               	bsf	131,7,c	;volatile
   375  0006BE                     
   376                           ;main.c: 46:     lcd_putMessage(&t);
   377  0006BE  0E01               	movlw	low main@t
   378  0006C0  6E0D               	movwf	lcd_putMessage@chaine^0,c
   379  0006C2  0E06               	movlw	high main@t
   380  0006C4  6E0E               	movwf	(lcd_putMessage@chaine+1)^0,c
   381  0006C6  ECA9  F004         	call	_lcd_putMessage	;wreg free
   382  0006CA                     l1373:
   383  0006CA  FFFF               	dw	65535	; assembler added errata NOP
   384                           
   385                           ;main.c: 49:     {;main.c: 52:         PORTCbits.RC0 ^= 1;
   386  0006CC  7082               	btg	130,0,c	;volatile
   387  0006CE                     
   388                           ;main.c: 53:          _delay((unsigned long)((50)*(16000000/4000.0)));
   389  0006CE  0E01               	movlw	1
   390  0006D0  6E13               	movwf	(??_main+1)^0,c
   391  0006D2  0EC3               	movlw	195
   392  0006D4  6E12               	movwf	??_main^0,c
   393  0006D6  0EED               	movlw	237
   394  0006D8                     u207:
   395  0006D8  FFFF               	dw	65535	; errata NOP
   396  0006DA  2EE8               	decfsz	wreg,f,c
   397  0006DC  D7FD               	bra	u207
   398  0006DE  2E12               	decfsz	??_main^0,f,c
   399  0006E0  D7FB               	bra	u207
   400  0006E2  2E13               	decfsz	(??_main+1)^0,f,c
   401  0006E4  D7F9               	bra	u207
   402  0006E6                     
   403                           ;main.c: 56:         if (g_nombreCar >= 1 )
   404  0006E6  501E               	movf	_g_nombreCar^0,w,c
   405  0006E8  101F               	iorwf	(_g_nombreCar+1)^0,w,c
   406  0006EA  B4D8               	btfsc	status,2,c
   407  0006EC  EF7A  F003         	goto	u181
   408  0006F0  EF7D  F003         	goto	u180
   409  0006F4                     u181:
   410  0006F4  FFFF               	dw	65535	; assembler added errata NOP
   411  0006F6  EF65  F003         	goto	l1373
   412  0006FA                     u180:
   413  0006FA  FFFF               	dw	65535	; assembler added errata NOP
   414  0006FC                     
   415                           ;main.c: 57:         {;main.c: 58:             lcd_ecritChar(g_temponClavier[g_nombreCar
      +                          -1]);
   416  0006FC  0E13               	movlw	low (_g_temponClavier+65535)
   417  0006FE  241E               	addwf	_g_nombreCar^0,w,c
   418  000700  6ED9               	movwf	fsr2l,c
   419  000702  0E00               	movlw	high (_g_temponClavier+65535)
   420  000704  201F               	addwfc	(_g_nombreCar+1)^0,w,c
   421  000706  6EDA               	movwf	fsr2h,c
   422  000708  50DF               	movf	indf2,w,c
   423  00070A  EC04  F004         	call	_lcd_ecritChar
   424  00070E                     
   425                           ;main.c: 59:             g_nombreCar--;
   426  00070E  061E               	decf	_g_nombreCar^0,f,c
   427  000710  A0D8               	btfss	status,0,c
   428  000712  061F               	decf	(_g_nombreCar+1)^0,f,c
   429  000714  EF65  F003         	goto	l1373
   430  000718  EF15  F000         	goto	start
   431  00071C                     __end_of_main:
   432                           	opt callstack 0
   433                           
   434 ;; *************** function _lcd_putMessage *****************
   435 ;; Defined at:
   436 ;;		line 385 in file "Lcd4Lignes.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  chaine          2   12[COMRAM] PTR const unsigned char 
   439 ;;		 -> main@t(5), 
   440 ;; Auto vars:     Size  Location     Type
   441 ;;  j               1   16[COMRAM] unsigned char 
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   451 ;;      Params:         2       0       0       0       0       0       0
   452 ;;      Locals:         1       0       0       0       0       0       0
   453 ;;      Temps:          2       0       0       0       0       0       0
   454 ;;      Totals:         5       0       0       0       0       0       0
   455 ;;Total ram usage:        5 bytes
   456 ;; Hardware stack levels used:    1
   457 ;; Hardware stack levels required when called:    6
   458 ;; This function calls:
   459 ;;		_lcd_ecritChar
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text1
   466  000952                     __ptext1:
   467                           	opt callstack 0
   468  000952                     _lcd_putMessage:
   469                           	opt callstack 0
   470  000952  FFFF               	dw	65535	; assembler added errata NOP
   471  000954                     
   472                           ;Lcd4Lignes.c: 385: void lcd_putMessage(const unsigned char *chaine);Lcd4Lignes.c: 386: 
      +                          {;Lcd4Lignes.c: 387:     unsigned char j;;Lcd4Lignes.c: 389:     for(j = 0; chaine[j] !=
      +                           0; j++)
   473  000954  0E00               	movlw	0
   474  000956  6E11               	movwf	lcd_putMessage@j^0,c
   475  000958  EFBF  F004         	goto	l1351
   476  00095C                     l1347:
   477  00095C  FFFF               	dw	65535	; assembler added errata NOP
   478                           
   479                           ;Lcd4Lignes.c: 390:         lcd_ecritChar(chaine[j]);
   480  00095E  5011               	movf	lcd_putMessage@j^0,w,c
   481  000960  240D               	addwf	lcd_putMessage@chaine^0,w,c
   482  000962  6E0F               	movwf	??_lcd_putMessage^0,c
   483  000964  0E00               	movlw	0
   484  000966  200E               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
   485  000968  6E10               	movwf	(??_lcd_putMessage+1)^0,c
   486  00096A  C00F  FFF6         	movff	??_lcd_putMessage,tblptrl
   487  00096E  C010  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   488  000972                     	if	0	;tblptru may be non-zero
   489  000972                     	endif
   490  000972                     	if	0	;tblptru may be non-zero
   491  000972                     	endif
   492  000972  0008               	tblrd		*
   493  000974  FFFF               	dw	65535	; errata NOP
   494  000976  50F5               	movf	tablat,w,c
   495  000978  EC04  F004         	call	_lcd_ecritChar
   496  00097C  2A11               	incf	lcd_putMessage@j^0,f,c
   497  00097E                     l1351:
   498  00097E  FFFF               	dw	65535	; assembler added errata NOP
   499  000980  5011               	movf	lcd_putMessage@j^0,w,c
   500  000982  240D               	addwf	lcd_putMessage@chaine^0,w,c
   501  000984  6E0F               	movwf	??_lcd_putMessage^0,c
   502  000986  0E00               	movlw	0
   503  000988  200E               	addwfc	(lcd_putMessage@chaine+1)^0,w,c
   504  00098A  6E10               	movwf	(??_lcd_putMessage+1)^0,c
   505  00098C  C00F  FFF6         	movff	??_lcd_putMessage,tblptrl
   506  000990  C010  FFF7         	movff	??_lcd_putMessage+1,tblptrh
   507  000994                     	if	0	;tblptru may be non-zero
   508  000994                     	endif
   509  000994                     	if	0	;tblptru may be non-zero
   510  000994                     	endif
   511  000994  0008               	tblrd		*
   512  000996  FFFF               	dw	65535	; errata NOP
   513  000998  50F5               	movf	tablat,w,c
   514  00099A  0900               	iorlw	0
   515  00099C  A4D8               	btfss	status,2,c
   516  00099E  EFD3  F004         	goto	u171
   517  0009A2  EFD6  F004         	goto	u170
   518  0009A6                     u171:
   519  0009A6  FFFF               	dw	65535	; assembler added errata NOP
   520  0009A8  EFAE  F004         	goto	l1347
   521  0009AC                     u170:
   522  0009AC  FFFF               	dw	65535	; assembler added errata NOP
   523  0009AE  0012               	return		;funcret
   524  0009B0  FFFF               	dw	65535	; errata NOP
   525  0009B2                     __end_of_lcd_putMessage:
   526                           	opt callstack 0
   527                           
   528 ;; *************** function _lcd_ecritChar *****************
   529 ;; Defined at:
   530 ;;		line 357 in file "Lcd4Lignes.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  car             1    wreg     unsigned char 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  car             1   10[COMRAM] unsigned char 
   535 ;;  posRam          1   11[COMRAM] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   545 ;;      Params:         0       0       0       0       0       0       0
   546 ;;      Locals:         2       0       0       0       0       0       0
   547 ;;      Temps:          2       0       0       0       0       0       0
   548 ;;      Totals:         4       0       0       0       0       0       0
   549 ;;Total ram usage:        4 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    5
   552 ;; This function calls:
   553 ;;		_lcd_wrCom
   554 ;;		_lcd_wrData
   555 ;; This function is called by:
   556 ;;		_lcd_putMessage
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text2
   562  000808                     __ptext2:
   563                           	opt callstack 0
   564  000808                     _lcd_ecritChar:
   565                           	opt callstack 0
   566  000808  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ;incstack = 0
   569                           ;lcd_ecritChar@car stored from wreg
   570  00080A  6E0B               	movwf	lcd_ecritChar@car^0,c
   571  00080C                     
   572                           ;Lcd4Lignes.c: 357: void lcd_ecritChar(unsigned char car);Lcd4Lignes.c: 358: {;Lcd4Ligne
      +                          s.c: 359:     unsigned char posRam;;Lcd4Lignes.c: 361:     posRam = lcd_wrData(car);
   573  00080C  500B               	movf	lcd_ecritChar@car^0,w,c
   574  00080E  ECD9  F004         	call	_lcd_wrData
   575  000812  6E0C               	movwf	lcd_ecritChar@posRam^0,c
   576                           
   577                           ;Lcd4Lignes.c: 362:     switch(posRam)
   578  000814  EF1E  F004         	goto	l1297
   579  000818                     l1289:
   580  000818  FFFF               	dw	65535	; assembler added errata NOP
   581                           
   582                           ;Lcd4Lignes.c: 365:             lcd_wrCom(0x40|0x80);
   583  00081A  0EC0               	movlw	192
   584  00081C  EC04  F003         	call	_lcd_wrCom
   585                           
   586                           ;Lcd4Lignes.c: 366:             break;
   587  000820  EF39  F004         	goto	l78
   588  000824                     l1291:
   589  000824  FFFF               	dw	65535	; assembler added errata NOP
   590                           
   591                           ;Lcd4Lignes.c: 368:             lcd_wrCom(0x14|0x80);
   592  000826  0E94               	movlw	148
   593  000828  EC04  F003         	call	_lcd_wrCom
   594                           
   595                           ;Lcd4Lignes.c: 369:             break;
   596  00082C  EF39  F004         	goto	l78
   597  000830                     l1293:
   598  000830  FFFF               	dw	65535	; assembler added errata NOP
   599                           
   600                           ;Lcd4Lignes.c: 371:             lcd_wrCom(0x54|0x80);
   601  000832  0ED4               	movlw	212
   602  000834  EC04  F003         	call	_lcd_wrCom
   603                           
   604                           ;Lcd4Lignes.c: 372:             break;
   605  000838  EF39  F004         	goto	l78
   606  00083C                     l1297:
   607  00083C  FFFF               	dw	65535	; assembler added errata NOP
   608  00083E  500C               	movf	lcd_ecritChar@posRam^0,w,c
   609  000840  6E09               	movwf	??_lcd_ecritChar^0,c
   610  000842  6A0A               	clrf	(??_lcd_ecritChar+1)^0,c
   611                           
   612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   613                           ; Switch size 1, requested type "simple"
   614                           ; Number of cases is 1, Range of values is 0 to 0
   615                           ; switch strategies available:
   616                           ; Name         Instructions Cycles
   617                           ; simple_byte            4     3 (average)
   618                           ;	Chosen strategy is simple_byte
   619  000844  500A               	movf	(??_lcd_ecritChar+1)^0,w,c
   620  000846  0A00               	xorlw	0	; case 0
   621  000848  B4D8               	btfsc	status,2,c
   622  00084A  EF29  F004         	goto	l1387
   623  00084E  EF39  F004         	goto	l78
   624  000852                     l1387:
   625  000852  FFFF               	dw	65535	; assembler added errata NOP
   626                           
   627                           ; Switch size 1, requested type "simple"
   628                           ; Number of cases is 3, Range of values is 20 to 84
   629                           ; switch strategies available:
   630                           ; Name         Instructions Cycles
   631                           ; simple_byte           10     6 (average)
   632                           ;	Chosen strategy is simple_byte
   633  000854  5009               	movf	??_lcd_ecritChar^0,w,c
   634  000856  0A14               	xorlw	20	; case 20
   635  000858  B4D8               	btfsc	status,2,c
   636  00085A  EF0C  F004         	goto	l1289
   637  00085E  0A54               	xorlw	84	; case 64
   638  000860  B4D8               	btfsc	status,2,c
   639  000862  EF18  F004         	goto	l1293
   640  000866  0A14               	xorlw	20	; case 84
   641  000868  B4D8               	btfsc	status,2,c
   642  00086A  EF12  F004         	goto	l1291
   643  00086E  EF39  F004         	goto	l78
   644  000872                     l78:
   645  000872  FFFF               	dw	65535	; assembler added errata NOP
   646  000874  0012               	return		;funcret
   647  000876  FFFF               	dw	65535	; errata NOP
   648  000878                     __end_of_lcd_ecritChar:
   649                           	opt callstack 0
   650                           
   651 ;; *************** function _lcd_init *****************
   652 ;; Defined at:
   653 ;;		line 256 in file "Lcd4Lignes.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   667 ;;      Params:         0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    7
   674 ;; This function calls:
   675 ;;		_lcd_initCGRam
   676 ;;		_lcd_resetSequence
   677 ;;		_lcd_wrCom
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text3
   684  000AD0                     __ptext3:
   685                           	opt callstack 0
   686  000AD0                     _lcd_init:
   687                           	opt callstack 0
   688  000AD0  FFFF               	dw	65535	; assembler added errata NOP
   689  000AD2                     
   690                           ;Lcd4Lignes.c: 258:     TRISB = TRISB & 0xEF;
   691  000AD2  5093               	movf	147,w,c	;volatile
   692  000AD4  0BEF               	andlw	239
   693  000AD6  6E93               	movwf	147,c	;volatile
   694  000AD8                     
   695                           ;Lcd4Lignes.c: 259:     lcd_resetSequence();
   696  000AD8  EC73  F004         	call	_lcd_resetSequence	;wreg free
   697  000ADC                     
   698                           ;Lcd4Lignes.c: 260:     lcd_wrCom(0x28);
   699  000ADC  0E28               	movlw	40
   700  000ADE  EC04  F003         	call	_lcd_wrCom
   701  000AE2                     
   702                           ;Lcd4Lignes.c: 261:     lcd_wrCom(0x0F);
   703  000AE2  0E0F               	movlw	15
   704  000AE4  EC04  F003         	call	_lcd_wrCom
   705  000AE8                     
   706                           ;Lcd4Lignes.c: 262:     lcd_wrCom(0x01);
   707  000AE8  0E01               	movlw	1
   708  000AEA  EC04  F003         	call	_lcd_wrCom
   709  000AEE                     
   710                           ;Lcd4Lignes.c: 263:     lcd_wrCom(0x06);
   711  000AEE  0E06               	movlw	6
   712  000AF0  EC04  F003         	call	_lcd_wrCom
   713  000AF4                     
   714                           ;Lcd4Lignes.c: 264:     lcd_wrCom(0x80);
   715  000AF4  0E80               	movlw	128
   716  000AF6  EC04  F003         	call	_lcd_wrCom
   717  000AFA                     
   718                           ;Lcd4Lignes.c: 265:     lcd_initCGRam();
   719  000AFA  EC3C  F004         	call	_lcd_initCGRam	;wreg free
   720  000AFE  0012               	return		;funcret
   721  000B00  FFFF               	dw	65535	; errata NOP
   722  000B02                     __end_of_lcd_init:
   723                           	opt callstack 0
   724                           
   725 ;; *************** function _lcd_resetSequence *****************
   726 ;; Defined at:
   727 ;;		line 219 in file "Lcd4Lignes.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   741 ;;      Params:         0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0
   743 ;;      Temps:          1       0       0       0       0       0       0
   744 ;;      Totals:         1       0       0       0       0       0       0
   745 ;;Total ram usage:        1 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    3
   748 ;; This function calls:
   749 ;;		_lcd_ecrireDonnees
   750 ;;		_lcd_strobeEnableBit
   751 ;; This function is called by:
   752 ;;		_lcd_init
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text4
   757  0008E6                     __ptext4:
   758                           	opt callstack 0
   759  0008E6                     _lcd_resetSequence:
   760                           	opt callstack 0
   761  0008E6  FFFF               	dw	65535	; assembler added errata NOP
   762  0008E8                     
   763                           ;Lcd4Lignes.c: 224:     TRISA = 0b00000000;
   764  0008E8  0E00               	movlw	0
   765  0008EA  6E92               	movwf	146,c	;volatile
   766  0008EC                     
   767                           ;Lcd4Lignes.c: 226:     _delay((unsigned long)((40)*(16000000/4000.0)));
   768  0008EC  0E9C               	movlw	156
   769  0008EE  6E07               	movwf	??_lcd_resetSequence^0,c
   770  0008F0  0EF1               	movlw	241
   771  0008F2                     u217:
   772  0008F2  FFFF               	dw	65535	; errata NOP
   773  0008F4  2EE8               	decfsz	wreg,f,c
   774  0008F6  D7FD               	bra	u217
   775  0008F8  2E07               	decfsz	??_lcd_resetSequence^0,f,c
   776  0008FA  D7FB               	bra	u217
   777  0008FC  D000               	nop2	
   778  0008FE                     
   779                           ;Lcd4Lignes.c: 227:     PORTBbits.RB4 = 0;
   780  0008FE  9881               	bcf	129,4,c	;volatile
   781  000900                     
   782                           ;Lcd4Lignes.c: 228:     PORTAbits.RA5 = 0;
   783  000900  9A80               	bcf	128,5,c	;volatile
   784  000902                     
   785                           ;Lcd4Lignes.c: 230:     lcd_ecrireDonnees(0x03);
   786  000902  0E03               	movlw	3
   787  000904  ECCA  F003         	call	_lcd_ecrireDonnees
   788  000908                     
   789                           ;Lcd4Lignes.c: 231:     lcd_strobeEnableBit();
   790  000908  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
   791  00090C                     
   792                           ;Lcd4Lignes.c: 232:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   793  00090C  0E28               	movlw	40
   794  00090E                     u227:
   795  00090E  FFFF               	dw	65535	; errata NOP
   796  000910  2EE8               	decfsz	wreg,f,c
   797  000912  D7FD               	bra	u227
   798  000914                     
   799                           ;Lcd4Lignes.c: 235:     lcd_ecrireDonnees(0x03);
   800  000914  0E03               	movlw	3
   801  000916  ECCA  F003         	call	_lcd_ecrireDonnees
   802  00091A                     
   803                           ;Lcd4Lignes.c: 236:     lcd_strobeEnableBit();
   804  00091A  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
   805  00091E                     
   806                           ;Lcd4Lignes.c: 237:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   807  00091E  0E28               	movlw	40
   808  000920                     u237:
   809  000920  FFFF               	dw	65535	; errata NOP
   810  000922  2EE8               	decfsz	wreg,f,c
   811  000924  D7FD               	bra	u237
   812  000926                     
   813                           ;Lcd4Lignes.c: 239:     lcd_ecrireDonnees(0x03);
   814  000926  0E03               	movlw	3
   815  000928  ECCA  F003         	call	_lcd_ecrireDonnees
   816  00092C                     
   817                           ;Lcd4Lignes.c: 240:     lcd_strobeEnableBit();
   818  00092C  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
   819  000930                     
   820                           ;Lcd4Lignes.c: 241:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   821  000930  0E28               	movlw	40
   822  000932                     u247:
   823  000932  FFFF               	dw	65535	; errata NOP
   824  000934  2EE8               	decfsz	wreg,f,c
   825  000936  D7FD               	bra	u247
   826  000938                     
   827                           ;Lcd4Lignes.c: 243:     lcd_ecrireDonnees(0x02);
   828  000938  0E02               	movlw	2
   829  00093A  ECCA  F003         	call	_lcd_ecrireDonnees
   830  00093E                     
   831                           ;Lcd4Lignes.c: 244:     lcd_strobeEnableBit();
   832  00093E  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
   833  000942                     
   834                           ;Lcd4Lignes.c: 245:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   835  000942  0E28               	movlw	40
   836  000944                     u257:
   837  000944  FFFF               	dw	65535	; errata NOP
   838  000946  2EE8               	decfsz	wreg,f,c
   839  000948  D7FD               	bra	u257
   840  00094A                     
   841                           ;Lcd4Lignes.c: 247:     TRISA = 0b00001111;
   842  00094A  0E0F               	movlw	15
   843  00094C  6E92               	movwf	146,c	;volatile
   844  00094E  0012               	return		;funcret
   845  000950  FFFF               	dw	65535	; errata NOP
   846  000952                     __end_of_lcd_resetSequence:
   847                           	opt callstack 0
   848                           
   849 ;; *************** function _lcd_initCGRam *****************
   850 ;; Defined at:
   851 ;;		line 415 in file "Lcd4Lignes.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  j               1   11[COMRAM] unsigned char 
   856 ;;  i               1   10[COMRAM] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   866 ;;      Params:         0       0       0       0       0       0       0
   867 ;;      Locals:         2       0       0       0       0       0       0
   868 ;;      Temps:          2       0       0       0       0       0       0
   869 ;;      Totals:         4       0       0       0       0       0       0
   870 ;;Total ram usage:        4 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    6
   873 ;; This function calls:
   874 ;;		_lcd_curseurHome
   875 ;;		_lcd_wrCom
   876 ;;		_lcd_wrData
   877 ;; This function is called by:
   878 ;;		_lcd_init
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text5
   883  000878                     __ptext5:
   884                           	opt callstack 0
   885  000878                     _lcd_initCGRam:
   886                           	opt callstack 0
   887  000878  FFFF               	dw	65535	; assembler added errata NOP
   888  00087A                     
   889                           ;Lcd4Lignes.c: 417:     char i,j;;Lcd4Lignes.c: 419:     lcd_wrCom(0x40);
   890  00087A  0E40               	movlw	64
   891  00087C  EC04  F003         	call	_lcd_wrCom
   892  000880                     
   893                           ;Lcd4Lignes.c: 420:     for(i=0;i<8;i++)
   894  000880  0E00               	movlw	0
   895  000882  6E0B               	movwf	lcd_initCGRam@i^0,c
   896  000884                     l1269:
   897  000884  FFFF               	dw	65535	; assembler added errata NOP
   898                           
   899                           ;Lcd4Lignes.c: 421:     {;Lcd4Lignes.c: 422:         for(j=0;j<8;j++)
   900  000886  0E00               	movlw	0
   901  000888  6E0C               	movwf	lcd_initCGRam@j^0,c
   902  00088A                     l1275:
   903  00088A  FFFF               	dw	65535	; assembler added errata NOP
   904                           
   905                           ;Lcd4Lignes.c: 423:             lcd_wrData(matCGRAM[i][j]);
   906  00088C  500B               	movf	lcd_initCGRam@i^0,w,c
   907  00088E  0D08               	mullw	8
   908  000890  0E60               	movlw	low _matCGRAM
   909  000892  6E09               	movwf	??_lcd_initCGRam^0,c
   910  000894  0E00               	movlw	high _matCGRAM
   911  000896  6E0A               	movwf	(??_lcd_initCGRam+1)^0,c
   912  000898  50F3               	movf	243,w,c
   913  00089A  2609               	addwf	??_lcd_initCGRam^0,f,c
   914  00089C  50F4               	movf	244,w,c
   915  00089E  220A               	addwfc	(??_lcd_initCGRam+1)^0,f,c
   916  0008A0  500C               	movf	lcd_initCGRam@j^0,w,c
   917  0008A2  2409               	addwf	??_lcd_initCGRam^0,w,c
   918  0008A4  6ED9               	movwf	fsr2l,c
   919  0008A6  0E00               	movlw	0
   920  0008A8  200A               	addwfc	(??_lcd_initCGRam+1)^0,w,c
   921  0008AA  6EDA               	movwf	fsr2h,c
   922  0008AC  50DF               	movf	indf2,w,c
   923  0008AE  ECD9  F004         	call	_lcd_wrData
   924  0008B2  2A0C               	incf	lcd_initCGRam@j^0,f,c
   925  0008B4  0E07               	movlw	7
   926  0008B6  640C               	cpfsgt	lcd_initCGRam@j^0,c
   927  0008B8  EF60  F004         	goto	u141
   928  0008BC  EF63  F004         	goto	u140
   929  0008C0                     u141:
   930  0008C0  FFFF               	dw	65535	; assembler added errata NOP
   931  0008C2  EF45  F004         	goto	l1275
   932  0008C6                     u140:
   933  0008C6  FFFF               	dw	65535	; assembler added errata NOP
   934  0008C8                     
   935                           ;Lcd4Lignes.c: 424:     }
   936  0008C8  2A0B               	incf	lcd_initCGRam@i^0,f,c
   937  0008CA  0E07               	movlw	7
   938  0008CC  640B               	cpfsgt	lcd_initCGRam@i^0,c
   939  0008CE  EF6B  F004         	goto	u151
   940  0008D2  EF6E  F004         	goto	u150
   941  0008D6                     u151:
   942  0008D6  FFFF               	dw	65535	; assembler added errata NOP
   943  0008D8  EF42  F004         	goto	l1269
   944  0008DC                     u150:
   945  0008DC  FFFF               	dw	65535	; assembler added errata NOP
   946  0008DE                     
   947                           ;Lcd4Lignes.c: 425:     lcd_curseurHome();
   948  0008DE  EC94  F005         	call	_lcd_curseurHome	;wreg free
   949  0008E2  0012               	return		;funcret
   950  0008E4  FFFF               	dw	65535	; errata NOP
   951  0008E6                     __end_of_lcd_initCGRam:
   952                           	opt callstack 0
   953                           
   954 ;; *************** function _lcd_wrData *****************
   955 ;; Defined at:
   956 ;;		line 186 in file "Lcd4Lignes.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  caractere       1    wreg     unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  caractere       1    6[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0
   973 ;;      Totals:         1       0       0       0       0       0       0
   974 ;;Total ram usage:        1 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    4
   977 ;; This function calls:
   978 ;;		_lcd_busy
   979 ;;		_lcd_ecrireDonnees
   980 ;;		_lcd_strobeEnableBit
   981 ;; This function is called by:
   982 ;;		_lcd_ecritChar
   983 ;;		_lcd_initCGRam
   984 ;;		_lcd_effaceChar
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text6
   989  0009B2                     __ptext6:
   990                           	opt callstack 0
   991  0009B2                     _lcd_wrData:
   992                           	opt callstack 0
   993  0009B2  FFFF               	dw	65535	; assembler added errata NOP
   994                           
   995                           ;incstack = 0
   996                           ;lcd_wrData@caractere stored from wreg
   997  0009B4  6E07               	movwf	lcd_wrData@caractere^0,c
   998  0009B6                     
   999                           ;Lcd4Lignes.c: 186: static unsigned char lcd_wrData(unsigned char caractere);Lcd4Lignes.
      +                          c: 187: {;Lcd4Lignes.c: 188:     lcd_busy();
  1000  0009B6  EC02  F005         	call	_lcd_busy	;wreg free
  1001  0009BA                     
  1002                           ;Lcd4Lignes.c: 189:     TRISA = 0b00000000;
  1003  0009BA  0E00               	movlw	0
  1004  0009BC  6E92               	movwf	146,c	;volatile
  1005  0009BE                     
  1006                           ;Lcd4Lignes.c: 190:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1007  0009BE  D000               	nop2		;2 cycle nop
  1008  0009C0  D000               	nop2		;2 cycle nop
  1009  0009C2  D000               	nop2		;2 cycle nop
  1010  0009C4  D000               	nop2		;2 cycle nop
  1011  0009C6                     
  1012                           ;Lcd4Lignes.c: 192:     PORTBbits.RB4 = 1;
  1013  0009C6  8881               	bsf	129,4,c	;volatile
  1014  0009C8                     
  1015                           ;Lcd4Lignes.c: 193:     PORTAbits.RA5 = 0;
  1016  0009C8  9A80               	bcf	128,5,c	;volatile
  1017  0009CA                     
  1018                           ;Lcd4Lignes.c: 195:     lcd_ecrireDonnees(caractere >> 4);
  1019  0009CA  3807               	swapf	lcd_wrData@caractere^0,w,c
  1020  0009CC  0B0F               	andlw	15
  1021  0009CE  ECCA  F003         	call	_lcd_ecrireDonnees
  1022  0009D2                     
  1023                           ;Lcd4Lignes.c: 196:     lcd_strobeEnableBit();
  1024  0009D2  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
  1025  0009D6                     
  1026                           ;Lcd4Lignes.c: 197:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1027  0009D6  D000               	nop2		;2 cycle nop
  1028  0009D8  D000               	nop2		;2 cycle nop
  1029  0009DA  D000               	nop2		;2 cycle nop
  1030  0009DC  D000               	nop2		;2 cycle nop
  1031  0009DE                     
  1032                           ;Lcd4Lignes.c: 199:     lcd_ecrireDonnees(caractere);
  1033  0009DE  5007               	movf	lcd_wrData@caractere^0,w,c
  1034  0009E0  ECCA  F003         	call	_lcd_ecrireDonnees
  1035  0009E4                     
  1036                           ;Lcd4Lignes.c: 200:     lcd_strobeEnableBit();
  1037  0009E4  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
  1038  0009E8                     
  1039                           ;Lcd4Lignes.c: 201:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1040  0009E8  D000               	nop2		;2 cycle nop
  1041  0009EA  D000               	nop2		;2 cycle nop
  1042  0009EC  D000               	nop2		;2 cycle nop
  1043  0009EE  D000               	nop2		;2 cycle nop
  1044  0009F0                     
  1045                           ;Lcd4Lignes.c: 203:     TRISA = 0b00001111;
  1046  0009F0  0E0F               	movlw	15
  1047  0009F2  6E92               	movwf	146,c	;volatile
  1048  0009F4                     
  1049                           ;Lcd4Lignes.c: 204:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1050  0009F4  D000               	nop2		;2 cycle nop
  1051  0009F6  D000               	nop2		;2 cycle nop
  1052  0009F8  D000               	nop2		;2 cycle nop
  1053  0009FA  D000               	nop2		;2 cycle nop
  1054                           
  1055                           ;Lcd4Lignes.c: 205:     return(lcd_busy());
  1056  0009FC  EC02  F005         	call	_lcd_busy	;wreg free
  1057  000A00  0012               	return		;funcret
  1058  000A02  FFFF               	dw	65535	; errata NOP
  1059  000A04                     __end_of_lcd_wrData:
  1060                           	opt callstack 0
  1061                           
  1062 ;; *************** function _lcd_curseurHome *****************
  1063 ;; Defined at:
  1064 ;;		line 286 in file "Lcd4Lignes.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1078 ;;      Params:         0       0       0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0
  1081 ;;      Totals:         0       0       0       0       0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    5
  1085 ;; This function calls:
  1086 ;;		_lcd_wrCom
  1087 ;; This function is called by:
  1088 ;;		_lcd_initCGRam
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text7
  1093  000B28                     __ptext7:
  1094                           	opt callstack 0
  1095  000B28                     _lcd_curseurHome:
  1096                           	opt callstack 0
  1097  000B28  FFFF               	dw	65535	; assembler added errata NOP
  1098  000B2A                     
  1099                           ;Lcd4Lignes.c: 288:     lcd_wrCom(0x02);
  1100  000B2A  0E02               	movlw	2
  1101  000B2C  EC04  F003         	call	_lcd_wrCom
  1102  000B30  0012               	return		;funcret
  1103  000B32  FFFF               	dw	65535	; errata NOP
  1104  000B34                     __end_of_lcd_curseurHome:
  1105                           	opt callstack 0
  1106                           
  1107 ;; *************** function _lcd_wrCom *****************
  1108 ;; Defined at:
  1109 ;;		line 154 in file "Lcd4Lignes.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  commande        1    wreg     unsigned char 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  commande        1    7[COMRAM] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      unsigned char 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1123 ;;      Params:         0       0       0       0       0       0       0
  1124 ;;      Locals:         1       0       0       0       0       0       0
  1125 ;;      Temps:          1       0       0       0       0       0       0
  1126 ;;      Totals:         2       0       0       0       0       0       0
  1127 ;;Total ram usage:        2 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    4
  1130 ;; This function calls:
  1131 ;;		_lcd_busy
  1132 ;;		_lcd_ecrireDonnees
  1133 ;;		_lcd_strobeEnableBit
  1134 ;; This function is called by:
  1135 ;;		_lcd_init
  1136 ;;		_lcd_curseurHome
  1137 ;;		_lcd_ecritChar
  1138 ;;		_lcd_initCGRam
  1139 ;;		_lcd_effaceAffichage
  1140 ;;		_lcd_gotoXY
  1141 ;;		_lcd_cacheCurseur
  1142 ;;		_lcd_montreCurseur
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text8
  1147  000608                     __ptext8:
  1148                           	opt callstack 0
  1149  000608                     _lcd_wrCom:
  1150                           	opt callstack 0
  1151  000608  FFFF               	dw	65535	; assembler added errata NOP
  1152                           
  1153                           ;incstack = 0
  1154                           ;lcd_wrCom@commande stored from wreg
  1155  00060A  6E08               	movwf	lcd_wrCom@commande^0,c
  1156  00060C                     
  1157                           ;Lcd4Lignes.c: 154: static unsigned char lcd_wrCom(unsigned char commande);Lcd4Lignes.c:
      +                           155: {;Lcd4Lignes.c: 156:     lcd_busy();
  1158  00060C  EC02  F005         	call	_lcd_busy	;wreg free
  1159  000610                     
  1160                           ;Lcd4Lignes.c: 158:     TRISA = 0b00000000;
  1161  000610  0E00               	movlw	0
  1162  000612  6E92               	movwf	146,c	;volatile
  1163  000614                     
  1164                           ;Lcd4Lignes.c: 159:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1165  000614  D000               	nop2		;2 cycle nop
  1166  000616  D000               	nop2		;2 cycle nop
  1167  000618  D000               	nop2		;2 cycle nop
  1168  00061A  D000               	nop2		;2 cycle nop
  1169  00061C                     
  1170                           ;Lcd4Lignes.c: 161:     PORTBbits.RB4 = 0;
  1171  00061C  9881               	bcf	129,4,c	;volatile
  1172  00061E                     
  1173                           ;Lcd4Lignes.c: 162:     PORTAbits.RA5 = 0;
  1174  00061E  9A80               	bcf	128,5,c	;volatile
  1175  000620                     
  1176                           ;Lcd4Lignes.c: 164:     lcd_ecrireDonnees(commande >> 4);
  1177  000620  3808               	swapf	lcd_wrCom@commande^0,w,c
  1178  000622  0B0F               	andlw	15
  1179  000624  ECCA  F003         	call	_lcd_ecrireDonnees
  1180  000628                     
  1181                           ;Lcd4Lignes.c: 165:     lcd_strobeEnableBit();
  1182  000628  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
  1183  00062C                     
  1184                           ;Lcd4Lignes.c: 166:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1185  00062C  D000               	nop2		;2 cycle nop
  1186  00062E  D000               	nop2		;2 cycle nop
  1187  000630  D000               	nop2		;2 cycle nop
  1188  000632  D000               	nop2		;2 cycle nop
  1189  000634                     
  1190                           ;Lcd4Lignes.c: 168:     lcd_ecrireDonnees(commande);
  1191  000634  5008               	movf	lcd_wrCom@commande^0,w,c
  1192  000636  ECCA  F003         	call	_lcd_ecrireDonnees
  1193  00063A                     
  1194                           ;Lcd4Lignes.c: 169:     lcd_strobeEnableBit();
  1195  00063A  EC9A  F005         	call	_lcd_strobeEnableBit	;wreg free
  1196  00063E                     
  1197                           ;Lcd4Lignes.c: 170:     _delay((unsigned long)((40)*(16000000/4000000.0)));
  1198  00063E  0E28               	movlw	40
  1199  000640                     u267:
  1200  000640  FFFF               	dw	65535	; errata NOP
  1201  000642  2EE8               	decfsz	wreg,f,c
  1202  000644  D7FD               	bra	u267
  1203  000646                     
  1204                           ;Lcd4Lignes.c: 172:     if ((commande == 0x01) || commande == 0x02)
  1205  000646  0408               	decf	lcd_wrCom@commande^0,w,c
  1206  000648  B4D8               	btfsc	status,2,c
  1207  00064A  EF29  F003         	goto	u121
  1208  00064E  EF2C  F003         	goto	u120
  1209  000652                     u121:
  1210  000652  FFFF               	dw	65535	; assembler added errata NOP
  1211  000654  EF37  F003         	goto	l1187
  1212  000658                     u120:
  1213  000658  FFFF               	dw	65535	; assembler added errata NOP
  1214  00065A  0E02               	movlw	2
  1215  00065C  1808               	xorwf	lcd_wrCom@commande^0,w,c
  1216  00065E  A4D8               	btfss	status,2,c
  1217  000660  EF34  F003         	goto	u131
  1218  000664  EF37  F003         	goto	u130
  1219  000668                     u131:
  1220  000668  FFFF               	dw	65535	; assembler added errata NOP
  1221  00066A  EF41  F003         	goto	l1189
  1222  00066E                     u130:
  1223  00066E                     l1187:
  1224  00066E  FFFF               	dw	65535	; assembler added errata NOP
  1225                           
  1226                           ;Lcd4Lignes.c: 173:         _delay((unsigned long)((2)*(16000000/4000.0)));
  1227  000670  0E08               	movlw	8
  1228  000672  6E07               	movwf	??_lcd_wrCom^0,c
  1229  000674  0ECB               	movlw	203
  1230  000676                     u277:
  1231  000676  FFFF               	dw	65535	; errata NOP
  1232  000678  2EE8               	decfsz	wreg,f,c
  1233  00067A  D7FD               	bra	u277
  1234  00067C  2E07               	decfsz	??_lcd_wrCom^0,f,c
  1235  00067E  D7FB               	bra	u277
  1236  000680  D000               	nop2	
  1237  000682                     l1189:
  1238  000682  FFFF               	dw	65535	; assembler added errata NOP
  1239                           
  1240                           ;Lcd4Lignes.c: 175:     TRISA = 0b00001111;
  1241  000684  0E0F               	movlw	15
  1242  000686  6E92               	movwf	146,c	;volatile
  1243  000688                     
  1244                           ;Lcd4Lignes.c: 176:     _delay((unsigned long)((2)*(16000000/4000000.0)));
  1245  000688  D000               	nop2		;2 cycle nop
  1246  00068A  D000               	nop2		;2 cycle nop
  1247  00068C  D000               	nop2		;2 cycle nop
  1248  00068E  D000               	nop2		;2 cycle nop
  1249  000690                     
  1250                           ;Lcd4Lignes.c: 177:     return(lcd_busy());;	Return value of _lcd_wrCom is never used
  1251  000690  EC02  F005         	call	_lcd_busy	;wreg free
  1252  000694  0012               	return		;funcret
  1253  000696  FFFF               	dw	65535	; errata NOP
  1254  000698                     __end_of_lcd_wrCom:
  1255                           	opt callstack 0
  1256                           
  1257 ;; *************** function _lcd_strobeEnableBit *****************
  1258 ;; Defined at:
  1259 ;;		line 429 in file "Lcd4Lignes.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		None
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         0       0       0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0
  1276 ;;      Totals:         0       0       0       0       0       0       0
  1277 ;;Total ram usage:        0 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    2
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_lcd_wrCom
  1284 ;;		_lcd_wrData
  1285 ;;		_lcd_resetSequence
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text9
  1290  000B34                     __ptext9:
  1291                           	opt callstack 0
  1292  000B34                     _lcd_strobeEnableBit:
  1293                           	opt callstack 0
  1294  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1295  000B36                     
  1296                           ;Lcd4Lignes.c: 431:     PORTAbits.RA4 = 1;
  1297  000B36  8880               	bsf	128,4,c	;volatile
  1298                           
  1299                           ;Lcd4Lignes.c: 432:     __nop();
  1300  000B38  F000               	nop	
  1301                           
  1302                           ;Lcd4Lignes.c: 433:     PORTAbits.RA4 = 0;
  1303  000B3A  9880               	bcf	128,4,c	;volatile
  1304  000B3C  0012               	return		;funcret
  1305  000B3E  FFFF               	dw	65535	; errata NOP
  1306  000B40                     __end_of_lcd_strobeEnableBit:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function _lcd_ecrireDonnees *****************
  1310 ;; Defined at:
  1311 ;;		line 105 in file "Lcd4Lignes.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  donnee          1    wreg     unsigned char 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  donnee          1    5[COMRAM] unsigned char 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2, status,0
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1325 ;;      Params:         0       0       0       0       0       0       0
  1326 ;;      Locals:         1       0       0       0       0       0       0
  1327 ;;      Temps:          1       0       0       0       0       0       0
  1328 ;;      Totals:         2       0       0       0       0       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    2
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_lcd_wrCom
  1336 ;;		_lcd_wrData
  1337 ;;		_lcd_resetSequence
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text10
  1342  000794                     __ptext10:
  1343                           	opt callstack 0
  1344  000794                     _lcd_ecrireDonnees:
  1345                           	opt callstack 0
  1346  000794  FFFF               	dw	65535	; assembler added errata NOP
  1347                           
  1348                           ;incstack = 0
  1349                           ;lcd_ecrireDonnees@donnee stored from wreg
  1350  000796  6E06               	movwf	lcd_ecrireDonnees@donnee^0,c
  1351  000798                     
  1352                           ;Lcd4Lignes.c: 105: static void lcd_ecrireDonnees(unsigned char donnee);Lcd4Lignes.c: 10
      +                          6: {;Lcd4Lignes.c: 109:     PORTAbits.RA0 = (donnee & 0x01);
  1353  000798  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1354  00079C  0E01               	movlw	1
  1355  00079E  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1356  0007A0  5080               	movf	128,w,c	;volatile
  1357  0007A2  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1358  0007A4  0BFE               	andlw	-2
  1359  0007A6  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1360  0007A8  6E80               	movwf	128,c	;volatile
  1361                           
  1362                           ;Lcd4Lignes.c: 110:     PORTAbits.RA1 = ((donnee >> 1) & 0x01);
  1363  0007AA  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1364  0007AE  90D8               	bcf	status,0,c
  1365  0007B0  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1366  0007B2  0E01               	movlw	1
  1367  0007B4  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1368  0007B6  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1369  0007B8  5080               	movf	128,w,c	;volatile
  1370  0007BA  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1371  0007BC  0BFD               	andlw	-3
  1372  0007BE  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1373  0007C0  6E80               	movwf	128,c	;volatile
  1374                           
  1375                           ;Lcd4Lignes.c: 111:     PORTAbits.RA2 = ((donnee >> 2) & 0x01);
  1376  0007C2  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1377  0007C6  90D8               	bcf	status,0,c
  1378  0007C8  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1379  0007CA  90D8               	bcf	status,0,c
  1380  0007CC  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1381  0007CE  0E01               	movlw	1
  1382  0007D0  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1383  0007D2  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1384  0007D4  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1385  0007D6  5080               	movf	128,w,c	;volatile
  1386  0007D8  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1387  0007DA  0BFB               	andlw	-5
  1388  0007DC  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1389  0007DE  6E80               	movwf	128,c	;volatile
  1390                           
  1391                           ;Lcd4Lignes.c: 112:     PORTAbits.RA3 = ((donnee >> 3) & 0x01);
  1392  0007E0  C006  F005         	movff	lcd_ecrireDonnees@donnee,??_lcd_ecrireDonnees
  1393  0007E4  90D8               	bcf	status,0,c
  1394  0007E6  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1395  0007E8  90D8               	bcf	status,0,c
  1396  0007EA  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1397  0007EC  90D8               	bcf	status,0,c
  1398  0007EE  3205               	rrcf	??_lcd_ecrireDonnees^0,f,c
  1399  0007F0  0E01               	movlw	1
  1400  0007F2  1605               	andwf	??_lcd_ecrireDonnees^0,f,c
  1401  0007F4  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1402  0007F6  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1403  0007F8  4605               	rlncf	??_lcd_ecrireDonnees^0,f,c
  1404  0007FA  5080               	movf	128,w,c	;volatile
  1405  0007FC  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1406  0007FE  0BF7               	andlw	-9
  1407  000800  1805               	xorwf	??_lcd_ecrireDonnees^0,w,c
  1408  000802  6E80               	movwf	128,c	;volatile
  1409  000804  0012               	return		;funcret
  1410  000806  FFFF               	dw	65535	; errata NOP
  1411  000808                     __end_of_lcd_ecrireDonnees:
  1412                           	opt callstack 0
  1413                           
  1414 ;; *************** function _lcd_busy *****************
  1415 ;; Defined at:
  1416 ;;		line 122 in file "Lcd4Lignes.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  adresse         1    5[COMRAM] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      unsigned char 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1430 ;;      Params:         0       0       0       0       0       0       0
  1431 ;;      Locals:         1       0       0       0       0       0       0
  1432 ;;      Temps:          1       0       0       0       0       0       0
  1433 ;;      Totals:         2       0       0       0       0       0       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    3
  1437 ;; This function calls:
  1438 ;;		_lcd_lireDonnees
  1439 ;; This function is called by:
  1440 ;;		_lcd_wrCom
  1441 ;;		_lcd_wrData
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text11
  1446  000A04                     __ptext11:
  1447                           	opt callstack 0
  1448  000A04                     _lcd_busy:
  1449                           	opt callstack 0
  1450  000A04  FFFF               	dw	65535	; assembler added errata NOP
  1451  000A06                     
  1452                           ;Lcd4Lignes.c: 124:     unsigned char adresse;;Lcd4Lignes.c: 126:     PORTBbits.RB4 = 0;
  1453  000A06  9881               	bcf	129,4,c	;volatile
  1454                           
  1455                           ;Lcd4Lignes.c: 127:     PORTAbits.RA5 = 1;
  1456  000A08  8A80               	bsf	128,5,c	;volatile
  1457  000A0A                     l29:
  1458  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  1459                           
  1460                           ;Lcd4Lignes.c: 130:     {;Lcd4Lignes.c: 131:         PORTAbits.RA4 = 1;
  1461  000A0C  8880               	bsf	128,4,c	;volatile
  1462                           
  1463                           ;Lcd4Lignes.c: 132:         __nop();
  1464  000A0E  F000               	nop	
  1465  000A10                     
  1466                           ;Lcd4Lignes.c: 133:         adresse = lcd_lireDonnees() << 4;
  1467  000A10  ECA0  F005         	call	_lcd_lireDonnees	;wreg free
  1468  000A14  6E05               	movwf	??_lcd_busy^0,c
  1469  000A16  3805               	swapf	??_lcd_busy^0,w,c
  1470  000A18  0BF0               	andlw	240
  1471  000A1A  6E06               	movwf	lcd_busy@adresse^0,c
  1472  000A1C                     
  1473                           ;Lcd4Lignes.c: 134:         PORTAbits.RA4 = 0;
  1474  000A1C  9880               	bcf	128,4,c	;volatile
  1475  000A1E                     
  1476                           ;Lcd4Lignes.c: 135:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1477  000A1E  D000               	nop2		;2 cycle nop
  1478  000A20  D000               	nop2		;2 cycle nop
  1479  000A22  D000               	nop2		;2 cycle nop
  1480  000A24  D000               	nop2		;2 cycle nop
  1481  000A26                     
  1482                           ;Lcd4Lignes.c: 136:         PORTAbits.RA4 = 1;
  1483  000A26  8880               	bsf	128,4,c	;volatile
  1484  000A28                     
  1485                           ;Lcd4Lignes.c: 137:         __nop();
  1486  000A28  F000               	nop	
  1487                           
  1488                           ;Lcd4Lignes.c: 138:         adresse |= lcd_lireDonnees();
  1489  000A2A  ECA0  F005         	call	_lcd_lireDonnees	;wreg free
  1490  000A2E  1206               	iorwf	lcd_busy@adresse^0,f,c
  1491  000A30                     
  1492                           ;Lcd4Lignes.c: 139:         PORTAbits.RA4 = 0;
  1493  000A30  9880               	bcf	128,4,c	;volatile
  1494  000A32                     
  1495                           ;Lcd4Lignes.c: 140:         _delay((unsigned long)((2)*(16000000/4000000.0)));
  1496  000A32  D000               	nop2		;2 cycle nop
  1497  000A34  D000               	nop2		;2 cycle nop
  1498  000A36  D000               	nop2		;2 cycle nop
  1499  000A38  D000               	nop2		;2 cycle nop
  1500  000A3A                     
  1501                           ;Lcd4Lignes.c: 141:     }
  1502  000A3A  BE06               	btfsc	lcd_busy@adresse^0,7,c
  1503  000A3C  EF22  F005         	goto	u111
  1504  000A40  EF25  F005         	goto	u110
  1505  000A44                     u111:
  1506  000A44  FFFF               	dw	65535	; assembler added errata NOP
  1507  000A46  EF05  F005         	goto	l29
  1508  000A4A                     u110:
  1509  000A4A  FFFF               	dw	65535	; assembler added errata NOP
  1510  000A4C                     
  1511                           ;Lcd4Lignes.c: 144:     PORTAbits.RA5 = 0;
  1512  000A4C  9A80               	bcf	128,5,c	;volatile
  1513  000A4E                     
  1514                           ;Lcd4Lignes.c: 145:     return(adresse&0x7f);
  1515  000A4E  5006               	movf	lcd_busy@adresse^0,w,c
  1516  000A50  0B7F               	andlw	127
  1517  000A52  0012               	return		;funcret
  1518  000A54  FFFF               	dw	65535	; errata NOP
  1519  000A56                     __end_of_lcd_busy:
  1520                           	opt callstack 0
  1521                           
  1522 ;; *************** function _lcd_lireDonnees *****************
  1523 ;; Defined at:
  1524 ;;		line 92 in file "Lcd4Lignes.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1538 ;;      Params:         0       0       0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    2
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_lcd_busy
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text12
  1553  000B40                     __ptext12:
  1554                           	opt callstack 0
  1555  000B40                     _lcd_lireDonnees:
  1556                           	opt callstack 0
  1557  000B40  FFFF               	dw	65535	; assembler added errata NOP
  1558  000B42                     
  1559                           ;Lcd4Lignes.c: 95:     return (PORTA & 0x0F);
  1560  000B42  5080               	movf	128,w,c	;volatile
  1561  000B44  0B0F               	andlw	15
  1562  000B46  0012               	return		;funcret
  1563  000B48  FFFF               	dw	65535	; errata NOP
  1564  000B4A                     __end_of_lcd_lireDonnees:
  1565                           	opt callstack 0
  1566                           
  1567 ;; *************** function _initialisation *****************
  1568 ;; Defined at:
  1569 ;;		line 68 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1583 ;;      Params:         0       0       0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0
  1586 ;;      Totals:         0       0       0       0       0       0       0
  1587 ;;Total ram usage:        0 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    2
  1590 ;; This function calls:
  1591 ;;		Nothing
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text13
  1598  000B02                     __ptext13:
  1599                           	opt callstack 0
  1600  000B02                     _initialisation:
  1601                           	opt callstack 0
  1602  000B02  FFFF               	dw	65535	; assembler added errata NOP
  1603  000B04                     
  1604                           ;main.c: 73:     ADCON1 = 0x07;
  1605  000B04  0E07               	movlw	7
  1606  000B06  6EC1               	movwf	193,c	;volatile
  1607                           
  1608                           ;main.c: 74:     TRISA = 0;
  1609  000B08  0E00               	movlw	0
  1610  000B0A  6E92               	movwf	146,c	;volatile
  1611  000B0C                     
  1612                           ;main.c: 75:     TRISBbits.RB4 = 0;
  1613  000B0C  9893               	bcf	147,4,c	;volatile
  1614                           
  1615                           ;main.c: 79:     CMCON = 0x07;
  1616  000B0E  0E07               	movlw	7
  1617  000B10  6EB4               	movwf	180,c	;volatile
  1618                           
  1619                           ;main.c: 80:     TRISD = 0x7F;
  1620  000B12  0E7F               	movlw	127
  1621  000B14  6E95               	movwf	149,c	;volatile
  1622                           
  1623                           ;main.c: 82:     TRISC = 0;
  1624  000B16  0E00               	movlw	0
  1625  000B18  6E94               	movwf	148,c	;volatile
  1626  000B1A                     
  1627                           ;main.c: 86:     TRISBbits.RB0 = 1;
  1628  000B1A  8093               	bsf	147,0,c	;volatile
  1629  000B1C                     
  1630                           ;main.c: 88:     INTCON2bits.INTEDG0 = 0;
  1631  000B1C  9CF1               	bcf	241,6,c	;volatile
  1632  000B1E                     
  1633                           ;main.c: 89:     INTCONbits.INT0IF = 0;
  1634  000B1E  92F2               	bcf	242,1,c	;volatile
  1635  000B20                     
  1636                           ;main.c: 90:     INTCONbits.INT0IE = 1;
  1637  000B20  88F2               	bsf	242,4,c	;volatile
  1638  000B22                     
  1639                           ;main.c: 91:     INTCONbits.GIE = 1;
  1640  000B22  8EF2               	bsf	242,7,c	;volatile
  1641  000B24  0012               	return		;funcret
  1642  000B26  FFFF               	dw	65535	; errata NOP
  1643  000B28                     __end_of_initialisation:
  1644                           	opt callstack 0
  1645                           
  1646 ;; *************** function _low_isr *****************
  1647 ;; Defined at:
  1648 ;;		line 48 in file "interrupts.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		None
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1662 ;;      Params:         0       0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0
  1664 ;;      Temps:          1       0       0       0       0       0       0
  1665 ;;      Totals:         1       0       0       0       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		Interrupt level 1
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	intcodelo
  1677  000018                     __pintcodelo:
  1678                           	opt callstack 0
  1679  000018                     _low_isr:
  1680                           	opt callstack 0
  1681  000018  FFFF               	dw	65535	; assembler added errata NOP
  1682                           
  1683                           ;incstack = 0
  1684  00001A  8020               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1685  00001C  CFE0 F004          	movff	bsr,??_low_isr
  1686  000020  C004  FFE0         	movff	??_low_isr,bsr
  1687  000024  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1688  000026  0010               	retfie	
  1689  000028  FFFF               	dw	65535	; errata NOP
  1690  00002A                     __end_of_low_isr:
  1691                           	opt callstack 0
  1692                           
  1693 ;; *************** function _high_isr *****************
  1694 ;; Defined at:
  1695 ;;		line 22 in file "interrupts.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  nLecture        1    2[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         0       0       0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0
  1711 ;;      Temps:          2       0       0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		Interrupt level 2
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	intcode
  1723  000008                     __pintcode:
  1724                           	opt callstack 0
  1725  000008                     _high_isr:
  1726                           	opt callstack 0
  1727  000008  FFFF               	dw	65535	; assembler added errata NOP
  1728                           
  1729                           ;incstack = 0
  1730  00000A  8220               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1731  00000C  EF8E  F003         	goto	int_func
  1732                           
  1733                           	psect	intcode_body
  1734  00071C                     __pintcode_body:
  1735                           	opt callstack 23
  1736  00071C                     int_func:
  1737                           	opt callstack 23
  1738  00071C  FFFF               	dw	65535	; errata NOP
  1739  00071E  CFD9 F001          	movff	fsr2l,??_high_isr
  1740  000722  CFDA F002          	movff	fsr2h,??_high_isr+1
  1741  000726                     
  1742                           ;interrupts.c: 24:     unsigned char nLecture;;interrupts.c: 26:     if(INTCONbits.INT0F
      +                          )
  1743  000726  A2F2               	btfss	242,1,c	;volatile
  1744  000728  EF98  F003         	goto	i2u8_41
  1745  00072C  EF9B  F003         	goto	i2u8_40
  1746  000730                     i2u8_41:
  1747  000730  FFFF               	dw	65535	; assembler added errata NOP
  1748  000732  EFC2  F003         	goto	i2l118
  1749  000736                     i2u8_40:
  1750  000736  FFFF               	dw	65535	; assembler added errata NOP
  1751  000738                     
  1752                           ;interrupts.c: 27:     {;interrupts.c: 28:         nLecture = PORTD & 0x7f;
  1753  000738  5083               	movf	131,w,c	;volatile
  1754  00073A  0B7F               	andlw	127
  1755  00073C  6E03               	movwf	high_isr@nLecture^0,c
  1756                           
  1757                           ;interrupts.c: 29:         PORTDbits.RD7 ^= 1;
  1758  00073E  7E83               	btg	131,7,c	;volatile
  1759                           
  1760                           ;interrupts.c: 31:         if(g_nombreCar < 10)
  1761  000740  501F               	movf	(_g_nombreCar+1)^0,w,c
  1762  000742  E107               	bnz	i2u9_41
  1763  000744  0E0A               	movlw	10
  1764  000746  5C1E               	subwf	_g_nombreCar^0,w,c
  1765  000748  B0D8               	btfsc	status,0,c
  1766  00074A  EFA9  F003         	goto	i2u9_41
  1767  00074E  EFAC  F003         	goto	i2u9_40
  1768  000752                     i2u9_41:
  1769  000752  FFFF               	dw	65535	; assembler added errata NOP
  1770  000754  EFB9  F003         	goto	i2l1099
  1771  000758                     i2u9_40:
  1772  000758  FFFF               	dw	65535	; assembler added errata NOP
  1773  00075A                     
  1774                           ;interrupts.c: 32:         {;interrupts.c: 33:             g_temponClavier[g_nombreCar] 
      +                          = nLecture;
  1775  00075A  0E14               	movlw	low _g_temponClavier
  1776  00075C  241E               	addwf	_g_nombreCar^0,w,c
  1777  00075E  6ED9               	movwf	fsr2l,c
  1778  000760  0E00               	movlw	high _g_temponClavier
  1779  000762  201F               	addwfc	(_g_nombreCar+1)^0,w,c
  1780  000764  6EDA               	movwf	fsr2h,c
  1781  000766  C003  FFDF         	movff	high_isr@nLecture,indf2
  1782  00076A                     
  1783                           ;interrupts.c: 34:             g_nombreCar++;
  1784  00076A  4A1E               	infsnz	_g_nombreCar^0,f,c
  1785  00076C  2A1F               	incf	(_g_nombreCar+1)^0,f,c
  1786                           
  1787                           ;interrupts.c: 35:         }
  1788  00076E  EFC0  F003         	goto	i2l1103
  1789  000772                     i2l1099:
  1790  000772  FFFF               	dw	65535	; assembler added errata NOP
  1791                           
  1792                           ;interrupts.c: 37:         {;interrupts.c: 38:             g_nombreCar = 1;
  1793  000774  0E00               	movlw	0
  1794  000776  6E1F               	movwf	(_g_nombreCar+1)^0,c
  1795  000778  0E01               	movlw	1
  1796  00077A  6E1E               	movwf	_g_nombreCar^0,c
  1797  00077C                     
  1798                           ;interrupts.c: 39:             g_temponClavier[0] = nLecture;
  1799  00077C  C003  F014         	movff	high_isr@nLecture,_g_temponClavier
  1800  000780                     i2l1103:
  1801  000780  FFFF               	dw	65535	; assembler added errata NOP
  1802                           
  1803                           ;interrupts.c: 42:         INTCONbits.INT0F = 0;
  1804  000782  92F2               	bcf	242,1,c	;volatile
  1805  000784                     i2l118:
  1806  000784  FFFF               	dw	65535	; assembler added errata NOP
  1807  000786  C002  FFDA         	movff	??_high_isr+1,fsr2h
  1808  00078A  C001  FFD9         	movff	??_high_isr,fsr2l
  1809  00078E  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1810  000790  0011               	retfie		f
  1811  000792  FFFF               	dw	65535	; errata NOP
  1812  000794                     __end_of_high_isr:
  1813                           	opt callstack 0
  1814                           
  1815                           	psect	rparam
  1816  0000                     
  1817                           	psect	temp
  1818  000020                     btemp:
  1819                           	opt callstack 0
  1820  000020                     	ds	1
  1821  0000                     int$flags	set	btemp
  1822  0000                     wtemp8	set	btemp+1
  1823  0000                     ttemp5	set	btemp+1
  1824  0000                     ttemp6	set	btemp+4
  1825  0000                     ttemp7	set	btemp+8
  1826                           tosu	equ	0xFFF
  1827                           tosh	equ	0xFFE
  1828                           tosl	equ	0xFFD
  1829                           stkptr	equ	0xFFC
  1830                           pclatu	equ	0xFFB
  1831                           pclath	equ	0xFFA
  1832                           pcl	equ	0xFF9
  1833                           tblptru	equ	0xFF8
  1834                           tblptrh	equ	0xFF7
  1835                           tblptrl	equ	0xFF6
  1836                           tablat	equ	0xFF5
  1837                           prodh	equ	0xFF4
  1838                           prodl	equ	0xFF3
  1839                           indf0	equ	0xFEF
  1840                           postinc0	equ	0xFEE
  1841                           postdec0	equ	0xFED
  1842                           preinc0	equ	0xFEC
  1843                           plusw0	equ	0xFEB
  1844                           fsr0h	equ	0xFEA
  1845                           fsr0l	equ	0xFE9
  1846                           wreg	equ	0xFE8
  1847                           indf1	equ	0xFE7
  1848                           postinc1	equ	0xFE6
  1849                           postdec1	equ	0xFE5
  1850                           preinc1	equ	0xFE4
  1851                           plusw1	equ	0xFE3
  1852                           fsr1h	equ	0xFE2
  1853                           fsr1l	equ	0xFE1
  1854                           bsr	equ	0xFE0
  1855                           indf2	equ	0xFDF
  1856                           postinc2	equ	0xFDE
  1857                           postdec2	equ	0xFDD
  1858                           preinc2	equ	0xFDC
  1859                           plusw2	equ	0xFDB
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        64
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      31
    BANK0           160      0      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(2) Largest target is 5
		 -> main@t(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_lcd_putMessage
    _lcd_putMessage->_lcd_ecritChar
    _lcd_ecritChar->_lcd_wrCom
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_curseurHome->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2124
                                             17 COMRAM     2     2      0
                     _initialisation
                      _lcd_ecritChar
                           _lcd_init
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       5     3      2     611
                                             12 COMRAM     5     3      2
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        4     4      0     445
                                              8 COMRAM     4     4      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1068
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      88
                                              6 COMRAM     1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     758
                                              8 COMRAM     4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     178
                                              6 COMRAM     1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     222
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            2     2      0     222
                                              6 COMRAM     2     2      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      88
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              4 COMRAM     2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_isr                                              1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_isr                                             3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _lcd_ecritChar
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrData
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      40       4       40.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      1F       1       33.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F       9        0.0%
DATA                 0      0      5F      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 03 14:27:33 2020

                                                                l30 0A4C  
                                                                l23 0B46  
                                                                l31 0A52  
                                                                l40 0A00  
                                                                l26 0804  
                                                                l43 094E  
                                                                l52 0B30  
                                                                l29 0A0A  
                                                                l37 0694  
                                                                l46 0AFE  
                                                                l84 09AE  
                                                                l78 0872  
                                                                l97 08E2  
                                                                bsr 000FE0  
                                                      __CFG_CP0$OFF 000000  
                                                      __CFG_CP1$OFF 000000  
                                                      __CFG_CP2$OFF 000000  
                                                      __CFG_CP3$OFF 000000  
                                                       __CFG_OSC$HS 000000  
                                      __size_of_lcd_strobeEnableBit 000C  
                                                               l100 0B3C  
                                                               l171 0B24  
                                                      __CFG_CPB$OFF 000000  
                                                               u110 0A4A  
                                                               u111 0A44  
                                                               u120 0658  
                                                               u121 0652  
                                                               u130 066E  
                                                               u131 0668  
                                                               u140 08C6  
                                                               u141 08C0  
                                                               u150 08DC  
                                                               u151 08D6  
                                                               u207 06D8  
                                                               u217 08F2  
                                                               u170 09AC  
                                                               u227 090E  
                                                               u171 09A6  
                                                               u180 06FA  
                                                               u237 0920  
                                                               u181 06F4  
                                                               u247 0932  
                                                               u257 0944  
                                                      __CFG_CPD$OFF 000000  
                                                               u267 0640  
                                                               u277 0676  
                                                               u197 06AE  
                                                      __CFG_BOR$OFF 000000  
                                                      __CFG_BORV$25 000000  
                                                               wreg 000FE8  
                                                      __CFG_LVP$OFF 000000  
                                                      __CFG_WDT$OFF 000000  
                                                              l1201 09BE  
                                                              l1131 0B42  
                                                              l1211 09D6  
                                                              l1203 09C6  
                                                              l1141 0A1C  
                                                              l1221 09F4  
                                                              l1213 09DE  
                                                              l1205 09C8  
                                                              l1071 0B0C  
                                                              l1151 0A32  
                                                              l1143 0A1E  
                                                              l1135 0798  
                                                              l1215 09E4  
                                                              l1207 09CA  
                                                              l1231 08FE  
                                                              l1311 0AE8  
                                                              l1303 0AD2  
                                                              l1081 0B22  
                                                              l1073 0B1A  
                                                              l1153 0A3A  
                                                              l1145 0A26  
                                                              l1137 0A06  
                                                              l1161 060C  
                                                              l1225 0B2A  
                                                              l1217 09E8  
                                                              l1209 09D2  
                                                              l1241 0914  
                                                              l1233 0900  
                                                              l1313 0AEE  
                                                              l1305 0AD8  
                                                              l1075 0B1C  
                                                              l1155 0A4E  
                                                              l1147 0A28  
                                                              l1139 0A10  
                                                              l1171 0620  
                                                              l1163 0610  
                                                              l1219 09F0  
                                                              l1251 0930  
                                                              l1243 091A  
                                                              l1235 0902  
                                                              l1227 08E8  
                                                              l1315 0AF4  
                                                              l1307 0ADC  
                                                              l1077 0B1E  
                                                              l1069 0B04  
                                                              l1149 0A30  
                                                              l1181 063E  
                                                              l1173 0628  
                                                              l1165 0614  
                                                              l1261 087A  
                                                              l1253 0938  
                                                              l1245 091E  
                                                              l1237 0908  
                                                              l1229 08EC  
                                                              l1317 0AFA  
                                                              l1309 0AE2  
                                                              l1079 0B20  
                                                              l1159 0B36  
                                                              l1191 0688  
                                                              l1183 0646  
                                                              l1175 062C  
                                                              l1167 061C  
                                                              l1263 0880  
                                                              l1255 093E  
                                                              l1247 0926  
                                                              l1239 090C  
                                                              l1351 097E  
                                                              l1193 0690  
                                                              l1185 065A  
                                                              l1177 0634  
                                                              l1169 061E  
                                                              l1281 08C8  
                                                              l1257 0942  
                                                              l1249 092C  
                                                              l1345 0954  
                                                              l1361 0698  
                                                              l1187 066E  
                                                              l1179 063A  
                                                              l1283 08CA  
                                                              l1275 088A  
                                                              l1259 094A  
                                                              l1291 0824  
                                                              l1347 095C  
                                                              l1371 06BE  
                                                              l1363 069E  
                                                              l1189 0682  
                                                              l1197 09B6  
                                                              l1285 08DE  
                                                              l1277 08B2  
                                                              l1269 0884  
                                                              l1293 0830  
                                                              l1349 097C  
                                                              l1381 070E  
                                                              l1373 06CA  
                                                              l1365 06A2  
                                                              l1199 09BA  
                                                              l1279 08B4  
                                                              l1287 080C  
                                                              l1375 06CE  
                                                              l1367 06A4  
                                                              l1289 0818  
                                                              l1297 083C  
                                                              l1377 06E6  
                                                              l1369 06BC  
                                                              l1387 0852  
                                                              l1379 06FC  
                                                  ??_initialisation 0005  
                                                              _main 0698  
                                                              fsr2h 000FDA  
                                                              indf2 000FDF  
                                                              fsr1l 000FE1  
                                                              fsr2l 000FD9  
                                                              btemp 0020  
                                                              prodh 000FF4  
                                                              prodl 000FF3  
                                                              start 002A  
                                                   ?_lcd_putMessage 000D  
                                                      ___param_bank 000000  
                                                     __CFG_OSCS$OFF 000000  
                                                   ??_lcd_ecritChar 0009  
                                                             ?_main 0001  
                                                             _CMCON 000FB4  
                                                             i1l123 0020  
                                                             i2l118 0784  
                                                             _PORTA 000F80  
                                                             _PORTD 000F83  
                                                             _TRISA 000F92  
                                                             _TRISB 000F93  
                                                             _TRISC 000F94  
                                                             _TRISD 000F95  
                                                     __CFG_PWRT$OFF 000000  
                                                     __CFG_WRT0$OFF 000000  
                                                     __CFG_WRT1$OFF 000000  
                                                     __CFG_WRT2$OFF 000000  
                                                     __CFG_WRT3$OFF 000000  
                                                    __CFG_EBTR0$OFF 000000  
                                                    __CFG_EBTR1$OFF 000000  
                                                    __CFG_EBTR2$OFF 000000  
                                                    __CFG_EBTR3$OFF 000000  
                                                     __CFG_STVR$OFF 000000  
                                                     __CFG_WRTB$OFF 000000  
                                                     __CFG_WRTC$OFF 000000  
                                                     __CFG_WRTD$OFF 000000  
                                                    __CFG_EBTRB$OFF 000000  
                                                   ??_lcd_initCGRam 0009  
                                                             main@t 0601  
                                                   __end_of_low_isr 002A  
                                                             tablat 000FF5  
                                                             ttemp5 0021  
                                                             ttemp6 0024  
                                                             ttemp7 0028  
                                                             status 000FD8  
                                                  high_isr@nLecture 0003  
                                                             wtemp8 0021  
                                                   __initialization 0A96  
                                                      __end_of_main 071C  
                                              lcd_putMessage@chaine 000D  
                                                            ??_main 0012  
                                                     __activetblptr 000002  
                                                            _ADCON1 000FC1  
                                                   _g_temponClavier 0014  
                                                            i2l1101 077C  
                                                            i2l1103 0780  
                                                            i2l1091 0726  
                                                            i2l1093 0738  
                                                            i2l1095 075A  
                                                            i2l1097 076A  
                                                            i2l1099 0772  
                                                    __CFG_WDTPS$128 000000  
                                                            i2u8_40 0736  
                                                            i2u8_41 0730  
                                                            i2u9_40 0758  
                                                            i2u9_41 0752  
                                                    lcd_initCGRam@i 000B  
                                                    lcd_initCGRam@j 000C  
                                                  __end_of_lcd_busy 0A56  
                                                  __end_of_lcd_init 0B02  
                                                  __end_of_high_isr 0794  
                                                            clear_0 0ABC  
                                                      __mediumconst 0000  
                                                         ??_low_isr 0004  
                                                            tblptrh 000FF7  
                                                            tblptrl 000FF6  
                                                            tblptru 000FF8  
                                                 _lcd_resetSequence 08E6  
                                                        __accesstop 0060  
                                           __end_of__initialization 0AC2  
                                               _lcd_strobeEnableBit 0B34  
                                                ?_lcd_resetSequence 0001  
                                                     ___rparam_used 000001  
                                                    __pcstackCOMRAM 0001  
                                                      __pidataBANK0 0A56  
                                               ??_lcd_resetSequence 0007  
                                                     __end_ofmain@t 0606  
                                              ?_lcd_strobeEnableBit 0001  
                                                __size_of_lcd_wrCom 0090  
                                         __end_of_lcd_resetSequence 0952  
                                          __size_of_lcd_lireDonnees 000A  
                                                 _lcd_ecrireDonnees 0794  
                                                  ??_lcd_putMessage 000F  
                                                ?_lcd_ecrireDonnees 0001  
                                          __size_of_lcd_curseurHome 000C  
                                               ??_lcd_ecrireDonnees 0005  
                                             ??_lcd_strobeEnableBit 0005  
                                                        _lcd_wrData 09B2  
                                         __end_of_lcd_ecrireDonnees 0808  
                                                         ?_lcd_busy 0001  
                                                         ?_lcd_init 0001  
                                           lcd_ecrireDonnees@donnee 0006  
                                                         ?_high_isr 0001  
                                                           __Hparam 0000  
                                                           __Lparam 0000  
                                                 __end_of_lcd_wrCom 0698  
                                                      __psmallconst 0600  
                                                           __pcinit 0A96  
                                                           __ramtop 0600  
                                                           __ptext0 0698  
                                                           __ptext1 0952  
                                                           __ptext2 0808  
                                                           __ptext3 0AD0  
                                                           __ptext4 08E6  
                                                           __ptext5 0878  
                                                           __ptext6 09B2  
                                                           __ptext7 0B28  
                                                           __ptext8 0608  
                                                           __ptext9 0B34  
                                             __end_of_lcd_ecritChar 0878  
                                                   lcd_busy@adresse 0006  
                                                           _low_isr 0018  
                                                  lcd_ecritChar@car 000B  
                                                        ??_lcd_busy 0005  
                                                        ??_lcd_init 000D  
                                        __size_of_lcd_resetSequence 006C  
                                                        ??_high_isr 0001  
                                                    __pintcode_body 071C  
                                              end_of_initialization 0AC2  
                                             __end_of_lcd_initCGRam 08E6  
                                                     __Lmediumconst 0000  
                                                           int_func 071C  
                                                 ??_lcd_lireDonnees 0005  
                                                           postdec1 000FE5  
                                                           postinc0 000FEE  
                                           __size_of_initialisation 0026  
                                                 ??_lcd_curseurHome 0009  
                                               lcd_ecritChar@posRam 000C  
                                                         _PORTAbits 000F80  
                                                         _PORTBbits 000F81  
                                                         _PORTCbits 000F82  
                                                         _PORTDbits 000F83  
                                                         _TRISBbits 000F93  
                                                       ?_lcd_wrData 0001  
                                        __size_of_lcd_ecrireDonnees 0074  
                                               start_initialization 0A96  
                                               __size_of_lcd_wrData 0052  
                                                       __pdataBANK0 0060  
                                                       __pbssCOMRAM 0014  
                                                 __size_of_lcd_busy 0052  
                                                 __size_of_lcd_init 0032  
                                                 __size_of_high_isr 078C  
                                       __end_of_lcd_strobeEnableBit 0B40  
                                                         __pintcode 0008  
                                                    _initialisation 0B02  
                                                       __pintcodelo 0018  
                                                         _lcd_wrCom 0608  
                                                       _g_nombreCar 001E  
                                                       __smallconst 0600  
                                                          ?_low_isr 0001  
                                                   _lcd_lireDonnees 0B40  
                                               lcd_wrData@caractere 0007  
                                                   _lcd_curseurHome 0B28  
                                            __end_of_initialisation 0B28  
                                           __size_of_lcd_putMessage 0060  
                                                        ?_lcd_wrCom 0001  
                                                      ??_lcd_wrData 0007  
                                                 lcd_wrCom@commande 0008  
                                                       _INTCON2bits 000FF1  
                                                         copy_data0 0AAA  
                                            __size_of_lcd_ecritChar 0070  
                                                          __Hrparam 0000  
                                                   ?_initialisation 0001  
                                                          __Lrparam 0000  
                                                __end_of_lcd_wrData 0A04  
                                            __size_of_lcd_initCGRam 006E  
                                                   lcd_putMessage@j 0011  
                                           __end_of_lcd_lireDonnees 0B4A  
                                                          _matCGRAM 0060  
                                           __end_of_lcd_curseurHome 0B34  
                                                  __size_of_low_isr 0012  
                                                          __ptext10 0794  
                                                          __ptext11 0A04  
                                                          __ptext12 0B40  
                                                          __ptext13 0B02  
                                                          _lcd_busy 0A04  
                                                          _lcd_init 0AD0  
                                                          _high_isr 0008  
                                                     __size_of_main 0084  
                                                          int$flags 0020  
                                                       ??_lcd_wrCom 0007  
                                                     _lcd_ecritChar 0808  
                                                        _INTCONbits 000FF2  
                                                          intlevel1 0B4A  
                                                          intlevel2 0B4A  
                                                     _lcd_initCGRam 0878  
                                                    _lcd_putMessage 0952  
                                                    ?_lcd_ecritChar 0001  
                                                  ?_lcd_lireDonnees 0001  
                                                  ?_lcd_curseurHome 0001  
                                                    ?_lcd_initCGRam 0001  
                                            __end_of_lcd_putMessage 09B2  
