

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 21 19:14:37 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 05/05/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K20 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataBANK0
    56  000328                     __pidataBANK0:
    57                           	callstack 0
    58                           
    59                           ;initializer for high_isr@F2673
    60  000328  18                 	db	24
    61  000329  3C                 	db	60
    62  00032A  66                 	db	102
    63  00032B  C3                 	db	195
    64  00032C  81                 	db	129
    65  0000                     _TMR3	set	4018
    66  0000                     _TMR1	set	4046
    67  0000                     _INTCONbits	set	4082
    68  0000                     _PIE2bits	set	4000
    69  0000                     _PIR2bits	set	4001
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIR1bits	set	3998
    72  0000                     _ADCON1	set	4033
    73  0000                     _ADCON2bits	set	4032
    74  0000                     _ANSEL	set	3966
    75  0000                     _TRISA	set	3986
    76  0000                     _TRISD	set	3989
    77  0000                     _PORTD	set	3971
    78  0000                     _T3CONbits	set	4017
    79  0000                     _T1CONbits	set	4045
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83                           
    84                           ; #config settings
    85                           
    86                           	psect	cinit
    87  0002F8                     __pcinit:
    88                           	callstack 0
    89  0002F8                     start_initialization:
    90                           	callstack 0
    91  0002F8                     __initialization:
    92                           	callstack 0
    93                           
    94                           ; Initialize objects allocated to BANK0 (5 bytes)
    95                           ; load TBLPTR registers with __pidataBANK0
    96  0002F8  0E28               	movlw	low __pidataBANK0
    97  0002FA  6EF6               	movwf	tblptrl,c
    98  0002FC  0E03               	movlw	high __pidataBANK0
    99  0002FE  6EF7               	movwf	tblptrh,c
   100  000300  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   101  000302  6EF8               	movwf	tblptru,c
   102  000304  EE00  F07C         	lfsr	0,__pdataBANK0
   103  000308  EE10 F005          	lfsr	1,5
   104  00030C                     copy_data0:
   105  00030C  0009               	tblrd		*+
   106  00030E  CFF5 FFEE          	movff	tablat,postinc0
   107  000312  50E5               	movf	postdec1,w,c
   108  000314  50E1               	movf	fsr1l,w,c
   109  000316  E1FA               	bnz	copy_data0
   110                           
   111                           ; Clear objects allocated to BANK0 (2 bytes)
   112  000318  0100               	movlb	0
   113  00031A  6B82               	clrf	(__pbssBANK0+1)& (0+255),b
   114  00031C  6B81               	clrf	__pbssBANK0& (0+255),b
   115  00031E                     end_of_initialization:
   116                           	callstack 0
   117  00031E                     __end_of__initialization:
   118                           	callstack 0
   119  00031E  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000320  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000322  0100               	movlb	0
   122  000324  EF65  F000         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssBANK0
   125  000081                     __pbssBANK0:
   126                           	callstack 0
   127  000081                     high_isr@indexTab:
   128                           	callstack 0
   129  000081                     	ds	2
   130                           
   131                           	psect	dataBANK0
   132  00007C                     __pdataBANK0:
   133                           	callstack 0
   134  00007C                     high_isr@F2673:
   135                           	callstack 0
   136  00007C                     	ds	5
   137                           
   138                           	psect	cstackBANK0
   139  000060                     __pcstackBANK0:
   140                           	callstack 0
   141  000060                     ?___awmod:
   142                           	callstack 0
   143  000060                     ___awmod@dividend:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147  000060                     	ds	2
   148  000062                     ___awmod@divisor:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x2
   152  000062                     	ds	2
   153  000064                     ___awmod@counter:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x4
   157  000064                     	ds	1
   158  000065                     ___awmod@sign:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x5
   162  000065                     	ds	1
   163  000066                     ??_high_isr:
   164                           
   165                           ; 1 bytes @ 0x6
   166  000066                     	ds	4
   167  00006A                     high_isr@tab:
   168                           	callstack 0
   169                           
   170                           ; 5 bytes @ 0xA
   171  00006A                     	ds	5
   172  00006F                     ??_main:
   173                           
   174                           ; 1 bytes @ 0xF
   175  00006F                     	ds	5
   176  000074                     main@resAN:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x14
   180  000074                     	ds	2
   181  000076                     main@effet:
   182                           	callstack 0
   183                           
   184                           ; 4 bytes @ 0x16
   185  000076                     	ds	4
   186  00007A                     main@i:
   187                           	callstack 0
   188                           
   189                           ; 2 bytes @ 0x1A
   190  00007A                     	ds	2
   191                           
   192 ;;
   193 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   194 ;;
   195 ;; *************** function _main *****************
   196 ;; Defined at:
   197 ;;		line 13 in file "main.c"
   198 ;; Parameters:    Size  Location     Type
   199 ;;		None
   200 ;; Auto vars:     Size  Location     Type
   201 ;;  effet           4   22[BANK0 ] unsigned long 
   202 ;;  i               2   26[BANK0 ] int 
   203 ;;  resAN           2   20[BANK0 ] unsigned int 
   204 ;; Return value:  Size  Location     Type
   205 ;;                  1    wreg      void 
   206 ;; Registers used:
   207 ;;		wreg, status,2, status,0, cstack
   208 ;; Tracked objects:
   209 ;;		On entry : 0/0
   210 ;;		On exit  : 0/0
   211 ;;		Unchanged: 0/0
   212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   213 ;;      Params:         0       0       0       0       0       0       0
   214 ;;      Locals:         0       8       0       0       0       0       0
   215 ;;      Temps:          0       5       0       0       0       0       0
   216 ;;      Totals:         0      13       0       0       0       0       0
   217 ;;Total ram usage:       13 bytes
   218 ;; Hardware stack levels required when called:    3
   219 ;; This function calls:
   220 ;;		_initialisation
   221 ;; This function is called by:
   222 ;;		Startup code after reset
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text0
   227  0000CA                     __ptext0:
   228                           	callstack 0
   229  0000CA                     _main:
   230                           	callstack 28
   231  0000CA                     
   232                           ;main.c: 16:     unsigned long effet = 0x87654321;
   233  0000CA  0E21               	movlw	33
   234  0000CC  0100               	movlb	0	; force () banked
   235  0000CE  6F76               	movwf	main@effet& (0+255),b
   236  0000D0  0E43               	movlw	67
   237  0000D2  6F77               	movwf	(main@effet+1)& (0+255),b
   238  0000D4  0E65               	movlw	101
   239  0000D6  6F78               	movwf	(main@effet+2)& (0+255),b
   240  0000D8  0E87               	movlw	135
   241  0000DA  6F79               	movwf	(main@effet+3)& (0+255),b
   242                           
   243                           ;main.c: 17:     unsigned int resAN = 0;
   244  0000DC  0E00               	movlw	0
   245  0000DE  0100               	movlb	0	; force () banked
   246  0000E0  6F75               	movwf	(main@resAN+1)& (0+255),b
   247  0000E2  0E00               	movlw	0
   248  0000E4  6F74               	movwf	main@resAN& (0+255),b
   249                           
   250                           ;main.c: 18:     int i = 0;
   251  0000E6  0E00               	movlw	0
   252  0000E8  0100               	movlb	0	; force () banked
   253  0000EA  6F7B               	movwf	(main@i+1)& (0+255),b
   254  0000EC  0E00               	movlw	0
   255  0000EE  6F7A               	movwf	main@i& (0+255),b
   256  0000F0                     
   257                           ; BSR set to: 0
   258                           ;main.c: 19:     initialisation();
   259  0000F0  EC55  F001         	call	_initialisation	;wreg free
   260  0000F4                     l828:
   261                           
   262                           ;main.c: 24:     {;main.c: 26:         ADCON0bits.GO_DONE = 1;
   263  0000F4  82C2               	bsf	194,1,c	;volatile
   264  0000F6                     l46:
   265  0000F6  B2C2               	btfsc	194,1,c	;volatile
   266  0000F8  EF80  F000         	goto	u71
   267  0000FC  EF82  F000         	goto	u70
   268  000100                     u71:
   269  000100  EF7B  F000         	goto	l46
   270  000104                     u70:
   271  000104                     
   272                           ;main.c: 28:         resAN = (unsigned int) (ADRESH << 8 | ADRESL);
   273  000104  50C3               	movf	195,w,c	;volatile
   274  000106  CFC4 F06F          	movff	4036,??_main	;volatile
   275  00010A  0100               	movlb	0	; force () banked
   276  00010C  6B70               	clrf	(??_main+1)& (0+255),b
   277  00010E  C06F  F070         	movff	??_main,??_main+1
   278  000112  6B6F               	clrf	??_main& (0+255),b
   279  000114  116F               	iorwf	??_main& (0+255),w,b
   280  000116  0100               	movlb	0	; force () banked
   281  000118  6F74               	movwf	main@resAN& (0+255),b
   282  00011A  0100               	movlb	0	; force () banked
   283  00011C  5170               	movf	(??_main+1)& (0+255),w,b
   284  00011E  0100               	movlb	0	; force () banked
   285  000120  6F75               	movwf	(main@resAN+1)& (0+255),b
   286                           
   287                           ;main.c: 30:         switch (ADRESH)
   288  000122  EFDC  F000         	goto	l838
   289  000126                     l50:
   290                           
   291                           ; BSR set to: 0
   292                           ;main.c: 33:                 T1CONbits.TMR1ON = 1;
   293  000126  80CD               	bsf	205,0,c	;volatile
   294                           
   295                           ;main.c: 34:                 T3CONbits.TMR3ON = 0;
   296  000128  90B1               	bcf	177,0,c	;volatile
   297                           
   298                           ;main.c: 35:                 break;
   299  00012A  EF7A  F000         	goto	l828
   300  00012E                     l52:
   301                           
   302                           ; BSR set to: 0
   303                           ;main.c: 39:                 T1CONbits.TMR1ON = 0;
   304  00012E  90CD               	bcf	205,0,c	;volatile
   305                           
   306                           ;main.c: 40:                 T3CONbits.TMR3ON = 1;
   307  000130  80B1               	bsf	177,0,c	;volatile
   308                           
   309                           ;main.c: 41:                  break;
   310  000132  EF7A  F000         	goto	l828
   311  000136                     l53:
   312                           
   313                           ; BSR set to: 0
   314                           ;main.c: 44:                 T1CONbits.TMR1ON = 0;
   315  000136  90CD               	bcf	205,0,c	;volatile
   316                           
   317                           ;main.c: 45:                 T3CONbits.TMR3ON = 0;
   318  000138  90B1               	bcf	177,0,c	;volatile
   319  00013A                     
   320                           ; BSR set to: 0
   321                           ;main.c: 46:                 PORTD = (unsigned char) ((effet >> (i*4)) & 0xF);
   322  00013A  C07A  F06F         	movff	main@i,??_main
   323  00013E  0100               	movlb	0	; force () banked
   324  000140  90D8               	bcf	status,0,c
   325  000142  376F               	rlcf	??_main& (0+255),f,b
   326  000144  90D8               	bcf	status,0,c
   327  000146  376F               	rlcf	??_main& (0+255),f,b
   328  000148  516F               	movf	??_main& (0+255),w,b
   329  00014A  C076  F070         	movff	main@effet,??_main+1
   330  00014E  C077  F071         	movff	main@effet+1,??_main+2
   331  000152  C078  F072         	movff	main@effet+2,??_main+3
   332  000156  C079  F073         	movff	main@effet+3,??_main+4
   333  00015A  2AE8               	incf	wreg,f,c
   334  00015C  EFB5  F000         	goto	u80
   335  000160                     u85:
   336  000160  90D8               	bcf	status,0,c
   337  000162  3373               	rrcf	(??_main+4)& (0+255),f,b
   338  000164  3372               	rrcf	(??_main+3)& (0+255),f,b
   339  000166  3371               	rrcf	(??_main+2)& (0+255),f,b
   340  000168  3370               	rrcf	(??_main+1)& (0+255),f,b
   341  00016A                     u80:
   342  00016A  2EE8               	decfsz	wreg,f,c
   343  00016C  EFB0  F000         	goto	u85
   344  000170  5170               	movf	(??_main+1)& (0+255),w,b
   345  000172  0B0F               	andlw	15
   346  000174  6E83               	movwf	131,c	;volatile
   347                           
   348                           ;main.c: 47:                 i = (i+1) % 8;
   349  000176  0E01               	movlw	1
   350  000178  0100               	movlb	0	; force () banked
   351  00017A  257A               	addwf	main@i& (0+255),w,b
   352  00017C  0100               	movlb	0	; force () banked
   353  00017E  6F6F               	movwf	??_main& (0+255),b
   354  000180  0E00               	movlw	0
   355  000182  0100               	movlb	0	; force () banked
   356  000184  217B               	addwfc	(main@i+1)& (0+255),w,b
   357  000186  0100               	movlb	0	; force () banked
   358  000188  6F70               	movwf	(??_main+1)& (0+255),b
   359  00018A  0E07               	movlw	7
   360  00018C  156F               	andwf	??_main& (0+255),w,b
   361  00018E  0100               	movlb	0	; force () banked
   362  000190  6F7A               	movwf	main@i& (0+255),b
   363  000192  6B7B               	clrf	(main@i+1)& (0+255),b
   364  000194                     
   365                           ; BSR set to: 0
   366                           ;main.c: 48:                 _delay((unsigned long)((300)*(1000000/4000.0)));
   367  000194  0E62               	movlw	98
   368  000196  0100               	movlb	0	; force () banked
   369  000198  6F6F               	movwf	??_main& (0+255),b
   370  00019A  0E65               	movlw	101
   371  00019C                     u237:
   372  00019C  2EE8               	decfsz	wreg,f,c
   373  00019E  D7FE               	bra	u237
   374  0001A0  2F6F               	decfsz	??_main& (0+255),f,b
   375  0001A2  D7FC               	bra	u237
   376  0001A4  F000 F000          	nop2	
   377                           
   378                           ;main.c: 50:                 break;
   379  0001A8  EF7A  F000         	goto	l828
   380  0001AC                     l54:
   381                           
   382                           ; BSR set to: 0
   383                           ;main.c: 53:                 T1CONbits.TMR1ON = 0;
   384  0001AC  90CD               	bcf	205,0,c	;volatile
   385                           
   386                           ;main.c: 54:                 T3CONbits.TMR3ON = 0;
   387  0001AE  90B1               	bcf	177,0,c	;volatile
   388                           
   389                           ;main.c: 55:                 PORTD = ADRESL;
   390  0001B0  CFC3 FF83          	movff	4035,3971	;volatile
   391                           
   392                           ;main.c: 56:                 break;
   393  0001B4  EF7A  F000         	goto	l828
   394  0001B8                     l838:
   395                           
   396                           ; BSR set to: 0
   397  0001B8  50C4               	movf	196,w,c	;volatile
   398  0001BA  0100               	movlb	0	; force () banked
   399  0001BC  6F6F               	movwf	??_main& (0+255),b
   400  0001BE  6B70               	clrf	(??_main+1)& (0+255),b
   401                           
   402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   403                           ; Switch size 1, requested type "simple"
   404                           ; Number of cases is 1, Range of values is 0 to 0
   405                           ; switch strategies available:
   406                           ; Name         Instructions Cycles
   407                           ; simple_byte            4     3 (average)
   408                           ;	Chosen strategy is simple_byte
   409  0001C0  5170               	movf	(??_main+1)& (0+255),w,b
   410  0001C2  0A00               	xorlw	0	; case 0
   411  0001C4  B4D8               	btfsc	status,2,c
   412  0001C6  EFE7  F000         	goto	l990
   413  0001CA  EF7A  F000         	goto	l828
   414  0001CE                     l990:
   415                           
   416                           ; BSR set to: 0
   417                           ; Switch size 1, requested type "simple"
   418                           ; Number of cases is 4, Range of values is 0 to 3
   419                           ; switch strategies available:
   420                           ; Name         Instructions Cycles
   421                           ; simple_byte           13     7 (average)
   422                           ;	Chosen strategy is simple_byte
   423  0001CE  516F               	movf	??_main& (0+255),w,b
   424  0001D0  0A00               	xorlw	0	; case 0
   425  0001D2  B4D8               	btfsc	status,2,c
   426  0001D4  EF93  F000         	goto	l50
   427  0001D8  0A01               	xorlw	1	; case 1
   428  0001DA  B4D8               	btfsc	status,2,c
   429  0001DC  EF97  F000         	goto	l52
   430  0001E0  0A03               	xorlw	3	; case 2
   431  0001E2  B4D8               	btfsc	status,2,c
   432  0001E4  EF9B  F000         	goto	l53
   433  0001E8  0A01               	xorlw	1	; case 3
   434  0001EA  B4D8               	btfsc	status,2,c
   435  0001EC  EFD6  F000         	goto	l54
   436  0001F0  EF7A  F000         	goto	l828
   437  0001F4  EF63  F000         	goto	start
   438  0001F8                     __end_of_main:
   439                           	callstack 0
   440                           
   441 ;; *************** function _initialisation *****************
   442 ;; Defined at:
   443 ;;		line 65 in file "main.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   457 ;;      Params:         0       0       0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    2
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text1
   472  0002AA                     __ptext1:
   473                           	callstack 0
   474  0002AA                     _initialisation:
   475                           	callstack 28
   476  0002AA                     
   477                           ;main.c: 68:     TRISD = 0;
   478  0002AA  0E00               	movlw	0
   479  0002AC  6E95               	movwf	149,c	;volatile
   480  0002AE                     
   481                           ;main.c: 71:     TRISA = 0xFF;
   482  0002AE  6892               	setf	146,c	;volatile
   483  0002B0                     
   484                           ;main.c: 72:     ANSEL = 0xFF;
   485  0002B0  687E               	setf	126,c	;volatile
   486                           
   487                           ;main.c: 77:     ADCON2bits.ADCS = 6;
   488  0002B2  50C0               	movf	192,w,c	;volatile
   489  0002B4  0BF8               	andlw	-8
   490  0002B6  0906               	iorlw	6
   491  0002B8  6EC0               	movwf	192,c	;volatile
   492                           
   493                           ;main.c: 78:     ADCON1 = 0;
   494  0002BA  0E00               	movlw	0
   495  0002BC  6EC1               	movwf	193,c	;volatile
   496                           
   497                           ;main.c: 79:     ADCON0bits.CHS = 0b0000;
   498  0002BE  0EC3               	movlw	-61
   499  0002C0  16C2               	andwf	194,f,c	;volatile
   500  0002C2                     
   501                           ;main.c: 81:     ADCON2bits.ADFM = 1;
   502  0002C2  8EC0               	bsf	192,7,c	;volatile
   503                           
   504                           ;main.c: 82:     ADCON2bits.ACQT = 7;
   505  0002C4  0E38               	movlw	56
   506  0002C6  12C0               	iorwf	192,f,c	;volatile
   507  0002C8                     
   508                           ;main.c: 83:     ADCON0bits.ADON = 1;
   509  0002C8  80C2               	bsf	194,0,c	;volatile
   510  0002CA                     
   511                           ;main.c: 89:     T1CONbits.RD16 = 1;
   512  0002CA  8ECD               	bsf	205,7,c	;volatile
   513                           
   514                           ;main.c: 90:     T1CONbits.T1CKPS = 0;
   515  0002CC  0ECF               	movlw	-49
   516  0002CE  16CD               	andwf	205,f,c	;volatile
   517  0002D0                     
   518                           ;main.c: 91:     T1CONbits.TMR1CS = 0;
   519  0002D0  92CD               	bcf	205,1,c	;volatile
   520                           
   521                           ;main.c: 92:     TMR1 = 9286;
   522  0002D2  0E24               	movlw	36
   523  0002D4  6ECF               	movwf	207,c	;volatile
   524  0002D6  0E46               	movlw	70
   525  0002D8  6ECE               	movwf	206,c	;volatile
   526  0002DA                     
   527                           ;main.c: 94:     PIR1bits.TMR1IF = 0;
   528  0002DA  909E               	bcf	158,0,c	;volatile
   529  0002DC                     
   530                           ;main.c: 95:     PIE1bits.TMR1IE = 1;
   531  0002DC  809D               	bsf	157,0,c	;volatile
   532  0002DE                     
   533                           ;main.c: 100:     T3CONbits.RD16 = 1;
   534  0002DE  8EB1               	bsf	177,7,c	;volatile
   535                           
   536                           ;main.c: 101:     T3CONbits.T3CKPS = 0b00;
   537  0002E0  0ECF               	movlw	-49
   538  0002E2  16B1               	andwf	177,f,c	;volatile
   539  0002E4                     
   540                           ;main.c: 102:     T3CONbits.TMR3CS = 0;
   541  0002E4  92B1               	bcf	177,1,c	;volatile
   542                           
   543                           ;main.c: 109:     TMR3 = 53036;
   544  0002E6  0ECF               	movlw	207
   545  0002E8  6EB3               	movwf	179,c	;volatile
   546  0002EA  0E2C               	movlw	44
   547  0002EC  6EB2               	movwf	178,c	;volatile
   548  0002EE                     
   549                           ;main.c: 112:     PIR2bits.TMR3IF = 0;
   550  0002EE  92A1               	bcf	161,1,c	;volatile
   551  0002F0                     
   552                           ;main.c: 113:     PIE2bits.TMR3IE = 1;
   553  0002F0  82A0               	bsf	160,1,c	;volatile
   554  0002F2                     
   555                           ;main.c: 117:     INTCONbits.PEIE = 1;
   556  0002F2  8CF2               	bsf	242,6,c	;volatile
   557  0002F4                     
   558                           ;main.c: 118:     INTCONbits.GIE = 1;
   559  0002F4  8EF2               	bsf	242,7,c	;volatile
   560  0002F6  0012               	return		;funcret
   561  0002F8                     __end_of_initialisation:
   562                           	callstack 0
   563                           
   564 ;; *************** function _high_isr *****************
   565 ;; Defined at:
   566 ;;		line 10 in file "interrupts.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  tab             5   10[BANK0 ] unsigned char [5]
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   580 ;;      Params:         0       0       0       0       0       0       0
   581 ;;      Locals:         0       5       0       0       0       0       0
   582 ;;      Temps:          0       4       0       0       0       0       0
   583 ;;      Totals:         0       9       0       0       0       0       0
   584 ;;Total ram usage:        9 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		___awmod
   589 ;; This function is called by:
   590 ;;		Interrupt level 2
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	intcode
   595  000008                     __pintcode:
   596                           	callstack 0
   597  000008                     _high_isr:
   598                           	callstack 28
   599                           
   600                           ;incstack = 0
   601  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   602  00000A  CFE1 F066          	movff	fsr1l,??_high_isr
   603  00000E  CFE2 F067          	movff	fsr1h,??_high_isr+1
   604  000012  CFD9 F068          	movff	fsr2l,??_high_isr+2
   605  000016  CFDA F069          	movff	fsr2h,??_high_isr+3
   606  00001A                     
   607                           ;interrupts.c: 13:     unsigned char tab[] = {0x18, 0x3C, 0x66,0xC3, 0x81};
   608  00001A  EE20  F07C         	lfsr	2,high_isr@F2673
   609  00001E  EE10  F06A         	lfsr	1,high_isr@tab
   610  000022  0E04               	movlw	4
   611  000024                     i2u19_41:
   612  000024  CFDB FFE3          	movff	plusw2,plusw1
   613  000028  06E8               	decf	wreg,f,c
   614  00002A  E2FC               	bc	i2u19_41
   615  00002C                     
   616                           ;interrupts.c: 14:     static int indexTab=0;;interrupts.c: 17:     if (PIR1bits.TMR1IF)
   617  00002C  A09E               	btfss	158,0,c	;volatile
   618  00002E  EF1B  F000         	goto	i2u20_41
   619  000032  EF1D  F000         	goto	i2u20_40
   620  000036                     i2u20_41:
   621  000036  EF40  F000         	goto	i2l948
   622  00003A                     i2u20_40:
   623  00003A                     
   624                           ;interrupts.c: 18:     {;interrupts.c: 19:         PORTD = tab[indexTab];
   625  00003A  0E6A               	movlw	low high_isr@tab
   626  00003C  0100               	movlb	0	; force () banked
   627  00003E  2581               	addwf	high_isr@indexTab& (0+255),w,b
   628  000040  6ED9               	movwf	fsr2l,c
   629  000042  0E00               	movlw	high high_isr@tab
   630  000044  2182               	addwfc	(high_isr@indexTab+1)& (0+255),w,b
   631  000046  6EDA               	movwf	fsr2h,c
   632  000048  50DF               	movf	indf2,w,c
   633  00004A  6E83               	movwf	131,c	;volatile
   634  00004C                     
   635                           ; BSR set to: 0
   636                           ;interrupts.c: 20:         PIR1bits.TMR1IF = 0;
   637  00004C  909E               	bcf	158,0,c	;volatile
   638  00004E                     
   639                           ; BSR set to: 0
   640                           ;interrupts.c: 21:         TMR1 = 9286;
   641  00004E  0E24               	movlw	36
   642  000050  6ECF               	movwf	207,c	;volatile
   643  000052  0E46               	movlw	70
   644  000054  6ECE               	movwf	206,c	;volatile
   645  000056                     
   646                           ; BSR set to: 0
   647                           ;interrupts.c: 22:         indexTab = (indexTab+ 1) % 5 ;
   648  000056  0E01               	movlw	1
   649  000058  0100               	movlb	0	; force () banked
   650  00005A  2581               	addwf	high_isr@indexTab& (0+255),w,b
   651  00005C  0100               	movlb	0	; force () banked
   652  00005E  6F60               	movwf	___awmod@dividend& (0+255),b
   653  000060  0E00               	movlw	0
   654  000062  0100               	movlb	0	; force () banked
   655  000064  2182               	addwfc	(high_isr@indexTab+1)& (0+255),w,b
   656  000066  0100               	movlb	0	; force () banked
   657  000068  6F61               	movwf	(___awmod@dividend+1)& (0+255),b
   658  00006A  0E00               	movlw	0
   659  00006C  0100               	movlb	0	; force () banked
   660  00006E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
   661  000070  0E05               	movlw	5
   662  000072  6F62               	movwf	___awmod@divisor& (0+255),b
   663  000074  ECFC  F000         	call	___awmod	;wreg free
   664  000078  C060  F081         	movff	?___awmod,high_isr@indexTab
   665  00007C  C061  F082         	movff	?___awmod+1,high_isr@indexTab+1
   666  000080                     i2l948:
   667                           
   668                           ;interrupts.c: 25:     if (PIR2bits.TMR3IF)
   669  000080  A2A1               	btfss	161,1,c	;volatile
   670  000082  EF45  F000         	goto	i2u21_41
   671  000086  EF47  F000         	goto	i2u21_40
   672  00008A                     i2u21_41:
   673  00008A  EF59  F000         	goto	i2l82
   674  00008E                     i2u21_40:
   675  00008E                     
   676                           ;interrupts.c: 26:     {;interrupts.c: 27:         PIR2bits.TMR3IF = 0;
   677  00008E  92A1               	bcf	161,1,c	;volatile
   678  000090                     
   679                           ;interrupts.c: 28:         TMR3 = 53036;
   680  000090  0ECF               	movlw	207
   681  000092  6EB3               	movwf	179,c	;volatile
   682  000094  0E2C               	movlw	44
   683  000096  6EB2               	movwf	178,c	;volatile
   684  000098                     
   685                           ;interrupts.c: 30:         PORTD = (unsigned char) (PORTD << 1);
   686  000098  5083               	movf	131,w,c	;volatile
   687  00009A  2483               	addwf	131,w,c	;volatile
   688  00009C  6E83               	movwf	131,c	;volatile
   689  00009E                     
   690                           ;interrupts.c: 31:         if (PORTD == 0)
   691  00009E  5083               	movf	131,w,c	;volatile
   692  0000A0  A4D8               	btfss	status,2,c
   693  0000A2  EF55  F000         	goto	i2u22_41
   694  0000A6  EF57  F000         	goto	i2u22_40
   695  0000AA                     i2u22_41:
   696  0000AA  EF59  F000         	goto	i2l82
   697  0000AE                     i2u22_40:
   698  0000AE                     
   699                           ;interrupts.c: 32:             PORTD = 1;
   700  0000AE  0E01               	movlw	1
   701  0000B0  6E83               	movwf	131,c	;volatile
   702  0000B2                     i2l82:
   703  0000B2  C069  FFDA         	movff	??_high_isr+3,fsr2h
   704  0000B6  C068  FFD9         	movff	??_high_isr+2,fsr2l
   705  0000BA  C067  FFE2         	movff	??_high_isr+1,fsr1h
   706  0000BE  C066  FFE1         	movff	??_high_isr,fsr1l
   707  0000C2  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   708  0000C4  0011               	retfie		f
   709  0000C6                     __end_of_high_isr:
   710                           	callstack 0
   711                           
   712 ;; *************** function ___awmod *****************
   713 ;; Defined at:
   714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  dividend        2    0[BANK0 ] int 
   717 ;;  divisor         2    2[BANK0 ] int 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  sign            1    5[BANK0 ] unsigned char 
   720 ;;  counter         1    4[BANK0 ] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2    0[BANK0 ] int 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   730 ;;      Params:         0       4       0       0       0       0       0
   731 ;;      Locals:         0       2       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0
   733 ;;      Totals:         0       6       0       0       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_high_isr
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744  0001F8                     __ptext3:
   745                           	callstack 0
   746  0001F8                     ___awmod:
   747                           	callstack 28
   748  0001F8  0E00               	movlw	0
   749  0001FA  0100               	movlb	0	; () banked
   750  0001FC  6F65               	movwf	___awmod@sign& (0+255),b
   751  0001FE                     
   752                           ; BSR set to: 0
   753  0001FE  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
   754  000200  EF06  F001         	goto	i2u13_40
   755  000204  EF04  F001         	goto	i2u13_41
   756  000208                     i2u13_41:
   757  000208  EF0C  F001         	goto	i2l908
   758  00020C                     i2u13_40:
   759  00020C                     
   760                           ; BSR set to: 0
   761  00020C  6D60               	negf	___awmod@dividend& (0+255),b
   762  00020E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
   763  000210  B0D8               	btfsc	status,0,c
   764  000212  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
   765  000214                     
   766                           ; BSR set to: 0
   767  000214  0E01               	movlw	1
   768  000216  6F65               	movwf	___awmod@sign& (0+255),b
   769  000218                     i2l908:
   770                           
   771                           ; BSR set to: 0
   772  000218  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
   773  00021A  EF13  F001         	goto	i2u14_40
   774  00021E  EF11  F001         	goto	i2u14_41
   775  000222                     i2u14_41:
   776  000222  EF17  F001         	goto	i2l912
   777  000226                     i2u14_40:
   778  000226                     
   779                           ; BSR set to: 0
   780  000226  6D62               	negf	___awmod@divisor& (0+255),b
   781  000228  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
   782  00022A  B0D8               	btfsc	status,0,c
   783  00022C  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
   784  00022E                     i2l912:
   785                           
   786                           ; BSR set to: 0
   787  00022E  5162               	movf	___awmod@divisor& (0+255),w,b
   788  000230  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
   789  000232  B4D8               	btfsc	status,2,c
   790  000234  EF1E  F001         	goto	i2u15_41
   791  000238  EF20  F001         	goto	i2u15_40
   792  00023C                     i2u15_41:
   793  00023C  EF44  F001         	goto	i2l928
   794  000240                     i2u15_40:
   795  000240                     
   796                           ; BSR set to: 0
   797  000240  0E01               	movlw	1
   798  000242  6F64               	movwf	___awmod@counter& (0+255),b
   799  000244  EF28  F001         	goto	i2l918
   800  000248                     i2l916:
   801                           
   802                           ; BSR set to: 0
   803  000248  90D8               	bcf	status,0,c
   804  00024A  3762               	rlcf	___awmod@divisor& (0+255),f,b
   805  00024C  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
   806  00024E  2B64               	incf	___awmod@counter& (0+255),f,b
   807  000250                     i2l918:
   808                           
   809                           ; BSR set to: 0
   810  000250  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
   811  000252  EF2D  F001         	goto	i2u16_41
   812  000256  EF2F  F001         	goto	i2u16_40
   813  00025A                     i2u16_41:
   814  00025A  EF24  F001         	goto	i2l916
   815  00025E                     i2u16_40:
   816  00025E                     i2l920:
   817                           
   818                           ; BSR set to: 0
   819  00025E  5162               	movf	___awmod@divisor& (0+255),w,b
   820  000260  5D60               	subwf	___awmod@dividend& (0+255),w,b
   821  000262  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
   822  000264  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
   823  000266  A0D8               	btfss	status,0,c
   824  000268  EF38  F001         	goto	i2u17_41
   825  00026C  EF3A  F001         	goto	i2u17_40
   826  000270                     i2u17_41:
   827  000270  EF3E  F001         	goto	i2l924
   828  000274                     i2u17_40:
   829  000274                     
   830                           ; BSR set to: 0
   831  000274  5162               	movf	___awmod@divisor& (0+255),w,b
   832  000276  5F60               	subwf	___awmod@dividend& (0+255),f,b
   833  000278  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
   834  00027A  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
   835  00027C                     i2l924:
   836                           
   837                           ; BSR set to: 0
   838  00027C  90D8               	bcf	status,0,c
   839  00027E  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
   840  000280  3362               	rrcf	___awmod@divisor& (0+255),f,b
   841  000282                     
   842                           ; BSR set to: 0
   843  000282  2F64               	decfsz	___awmod@counter& (0+255),f,b
   844  000284  EF2F  F001         	goto	i2l920
   845  000288                     i2l928:
   846                           
   847                           ; BSR set to: 0
   848  000288  5165               	movf	___awmod@sign& (0+255),w,b
   849  00028A  B4D8               	btfsc	status,2,c
   850  00028C  EF4A  F001         	goto	i2u18_41
   851  000290  EF4C  F001         	goto	i2u18_40
   852  000294                     i2u18_41:
   853  000294  EF50  F001         	goto	i2l932
   854  000298                     i2u18_40:
   855  000298                     
   856                           ; BSR set to: 0
   857  000298  6D60               	negf	___awmod@dividend& (0+255),b
   858  00029A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
   859  00029C  B0D8               	btfsc	status,0,c
   860  00029E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
   861  0002A0                     i2l932:
   862                           
   863                           ; BSR set to: 0
   864  0002A0  C060  F060         	movff	___awmod@dividend,?___awmod
   865  0002A4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
   866  0002A8                     
   867                           ; BSR set to: 0
   868  0002A8  0012               	return		;funcret
   869  0002AA                     __end_of___awmod:
   870                           	callstack 0
   871  0000                     
   872                           	psect	param0
   873  0000                     
   874                           	psect	temp
   875  000001                     btemp:
   876                           	callstack 0
   877  000001                     	ds	1
   878  0000                     int$flags	set	btemp
   879  0000                     wtemp8	set	btemp+1
   880  0000                     ttemp5	set	btemp+1
   881  0000                     ttemp6	set	btemp+4
   882  0000                     ttemp7	set	btemp+8
   883                           
   884                           	psect	idloc
   885                           
   886                           ;Config register IDLOC0 @ 0x200000
   887                           ;	unspecified, using default values
   888  200000                     	org	2097152
   889  200000  FF                 	db	255
   890                           
   891                           ;Config register IDLOC1 @ 0x200001
   892                           ;	unspecified, using default values
   893  200001                     	org	2097153
   894  200001  FF                 	db	255
   895                           
   896                           ;Config register IDLOC2 @ 0x200002
   897                           ;	unspecified, using default values
   898  200002                     	org	2097154
   899  200002  FF                 	db	255
   900                           
   901                           ;Config register IDLOC3 @ 0x200003
   902                           ;	unspecified, using default values
   903  200003                     	org	2097155
   904  200003  FF                 	db	255
   905                           
   906                           ;Config register IDLOC4 @ 0x200004
   907                           ;	unspecified, using default values
   908  200004                     	org	2097156
   909  200004  FF                 	db	255
   910                           
   911                           ;Config register IDLOC5 @ 0x200005
   912                           ;	unspecified, using default values
   913  200005                     	org	2097157
   914  200005  FF                 	db	255
   915                           
   916                           ;Config register IDLOC6 @ 0x200006
   917                           ;	unspecified, using default values
   918  200006                     	org	2097158
   919  200006  FF                 	db	255
   920                           
   921                           ;Config register IDLOC7 @ 0x200007
   922                           ;	unspecified, using default values
   923  200007                     	org	2097159
   924  200007  FF                 	db	255
   925                           
   926                           	psect	config
   927                           
   928                           ; Padding undefined space
   929  300000                     	org	3145728
   930  300000  FF                 	db	255
   931                           
   932                           ;Config register CONFIG1H @ 0x300001
   933                           ;	Oscillator Selection bits
   934                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   935                           ;	Fail-Safe Clock Monitor Enable bit
   936                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   937                           ;	Internal/External Oscillator Switchover bit
   938                           ;	IESO = OFF, Oscillator Switchover mode disabled
   939  300001                     	org	3145729
   940  300001  08                 	db	8
   941                           
   942                           ;Config register CONFIG2L @ 0x300002
   943                           ;	Power-up Timer Enable bit
   944                           ;	PWRT = OFF, PWRT disabled
   945                           ;	Brown-out Reset Enable bits
   946                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   947                           ;	Brown Out Reset Voltage bits
   948                           ;	BORV = 18, VBOR set to 1.8 V nominal
   949  300002                     	org	3145730
   950  300002  1F                 	db	31
   951                           
   952                           ;Config register CONFIG2H @ 0x300003
   953                           ;	Watchdog Timer Enable bit
   954                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   955                           ;	Watchdog Timer Postscale Select bits
   956                           ;	WDTPS = 32768, 1:32768
   957  300003                     	org	3145731
   958  300003  1E                 	db	30
   959                           
   960                           ; Padding undefined space
   961  300004                     	org	3145732
   962  300004  FF                 	db	255
   963                           
   964                           ;Config register CONFIG3H @ 0x300005
   965                           ;	CCP2 MUX bit
   966                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   967                           ;	PORTB A/D Enable bit
   968                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   969                           ;	Low-Power Timer1 Oscillator Enable bit
   970                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   971                           ;	HFINTOSC Fast Start-up
   972                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   973                           ;	MCLR Pin Enable bit
   974                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   975  300005                     	org	3145733
   976  300005  8B                 	db	139
   977                           
   978                           ;Config register CONFIG4L @ 0x300006
   979                           ;	Stack Full/Underflow Reset Enable bit
   980                           ;	STVREN = ON, Stack full/underflow will cause Reset
   981                           ;	Single-Supply ICSP Enable bit
   982                           ;	LVP = OFF, Single-Supply ICSP disabled
   983                           ;	Extended Instruction Set Enable bit
   984                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   985                           ;	Background Debugger Enable bit
   986                           ;	DEBUG = 0x1, unprogrammed default
   987  300006                     	org	3145734
   988  300006  81                 	db	129
   989                           
   990                           ; Padding undefined space
   991  300007                     	org	3145735
   992  300007  FF                 	db	255
   993                           
   994                           ;Config register CONFIG5L @ 0x300008
   995                           ;	Code Protection Block 0
   996                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   997                           ;	Code Protection Block 1
   998                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   999                           ;	Code Protection Block 2
  1000                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1001                           ;	Code Protection Block 3
  1002                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1003  300008                     	org	3145736
  1004  300008  0F                 	db	15
  1005                           
  1006                           ;Config register CONFIG5H @ 0x300009
  1007                           ;	Boot Block Code Protection bit
  1008                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1009                           ;	Data EEPROM Code Protection bit
  1010                           ;	CPD = OFF, Data EEPROM not code-protected
  1011  300009                     	org	3145737
  1012  300009  C0                 	db	192
  1013                           
  1014                           ;Config register CONFIG6L @ 0x30000A
  1015                           ;	Write Protection Block 0
  1016                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1017                           ;	Write Protection Block 1
  1018                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1019                           ;	Write Protection Block 2
  1020                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1021                           ;	Write Protection Block 3
  1022                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1023  30000A                     	org	3145738
  1024  30000A  0F                 	db	15
  1025                           
  1026                           ;Config register CONFIG6H @ 0x30000B
  1027                           ;	Configuration Register Write Protection bit
  1028                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1029                           ;	Boot Block Write Protection bit
  1030                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1031                           ;	Data EEPROM Write Protection bit
  1032                           ;	WRTD = OFF, Data EEPROM not write-protected
  1033  30000B                     	org	3145739
  1034  30000B  E0                 	db	224
  1035                           
  1036                           ;Config register CONFIG7L @ 0x30000C
  1037                           ;	Table Read Protection Block 0
  1038                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1039                           ;	Table Read Protection Block 1
  1040                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1041                           ;	Table Read Protection Block 2
  1042                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1043                           ;	Table Read Protection Block 3
  1044                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1045  30000C                     	org	3145740
  1046  30000C  0F                 	db	15
  1047                           
  1048                           ;Config register CONFIG7H @ 0x30000D
  1049                           ;	Boot Block Table Read Protection bit
  1050                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1051  30000D                     	org	3145741
  1052  30000D  40                 	db	64
  1053                           tosu	equ	0xFFF
  1054                           tosh	equ	0xFFE
  1055                           tosl	equ	0xFFD
  1056                           stkptr	equ	0xFFC
  1057                           pclatu	equ	0xFFB
  1058                           pclath	equ	0xFFA
  1059                           pcl	equ	0xFF9
  1060                           tblptru	equ	0xFF8
  1061                           tblptrh	equ	0xFF7
  1062                           tblptrl	equ	0xFF6
  1063                           tablat	equ	0xFF5
  1064                           prodh	equ	0xFF4
  1065                           prodl	equ	0xFF3
  1066                           indf0	equ	0xFEF
  1067                           postinc0	equ	0xFEE
  1068                           postdec0	equ	0xFED
  1069                           preinc0	equ	0xFEC
  1070                           plusw0	equ	0xFEB
  1071                           fsr0h	equ	0xFEA
  1072                           fsr0l	equ	0xFE9
  1073                           wreg	equ	0xFE8
  1074                           indf1	equ	0xFE7
  1075                           postinc1	equ	0xFE6
  1076                           postdec1	equ	0xFE5
  1077                           preinc1	equ	0xFE4
  1078                           plusw1	equ	0xFE3
  1079                           fsr1h	equ	0xFE2
  1080                           fsr1l	equ	0xFE1
  1081                           bsr	equ	0xFE0
  1082                           indf2	equ	0xFDF
  1083                           postinc2	equ	0xFDE
  1084                           postdec2	equ	0xFDD
  1085                           preinc2	equ	0xFDC
  1086                           plusw2	equ	0xFDB
  1087                           fsr2h	equ	0xFDA
  1088                           fsr2l	equ	0xFD9
  1089                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     28      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0      45
                                             15 BANK0     13    13      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             9     9      0     472
                                              6 BANK0      9     9      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      23       5       21.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      15        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 21 19:14:37 2021

                     l50 0126                       l60 02F6                       l52 012E  
                     l53 0136                       l54 01AC                       l46 00F6  
                     u70 0104                       u71 0100                       u80 016A  
                     u85 0160                      l830 0104                      l760 02AE  
                    l832 013A                      l824 00CA                      l770 02D0  
                    l762 02B0                      l834 0194                      l826 00F0  
                    l780 02EE                      l772 02DA                      l764 02C2  
                    l828 00F4                      l782 02F0                      l774 02DC  
                    l766 02C8                      l758 02AA                      l838 01B8  
                    l784 02F2                      l776 02DE                      l768 02CA  
                    l786 02F4                      l778 02E4                      l990 01CE  
                    u237 019C             ___awmod@sign 0065                      wreg 000FE8  
            high_isr@tab 006A                     i2l82 00B2                     _TMR1 000FCE  
                   _TMR3 000FB2         ??_initialisation 006F                     _main 00CA  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0001  
                   start 00C6             ___param_bank 000000                    ?_main 0060  
        __end_of___awmod 02AA                    _ANSEL 000F7E                    i2l329 02A8  
                  i2l900 01F8                    i2l910 0226                    i2l902 01FE  
                  i2l920 025E                    i2l912 022E                    i2l904 020C  
                  i2l930 0298                    i2l922 0274                    i2l914 0240  
                  i2l906 0214                    i2l932 02A0                    i2l924 027C  
                  i2l916 0248                    i2l908 0218                    i2l940 003A  
                  i2l926 0282                    i2l918 0250                    i2l950 008E  
                  i2l942 004C                    i2l928 0288                    i2l952 0090  
                  i2l944 004E                    i2l936 001A                    i2l954 0098  
                  i2l946 0056                    i2l938 002C                    i2l956 009E  
                  i2l948 0080                    i2l958 00AE                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95                    main@i 007A  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  status 000FD8            high_isr@F2673 007C                    wtemp8 0002  
        __initialization 02F8             __end_of_main 01F8         high_isr@indexTab 0081  
                 ??_main 006F            __activetblptr 000003                   _ADCON1 000FC1  
                 _ADRESH 000FC4                   _ADRESL 000FC3         __end_of_high_isr 00C6  
              ??___awmod 0064          ___awmod@divisor 0062          ___awmod@counter 0064  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 031E            ___rparam_used 000000  
           __pidataBANK0 0328               __pbssBANK0 0081                  i2u20_40 003A  
                i2u20_41 0036                  i2u13_40 020C                  i2u21_40 008E  
                i2u13_41 0208                  i2u21_41 008A                  i2u14_40 0226  
                i2u22_40 00AE                  i2u14_41 0222                  i2u22_41 00AA  
                i2u15_40 0240                  i2u15_41 023C                  i2u16_40 025E  
                i2u16_41 025A                  i2u17_40 0274                  i2u17_41 0270  
                i2u18_40 0298                  i2u18_41 0294                  i2u19_41 0024  
              ?_high_isr 0060                  __Hparam 0000                  __Lparam 0000  
                ___awmod 01F8                  __pcinit 02F8                  __ramtop 0600  
                __ptext0 00CA                  __ptext1 02AA                  __ptext3 01F8  
              _T1CONbits 000FCD                _T3CONbits 000FB1         ___awmod@dividend 0060  
             ??_high_isr 0066     end_of_initialization 031E                  postdec1 000FE5  
                postinc0 000FEE  __size_of_initialisation 004E      start_initialization 02F8  
            __pdataBANK0 007C            __pcstackBANK0 0060        __size_of_high_isr 00BE  
              __pintcode 0008           _initialisation 02AA                 ?___awmod 0060  
               _PIE1bits 000F9D                 _PIE2bits 000FA0   __end_of_initialisation 02F8  
               _PIR1bits 000F9E                 _PIR2bits 000FA1               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0                main@effet 0076                main@resAN 0074  
              copy_data0 030C                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060         __size_of___awmod 00B2                 _high_isr 0008  
          __size_of_main 012E                 int$flags 0001               _INTCONbits 000FF2  
               intlevel2 0000  
