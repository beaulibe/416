

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 21 19:10:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 05/05/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataBANK0
    54  00012E                     __pidataBANK0:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F2674
    58  00012E  4E                 	db	78
    59  00012F  6F                 	db	111
    60  000130  20                 	db	32
    61  000131  31                 	db	49
    62  000132  3A                 	db	58
    63  000133  20                 	db	32
    64  000134  00                 	db	0
    65                           
    66                           ;initializer for high_isr@g_caracRx
    67  000135  41                 	db	65
    68  0000                     _PORTD	set	3971
    69  0000                     _RCREG	set	4014
    70  0000                     _PIE1bits	set	3997
    71  0000                     _RCSTAbits	set	4011
    72  0000                     _TRISCbits	set	3988
    73  0000                     _BAUDCONbits	set	4024
    74  0000                     _TXSTAbits	set	4012
    75  0000                     _SPBRG	set	4015
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _INTCONbits	set	4082
    78  0000                     _PORTBbits	set	3969
    79  0000                     _TRISBbits	set	3987
    80  0000                     _ANSELH	set	3967
    81  0000                     _TRISD	set	3989
    82  0000                     _TXREG	set	4013
    83  0000                     _PIR1bits	set	3998
    84                           
    85                           ; #config settings
    86                           
    87                           	psect	cinit
    88  000104                     __pcinit:
    89                           	callstack 0
    90  000104                     start_initialization:
    91                           	callstack 0
    92  000104                     __initialization:
    93                           	callstack 0
    94                           
    95                           ; Initialize objects allocated to BANK0 (8 bytes)
    96                           ; load TBLPTR registers with __pidataBANK0
    97  000104  0E2E               	movlw	low __pidataBANK0
    98  000106  6EF6               	movwf	tblptrl,c
    99  000108  0E01               	movlw	high __pidataBANK0
   100  00010A  6EF7               	movwf	tblptrh,c
   101  00010C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   102  00010E  6EF8               	movwf	tblptru,c
   103  000110  EE00  F069         	lfsr	0,__pdataBANK0
   104  000114  EE10 F008          	lfsr	1,8
   105  000118                     copy_data0:
   106  000118  0009               	tblrd		*+
   107  00011A  CFF5 FFEE          	movff	tablat,postinc0
   108  00011E  50E5               	movf	postdec1,w,c
   109  000120  50E1               	movf	fsr1l,w,c
   110  000122  E1FA               	bnz	copy_data0
   111  000124                     end_of_initialization:
   112                           	callstack 0
   113  000124                     __end_of__initialization:
   114                           	callstack 0
   115  000124  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   116  000126  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   117  000128  0100               	movlb	0
   118  00012A  EF31  F000         	goto	_main	;jump to C main() function
   119                           
   120                           	psect	dataBANK0
   121  000069                     __pdataBANK0:
   122                           	callstack 0
   123  000069                     main@F2674:
   124                           	callstack 0
   125  000069                     	ds	7
   126  000070                     high_isr@g_caracRx:
   127                           	callstack 0
   128  000070                     	ds	1
   129                           
   130                           	psect	cstackBANK0
   131  000060                     __pcstackBANK0:
   132                           	callstack 0
   133  000060                     main@msg:
   134                           	callstack 0
   135                           
   136                           ; 7 bytes @ 0x0
   137  000060                     	ds	7
   138  000067                     main@i:
   139                           	callstack 0
   140                           
   141                           ; 2 bytes @ 0x7
   142  000067                     	ds	2
   143                           
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 14 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;  msg             7    0[BANK0 ] unsigned char [7]
   154 ;;  i               2    7[BANK0 ] int 
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   159 ;; Tracked objects:
   160 ;;		On entry : 0/0
   161 ;;		On exit  : 0/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   164 ;;      Params:         0       0       0       0       0       0       0
   165 ;;      Locals:         0       9       0       0       0       0       0
   166 ;;      Temps:          0       0       0       0       0       0       0
   167 ;;      Totals:         0       9       0       0       0       0       0
   168 ;;Total ram usage:        9 bytes
   169 ;; Hardware stack levels required when called:    2
   170 ;; This function calls:
   171 ;;		_initialisation
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           	psect	text0
   178  000062                     __ptext0:
   179                           	callstack 0
   180  000062                     _main:
   181                           	callstack 29
   182  000062                     
   183                           ;main.c: 16:     char msg[] = "No 1: ";
   184  000062  EE20  F069         	lfsr	2,main@F2674
   185  000066  EE10  F060         	lfsr	1,main@msg
   186  00006A  0E06               	movlw	6
   187  00006C                     u11:
   188  00006C  CFDB FFE3          	movff	plusw2,plusw1
   189  000070  06E8               	decf	wreg,f,c
   190  000072  E2FC               	bc	u11
   191  000074                     
   192                           ;main.c: 17:     int i = 0;
   193  000074  0E00               	movlw	0
   194  000076  0100               	movlb	0	; force () banked
   195  000078  6F68               	movwf	(main@i+1)& (0+255),b
   196  00007A  0E00               	movlw	0
   197  00007C  6F67               	movwf	main@i& (0+255),b
   198  00007E                     
   199                           ; BSR set to: 0
   200                           ;main.c: 19:     initialisation();
   201  00007E  EC69  F000         	call	_initialisation	;wreg free
   202                           
   203                           ;main.c: 21:     while (msg[i] != '\0')
   204  000082  EF56  F000         	goto	l798
   205  000086                     l39:
   206  000086  A89E               	btfss	158,4,c	;volatile
   207  000088  EF48  F000         	goto	u21
   208  00008C  EF4A  F000         	goto	u20
   209  000090                     u21:
   210  000090  EF43  F000         	goto	l39
   211  000094                     u20:
   212  000094                     
   213                           ;main.c: 24:         TXREG = msg[i++];
   214  000094  0E60               	movlw	low main@msg
   215  000096  0100               	movlb	0	; force () banked
   216  000098  2567               	addwf	main@i& (0+255),w,b
   217  00009A  6ED9               	movwf	fsr2l,c
   218  00009C  0E00               	movlw	high main@msg
   219  00009E  2168               	addwfc	(main@i+1)& (0+255),w,b
   220  0000A0  6EDA               	movwf	fsr2h,c
   221  0000A2  50DF               	movf	indf2,w,c
   222  0000A4  6EAD               	movwf	173,c	;volatile
   223  0000A6                     
   224                           ; BSR set to: 0
   225  0000A6  0100               	movlb	0	; force () banked
   226  0000A8  4B67               	infsnz	main@i& (0+255),f,b
   227  0000AA  2B68               	incf	(main@i+1)& (0+255),f,b
   228  0000AC                     l798:
   229                           
   230                           ;main.c: 21:     while (msg[i] != '\0')
   231  0000AC  0E60               	movlw	low main@msg
   232  0000AE  0100               	movlb	0	; force () banked
   233  0000B0  2567               	addwf	main@i& (0+255),w,b
   234  0000B2  6ED9               	movwf	fsr2l,c
   235  0000B4  0E00               	movlw	high main@msg
   236  0000B6  2168               	addwfc	(main@i+1)& (0+255),w,b
   237  0000B8  6EDA               	movwf	fsr2h,c
   238  0000BA  50DF               	movf	indf2,w,c
   239  0000BC  A4D8               	btfss	status,2,c
   240  0000BE  EF63  F000         	goto	u31
   241  0000C2  EF65  F000         	goto	u30
   242  0000C6                     u31:
   243  0000C6  EF43  F000         	goto	l39
   244  0000CA                     u30:
   245  0000CA                     l43:
   246  0000CA  EF65  F000         	goto	l43
   247  0000CE  EF2F  F000         	goto	start
   248  0000D2                     __end_of_main:
   249                           	callstack 0
   250                           
   251 ;; *************** function _initialisation *****************
   252 ;; Defined at:
   253 ;;		line 50 in file "main.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   267 ;;      Params:         0       0       0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels used:    1
   273 ;; Hardware stack levels required when called:    1
   274 ;; This function calls:
   275 ;;		Nothing
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282  0000D2                     __ptext1:
   283                           	callstack 0
   284  0000D2                     _initialisation:
   285                           	callstack 29
   286  0000D2                     
   287                           ;main.c: 53:     TRISD = 0;
   288  0000D2  0E00               	movlw	0
   289  0000D4  6E95               	movwf	149,c	;volatile
   290                           
   291                           ;main.c: 55:     ANSELH = 0;
   292  0000D6  0E00               	movlw	0
   293  0000D8  6E7F               	movwf	127,c	;volatile
   294  0000DA                     
   295                           ;main.c: 56:     TRISBbits.RB0 = 1;
   296  0000DA  8093               	bsf	147,0,c	;volatile
   297  0000DC                     
   298                           ;main.c: 57:     PORTBbits.RB0 = 1;
   299  0000DC  8081               	bsf	129,0,c	;volatile
   300  0000DE                     
   301                           ;main.c: 58:     INTCONbits.INT0IF = 0;
   302  0000DE  92F2               	bcf	242,1,c	;volatile
   303  0000E0                     
   304                           ;main.c: 59:     INTCONbits.INT0IE = 1;
   305  0000E0  88F2               	bsf	242,4,c	;volatile
   306  0000E2                     
   307                           ;main.c: 60:     INTCON2bits.INTEDG0 = 0;
   308  0000E2  9CF1               	bcf	241,6,c	;volatile
   309                           
   310                           ;main.c: 67:     SPBRG = 12;
   311  0000E4  0E0C               	movlw	12
   312  0000E6  6EAF               	movwf	175,c	;volatile
   313  0000E8                     
   314                           ;main.c: 68:     TXSTAbits.BRGH = 1;
   315  0000E8  84AC               	bsf	172,2,c	;volatile
   316  0000EA                     
   317                           ;main.c: 69:     BAUDCONbits.BRG16 = 1;
   318  0000EA  86B8               	bsf	184,3,c	;volatile
   319  0000EC                     
   320                           ;main.c: 72:     TRISCbits.RC6 = 1;
   321  0000EC  8C94               	bsf	148,6,c	;volatile
   322  0000EE                     
   323                           ;main.c: 73:     TRISCbits.RC7 = 1;
   324  0000EE  8E94               	bsf	148,7,c	;volatile
   325  0000F0                     
   326                           ;main.c: 76:     TXSTAbits.TXEN = 1;
   327  0000F0  8AAC               	bsf	172,5,c	;volatile
   328  0000F2                     
   329                           ;main.c: 77:     TXSTAbits.TX9 = 0;
   330  0000F2  9CAC               	bcf	172,6,c	;volatile
   331  0000F4                     
   332                           ;main.c: 80:     RCSTAbits.SPEN = 1;
   333  0000F4  8EAB               	bsf	171,7,c	;volatile
   334  0000F6                     
   335                           ;main.c: 81:     TXSTAbits.SYNC = 0;
   336  0000F6  98AC               	bcf	172,4,c	;volatile
   337  0000F8                     
   338                           ;main.c: 84:     RCSTAbits.CREN = 1;
   339  0000F8  88AB               	bsf	171,4,c	;volatile
   340  0000FA                     
   341                           ;main.c: 85:     RCSTAbits.RX9 = 0;
   342  0000FA  9CAB               	bcf	171,6,c	;volatile
   343  0000FC                     
   344                           ;main.c: 88:     PIE1bits.RC1IE = 1;
   345  0000FC  8A9D               	bsf	157,5,c	;volatile
   346  0000FE                     
   347                           ;main.c: 91:     INTCONbits.PEIE = 1;
   348  0000FE  8CF2               	bsf	242,6,c	;volatile
   349  000100                     
   350                           ;main.c: 92:     INTCONbits.GIE = 1;
   351  000100  8EF2               	bsf	242,7,c	;volatile
   352  000102  0012               	return		;funcret
   353  000104                     __end_of_initialisation:
   354                           	callstack 0
   355                           
   356 ;; *************** function _high_isr *****************
   357 ;; Defined at:
   358 ;;		line 12 in file "interrupts.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   372 ;;      Params:         0       0       0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; This function calls:
   379 ;;		Nothing
   380 ;; This function is called by:
   381 ;;		Interrupt level 2
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	intcode
   386  000008                     __pintcode:
   387                           	callstack 0
   388  000008                     _high_isr:
   389                           	callstack 29
   390                           
   391                           ;incstack = 0
   392  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   393  00000A                     
   394                           ;interrupts.c: 14:     static unsigned char g_caracRx = 'A';;interrupts.c: 17:     if (P
      +                          IR1bits.RC1IF)
   395  00000A  AA9E               	btfss	158,5,c	;volatile
   396  00000C  EF0A  F000         	goto	i2u4_41
   397  000010  EF0C  F000         	goto	i2u4_40
   398  000014                     i2u4_41:
   399  000014  EF18  F000         	goto	i2l808
   400  000018                     i2u4_40:
   401  000018                     
   402                           ;interrupts.c: 18:     {;interrupts.c: 19:         g_caracRx = RCREG;
   403  000018  CFAE F070          	movff	4014,high_isr@g_caracRx	;volatile
   404  00001C                     i2l67:
   405  00001C  A89E               	btfss	158,4,c	;volatile
   406  00001E  EF13  F000         	goto	i2u5_41
   407  000022  EF15  F000         	goto	i2u5_40
   408  000026                     i2u5_41:
   409  000026  EF0E  F000         	goto	i2l67
   410  00002A                     i2u5_40:
   411  00002A                     
   412                           ;interrupts.c: 22:         TXREG = ' ';
   413  00002A  0E20               	movlw	32
   414  00002C  6EAD               	movwf	173,c	;volatile
   415  00002E                     
   416                           ;interrupts.c: 25:         PIR1bits.RC1IF = 1;
   417  00002E  8A9E               	bsf	158,5,c	;volatile
   418  000030                     i2l808:
   419                           
   420                           ;interrupts.c: 29:     if ( INTCONbits.INT0IF)
   421  000030  A2F2               	btfss	242,1,c	;volatile
   422  000032  EF1D  F000         	goto	i2u6_41
   423  000036  EF1F  F000         	goto	i2u6_40
   424  00003A                     i2u6_41:
   425  00003A  EF2D  F000         	goto	i2l74
   426  00003E                     i2u6_40:
   427  00003E                     i2l71:
   428  00003E  A89E               	btfss	158,4,c	;volatile
   429  000040  EF24  F000         	goto	i2u7_41
   430  000044  EF26  F000         	goto	i2u7_40
   431  000048                     i2u7_41:
   432  000048  EF1F  F000         	goto	i2l71
   433  00004C                     i2u7_40:
   434  00004C                     
   435                           ;interrupts.c: 32:         PORTD = g_caracRx;
   436  00004C  C070  FF83         	movff	high_isr@g_caracRx,3971	;volatile
   437                           
   438                           ;interrupts.c: 33:         TXREG = g_caracRx++;
   439  000050  C070  FFAD         	movff	high_isr@g_caracRx,4013	;volatile
   440  000054  0100               	movlb	0	; force () banked
   441  000056  2B70               	incf	high_isr@g_caracRx& (0+255),f,b
   442  000058                     
   443                           ; BSR set to: 0
   444                           ;interrupts.c: 34:         INTCONbits.INT0IF = 0;
   445  000058  92F2               	bcf	242,1,c	;volatile
   446  00005A                     i2l74:
   447  00005A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   448  00005C  0011               	retfie		f
   449  00005E                     __end_of_high_isr:
   450                           	callstack 0
   451  0000                     
   452                           	psect	param0
   453  0000                     
   454                           	psect	temp
   455  000001                     btemp:
   456                           	callstack 0
   457  000001                     	ds	1
   458  0000                     int$flags	set	btemp
   459  0000                     wtemp8	set	btemp+1
   460  0000                     ttemp5	set	btemp+1
   461  0000                     ttemp6	set	btemp+4
   462  0000                     ttemp7	set	btemp+8
   463                           
   464                           	psect	idloc
   465                           
   466                           ;Config register IDLOC0 @ 0x200000
   467                           ;	unspecified, using default values
   468  200000                     	org	2097152
   469  200000  FF                 	db	255
   470                           
   471                           ;Config register IDLOC1 @ 0x200001
   472                           ;	unspecified, using default values
   473  200001                     	org	2097153
   474  200001  FF                 	db	255
   475                           
   476                           ;Config register IDLOC2 @ 0x200002
   477                           ;	unspecified, using default values
   478  200002                     	org	2097154
   479  200002  FF                 	db	255
   480                           
   481                           ;Config register IDLOC3 @ 0x200003
   482                           ;	unspecified, using default values
   483  200003                     	org	2097155
   484  200003  FF                 	db	255
   485                           
   486                           ;Config register IDLOC4 @ 0x200004
   487                           ;	unspecified, using default values
   488  200004                     	org	2097156
   489  200004  FF                 	db	255
   490                           
   491                           ;Config register IDLOC5 @ 0x200005
   492                           ;	unspecified, using default values
   493  200005                     	org	2097157
   494  200005  FF                 	db	255
   495                           
   496                           ;Config register IDLOC6 @ 0x200006
   497                           ;	unspecified, using default values
   498  200006                     	org	2097158
   499  200006  FF                 	db	255
   500                           
   501                           ;Config register IDLOC7 @ 0x200007
   502                           ;	unspecified, using default values
   503  200007                     	org	2097159
   504  200007  FF                 	db	255
   505                           
   506                           	psect	config
   507                           
   508                           ; Padding undefined space
   509  300000                     	org	3145728
   510  300000  FF                 	db	255
   511                           
   512                           ;Config register CONFIG1H @ 0x300001
   513                           ;	Oscillator Selection bits
   514                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   515                           ;	Fail-Safe Clock Monitor Enable bit
   516                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   517                           ;	Internal/External Oscillator Switchover bit
   518                           ;	IESO = OFF, Oscillator Switchover mode disabled
   519  300001                     	org	3145729
   520  300001  08                 	db	8
   521                           
   522                           ;Config register CONFIG2L @ 0x300002
   523                           ;	Power-up Timer Enable bit
   524                           ;	PWRT = OFF, PWRT disabled
   525                           ;	Brown-out Reset Enable bits
   526                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   527                           ;	Brown Out Reset Voltage bits
   528                           ;	BORV = 18, VBOR set to 1.8 V nominal
   529  300002                     	org	3145730
   530  300002  1F                 	db	31
   531                           
   532                           ;Config register CONFIG2H @ 0x300003
   533                           ;	Watchdog Timer Enable bit
   534                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   535                           ;	Watchdog Timer Postscale Select bits
   536                           ;	WDTPS = 32768, 1:32768
   537  300003                     	org	3145731
   538  300003  1E                 	db	30
   539                           
   540                           ; Padding undefined space
   541  300004                     	org	3145732
   542  300004  FF                 	db	255
   543                           
   544                           ;Config register CONFIG3H @ 0x300005
   545                           ;	CCP2 MUX bit
   546                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   547                           ;	PORTB A/D Enable bit
   548                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   549                           ;	Low-Power Timer1 Oscillator Enable bit
   550                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   551                           ;	HFINTOSC Fast Start-up
   552                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   553                           ;	MCLR Pin Enable bit
   554                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   555  300005                     	org	3145733
   556  300005  8B                 	db	139
   557                           
   558                           ;Config register CONFIG4L @ 0x300006
   559                           ;	Stack Full/Underflow Reset Enable bit
   560                           ;	STVREN = ON, Stack full/underflow will cause Reset
   561                           ;	Single-Supply ICSP Enable bit
   562                           ;	LVP = OFF, Single-Supply ICSP disabled
   563                           ;	Extended Instruction Set Enable bit
   564                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   565                           ;	Background Debugger Enable bit
   566                           ;	DEBUG = 0x1, unprogrammed default
   567  300006                     	org	3145734
   568  300006  81                 	db	129
   569                           
   570                           ; Padding undefined space
   571  300007                     	org	3145735
   572  300007  FF                 	db	255
   573                           
   574                           ;Config register CONFIG5L @ 0x300008
   575                           ;	Code Protection Block 0
   576                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   577                           ;	Code Protection Block 1
   578                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   579                           ;	Code Protection Block 2
   580                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   581                           ;	Code Protection Block 3
   582                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   583  300008                     	org	3145736
   584  300008  0F                 	db	15
   585                           
   586                           ;Config register CONFIG5H @ 0x300009
   587                           ;	Boot Block Code Protection bit
   588                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   589                           ;	Data EEPROM Code Protection bit
   590                           ;	CPD = OFF, Data EEPROM not code-protected
   591  300009                     	org	3145737
   592  300009  C0                 	db	192
   593                           
   594                           ;Config register CONFIG6L @ 0x30000A
   595                           ;	Write Protection Block 0
   596                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   597                           ;	Write Protection Block 1
   598                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   599                           ;	Write Protection Block 2
   600                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   601                           ;	Write Protection Block 3
   602                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   603  30000A                     	org	3145738
   604  30000A  0F                 	db	15
   605                           
   606                           ;Config register CONFIG6H @ 0x30000B
   607                           ;	Configuration Register Write Protection bit
   608                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   609                           ;	Boot Block Write Protection bit
   610                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   611                           ;	Data EEPROM Write Protection bit
   612                           ;	WRTD = OFF, Data EEPROM not write-protected
   613  30000B                     	org	3145739
   614  30000B  E0                 	db	224
   615                           
   616                           ;Config register CONFIG7L @ 0x30000C
   617                           ;	Table Read Protection Block 0
   618                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   619                           ;	Table Read Protection Block 1
   620                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   621                           ;	Table Read Protection Block 2
   622                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   623                           ;	Table Read Protection Block 3
   624                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   625  30000C                     	org	3145740
   626  30000C  0F                 	db	15
   627                           
   628                           ;Config register CONFIG7H @ 0x30000D
   629                           ;	Boot Block Table Read Protection bit
   630                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   631  30000D                     	org	3145741
   632  30000D  40                 	db	64
   633                           tosu	equ	0xFFF
   634                           tosh	equ	0xFFE
   635                           tosl	equ	0xFFD
   636                           stkptr	equ	0xFFC
   637                           pclatu	equ	0xFFB
   638                           pclath	equ	0xFFA
   639                           pcl	equ	0xFF9
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           prodh	equ	0xFF4
   645                           prodl	equ	0xFF3
   646                           indf0	equ	0xFEF
   647                           postinc0	equ	0xFEE
   648                           postdec0	equ	0xFED
   649                           preinc0	equ	0xFEC
   650                           plusw0	equ	0xFEB
   651                           fsr0h	equ	0xFEA
   652                           fsr0l	equ	0xFE9
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postinc1	equ	0xFE6
   656                           postdec1	equ	0xFE5
   657                           preinc1	equ	0xFE4
   658                           plusw1	equ	0xFE3
   659                           fsr1h	equ	0xFE2
   660                           fsr1l	equ	0xFE1
   661                           bsr	equ	0xFE0
   662                           indf2	equ	0xFDF
   663                           postinc2	equ	0xFDE
   664                           postdec2	equ	0xFDD
   665                           preinc2	equ	0xFDC
   666                           plusw2	equ	0xFDB
   667                           fsr2h	equ	0xFDA
   668                           fsr2l	equ	0xFD9
   669                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      9      17
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0      60
                                              0 BANK0      9     9      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      9      11       5       10.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      15        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 21 19:10:40 2021

                     l43 00CA                       l44 00CA                       l39 0086  
                     l49 0102                       u11 006C                       u20 0094  
                     u21 0090                       u30 00CA                       u31 00C6  
                    l750 00D2                      l760 00E2                      l752 00DA  
                    l770 00F0                      l762 00E8                      l754 00DC  
                    l780 00FA                      l772 00F2                      l764 00EA  
                    l756 00DE                      l782 00FC                      l774 00F4  
                    l766 00EC                      l758 00E0                      l790 0074  
                    l784 00FE                      l776 00F6                      l768 00EE  
                    l792 007E                      l786 0100                      l778 00F8  
                    l794 0094                      l796 00A6                      l788 0062  
                    l798 00AC                      wreg 000FE8                     i2l71 003E  
                   i2l73 004C                     i2l74 005A                     i2l67 001C  
       ??_initialisation 0060                     _main 0062                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0001  
                   start 005E             ___param_bank 000000                    ?_main 0060  
                  i2l800 000A                    i2l802 0018                    i2l812 0054  
                  i2l804 002A                    i2l814 0058                    i2l806 002E  
                  i2l808 0030                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTD 000F83                    _TRISD 000F95                    _TXREG 000FAD  
                  main@i 0067                    tablat 000FF5                    plusw1 000FE3  
                  plusw2 000FDB                    ttemp5 0002                    ttemp6 0005  
                  ttemp7 0009                    status 000FD8                    wtemp8 0002  
        __initialization 0104             __end_of_main 00D2                   ??_main 0060  
          __activetblptr 000003                   _ANSELH 000F7F                   i2u4_40 0018  
                 i2u4_41 0014                   i2u5_40 002A                   i2u5_41 0026  
                 i2u6_40 003E                   i2u6_41 003A                   i2u7_40 004C  
                 i2u7_41 0048         __end_of_high_isr 005E                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8        high_isr@g_caracRx 0070  
             __accesstop 0060  __end_of__initialization 0124            ___rparam_used 000000  
           __pidataBANK0 012E                ?_high_isr 0060                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0104                  __ramtop 0600  
                __ptext0 0062                  __ptext1 00D2                  main@msg 0060  
             ??_high_isr 0060     end_of_initialization 0124                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE  __size_of_initialisation 0032  
              _PORTBbits 000F81                _TRISBbits 000F93                _TRISCbits 000F94  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8      start_initialization 0104  
            __pdataBANK0 0069            __pcstackBANK0 0060        __size_of_high_isr 0056  
              __pintcode 0008           _initialisation 00D2                 _PIE1bits 000F9D  
 __end_of_initialisation 0104                 _PIR1bits 000F9E                main@F2674 0069  
            _INTCON2bits 000FF1                copy_data0 0118                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060                 _high_isr 0008  
          __size_of_main 0070                 int$flags 0001               _INTCONbits 000FF2  
               intlevel2 0000  
