

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 14:08:22 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 05/05/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataBANK0
    54  000124                     __pidataBANK0:
    55                           	callstack 0
    56                           
    57                           ;initializer for main@F2674
    58  000124  4E                 	db	78
    59  000125  6F                 	db	111
    60  000126  20                 	db	32
    61  000127  31                 	db	49
    62  000128  00                 	db	0
    63                           
    64                           ;initializer for high_isr@g_caracRx
    65  000129  41                 	db	65
    66  0000                     _RCREG	set	4014
    67  0000                     _PIE1bits	set	3997
    68  0000                     _RCSTAbits	set	4011
    69  0000                     _TRISCbits	set	3988
    70  0000                     _BAUDCONbits	set	4024
    71  0000                     _TXSTAbits	set	4012
    72  0000                     _SPBRG	set	4015
    73  0000                     _INTCON2bits	set	4081
    74  0000                     _INTCONbits	set	4082
    75  0000                     _PORTBbits	set	3969
    76  0000                     _TRISBbits	set	3987
    77  0000                     _ANSELH	set	3967
    78  0000                     _TRISD	set	3989
    79  0000                     _PORTD	set	3971
    80  0000                     _TXREG	set	4013
    81  0000                     _PIR1bits	set	3998
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  0000FA                     __pcinit:
    87                           	callstack 0
    88  0000FA                     start_initialization:
    89                           	callstack 0
    90  0000FA                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Initialize objects allocated to BANK0 (6 bytes)
    94                           ; load TBLPTR registers with __pidataBANK0
    95  0000FA  0E24               	movlw	low __pidataBANK0
    96  0000FC  6EF6               	movwf	tblptrl,c
    97  0000FE  0E01               	movlw	high __pidataBANK0
    98  000100  6EF7               	movwf	tblptrh,c
    99  000102  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   100  000104  6EF8               	movwf	tblptru,c
   101  000106  EE00  F067         	lfsr	0,__pdataBANK0
   102  00010A  EE10 F006          	lfsr	1,6
   103  00010E                     copy_data0:
   104  00010E  0009               	tblrd		*+
   105  000110  CFF5 FFEE          	movff	tablat,postinc0
   106  000114  50E5               	movf	postdec1,w,c
   107  000116  50E1               	movf	fsr1l,w,c
   108  000118  E1FA               	bnz	copy_data0
   109  00011A                     end_of_initialization:
   110                           	callstack 0
   111  00011A                     __end_of__initialization:
   112                           	callstack 0
   113  00011A  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   114  00011C  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   115  00011E  0100               	movlb	0
   116  000120  EF2A  F000         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	dataBANK0
   119  000067                     __pdataBANK0:
   120                           	callstack 0
   121  000067                     main@F2674:
   122                           	callstack 0
   123  000067                     	ds	5
   124  00006C                     high_isr@g_caracRx:
   125                           	callstack 0
   126  00006C                     	ds	1
   127                           
   128                           	psect	cstackBANK0
   129  000060                     __pcstackBANK0:
   130                           	callstack 0
   131  000060                     main@msg:
   132                           	callstack 0
   133                           
   134                           ; 5 bytes @ 0x0
   135  000060                     	ds	5
   136  000065                     main@i:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x5
   140  000065                     	ds	2
   141                           
   142 ;;
   143 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   144 ;;
   145 ;; *************** function _main *****************
   146 ;; Defined at:
   147 ;;		line 17 in file "main.c"
   148 ;; Parameters:    Size  Location     Type
   149 ;;		None
   150 ;; Auto vars:     Size  Location     Type
   151 ;;  msg             5    0[BANK0 ] unsigned char [5]
   152 ;;  i               2    5[BANK0 ] int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   162 ;;      Params:         0       0       0       0       0       0       0
   163 ;;      Locals:         0       7       0       0       0       0       0
   164 ;;      Temps:          0       0       0       0       0       0       0
   165 ;;      Totals:         0       7       0       0       0       0       0
   166 ;;Total ram usage:        7 bytes
   167 ;; Hardware stack levels required when called:    2
   168 ;; This function calls:
   169 ;;		_initialisation
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  000054                     __ptext0:
   177                           	callstack 0
   178  000054                     _main:
   179                           	callstack 29
   180  000054                     
   181                           ;main.c: 19:     char msg[] = "No 1";
   182  000054  EE20  F067         	lfsr	2,main@F2674
   183  000058  EE10  F060         	lfsr	1,main@msg
   184  00005C  0E04               	movlw	4
   185  00005E                     u11:
   186  00005E  CFDB FFE3          	movff	plusw2,plusw1
   187  000062  06E8               	decf	wreg,f,c
   188  000064  E2FC               	bc	u11
   189  000066                     
   190                           ;main.c: 20:     int i = 0;
   191  000066  0E00               	movlw	0
   192  000068  0100               	movlb	0	; force () banked
   193  00006A  6F66               	movwf	(main@i+1)& (0+255),b
   194  00006C  0E00               	movlw	0
   195  00006E  6F65               	movwf	main@i& (0+255),b
   196  000070                     
   197                           ; BSR set to: 0
   198                           ;main.c: 22:     initialisation();
   199  000070  EC64  F000         	call	_initialisation	;wreg free
   200                           
   201                           ;main.c: 24:     while (msg[i] != '\0')
   202  000074  EF4F  F000         	goto	l797
   203  000078                     l41:
   204  000078  A89E               	btfss	158,4,c	;volatile
   205  00007A  EF41  F000         	goto	u21
   206  00007E  EF43  F000         	goto	u20
   207  000082                     u21:
   208  000082  EF3C  F000         	goto	l41
   209  000086                     u20:
   210  000086                     
   211                           ;main.c: 27:         TXREG = msg[i++];
   212  000086  0E60               	movlw	low main@msg
   213  000088  0100               	movlb	0	; force () banked
   214  00008A  2565               	addwf	main@i& (0+255),w,b
   215  00008C  6ED9               	movwf	fsr2l,c
   216  00008E  0E00               	movlw	high main@msg
   217  000090  2166               	addwfc	(main@i+1)& (0+255),w,b
   218  000092  6EDA               	movwf	fsr2h,c
   219  000094  50DF               	movf	indf2,w,c
   220  000096  6EAD               	movwf	173,c	;volatile
   221  000098                     
   222                           ; BSR set to: 0
   223  000098  0100               	movlb	0	; force () banked
   224  00009A  4B65               	infsnz	main@i& (0+255),f,b
   225  00009C  2B66               	incf	(main@i+1)& (0+255),f,b
   226  00009E                     l797:
   227                           
   228                           ;main.c: 24:     while (msg[i] != '\0')
   229  00009E  0E60               	movlw	low main@msg
   230  0000A0  0100               	movlb	0	; force () banked
   231  0000A2  2565               	addwf	main@i& (0+255),w,b
   232  0000A4  6ED9               	movwf	fsr2l,c
   233  0000A6  0E00               	movlw	high main@msg
   234  0000A8  2166               	addwfc	(main@i+1)& (0+255),w,b
   235  0000AA  6EDA               	movwf	fsr2h,c
   236  0000AC  50DF               	movf	indf2,w,c
   237  0000AE  A4D8               	btfss	status,2,c
   238  0000B0  EF5C  F000         	goto	u31
   239  0000B4  EF5E  F000         	goto	u30
   240  0000B8                     u31:
   241  0000B8  EF3C  F000         	goto	l41
   242  0000BC                     u30:
   243  0000BC                     
   244                           ; BSR set to: 0
   245                           ;main.c: 30:     PORTD = 'A';
   246  0000BC  0E41               	movlw	65
   247  0000BE  6E83               	movwf	131,c	;volatile
   248  0000C0                     l45:
   249  0000C0  EF60  F000         	goto	l45
   250  0000C4  EF28  F000         	goto	start
   251  0000C8                     __end_of_main:
   252                           	callstack 0
   253                           
   254 ;; *************** function _initialisation *****************
   255 ;; Defined at:
   256 ;;		line 52 in file "main.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   270 ;;      Params:         0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; Hardware stack levels required when called:    1
   277 ;; This function calls:
   278 ;;		Nothing
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text1
   285  0000C8                     __ptext1:
   286                           	callstack 0
   287  0000C8                     _initialisation:
   288                           	callstack 29
   289  0000C8                     
   290                           ;main.c: 55:     TRISD = 0;
   291  0000C8  0E00               	movlw	0
   292  0000CA  6E95               	movwf	149,c	;volatile
   293                           
   294                           ;main.c: 57:     ANSELH = 0;
   295  0000CC  0E00               	movlw	0
   296  0000CE  6E7F               	movwf	127,c	;volatile
   297  0000D0                     
   298                           ;main.c: 58:     TRISBbits.RB0 = 1;
   299  0000D0  8093               	bsf	147,0,c	;volatile
   300  0000D2                     
   301                           ;main.c: 59:     PORTBbits.RB0 = 1;
   302  0000D2  8081               	bsf	129,0,c	;volatile
   303  0000D4                     
   304                           ;main.c: 60:     INTCONbits.INT0IF = 0;
   305  0000D4  92F2               	bcf	242,1,c	;volatile
   306  0000D6                     
   307                           ;main.c: 61:     INTCONbits.INT0IE = 1;
   308  0000D6  88F2               	bsf	242,4,c	;volatile
   309  0000D8                     
   310                           ;main.c: 62:     INTCON2bits.INTEDG0 = 0;
   311  0000D8  9CF1               	bcf	241,6,c	;volatile
   312                           
   313                           ;main.c: 83:     SPBRG = 25;
   314  0000DA  0E19               	movlw	25
   315  0000DC  6EAF               	movwf	175,c	;volatile
   316  0000DE                     
   317                           ;main.c: 84:     TXSTAbits.BRGH = 1;
   318  0000DE  84AC               	bsf	172,2,c	;volatile
   319  0000E0                     
   320                           ;main.c: 85:     BAUDCONbits.BRG16 = 1;
   321  0000E0  86B8               	bsf	184,3,c	;volatile
   322  0000E2                     
   323                           ;main.c: 88:     TRISCbits.RC6 = 1;
   324  0000E2  8C94               	bsf	148,6,c	;volatile
   325  0000E4                     
   326                           ;main.c: 89:     TRISCbits.RC7 = 1;
   327  0000E4  8E94               	bsf	148,7,c	;volatile
   328  0000E6                     
   329                           ;main.c: 92:     TXSTAbits.TXEN = 1;
   330  0000E6  8AAC               	bsf	172,5,c	;volatile
   331  0000E8                     
   332                           ;main.c: 93:     TXSTAbits.TX9 = 0;
   333  0000E8  9CAC               	bcf	172,6,c	;volatile
   334  0000EA                     
   335                           ;main.c: 96:     RCSTAbits.SPEN = 1;
   336  0000EA  8EAB               	bsf	171,7,c	;volatile
   337  0000EC                     
   338                           ;main.c: 97:     TXSTAbits.SYNC = 0;
   339  0000EC  98AC               	bcf	172,4,c	;volatile
   340  0000EE                     
   341                           ;main.c: 100:     RCSTAbits.CREN = 1;
   342  0000EE  88AB               	bsf	171,4,c	;volatile
   343  0000F0                     
   344                           ;main.c: 101:     RCSTAbits.RX9 = 0;
   345  0000F0  9CAB               	bcf	171,6,c	;volatile
   346  0000F2                     
   347                           ;main.c: 104:     PIE1bits.RC1IE = 1;
   348  0000F2  8A9D               	bsf	157,5,c	;volatile
   349  0000F4                     
   350                           ;main.c: 107:     INTCONbits.PEIE = 1;
   351  0000F4  8CF2               	bsf	242,6,c	;volatile
   352  0000F6                     
   353                           ;main.c: 108:     INTCONbits.GIE = 1;
   354  0000F6  8EF2               	bsf	242,7,c	;volatile
   355  0000F8  0012               	return		;funcret
   356  0000FA                     __end_of_initialisation:
   357                           	callstack 0
   358                           
   359 ;; *************** function _high_isr *****************
   360 ;; Defined at:
   361 ;;		line 21 in file "interrupts.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		status,2, status,0
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   375 ;;      Params:         0       0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		Interrupt level 2
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	intcode
   389  000008                     __pintcode:
   390                           	callstack 0
   391  000008                     _high_isr:
   392                           	callstack 29
   393                           
   394                           ;incstack = 0
   395  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   396  00000A                     
   397                           ;interrupts.c: 23:     static unsigned char g_caracRx = 'A';;interrupts.c: 26:     if (P
      +                          IR1bits.RC1IF)
   398  00000A  AA9E               	btfss	158,5,c	;volatile
   399  00000C  EF0A  F000         	goto	i2u4_41
   400  000010  EF0C  F000         	goto	i2u4_40
   401  000014                     i2u4_41:
   402  000014  EF11  F000         	goto	i2l68
   403  000018                     i2u4_40:
   404  000018                     
   405                           ;interrupts.c: 27:     {;interrupts.c: 28:         g_caracRx = RCREG;
   406  000018  CFAE F06C          	movff	4014,high_isr@g_caracRx	;volatile
   407                           
   408                           ;interrupts.c: 29:         PORTD = g_caracRx;
   409  00001C  C06C  FF83         	movff	high_isr@g_caracRx,3971	;volatile
   410                           
   411                           ;interrupts.c: 30:         PIR1bits.RC1IF = 1;
   412  000020  8A9E               	bsf	158,5,c	;volatile
   413  000022                     i2l68:
   414                           
   415                           ;interrupts.c: 34:     if ( INTCONbits.INT0IF)
   416  000022  A2F2               	btfss	242,1,c	;volatile
   417  000024  EF16  F000         	goto	i2u5_41
   418  000028  EF18  F000         	goto	i2u5_40
   419  00002C                     i2u5_41:
   420  00002C  EF26  F000         	goto	i2l73
   421  000030                     i2u5_40:
   422  000030                     i2l70:
   423  000030  A89E               	btfss	158,4,c	;volatile
   424  000032  EF1D  F000         	goto	i2u6_41
   425  000036  EF1F  F000         	goto	i2u6_40
   426  00003A                     i2u6_41:
   427  00003A  EF18  F000         	goto	i2l70
   428  00003E                     i2u6_40:
   429  00003E                     
   430                           ;interrupts.c: 37:         PORTD = g_caracRx;
   431  00003E  C06C  FF83         	movff	high_isr@g_caracRx,3971	;volatile
   432                           
   433                           ;interrupts.c: 38:         TXREG = g_caracRx++;
   434  000042  C06C  FFAD         	movff	high_isr@g_caracRx,4013	;volatile
   435  000046  0100               	movlb	0	; force () banked
   436  000048  2B6C               	incf	high_isr@g_caracRx& (0+255),f,b
   437  00004A                     
   438                           ; BSR set to: 0
   439                           ;interrupts.c: 39:         INTCONbits.INT0IF = 0;
   440  00004A  92F2               	bcf	242,1,c	;volatile
   441  00004C                     i2l73:
   442  00004C  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  00004E  0011               	retfie		f
   444  000050                     __end_of_high_isr:
   445                           	callstack 0
   446  0000                     
   447                           	psect	param0
   448  0000                     
   449                           	psect	temp
   450  000001                     btemp:
   451                           	callstack 0
   452  000001                     	ds	1
   453  0000                     int$flags	set	btemp
   454  0000                     wtemp8	set	btemp+1
   455  0000                     ttemp5	set	btemp+1
   456  0000                     ttemp6	set	btemp+4
   457  0000                     ttemp7	set	btemp+8
   458                           
   459                           	psect	idloc
   460                           
   461                           ;Config register IDLOC0 @ 0x200000
   462                           ;	unspecified, using default values
   463  200000                     	org	2097152
   464  200000  FF                 	db	255
   465                           
   466                           ;Config register IDLOC1 @ 0x200001
   467                           ;	unspecified, using default values
   468  200001                     	org	2097153
   469  200001  FF                 	db	255
   470                           
   471                           ;Config register IDLOC2 @ 0x200002
   472                           ;	unspecified, using default values
   473  200002                     	org	2097154
   474  200002  FF                 	db	255
   475                           
   476                           ;Config register IDLOC3 @ 0x200003
   477                           ;	unspecified, using default values
   478  200003                     	org	2097155
   479  200003  FF                 	db	255
   480                           
   481                           ;Config register IDLOC4 @ 0x200004
   482                           ;	unspecified, using default values
   483  200004                     	org	2097156
   484  200004  FF                 	db	255
   485                           
   486                           ;Config register IDLOC5 @ 0x200005
   487                           ;	unspecified, using default values
   488  200005                     	org	2097157
   489  200005  FF                 	db	255
   490                           
   491                           ;Config register IDLOC6 @ 0x200006
   492                           ;	unspecified, using default values
   493  200006                     	org	2097158
   494  200006  FF                 	db	255
   495                           
   496                           ;Config register IDLOC7 @ 0x200007
   497                           ;	unspecified, using default values
   498  200007                     	org	2097159
   499  200007  FF                 	db	255
   500                           
   501                           	psect	config
   502                           
   503                           ; Padding undefined space
   504  300000                     	org	3145728
   505  300000  FF                 	db	255
   506                           
   507                           ;Config register CONFIG1H @ 0x300001
   508                           ;	Oscillator Selection bits
   509                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   510                           ;	Fail-Safe Clock Monitor Enable bit
   511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   512                           ;	Internal/External Oscillator Switchover bit
   513                           ;	IESO = OFF, Oscillator Switchover mode disabled
   514  300001                     	org	3145729
   515  300001  08                 	db	8
   516                           
   517                           ;Config register CONFIG2L @ 0x300002
   518                           ;	Power-up Timer Enable bit
   519                           ;	PWRT = OFF, PWRT disabled
   520                           ;	Brown-out Reset Enable bits
   521                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   522                           ;	Brown Out Reset Voltage bits
   523                           ;	BORV = 18, VBOR set to 1.8 V nominal
   524  300002                     	org	3145730
   525  300002  1F                 	db	31
   526                           
   527                           ;Config register CONFIG2H @ 0x300003
   528                           ;	Watchdog Timer Enable bit
   529                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   530                           ;	Watchdog Timer Postscale Select bits
   531                           ;	WDTPS = 32768, 1:32768
   532  300003                     	org	3145731
   533  300003  1E                 	db	30
   534                           
   535                           ; Padding undefined space
   536  300004                     	org	3145732
   537  300004  FF                 	db	255
   538                           
   539                           ;Config register CONFIG3H @ 0x300005
   540                           ;	CCP2 MUX bit
   541                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   542                           ;	PORTB A/D Enable bit
   543                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   544                           ;	Low-Power Timer1 Oscillator Enable bit
   545                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   546                           ;	HFINTOSC Fast Start-up
   547                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   548                           ;	MCLR Pin Enable bit
   549                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   550  300005                     	org	3145733
   551  300005  8B                 	db	139
   552                           
   553                           ;Config register CONFIG4L @ 0x300006
   554                           ;	Stack Full/Underflow Reset Enable bit
   555                           ;	STVREN = ON, Stack full/underflow will cause Reset
   556                           ;	Single-Supply ICSP Enable bit
   557                           ;	LVP = OFF, Single-Supply ICSP disabled
   558                           ;	Extended Instruction Set Enable bit
   559                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   560                           ;	Background Debugger Enable bit
   561                           ;	DEBUG = 0x1, unprogrammed default
   562  300006                     	org	3145734
   563  300006  81                 	db	129
   564                           
   565                           ; Padding undefined space
   566  300007                     	org	3145735
   567  300007  FF                 	db	255
   568                           
   569                           ;Config register CONFIG5L @ 0x300008
   570                           ;	Code Protection Block 0
   571                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   572                           ;	Code Protection Block 1
   573                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   574                           ;	Code Protection Block 2
   575                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   576                           ;	Code Protection Block 3
   577                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   578  300008                     	org	3145736
   579  300008  0F                 	db	15
   580                           
   581                           ;Config register CONFIG5H @ 0x300009
   582                           ;	Boot Block Code Protection bit
   583                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   584                           ;	Data EEPROM Code Protection bit
   585                           ;	CPD = OFF, Data EEPROM not code-protected
   586  300009                     	org	3145737
   587  300009  C0                 	db	192
   588                           
   589                           ;Config register CONFIG6L @ 0x30000A
   590                           ;	Write Protection Block 0
   591                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   592                           ;	Write Protection Block 1
   593                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   594                           ;	Write Protection Block 2
   595                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   596                           ;	Write Protection Block 3
   597                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   598  30000A                     	org	3145738
   599  30000A  0F                 	db	15
   600                           
   601                           ;Config register CONFIG6H @ 0x30000B
   602                           ;	Configuration Register Write Protection bit
   603                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   604                           ;	Boot Block Write Protection bit
   605                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   606                           ;	Data EEPROM Write Protection bit
   607                           ;	WRTD = OFF, Data EEPROM not write-protected
   608  30000B                     	org	3145739
   609  30000B  E0                 	db	224
   610                           
   611                           ;Config register CONFIG7L @ 0x30000C
   612                           ;	Table Read Protection Block 0
   613                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   614                           ;	Table Read Protection Block 1
   615                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   616                           ;	Table Read Protection Block 2
   617                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   618                           ;	Table Read Protection Block 3
   619                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   620  30000C                     	org	3145740
   621  30000C  0F                 	db	15
   622                           
   623                           ;Config register CONFIG7H @ 0x30000D
   624                           ;	Boot Block Table Read Protection bit
   625                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   626  30000D                     	org	3145741
   627  30000D  40                 	db	64
   628                           tosu	equ	0xFFF
   629                           tosh	equ	0xFFE
   630                           tosl	equ	0xFFD
   631                           stkptr	equ	0xFFC
   632                           pclatu	equ	0xFFB
   633                           pclath	equ	0xFFA
   634                           pcl	equ	0xFF9
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           prodh	equ	0xFF4
   640                           prodl	equ	0xFF3
   641                           indf0	equ	0xFEF
   642                           postinc0	equ	0xFEE
   643                           postdec0	equ	0xFED
   644                           preinc0	equ	0xFEC
   645                           plusw0	equ	0xFEB
   646                           fsr0h	equ	0xFEA
   647                           fsr0l	equ	0xFE9
   648                           wreg	equ	0xFE8
   649                           indf1	equ	0xFE7
   650                           postinc1	equ	0xFE6
   651                           postdec1	equ	0xFE5
   652                           preinc1	equ	0xFE4
   653                           plusw1	equ	0xFE3
   654                           fsr1h	equ	0xFE2
   655                           fsr1l	equ	0xFE1
   656                           bsr	equ	0xFE0
   657                           indf2	equ	0xFDF
   658                           postinc2	equ	0xFDE
   659                           postdec2	equ	0xFDD
   660                           preinc2	equ	0xFDC
   661                           plusw2	equ	0xFDB
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      7      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0      60
                                              0 BANK0      7     7      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      7       D       5        8.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      15        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 14:08:22 2021

                     l41 0078                       l51 00F8                       l45 00C0  
                     l46 00C0                       u11 005E                       u20 0086  
                     u21 0082                       u30 00BC                       u31 00B8  
                    l751 00D0                      l761 00DE                      l753 00D2  
                    l771 00E8                      l763 00E0                      l755 00D4  
                    l781 00F2                      l773 00EA                      l765 00E2  
                    l757 00D6                      l749 00C8                      l783 00F4  
                    l775 00EC                      l767 00E4                      l759 00D8  
                    l791 0070                      l785 00F6                      l777 00EE  
                    l769 00E6                      l793 0086                      l779 00F0  
                    l795 0098                      l787 0054                      l797 009E  
                    l789 0066                      l799 00BC                      wreg 000FE8  
                   i2l70 0030                     i2l72 003E                     i2l73 004C  
                   i2l68 0022         ??_initialisation 0060                     _main 0054  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0001                     start 0050             ___param_bank 000000  
                  ?_main 0060                    i2l801 000A                    i2l803 0018  
                  i2l807 0046                    i2l809 004A                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
                  _TXREG 000FAD                    main@i 0065                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    status 000FD8  
                  wtemp8 0002          __initialization 00FA             __end_of_main 00C8  
                 ??_main 0060            __activetblptr 000003                   _ANSELH 000F7F  
                 i2u4_40 0018                   i2u4_41 0014                   i2u5_40 0030  
                 i2u5_41 002C                   i2u6_40 003E                   i2u6_41 003A  
       __end_of_high_isr 0050                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8        high_isr@g_caracRx 006C               __accesstop 0060  
__end_of__initialization 011A            ___rparam_used 000000             __pidataBANK0 0124  
              ?_high_isr 0060                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00FA                  __ramtop 0600                  __ptext0 0054  
                __ptext1 00C8                  main@msg 0060               ??_high_isr 0060  
   end_of_initialization 011A                _RCSTAbits 000FAB                  postdec1 000FE5  
                postinc0 000FEE  __size_of_initialisation 0032                _PORTBbits 000F81  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 00FA              __pdataBANK0 0067  
          __pcstackBANK0 0060        __size_of_high_isr 0048                __pintcode 0008  
         _initialisation 00C8                 _PIE1bits 000F9D   __end_of_initialisation 00FA  
               _PIR1bits 000F9E                main@F2674 0067              _INTCON2bits 000FF1  
              copy_data0 010E                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060                 _high_isr 0008            __size_of_main 0074  
               int$flags 0001               _INTCONbits 000FF2                 intlevel2 0000  
