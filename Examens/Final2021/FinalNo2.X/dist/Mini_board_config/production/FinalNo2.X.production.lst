

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Apr 21 19:08:12 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 05/05/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K20 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ADRES	set	4035
    50  0000                     _T2CONbits	set	4042
    51  0000                     _PIR1bits	set	3998
    52  0000                     _PR2	set	4043
    53  0000                     _TRISCbits	set	3988
    54  0000                     _ADCON1	set	4033
    55  0000                     _ADCON2bits	set	4032
    56  0000                     _ANSEL	set	3966
    57  0000                     _TRISE	set	3990
    58  0000                     _TRISA	set	3986
    59  0000                     _TRISBbits	set	3987
    60  0000                     _ANSELH	set	3967
    61  0000                     _TRISD	set	3989
    62  0000                     _ADCON0bits	set	4034
    63  0000                     _CCP2CONbits	set	4026
    64  0000                     _CCPR2L	set	4027
    65  0000                     _PORTD	set	3971
    66  0000                     _PORTBbits	set	3969
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  007E84                     __pcinit:
    72                           	callstack 0
    73  007E84                     start_initialization:
    74                           	callstack 0
    75  007E84                     __initialization:
    76                           	callstack 0
    77  007E84                     end_of_initialization:
    78                           	callstack 0
    79  007E84                     __end_of__initialization:
    80                           	callstack 0
    81  007E84  0100               	movlb	0
    82  007E86  EF8C  F03F         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackBANK0
    85  000060                     __pcstackBANK0:
    86                           	callstack 0
    87  000060                     litAD@noCanal:
    88                           	callstack 0
    89                           
    90                           ; 2 bytes @ 0x0
    91  000060                     	ds	2
    92  000062                     litAD@resultat:
    93                           	callstack 0
    94                           
    95                           ; 2 bytes @ 0x2
    96  000062                     	ds	2
    97  000064                     ??_litAD:
    98                           
    99                           ; 1 bytes @ 0x4
   100  000064                     	ds	1
   101  000065                     ??_main:
   102                           
   103                           ; 1 bytes @ 0x5
   104  000065                     	ds	2
   105  000067                     main@resAN:
   106                           	callstack 0
   107                           
   108                           ; 2 bytes @ 0x7
   109  000067                     	ds	2
   110  000069                     main@no:
   111                           	callstack 0
   112                           
   113                           ; 2 bytes @ 0x9
   114  000069                     	ds	2
   115  00006B                     main@an:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0xB
   119  00006B                     	ds	2
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 17 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;  an              2   11[BANK0 ] unsigned int 
   131 ;;  no              2    9[BANK0 ] int 
   132 ;;  resAN           2    7[BANK0 ] unsigned int 
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   142 ;;      Params:         0       0       0       0       0       0       0
   143 ;;      Locals:         0       6       0       0       0       0       0
   144 ;;      Temps:          0       2       0       0       0       0       0
   145 ;;      Totals:         0       8       0       0       0       0       0
   146 ;;Total ram usage:        8 bytes
   147 ;; Hardware stack levels required when called:    1
   148 ;; This function calls:
   149 ;;		_initialisation
   150 ;;		_litAD
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  007F18                     __ptext0:
   158                           	callstack 0
   159  007F18                     _main:
   160                           	callstack 30
   161  007F18                     
   162                           ;main.c: 20:     unsigned int resAN = 0;
   163  007F18  0E00               	movlw	0
   164  007F1A  0100               	movlb	0	; force () banked
   165  007F1C  6F68               	movwf	(main@resAN+1)& (0+255),b
   166  007F1E  0E00               	movlw	0
   167  007F20  6F67               	movwf	main@resAN& (0+255),b
   168                           
   169                           ;main.c: 21:     int no = 0;
   170  007F22  0E00               	movlw	0
   171  007F24  0100               	movlb	0	; force () banked
   172  007F26  6F6A               	movwf	(main@no+1)& (0+255),b
   173  007F28  0E00               	movlw	0
   174  007F2A  6F69               	movwf	main@no& (0+255),b
   175                           
   176                           ;main.c: 22:     unsigned int an = 0;
   177  007F2C  0E00               	movlw	0
   178  007F2E  0100               	movlb	0	; force () banked
   179  007F30  6F6C               	movwf	(main@an+1)& (0+255),b
   180  007F32  0E00               	movlw	0
   181  007F34  6F6B               	movwf	main@an& (0+255),b
   182  007F36                     
   183                           ; BSR set to: 0
   184                           ;main.c: 24:     initialisation();
   185  007F36  EC60  F03F         	call	_initialisation	;wreg free
   186  007F3A                     l796:
   187                           
   188                           ;main.c: 27:     {;main.c: 28:         if (PORTBbits.RB0 == 0)
   189  007F3A  B081               	btfsc	129,0,c	;volatile
   190  007F3C  EFA2  F03F         	goto	u71
   191  007F40  EFA4  F03F         	goto	u70
   192  007F44                     u71:
   193  007F44  EFCC  F03F         	goto	l804
   194  007F48                     u70:
   195  007F48                     
   196                           ;main.c: 29:         {;main.c: 30:             no = (no + 1) % 8;
   197  007F48  0E01               	movlw	1
   198  007F4A  0100               	movlb	0	; force () banked
   199  007F4C  2569               	addwf	main@no& (0+255),w,b
   200  007F4E  0100               	movlb	0	; force () banked
   201  007F50  6F65               	movwf	??_main& (0+255),b
   202  007F52  0E00               	movlw	0
   203  007F54  0100               	movlb	0	; force () banked
   204  007F56  216A               	addwfc	(main@no+1)& (0+255),w,b
   205  007F58  0100               	movlb	0	; force () banked
   206  007F5A  6F66               	movwf	(??_main+1)& (0+255),b
   207  007F5C  0E07               	movlw	7
   208  007F5E  1565               	andwf	??_main& (0+255),w,b
   209  007F60  0100               	movlb	0	; force () banked
   210  007F62  6F69               	movwf	main@no& (0+255),b
   211  007F64  6B6A               	clrf	(main@no+1)& (0+255),b
   212                           
   213                           ;main.c: 31:             while(PORTBbits.RB0 == 0)
   214  007F66  EFC5  F03F         	goto	l802
   215  007F6A                     l800:
   216                           
   217                           ; BSR set to: 0
   218                           ;main.c: 32:             {;main.c: 33:                PORTD = (unsigned char) (1<< no);
   219  007F6A  C069  F065         	movff	main@no,??_main
   220  007F6E  0E01               	movlw	1
   221  007F70  0100               	movlb	0	; force () banked
   222  007F72  6F66               	movwf	(??_main+1)& (0+255),b
   223  007F74  2B65               	incf	??_main& (0+255),f,b
   224  007F76  EFBF  F03F         	goto	u84
   225  007F7A                     u85:
   226  007F7A  90D8               	bcf	status,0,c
   227  007F7C  3766               	rlcf	(??_main+1)& (0+255),f,b
   228  007F7E                     u84:
   229  007F7E  2F65               	decfsz	??_main& (0+255),f,b
   230  007F80  EFBD  F03F         	goto	u85
   231  007F84  0100               	movlb	0	; force () banked
   232  007F86  5166               	movf	(??_main+1)& (0+255),w,b
   233  007F88  6E83               	movwf	131,c	;volatile
   234  007F8A                     l802:
   235                           
   236                           ; BSR set to: 0
   237                           ;main.c: 31:             while(PORTBbits.RB0 == 0)
   238  007F8A  A081               	btfss	129,0,c	;volatile
   239  007F8C  EFCA  F03F         	goto	u91
   240  007F90  EFCC  F03F         	goto	u90
   241  007F94                     u91:
   242  007F94  EFB5  F03F         	goto	l800
   243  007F98                     u90:
   244  007F98                     l804:
   245                           
   246                           ;main.c: 37:         litAD(no, &an);
   247  007F98  C069  F060         	movff	main@no,litAD@noCanal
   248  007F9C  C06A  F061         	movff	main@no+1,litAD@noCanal+1
   249  007FA0  0E6B               	movlw	low main@an
   250  007FA2  0100               	movlb	0	; force () banked
   251  007FA4  6F62               	movwf	litAD@resultat& (0+255),b
   252  007FA6  0E00               	movlw	high main@an
   253  007FA8  6F63               	movwf	(litAD@resultat+1)& (0+255),b
   254  007FAA  EC45  F03F         	call	_litAD	;wreg free
   255  007FAE                     
   256                           ;main.c: 38:         PORTD = (unsigned char) (an>>2);
   257  007FAE  C06B  F065         	movff	main@an,??_main
   258  007FB2  C06C  F066         	movff	main@an+1,??_main+1
   259  007FB6  0100               	movlb	0	; force () banked
   260  007FB8  90D8               	bcf	status,0,c
   261  007FBA  3366               	rrcf	(??_main+1)& (0+255),f,b
   262  007FBC  3365               	rrcf	??_main& (0+255),f,b
   263  007FBE  90D8               	bcf	status,0,c
   264  007FC0  3366               	rrcf	(??_main+1)& (0+255),f,b
   265  007FC2  3365               	rrcf	??_main& (0+255),f,b
   266  007FC4  5165               	movf	??_main& (0+255),w,b
   267  007FC6  6E83               	movwf	131,c	;volatile
   268  007FC8                     
   269                           ; BSR set to: 0
   270                           ;main.c: 39:         CCPR2L = (unsigned char) (an>>2);
   271  007FC8  C06B  F065         	movff	main@an,??_main
   272  007FCC  C06C  F066         	movff	main@an+1,??_main+1
   273  007FD0  0100               	movlb	0	; force () banked
   274  007FD2  90D8               	bcf	status,0,c
   275  007FD4  3366               	rrcf	(??_main+1)& (0+255),f,b
   276  007FD6  3365               	rrcf	??_main& (0+255),f,b
   277  007FD8  90D8               	bcf	status,0,c
   278  007FDA  3366               	rrcf	(??_main+1)& (0+255),f,b
   279  007FDC  3365               	rrcf	??_main& (0+255),f,b
   280  007FDE  5165               	movf	??_main& (0+255),w,b
   281  007FE0  6EBB               	movwf	187,c	;volatile
   282  007FE2                     
   283                           ; BSR set to: 0
   284                           ;main.c: 40:         CCP2CONbits.DC2B = an&0b11;
   285  007FE2  C06B  F065         	movff	main@an,??_main
   286  007FE6  0E03               	movlw	3
   287  007FE8  0100               	movlb	0	; force () banked
   288  007FEA  1765               	andwf	??_main& (0+255),f,b
   289  007FEC  3B65               	swapf	??_main& (0+255),f,b
   290  007FEE  50BA               	movf	186,w,c	;volatile
   291  007FF0  1965               	xorwf	??_main& (0+255),w,b
   292  007FF2  0BCF               	andlw	-49
   293  007FF4  1965               	xorwf	??_main& (0+255),w,b
   294  007FF6  6EBA               	movwf	186,c	;volatile
   295  007FF8  EF9D  F03F         	goto	l796
   296  007FFC  EF00  F000         	goto	start
   297  008000                     __end_of_main:
   298                           	callstack 0
   299                           
   300 ;; *************** function _litAD *****************
   301 ;; Defined at:
   302 ;;		line 44 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;  noCanal         2    0[BANK0 ] int 
   305 ;;  resultat        2    2[BANK0 ] PTR unsigned int 
   306 ;;		 -> main@an(2), 
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   318 ;;      Params:         0       4       0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0
   320 ;;      Temps:          0       1       0       0       0       0       0
   321 ;;      Totals:         0       5       0       0       0       0       0
   322 ;;Total ram usage:        5 bytes
   323 ;; Hardware stack levels used:    1
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text1
   332  007E8A                     __ptext1:
   333                           	callstack 0
   334  007E8A                     _litAD:
   335                           	callstack 30
   336  007E8A                     
   337                           ;main.c: 44: void litAD(int noCanal, unsigned int* resultat);main.c: 45: {;main.c: 46:  
      +                                 ADCON0bits.CHS = (unsigned char) (noCanal);
   338  007E8A  C060  F064         	movff	litAD@noCanal,??_litAD
   339  007E8E  0100               	movlb	0	; force () banked
   340  007E90  4764               	rlncf	??_litAD& (0+255),f,b
   341  007E92  4764               	rlncf	??_litAD& (0+255),f,b
   342  007E94  50C2               	movf	194,w,c	;volatile
   343  007E96  1964               	xorwf	??_litAD& (0+255),w,b
   344  007E98  0BC3               	andlw	-61
   345  007E9A  1964               	xorwf	??_litAD& (0+255),w,b
   346  007E9C  6EC2               	movwf	194,c	;volatile
   347  007E9E                     
   348                           ; BSR set to: 0
   349                           ;main.c: 47:         ADCON0bits.GO_DONE = 1;
   350  007E9E  82C2               	bsf	194,1,c	;volatile
   351  007EA0                     l55:
   352  007EA0  B2C2               	btfsc	194,1,c	;volatile
   353  007EA2  EF55  F03F         	goto	u61
   354  007EA6  EF57  F03F         	goto	u60
   355  007EAA                     u61:
   356  007EAA  EF50  F03F         	goto	l55
   357  007EAE                     u60:
   358  007EAE                     
   359                           ;main.c: 49:         *resultat = ADRES;
   360  007EAE  C062  FFD9         	movff	litAD@resultat,fsr2l
   361  007EB2  C063  FFDA         	movff	litAD@resultat+1,fsr2h
   362  007EB6  CFC3 FFDE          	movff	4035,postinc2	;volatile
   363  007EBA  CFC4 FFDD          	movff	4036,postdec2	;volatile
   364  007EBE  0012               	return		;funcret
   365  007EC0                     __end_of_litAD:
   366                           	callstack 0
   367                           
   368 ;; *************** function _initialisation *****************
   369 ;; Defined at:
   370 ;;		line 55 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   384 ;;      Params:         0       0       0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0
   387 ;;      Totals:         0       0       0       0       0       0       0
   388 ;;Total ram usage:        0 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text2
   398  007EC0                     __ptext2:
   399                           	callstack 0
   400  007EC0                     _initialisation:
   401                           	callstack 30
   402  007EC0                     
   403                           ;main.c: 58:     TRISD = 0;
   404  007EC0  0E00               	movlw	0
   405  007EC2  6E95               	movwf	149,c	;volatile
   406                           
   407                           ;main.c: 61:     ANSELH = 0;
   408  007EC4  0E00               	movlw	0
   409  007EC6  6E7F               	movwf	127,c	;volatile
   410  007EC8                     
   411                           ;main.c: 62:     TRISBbits.RB0 = 1;
   412  007EC8  8093               	bsf	147,0,c	;volatile
   413  007ECA                     
   414                           ;main.c: 66:     TRISA = 0xFF;
   415  007ECA  6892               	setf	146,c	;volatile
   416  007ECC                     
   417                           ;main.c: 67:     TRISE = 0xFF;
   418  007ECC  6896               	setf	150,c	;volatile
   419  007ECE                     
   420                           ;main.c: 68:     ANSEL = 0xFF;
   421  007ECE  687E               	setf	126,c	;volatile
   422                           
   423                           ;main.c: 78:     ADCON2bits.ADCS = 6;
   424  007ED0  50C0               	movf	192,w,c	;volatile
   425  007ED2  0BF8               	andlw	-8
   426  007ED4  0906               	iorlw	6
   427  007ED6  6EC0               	movwf	192,c	;volatile
   428                           
   429                           ;main.c: 79:     ADCON1 = 0;
   430  007ED8  0E00               	movlw	0
   431  007EDA  6EC1               	movwf	193,c	;volatile
   432                           
   433                           ;main.c: 80:     ADCON0bits.CHS = 0b0000;
   434  007EDC  0EC3               	movlw	-61
   435  007EDE  16C2               	andwf	194,f,c	;volatile
   436  007EE0                     
   437                           ;main.c: 82:     ADCON2bits.ADFM = 1;
   438  007EE0  8EC0               	bsf	192,7,c	;volatile
   439                           
   440                           ;main.c: 83:     ADCON2bits.ACQT = 7;
   441  007EE2  0E38               	movlw	56
   442  007EE4  12C0               	iorwf	192,f,c	;volatile
   443  007EE6                     
   444                           ;main.c: 84:     ADCON0bits.ADON = 1;
   445  007EE6  80C2               	bsf	194,0,c	;volatile
   446  007EE8                     
   447                           ;main.c: 90:     TRISCbits.RC1 = 1;
   448  007EE8  8294               	bsf	148,1,c	;volatile
   449                           
   450                           ;main.c: 95:     PR2 = 155;
   451  007EEA  0E9B               	movlw	155
   452  007EEC  6ECB               	movwf	203,c	;volatile
   453                           
   454                           ;main.c: 99:     CCP2CONbits.CCP2M = 0b1111;
   455  007EEE  0E0F               	movlw	15
   456  007EF0  12BA               	iorwf	186,f,c	;volatile
   457                           
   458                           ;main.c: 103:     CCPR2L = 0x80;
   459  007EF2  0E80               	movlw	128
   460  007EF4  6EBB               	movwf	187,c	;volatile
   461                           
   462                           ;main.c: 104:     CCP2CONbits.DC2B = 0b11;
   463  007EF6  0E30               	movlw	48
   464  007EF8  12BA               	iorwf	186,f,c	;volatile
   465  007EFA                     
   466                           ;main.c: 107:     PIR1bits.TMR2IF = 0;
   467  007EFA  929E               	bcf	158,1,c	;volatile
   468                           
   469                           ;main.c: 108:     T2CONbits.T2CKPS = 1;
   470  007EFC  50CA               	movf	202,w,c	;volatile
   471  007EFE  0BFC               	andlw	-4
   472  007F00  0901               	iorlw	1
   473  007F02  6ECA               	movwf	202,c	;volatile
   474  007F04                     
   475                           ;main.c: 109:     T2CONbits.TMR2ON = 1;
   476  007F04  84CA               	bsf	202,2,c	;volatile
   477  007F06                     l61:
   478  007F06  A29E               	btfss	158,1,c	;volatile
   479  007F08  EF88  F03F         	goto	u11
   480  007F0C  EF8A  F03F         	goto	u10
   481  007F10                     u11:
   482  007F10  EF83  F03F         	goto	l61
   483  007F14                     u10:
   484  007F14                     
   485                           ;main.c: 113:     TRISCbits.RC1 = 0;
   486  007F14  9294               	bcf	148,1,c	;volatile
   487  007F16  0012               	return		;funcret
   488  007F18                     __end_of_initialisation:
   489                           	callstack 0
   490  0000                     
   491                           	psect	param0
   492  0000                     
   493                           	psect	idloc
   494                           
   495                           ;Config register IDLOC0 @ 0x200000
   496                           ;	unspecified, using default values
   497  200000                     	org	2097152
   498  200000  FF                 	db	255
   499                           
   500                           ;Config register IDLOC1 @ 0x200001
   501                           ;	unspecified, using default values
   502  200001                     	org	2097153
   503  200001  FF                 	db	255
   504                           
   505                           ;Config register IDLOC2 @ 0x200002
   506                           ;	unspecified, using default values
   507  200002                     	org	2097154
   508  200002  FF                 	db	255
   509                           
   510                           ;Config register IDLOC3 @ 0x200003
   511                           ;	unspecified, using default values
   512  200003                     	org	2097155
   513  200003  FF                 	db	255
   514                           
   515                           ;Config register IDLOC4 @ 0x200004
   516                           ;	unspecified, using default values
   517  200004                     	org	2097156
   518  200004  FF                 	db	255
   519                           
   520                           ;Config register IDLOC5 @ 0x200005
   521                           ;	unspecified, using default values
   522  200005                     	org	2097157
   523  200005  FF                 	db	255
   524                           
   525                           ;Config register IDLOC6 @ 0x200006
   526                           ;	unspecified, using default values
   527  200006                     	org	2097158
   528  200006  FF                 	db	255
   529                           
   530                           ;Config register IDLOC7 @ 0x200007
   531                           ;	unspecified, using default values
   532  200007                     	org	2097159
   533  200007  FF                 	db	255
   534                           
   535                           	psect	config
   536                           
   537                           ; Padding undefined space
   538  300000                     	org	3145728
   539  300000  FF                 	db	255
   540                           
   541                           ;Config register CONFIG1H @ 0x300001
   542                           ;	Oscillator Selection bits
   543                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   544                           ;	Fail-Safe Clock Monitor Enable bit
   545                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   546                           ;	Internal/External Oscillator Switchover bit
   547                           ;	IESO = OFF, Oscillator Switchover mode disabled
   548  300001                     	org	3145729
   549  300001  08                 	db	8
   550                           
   551                           ;Config register CONFIG2L @ 0x300002
   552                           ;	Power-up Timer Enable bit
   553                           ;	PWRT = OFF, PWRT disabled
   554                           ;	Brown-out Reset Enable bits
   555                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   556                           ;	Brown Out Reset Voltage bits
   557                           ;	BORV = 18, VBOR set to 1.8 V nominal
   558  300002                     	org	3145730
   559  300002  1F                 	db	31
   560                           
   561                           ;Config register CONFIG2H @ 0x300003
   562                           ;	Watchdog Timer Enable bit
   563                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   564                           ;	Watchdog Timer Postscale Select bits
   565                           ;	WDTPS = 32768, 1:32768
   566  300003                     	org	3145731
   567  300003  1E                 	db	30
   568                           
   569                           ; Padding undefined space
   570  300004                     	org	3145732
   571  300004  FF                 	db	255
   572                           
   573                           ;Config register CONFIG3H @ 0x300005
   574                           ;	CCP2 MUX bit
   575                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   576                           ;	PORTB A/D Enable bit
   577                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   578                           ;	Low-Power Timer1 Oscillator Enable bit
   579                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   580                           ;	HFINTOSC Fast Start-up
   581                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   582                           ;	MCLR Pin Enable bit
   583                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   584  300005                     	org	3145733
   585  300005  8B                 	db	139
   586                           
   587                           ;Config register CONFIG4L @ 0x300006
   588                           ;	Stack Full/Underflow Reset Enable bit
   589                           ;	STVREN = ON, Stack full/underflow will cause Reset
   590                           ;	Single-Supply ICSP Enable bit
   591                           ;	LVP = OFF, Single-Supply ICSP disabled
   592                           ;	Extended Instruction Set Enable bit
   593                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   594                           ;	Background Debugger Enable bit
   595                           ;	DEBUG = 0x1, unprogrammed default
   596  300006                     	org	3145734
   597  300006  81                 	db	129
   598                           
   599                           ; Padding undefined space
   600  300007                     	org	3145735
   601  300007  FF                 	db	255
   602                           
   603                           ;Config register CONFIG5L @ 0x300008
   604                           ;	Code Protection Block 0
   605                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   606                           ;	Code Protection Block 1
   607                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   608                           ;	Code Protection Block 2
   609                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   610                           ;	Code Protection Block 3
   611                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   612  300008                     	org	3145736
   613  300008  0F                 	db	15
   614                           
   615                           ;Config register CONFIG5H @ 0x300009
   616                           ;	Boot Block Code Protection bit
   617                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   618                           ;	Data EEPROM Code Protection bit
   619                           ;	CPD = OFF, Data EEPROM not code-protected
   620  300009                     	org	3145737
   621  300009  C0                 	db	192
   622                           
   623                           ;Config register CONFIG6L @ 0x30000A
   624                           ;	Write Protection Block 0
   625                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   626                           ;	Write Protection Block 1
   627                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   628                           ;	Write Protection Block 2
   629                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   630                           ;	Write Protection Block 3
   631                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   632  30000A                     	org	3145738
   633  30000A  0F                 	db	15
   634                           
   635                           ;Config register CONFIG6H @ 0x30000B
   636                           ;	Configuration Register Write Protection bit
   637                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   638                           ;	Boot Block Write Protection bit
   639                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   640                           ;	Data EEPROM Write Protection bit
   641                           ;	WRTD = OFF, Data EEPROM not write-protected
   642  30000B                     	org	3145739
   643  30000B  E0                 	db	224
   644                           
   645                           ;Config register CONFIG7L @ 0x30000C
   646                           ;	Table Read Protection Block 0
   647                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   648                           ;	Table Read Protection Block 1
   649                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   650                           ;	Table Read Protection Block 2
   651                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   652                           ;	Table Read Protection Block 3
   653                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   654  30000C                     	org	3145740
   655  30000C  0F                 	db	15
   656                           
   657                           ;Config register CONFIG7H @ 0x30000D
   658                           ;	Boot Block Table Read Protection bit
   659                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   660  30000D                     	org	3145741
   661  30000D  40                 	db	64
   662                           tosu	equ	0xFFF
   663                           tosh	equ	0xFFE
   664                           tosl	equ	0xFFD
   665                           stkptr	equ	0xFFC
   666                           pclatu	equ	0xFFB
   667                           pclath	equ	0xFFA
   668                           pcl	equ	0xFF9
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           prodh	equ	0xFF4
   674                           prodl	equ	0xFF3
   675                           indf0	equ	0xFEF
   676                           postinc0	equ	0xFEE
   677                           postdec0	equ	0xFED
   678                           preinc0	equ	0xFEC
   679                           plusw0	equ	0xFEB
   680                           fsr0h	equ	0xFEA
   681                           fsr0l	equ	0xFE9
   682                           wreg	equ	0xFE8
   683                           indf1	equ	0xFE7
   684                           postinc1	equ	0xFE6
   685                           postdec1	equ	0xFE5
   686                           preinc1	equ	0xFE4
   687                           plusw1	equ	0xFE3
   688                           fsr1h	equ	0xFE2
   689                           fsr1l	equ	0xFE1
   690                           bsr	equ	0xFE0
   691                           indf2	equ	0xFDF
   692                           postinc2	equ	0xFDE
   693                           postdec2	equ	0xFDD
   694                           preinc2	equ	0xFDC
   695                           plusw2	equ	0xFDB
   696                           fsr2h	equ	0xFDA
   697                           fsr2l	equ	0xFD9
   698                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    litAD@resultat	PTR unsigned int  size(2) Largest target is 2
		 -> main@an(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_litAD

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     356
                                              5 BANK0      8     8      0
                     _initialisation
                              _litAD
 ---------------------------------------------------------------------------------
 (1) _litAD                                                5     1      4     196
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation
   _litAD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D       D       5        8.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Apr 21 19:08:12 2021

                     l61 7F06                       l63 7F14                       l55 7EA0  
                     l64 7F16                       l58 7EBE                       u10 7F14  
                     u11 7F10                       u60 7EAE                       u61 7EAA  
                     u70 7F48                       u71 7F44                       u90 7F98  
                     u91 7F94                       u84 7F7E                       u85 7F7A  
                    l800 7F6A                      l810 7FE2                      l802 7F8A  
                    l740 7EC0                      l804 7F98                      l750 7EE0  
                    l742 7EC8                      l806 7FAE                      l752 7EE6  
                    l744 7ECA                      l808 7FC8                      l754 7EE8  
                    l746 7ECC                      l756 7EFA                      l748 7ECE  
                    l758 7F04                      l790 7EAE                      l792 7F18  
                    l786 7E8A                      l794 7F36                      l788 7E9E  
                    l796 7F3A                      l798 7F48                      _PR2 000FCB  
           litAD@noCanal 0060         ??_initialisation 0060                     _main 7F18  
                   fsr2h 000FDA                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000            litAD@resultat 0062                    ?_main 0060  
                  _ADRES 000FC3                    _ANSEL 000F7E                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISD 000F95                    _TRISE 000F96  
                  _litAD 7E8A                    status 000FD8          __initialization 7E84  
           __end_of_main 8000                   ??_main 0065            __activetblptr 000003  
                 ?_litAD 0060                   _ADCON1 000FC1                   _CCPR2L 000FBB  
                 _ANSELH 000F7F                   main@an 006B                   main@no 0069  
             __accesstop 0060  __end_of__initialization 7E84            ___rparam_used 000000  
          __end_of_litAD 7EC0                  ??_litAD 0064                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7E84                  __ramtop 0600  
                __ptext0 7F18                  __ptext1 7E8A                  __ptext2 7EC0  
              _T2CONbits 000FCA     end_of_initialization 7E84                  postdec2 000FDD  
                postinc2 000FDE  __size_of_initialisation 0058                _PORTBbits 000F81  
              _TRISBbits 000F93                _TRISCbits 000F94              _CCP2CONbits 000FBA  
    start_initialization 7E84            __pcstackBANK0 0060           _initialisation 7EC0  
         __size_of_litAD 0036   __end_of_initialisation 7F18                 _PIR1bits 000F9E  
             _ADCON0bits 000FC2               _ADCON2bits 000FC0                main@resAN 0067  
               __Hparam0 0000                 __Lparam0 0000          ?_initialisation 0060  
          __size_of_main 00E8  
