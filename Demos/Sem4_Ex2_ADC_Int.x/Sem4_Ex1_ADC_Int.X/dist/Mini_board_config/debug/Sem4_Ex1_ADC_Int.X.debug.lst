

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 14:24:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ANSELbits	set	3966
    52  0000                     _TRISBbits	set	3987
    53  0000                     _ANSELH	set	3967
    54  0000                     _TRISD	set	3989
    55  0000                     _PORTD	set	3971
    56  0000                     _ADRESL	set	4035
    57  0000                     _ADRESH	set	4036
    58  0000                     _PIR1bits	set	3998
    59  0000                     _PIE1bits	set	3997
    60  0000                     _ADCON2bits	set	4032
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON0bits	set	4034
    63  0000                     _INTCONbits	set	4082
    64                           
    65                           ; #config settings
    66  0000                     
    67                           	psect	cinit
    68  0000D0                     __pcinit:
    69                           	opt callstack 0
    70  0000D0                     start_initialization:
    71                           	opt callstack 0
    72  0000D0                     __initialization:
    73                           	opt callstack 0
    74                           
    75                           ; Clear objects allocated to BANK0 (7 bytes)
    76  0000D0  EE00  F060         	lfsr	0,__pbssBANK0
    77  0000D4  0E07               	movlw	7
    78  0000D6                     clear_0:
    79  0000D6  6AEE               	clrf	postinc0,c
    80  0000D8  06E8               	decf	wreg,f,c
    81  0000DA  E1FD               	bnz	clear_0
    82  0000DC                     end_of_initialization:
    83                           	opt callstack 0
    84  0000DC                     __end_of__initialization:
    85                           	opt callstack 0
    86  0000DC  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87  0000DE  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88  0000E0  0100               	movlb	0
    89  0000E2  EF15  F000         	goto	_main	;jump to C main() function
    90                           
    91                           	psect	bssBANK0
    92  000060                     __pbssBANK0:
    93                           	opt callstack 0
    94  000060                     _stMotMoulin:
    95                           	opt callstack 0
    96  000060                     	ds	5
    97  000065                     _g_lectureAN:
    98                           	opt callstack 0
    99  000065                     	ds	2
   100                           
   101                           	psect	cstackBANK0
   102  000067                     __pcstackBANK0:
   103                           	opt callstack 0
   104  000067                     ??_high_isr:
   105  000067                     
   106                           ; 1 bytes @ 0x0
   107  000067                     	ds	2
   108  000069                     ??_low_isr:
   109                           
   110                           ; 1 bytes @ 0x2
   111  000069                     	ds	1
   112  00006A                     ??_main:
   113                           
   114                           ; 1 bytes @ 0x3
   115  00006A                     	ds	2
   116                           
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 18 in file "main.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;		None
   125 ;; Auto vars:     Size  Location     Type
   126 ;;		None
   127 ;; Return value:  Size  Location     Type
   128 ;;                  1    wreg      void 
   129 ;; Registers used:
   130 ;;		wreg, status,2, status,0, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   136 ;;      Params:         0       0       0       0       0       0       0
   137 ;;      Locals:         0       0       0       0       0       0       0
   138 ;;      Temps:          0       2       0       0       0       0       0
   139 ;;      Totals:         0       2       0       0       0       0       0
   140 ;;Total ram usage:        2 bytes
   141 ;; Hardware stack levels required when called:    3
   142 ;; This function calls:
   143 ;;		_initialisation
   144 ;; This function is called by:
   145 ;;		Startup code after reset
   146 ;; This function uses a non-reentrant model
   147 ;;
   148                           
   149                           	psect	text0
   150  00002A                     __ptext0:
   151                           	opt callstack 0
   152  00002A                     _main:
   153                           	opt callstack 28
   154  00002A                     
   155                           ;main.c: 21: stMotMoulin.vitesse = 100;
   156  00002A  0E00               	movlw	0
   157  00002C  0100               	movlb	0	; force () banked
   158  00002E  6F61               	movwf	(_stMotMoulin+1)& (0+255),b
   159  000030  0E64               	movlw	100
   160  000032  6F60               	movwf	_stMotMoulin& (0+255),b
   161                           
   162                           ;main.c: 22: stMotMoulin.temperature = 33;
   163  000034  0E00               	movlw	0
   164  000036  6F63               	movwf	(_stMotMoulin+3)& (0+255),b
   165  000038  0E21               	movlw	33
   166  00003A  6F62               	movwf	(_stMotMoulin+2)& (0+255),b
   167                           
   168                           ;main.c: 23: stMotMoulin.courant = 12;
   169  00003C  0E0C               	movlw	12
   170  00003E  6F64               	movwf	(_stMotMoulin+4)& (0+255),b
   171  000040                     
   172                           ; BSR set to: 0
   173                           ;main.c: 25: initialisation();
   174  000040  EC51  F000         	call	_initialisation	;wreg free
   175  000044                     
   176                           ;main.c: 27: ADCON0bits.GO_DONE = 1;
   177  000044  82C2               	bsf	194,1,c	;volatile
   178  000046                     l868:
   179                           
   180                           ;main.c: 29: {;main.c: 33: stMotMoulin.courant = g_lectureAN>>2;
   181  000046  C065  F06A         	movff	_g_lectureAN,??_main
   182  00004A  C066  F06B         	movff	_g_lectureAN+1,??_main+1
   183  00004E  0100               	movlb	0	; force () banked
   184  000050  90D8               	bcf	status,0,c
   185  000052  336B               	rrcf	(??_main+1)& (0+255),f,b
   186  000054  336A               	rrcf	??_main& (0+255),f,b
   187  000056  90D8               	bcf	status,0,c
   188  000058  336B               	rrcf	(??_main+1)& (0+255),f,b
   189  00005A  336A               	rrcf	??_main& (0+255),f,b
   190  00005C  516A               	movf	??_main& (0+255),w,b
   191  00005E  0100               	movlb	0	; force () banked
   192  000060  6F64               	movwf	(_stMotMoulin+4)& (0+255),b
   193  000062                     
   194                           ; BSR set to: 0
   195                           ;main.c: 34: PORTD = stMotMoulin.courant;
   196  000062  C064  FF83         	movff	_stMotMoulin+4,3971	;volatile
   197  000066  EF23  F000         	goto	l868
   198  00006A  EF13  F000         	goto	start
   199  00006E                     __end_of_main:
   200                           	opt callstack 0
   201                           
   202 ;; *************** function _initialisation *****************
   203 ;; Defined at:
   204 ;;		line 43 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   218 ;;      Params:         0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0       0       0
   221 ;;      Totals:         0       0       0       0       0       0       0
   222 ;;Total ram usage:        0 bytes
   223 ;; Hardware stack levels used:    1
   224 ;; Hardware stack levels required when called:    2
   225 ;; This function calls:
   226 ;;		Nothing
   227 ;; This function is called by:
   228 ;;		_main
   229 ;; This function uses a non-reentrant model
   230 ;;
   231                           
   232                           	psect	text1
   233  0000A2                     __ptext1:
   234                           	opt callstack 0
   235  0000A2                     _initialisation:
   236                           	opt callstack 28
   237  0000A2                     
   238                           ;main.c: 46: TRISD = 0;
   239  0000A2  0E00               	movlw	0
   240  0000A4  6E95               	movwf	149,c	;volatile
   241                           
   242                           ;main.c: 48: ANSELH = 0;
   243  0000A6  0E00               	movlw	0
   244  0000A8  6E7F               	movwf	127,c	;volatile
   245  0000AA                     
   246                           ;main.c: 49: TRISBbits.RB0 = 1;
   247  0000AA  8093               	bsf	147,0,c	;volatile
   248  0000AC                     
   249                           ;main.c: 64: ADCON0bits.ADON = 0;
   250  0000AC  90C2               	bcf	194,0,c	;volatile
   251  0000AE                     
   252                           ;main.c: 65: ANSELbits.ANS0 = 1;
   253  0000AE  807E               	bsf	126,0,c	;volatile
   254                           
   255                           ;main.c: 66: ADCON0bits.CHS = 0b0000;
   256  0000B0  0EC3               	movlw	-61
   257  0000B2  16C2               	andwf	194,f,c	;volatile
   258                           
   259                           ;main.c: 67: ADCON1 = 0;
   260  0000B4  0E00               	movlw	0
   261  0000B6  6EC1               	movwf	193,c	;volatile
   262  0000B8                     
   263                           ;main.c: 68: ADCON2bits.ADFM = 1;
   264  0000B8  8EC0               	bsf	192,7,c	;volatile
   265                           
   266                           ;main.c: 69: ADCON2bits.ACQT = 0b111;
   267  0000BA  0E38               	movlw	56
   268  0000BC  12C0               	iorwf	192,f,c	;volatile
   269                           
   270                           ;main.c: 70: ADCON2bits.ADCS = 0b110;
   271  0000BE  50C0               	movf	192,w,c	;volatile
   272  0000C0  0BF8               	andlw	-8
   273  0000C2  0906               	iorlw	6
   274  0000C4  6EC0               	movwf	192,c	;volatile
   275  0000C6                     
   276                           ;main.c: 71: ADCON0bits.ADON = 1;
   277  0000C6  80C2               	bsf	194,0,c	;volatile
   278  0000C8                     
   279                           ;main.c: 74: INTCONbits.PEIE = 1;
   280  0000C8  8CF2               	bsf	242,6,c	;volatile
   281  0000CA                     
   282                           ;main.c: 75: INTCONbits.GIE = 1;
   283  0000CA  8EF2               	bsf	242,7,c	;volatile
   284  0000CC                     
   285                           ;main.c: 76: PIE1bits.ADIE = 1;
   286  0000CC  8C9D               	bsf	157,6,c	;volatile
   287  0000CE  0012               	return		;funcret
   288  0000D0                     __end_of_initialisation:
   289                           	opt callstack 0
   290                           
   291 ;; *************** function _low_isr *****************
   292 ;; Defined at:
   293 ;;		line 47 in file "interrupts.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		None
   302 ;; Tracked objects:
   303 ;;		On entry : 0/0
   304 ;;		On exit  : 0/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   307 ;;      Params:         0       0       0       0       0       0       0
   308 ;;      Locals:         0       0       0       0       0       0       0
   309 ;;      Temps:          0       1       0       0       0       0       0
   310 ;;      Totals:         0       1       0       0       0       0       0
   311 ;;Total ram usage:        1 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		Interrupt level 1
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	intcodelo
   322  000018                     __pintcodelo:
   323                           	opt callstack 0
   324  000018                     _low_isr:
   325                           	opt callstack 28
   326                           
   327                           ;incstack = 0
   328  000018  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   329  00001A  CFE0 F069          	movff	bsr,??_low_isr
   330  00001E  C069  FFE0         	movff	??_low_isr,bsr
   331  000022  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   332  000024  0010               	retfie	
   333  000026                     __end_of_low_isr:
   334                           	opt callstack 0
   335                           
   336 ;; *************** function _high_isr *****************
   337 ;; Defined at:
   338 ;;		line 19 in file "interrupts.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0
   354 ;;      Temps:          0       2       0       0       0       0       0
   355 ;;      Totals:         0       2       0       0       0       0       0
   356 ;;Total ram usage:        2 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		Interrupt level 2
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	intcode
   366  000008                     __pintcode:
   367                           	opt callstack 0
   368  000008                     _high_isr:
   369                           	opt callstack 28
   370                           
   371                           ;incstack = 0
   372  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   373  00000A  EF37  F000         	goto	int_func
   374                           
   375                           	psect	intcode_body
   376  00006E                     __pintcode_body:
   377                           	opt callstack 28
   378  00006E                     int_func:
   379                           	opt callstack 28
   380  00006E                     
   381                           ;interrupts.c: 34: if(PIR1bits.ADIF)
   382  00006E  AC9E               	btfss	158,6,c	;volatile
   383  000070  EF3C  F000         	goto	i2u2_41
   384  000074  EF3E  F000         	goto	i2u2_40
   385  000078                     i2u2_41:
   386  000078  EF4F  F000         	goto	i2l55
   387  00007C                     i2u2_40:
   388  00007C                     
   389                           ;interrupts.c: 35: {;interrupts.c: 38: g_lectureAN = (unsigned int)((ADRESH << 8) | ADRE
      +                          SL);
   390  00007C  50C3               	movf	195,w,c	;volatile
   391  00007E  CFC4 F067          	movff	4036,??_high_isr	;volatile
   392  000082  0100               	movlb	0	; force () banked
   393  000084  6B68               	clrf	(??_high_isr+1)& (0+255),b
   394  000086  C067  F068         	movff	??_high_isr,??_high_isr+1
   395  00008A  6B67               	clrf	??_high_isr& (0+255),b
   396  00008C  1167               	iorwf	??_high_isr& (0+255),w,b
   397  00008E  0100               	movlb	0	; force () banked
   398  000090  6F65               	movwf	_g_lectureAN& (0+255),b
   399  000092  0100               	movlb	0	; force () banked
   400  000094  5168               	movf	(??_high_isr+1)& (0+255),w,b
   401  000096  0100               	movlb	0	; force () banked
   402  000098  6F66               	movwf	(_g_lectureAN+1)& (0+255),b
   403  00009A                     
   404                           ; BSR set to: 0
   405                           ;interrupts.c: 39: PIR1bits.ADIF = 0;
   406  00009A  9C9E               	bcf	158,6,c	;volatile
   407  00009C                     
   408                           ; BSR set to: 0
   409                           ;interrupts.c: 40: ADCON0bits.GO_DONE = 1;
   410  00009C  82C2               	bsf	194,1,c	;volatile
   411  00009E                     i2l55:
   412  00009E  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   413  0000A0  0011               	retfie		f
   414  0000A2                     __end_of_high_isr:
   415                           	opt callstack 0
   416  0000                     
   417                           	psect	param0
   418  0000                     
   419                           	psect	temp
   420  000001                     btemp:
   421                           	opt callstack 0
   422  000001                     	ds	1
   423  0000                     int$flags	set	btemp
   424  0000                     wtemp8	set	btemp+1
   425  0000                     ttemp5	set	btemp+1
   426  0000                     ttemp6	set	btemp+4
   427  0000                     ttemp7	set	btemp+8
   428                           tosu	equ	0xFFF
   429                           tosh	equ	0xFFE
   430                           tosl	equ	0xFFD
   431                           stkptr	equ	0xFFC
   432                           pclatu	equ	0xFFB
   433                           pclath	equ	0xFFA
   434                           pcl	equ	0xFF9
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           prodh	equ	0xFF4
   440                           prodl	equ	0xFF3
   441                           indf0	equ	0xFEF
   442                           postinc0	equ	0xFEE
   443                           postdec0	equ	0xFED
   444                           preinc0	equ	0xFEC
   445                           plusw0	equ	0xFEB
   446                           fsr0h	equ	0xFEA
   447                           fsr0l	equ	0xFE9
   448                           wreg	equ	0xFE8
   449                           indf1	equ	0xFE7
   450                           postinc1	equ	0xFE6
   451                           postdec1	equ	0xFE5
   452                           preinc1	equ	0xFE4
   453                           plusw1	equ	0xFE3
   454                           fsr1h	equ	0xFE2
   455                           fsr1l	equ	0xFE1
   456                           bsr	equ	0xFE0
   457                           indf2	equ	0xFDF
   458                           postinc2	equ	0xFDE
   459                           postdec2	equ	0xFDD
   460                           preinc2	equ	0xFDC
   461                           plusw2	equ	0xFDB
   462                           fsr2h	equ	0xFDA
   463                           fsr2l	equ	0xFD9
   464                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      5      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 BANK0      2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5       C       4        7.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      14        0.0%
DATA                 0      0       C      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 14:24:54 2020

                     l37 00CE                       bsr 000FE0             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l850 00AE                      l860 00CC                      l852 00B8  
                    l844 00A2                      l854 00C6                      l846 00AA  
                    l870 0062                      l862 002A                      l856 00C8  
                    l848 00AC                      l864 0040                      l858 00CA  
                    l866 0044                      l868 0046             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BORV$18 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     i1l60 001E                     i2l55 009E  
       ??_initialisation 006A                     _main 002A                     btemp 0001  
                   start 0026            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0067                    i2l872 006E  
                  i2l874 007C                    i2l876 009A                    i2l878 009C  
                  _PORTD 000F83                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_low_isr 0026                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    status 000FD8  
                  wtemp8 0002           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 00D0             __end_of_main 006E                   ??_main 006A  
          __activetblptr 000003                   _ADCON1 000FC1                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELH 000F7F           __CFG_WDTEN$OFF 000000  
                 i2u2_40 007C                   i2u2_41 0078           __CFG_XINST$OFF 000000  
       __end_of_high_isr 00A2           __CFG_STVREN$ON 000000                   clear_0 00D6  
              ??_low_isr 0069               __accesstop 0060  __end_of__initialization 00DC  
          ___rparam_used 000000               __pbssBANK0 0060                ?_high_isr 0067  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00D0  
              _ANSELbits 000F7E                  __ramtop 0600                  __ptext0 002A  
                __ptext1 00A2                  _low_isr 0018               ??_high_isr 0067  
         __pintcode_body 006E     end_of_initialization 00DC                  int_func 006E  
                postinc0 000FEE  __size_of_initialisation 002E                _TRISBbits 000F93  
    start_initialization 00D0         __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0067  
      __size_of_high_isr 009A              _g_lectureAN 0065        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008           _initialisation 00A2              __pintcodelo 0018  
               ?_low_isr 0067                 _PIE1bits 000F9D   __end_of_initialisation 00D0  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0067       __CFG_BOREN$SBORDIS 000000         __size_of_low_isr 000E  
               _high_isr 0008            __size_of_main 0044                 int$flags 0001  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
            _stMotMoulin 0060        __CFG_FOSC$INTIO67 000000  
