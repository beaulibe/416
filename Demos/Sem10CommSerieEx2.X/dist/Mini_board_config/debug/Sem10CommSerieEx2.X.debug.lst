

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 12:03:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 05/05/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	smallconst
    54  000600                     __psmallconst:
    55                           	callstack 0
    56  000600  00                 	db	0
    57  000601                     _msg:
    58                           	callstack 0
    59  000601  42                 	db	66
    60  000602  72                 	db	114
    61  000603  61                 	db	97
    62  000604  76                 	db	118
    63  000605  6F                 	db	111
    64  000606  21                 	db	33
    65  000607  00                 	db	0
    66  000608                     __end_of_msg:
    67                           	callstack 0
    68  0000                     _PORTD	set	3971
    69  0000                     _TRISCbits	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _PORTDbits	set	3971
    72  0000                     _RCREG	set	4014
    73  0000                     _PIE1bits	set	3997
    74  0000                     _RCSTAbits	set	4011
    75  0000                     _BAUDCONbits	set	4024
    76  0000                     _TXSTAbits	set	4012
    77  0000                     _SPBRG	set	4015
    78  0000                     _TXREG	set	4013
    79  0000                     _PIR1bits	set	3998
    80  0000                     _INTCONbits	set	4082
    81  000608  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  0006E8                     __pcinit:
    87                           	callstack 0
    88  0006E8                     start_initialization:
    89                           	callstack 0
    90  0006E8                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to BANK0 (1 bytes)
    94  0006E8  0100               	movlb	0
    95  0006EA  6B62               	clrf	__pbssBANK0& (0+255),b
    96  0006EC                     end_of_initialization:
    97                           	callstack 0
    98  0006EC                     __end_of__initialization:
    99                           	callstack 0
   100  0006EC  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   101  0006EE  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   102  0006F0  0100               	movlb	0
   103  0006F2  EF05  F003         	goto	_main	;jump to C main() function
   104                           
   105                           	psect	bssBANK0
   106  000062                     __pbssBANK0:
   107                           	callstack 0
   108  000062                     _g_rxCar:
   109                           	callstack 0
   110  000062                     	ds	1
   111                           
   112                           	psect	cstackBANK0
   113  000060                     __pcstackBANK0:
   114                           	callstack 0
   115  000060                     main@i:
   116                           	callstack 0
   117                           
   118                           ; 2 bytes @ 0x0
   119  000060                     	ds	2
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 28 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;  i               2    0[BANK0 ] int 
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   140 ;;      Params:         0       0       0       0       0       0       0
   141 ;;      Locals:         0       2       0       0       0       0       0
   142 ;;      Temps:          0       0       0       0       0       0       0
   143 ;;      Totals:         0       2       0       0       0       0       0
   144 ;;Total ram usage:        2 bytes
   145 ;; Hardware stack levels required when called:    2
   146 ;; This function calls:
   147 ;;		_initialisation
   148 ;; This function is called by:
   149 ;;		Startup code after reset
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text0
   154  00060A                     __ptext0:
   155                           	callstack 0
   156  00060A                     _main:
   157                           	callstack 29
   158  00060A                     
   159                           ;main.c: 30: int i = 0;
   160  00060A  0E00               	movlw	0
   161  00060C  0100               	movlb	0	; force () banked
   162  00060E  6F61               	movwf	(main@i+1)& (0+255),b
   163  000610  0E00               	movlw	0
   164  000612  6F60               	movwf	main@i& (0+255),b
   165  000614                     
   166                           ; BSR set to: 0
   167                           ;main.c: 31: initialisation();
   168  000614  EC62  F003         	call	_initialisation	;wreg free
   169  000618                     l33:
   170  000618  A89E               	btfss	158,4,c	;volatile
   171  00061A  EF11  F003         	goto	u71
   172  00061E  EF13  F003         	goto	u70
   173  000622                     u71:
   174  000622  EF0C  F003         	goto	l33
   175  000626                     u70:
   176  000626                     
   177                           ;main.c: 33: TXREG = 'G';
   178  000626  0E47               	movlw	71
   179  000628  6EAD               	movwf	173,c	;volatile
   180  00062A                     
   181                           ;main.c: 34: PORTDbits.RD0 ^= 1;
   182  00062A  7083               	btg	131,0,c	;volatile
   183  00062C                     l36:
   184  00062C  A89E               	btfss	158,4,c	;volatile
   185  00062E  EF1B  F003         	goto	u81
   186  000632  EF1D  F003         	goto	u80
   187  000636                     u81:
   188  000636  EF16  F003         	goto	l36
   189  00063A                     u80:
   190  00063A                     
   191                           ;main.c: 36: TXREG = 'O';
   192  00063A  0E4F               	movlw	79
   193  00063C  6EAD               	movwf	173,c	;volatile
   194  00063E                     l906:
   195                           
   196                           ;main.c: 38: {;main.c: 39: if (g_rxCar == 'A')
   197  00063E  0E41               	movlw	65
   198  000640  0100               	movlb	0	; force () banked
   199  000642  1962               	xorwf	_g_rxCar& (0+255),w,b
   200  000644  A4D8               	btfss	status,2,c
   201  000646  EF27  F003         	goto	u91
   202  00064A  EF29  F003         	goto	u90
   203  00064E                     u91:
   204  00064E  EF1F  F003         	goto	l906
   205  000652                     u90:
   206  000652                     
   207                           ; BSR set to: 0
   208                           ;main.c: 40: {;main.c: 41: i = 0;
   209  000652  0E00               	movlw	0
   210  000654  0100               	movlb	0	; force () banked
   211  000656  6F61               	movwf	(main@i+1)& (0+255),b
   212  000658  0E00               	movlw	0
   213  00065A  6F60               	movwf	main@i& (0+255),b
   214                           
   215                           ;main.c: 42: while (msg[i] != '\0')
   216  00065C  EF47  F003         	goto	l914
   217  000660                     l43:
   218  000660  A89E               	btfss	158,4,c	;volatile
   219  000662  EF35  F003         	goto	u101
   220  000666  EF37  F003         	goto	u100
   221  00066A                     u101:
   222  00066A  EF30  F003         	goto	l43
   223  00066E                     u100:
   224  00066E                     
   225                           ;main.c: 45: TXREG = msg[i];
   226  00066E  0E01               	movlw	low _msg
   227  000670  0100               	movlb	0	; force () banked
   228  000672  2560               	addwf	main@i& (0+255),w,b
   229  000674  6EF6               	movwf	tblptrl,c
   230  000676  0E06               	movlw	high _msg
   231  000678  2161               	addwfc	(main@i+1)& (0+255),w,b
   232  00067A  6EF7               	movwf	tblptrh,c
   233  00067C                     	if	1	;There are 3 active tblptr bytes
   234  00067C  6AF8               	clrf	tblptru,c
   235  00067E  0E00               	movlw	low (__mediumconst shr (0+16))
   236  000680  22F8               	addwfc	tblptru,f,c
   237  000682                     	endif
   238  000682  0008               	tblrd		*
   239  000684  CFF5 FFAD          	movff	tablat,4013	;volatile
   240  000688                     
   241                           ; BSR set to: 0
   242                           ;main.c: 46: i++;
   243  000688  0100               	movlb	0	; force () banked
   244  00068A  4B60               	infsnz	main@i& (0+255),f,b
   245  00068C  2B61               	incf	(main@i+1)& (0+255),f,b
   246  00068E                     l914:
   247                           
   248                           ; BSR set to: 0
   249  00068E  0E01               	movlw	low _msg
   250  000690  0100               	movlb	0	; force () banked
   251  000692  2560               	addwf	main@i& (0+255),w,b
   252  000694  6EF6               	movwf	tblptrl,c
   253  000696  0E06               	movlw	high _msg
   254  000698  2161               	addwfc	(main@i+1)& (0+255),w,b
   255  00069A  6EF7               	movwf	tblptrh,c
   256  00069C                     	if	1	;There are 3 active tblptr bytes
   257  00069C  6AF8               	clrf	tblptru,c
   258  00069E  0E00               	movlw	low (__mediumconst shr (0+16))
   259  0006A0  22F8               	addwfc	tblptru,f,c
   260  0006A2                     	endif
   261  0006A2  0008               	tblrd		*
   262  0006A4  50F5               	movf	tablat,w,c
   263  0006A6  0900               	iorlw	0
   264  0006A8  A4D8               	btfss	status,2,c
   265  0006AA  EF59  F003         	goto	u111
   266  0006AE  EF5B  F003         	goto	u110
   267  0006B2                     u111:
   268  0006B2  EF30  F003         	goto	l43
   269  0006B6                     u110:
   270  0006B6                     
   271                           ; BSR set to: 0
   272                           ;main.c: 48: };main.c: 49: g_rxCar = 0;
   273  0006B6  0E00               	movlw	0
   274  0006B8  0100               	movlb	0	; force () banked
   275  0006BA  6F62               	movwf	_g_rxCar& (0+255),b
   276  0006BC  EF1F  F003         	goto	l906
   277  0006C0  EF13  F000         	goto	start
   278  0006C4                     __end_of_main:
   279                           	callstack 0
   280                           
   281 ;; *************** function _initialisation *****************
   282 ;; Defined at:
   283 ;;		line 57 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   297 ;;      Params:         0       0       0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels used:    1
   303 ;; Hardware stack levels required when called:    1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		_main
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           	psect	text1
   312  0006C4                     __ptext1:
   313                           	callstack 0
   314  0006C4                     _initialisation:
   315                           	callstack 29
   316  0006C4                     
   317                           ;main.c: 60: TRISD = 0;
   318  0006C4  0E00               	movlw	0
   319  0006C6  6E95               	movwf	149,c	;volatile
   320                           
   321                           ;main.c: 64: SPBRG = 25;
   322  0006C8  0E19               	movlw	25
   323  0006CA  6EAF               	movwf	175,c	;volatile
   324  0006CC                     
   325                           ;main.c: 65: TXSTAbits.BRGH = 1;
   326  0006CC  84AC               	bsf	172,2,c	;volatile
   327  0006CE                     
   328                           ;main.c: 66: BAUDCONbits.BRG16 = 1;
   329  0006CE  86B8               	bsf	184,3,c	;volatile
   330  0006D0                     
   331                           ;main.c: 69: TRISCbits.RC6 = 1;
   332  0006D0  8C94               	bsf	148,6,c	;volatile
   333  0006D2                     
   334                           ;main.c: 70: TRISCbits.RC7 = 1;
   335  0006D2  8E94               	bsf	148,7,c	;volatile
   336  0006D4                     
   337                           ;main.c: 73: TXSTAbits.TXEN = 1;
   338  0006D4  8AAC               	bsf	172,5,c	;volatile
   339  0006D6                     
   340                           ;main.c: 74: TXSTAbits.TX9 = 0;
   341  0006D6  9CAC               	bcf	172,6,c	;volatile
   342  0006D8                     
   343                           ;main.c: 77: RCSTAbits.SPEN = 1;
   344  0006D8  8EAB               	bsf	171,7,c	;volatile
   345  0006DA                     
   346                           ;main.c: 78: TXSTAbits.SYNC = 0;
   347  0006DA  98AC               	bcf	172,4,c	;volatile
   348  0006DC                     
   349                           ;main.c: 81: RCSTAbits.CREN = 1;
   350  0006DC  88AB               	bsf	171,4,c	;volatile
   351  0006DE                     
   352                           ;main.c: 82: RCSTAbits.RX9 = 0;
   353  0006DE  9CAB               	bcf	171,6,c	;volatile
   354  0006E0                     
   355                           ;main.c: 85: PIE1bits.RC1IE = 1;
   356  0006E0  8A9D               	bsf	157,5,c	;volatile
   357  0006E2                     
   358                           ;main.c: 88: INTCONbits.PEIE = 1;
   359  0006E2  8CF2               	bsf	242,6,c	;volatile
   360  0006E4                     
   361                           ;main.c: 89: INTCONbits.GIE = 1;
   362  0006E4  8EF2               	bsf	242,7,c	;volatile
   363  0006E6  0012               	return		;funcret
   364  0006E8                     __end_of_initialisation:
   365                           	callstack 0
   366                           
   367 ;; *************** function _high_isr *****************
   368 ;; Defined at:
   369 ;;		line 17 in file "interrupts.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		None
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   383 ;;      Params:         0       0       0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		Interrupt level 2
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	intcode
   397  000008                     __pintcode:
   398                           	callstack 0
   399  000008                     _high_isr:
   400                           	callstack 29
   401                           
   402                           ;incstack = 0
   403  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   404  00000A                     
   405                           ;interrupts.c: 19: if (PIR1bits.RC1IF == 1)
   406  00000A  AA9E               	btfss	158,5,c	;volatile
   407  00000C  EF0A  F000         	goto	i2u12_41
   408  000010  EF0C  F000         	goto	i2u12_40
   409  000014                     i2u12_41:
   410  000014  EF11  F000         	goto	i2l66
   411  000018                     i2u12_40:
   412  000018                     
   413                           ;interrupts.c: 20: {;interrupts.c: 21: PIR1bits.RC1IF = 0;
   414  000018  9A9E               	bcf	158,5,c	;volatile
   415                           
   416                           ;interrupts.c: 22: g_rxCar = RCREG;
   417  00001A  CFAE F062          	movff	4014,_g_rxCar	;volatile
   418                           
   419                           ;interrupts.c: 23: PORTD = g_rxCar;
   420  00001E  C062  FF83         	movff	_g_rxCar,3971	;volatile
   421  000022                     i2l66:
   422  000022  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   423  000024  0011               	retfie		f
   424  000026                     __end_of_high_isr:
   425                           	callstack 0
   426                           
   427                           	psect	param0
   428  0000                     
   429                           	psect	temp
   430  000001                     btemp:
   431                           	callstack 0
   432  000001                     	ds	1
   433  0000                     int$flags	set	btemp
   434  0000                     wtemp8	set	btemp+1
   435  0000                     ttemp5	set	btemp+1
   436  0000                     ttemp6	set	btemp+4
   437  0000                     ttemp7	set	btemp+8
   438                           
   439                           	psect	idloc
   440                           
   441                           ;Config register IDLOC0 @ 0x200000
   442                           ;	unspecified, using default values
   443  200000                     	org	2097152
   444  200000  FF                 	db	255
   445                           
   446                           ;Config register IDLOC1 @ 0x200001
   447                           ;	unspecified, using default values
   448  200001                     	org	2097153
   449  200001  FF                 	db	255
   450                           
   451                           ;Config register IDLOC2 @ 0x200002
   452                           ;	unspecified, using default values
   453  200002                     	org	2097154
   454  200002  FF                 	db	255
   455                           
   456                           ;Config register IDLOC3 @ 0x200003
   457                           ;	unspecified, using default values
   458  200003                     	org	2097155
   459  200003  FF                 	db	255
   460                           
   461                           ;Config register IDLOC4 @ 0x200004
   462                           ;	unspecified, using default values
   463  200004                     	org	2097156
   464  200004  FF                 	db	255
   465                           
   466                           ;Config register IDLOC5 @ 0x200005
   467                           ;	unspecified, using default values
   468  200005                     	org	2097157
   469  200005  FF                 	db	255
   470                           
   471                           ;Config register IDLOC6 @ 0x200006
   472                           ;	unspecified, using default values
   473  200006                     	org	2097158
   474  200006  FF                 	db	255
   475                           
   476                           ;Config register IDLOC7 @ 0x200007
   477                           ;	unspecified, using default values
   478  200007                     	org	2097159
   479  200007  FF                 	db	255
   480                           
   481                           	psect	config
   482                           
   483                           ; Padding undefined space
   484  300000                     	org	3145728
   485  300000  FF                 	db	255
   486                           
   487                           ;Config register CONFIG1H @ 0x300001
   488                           ;	Oscillator Selection bits
   489                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   490                           ;	Fail-Safe Clock Monitor Enable bit
   491                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   492                           ;	Internal/External Oscillator Switchover bit
   493                           ;	IESO = OFF, Oscillator Switchover mode disabled
   494  300001                     	org	3145729
   495  300001  08                 	db	8
   496                           
   497                           ;Config register CONFIG2L @ 0x300002
   498                           ;	Power-up Timer Enable bit
   499                           ;	PWRT = OFF, PWRT disabled
   500                           ;	Brown-out Reset Enable bits
   501                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   502                           ;	Brown Out Reset Voltage bits
   503                           ;	BORV = 18, VBOR set to 1.8 V nominal
   504  300002                     	org	3145730
   505  300002  1F                 	db	31
   506                           
   507                           ;Config register CONFIG2H @ 0x300003
   508                           ;	Watchdog Timer Enable bit
   509                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   510                           ;	Watchdog Timer Postscale Select bits
   511                           ;	WDTPS = 32768, 1:32768
   512  300003                     	org	3145731
   513  300003  1E                 	db	30
   514                           
   515                           ; Padding undefined space
   516  300004                     	org	3145732
   517  300004  FF                 	db	255
   518                           
   519                           ;Config register CONFIG3H @ 0x300005
   520                           ;	CCP2 MUX bit
   521                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   522                           ;	PORTB A/D Enable bit
   523                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   524                           ;	Low-Power Timer1 Oscillator Enable bit
   525                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   526                           ;	HFINTOSC Fast Start-up
   527                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   528                           ;	MCLR Pin Enable bit
   529                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   530  300005                     	org	3145733
   531  300005  8B                 	db	139
   532                           
   533                           ;Config register CONFIG4L @ 0x300006
   534                           ;	Stack Full/Underflow Reset Enable bit
   535                           ;	STVREN = ON, Stack full/underflow will cause Reset
   536                           ;	Single-Supply ICSP Enable bit
   537                           ;	LVP = OFF, Single-Supply ICSP disabled
   538                           ;	Extended Instruction Set Enable bit
   539                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   540                           ;	Background Debugger Enable bit
   541                           ;	DEBUG = 0x1, unprogrammed default
   542  300006                     	org	3145734
   543  300006  81                 	db	129
   544                           
   545                           ; Padding undefined space
   546  300007                     	org	3145735
   547  300007  FF                 	db	255
   548                           
   549                           ;Config register CONFIG5L @ 0x300008
   550                           ;	Code Protection Block 0
   551                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   552                           ;	Code Protection Block 1
   553                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   554                           ;	Code Protection Block 2
   555                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   556                           ;	Code Protection Block 3
   557                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   558  300008                     	org	3145736
   559  300008  0F                 	db	15
   560                           
   561                           ;Config register CONFIG5H @ 0x300009
   562                           ;	Boot Block Code Protection bit
   563                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   564                           ;	Data EEPROM Code Protection bit
   565                           ;	CPD = OFF, Data EEPROM not code-protected
   566  300009                     	org	3145737
   567  300009  C0                 	db	192
   568                           
   569                           ;Config register CONFIG6L @ 0x30000A
   570                           ;	Write Protection Block 0
   571                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   572                           ;	Write Protection Block 1
   573                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   574                           ;	Write Protection Block 2
   575                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   576                           ;	Write Protection Block 3
   577                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   578  30000A                     	org	3145738
   579  30000A  0F                 	db	15
   580                           
   581                           ;Config register CONFIG6H @ 0x30000B
   582                           ;	Configuration Register Write Protection bit
   583                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   584                           ;	Boot Block Write Protection bit
   585                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   586                           ;	Data EEPROM Write Protection bit
   587                           ;	WRTD = OFF, Data EEPROM not write-protected
   588  30000B                     	org	3145739
   589  30000B  E0                 	db	224
   590                           
   591                           ;Config register CONFIG7L @ 0x30000C
   592                           ;	Table Read Protection Block 0
   593                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   594                           ;	Table Read Protection Block 1
   595                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   596                           ;	Table Read Protection Block 2
   597                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   598                           ;	Table Read Protection Block 3
   599                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   600  30000C                     	org	3145740
   601  30000C  0F                 	db	15
   602                           
   603                           ;Config register CONFIG7H @ 0x30000D
   604                           ;	Boot Block Table Read Protection bit
   605                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   606  30000D                     	org	3145741
   607  30000D  40                 	db	64
   608                           tosu	equ	0xFFF
   609                           tosh	equ	0xFFE
   610                           tosl	equ	0xFFD
   611                           stkptr	equ	0xFFC
   612                           pclatu	equ	0xFFB
   613                           pclath	equ	0xFFA
   614                           pcl	equ	0xFF9
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           prodh	equ	0xFF4
   620                           prodl	equ	0xFF3
   621                           indf0	equ	0xFEF
   622                           postinc0	equ	0xFEE
   623                           postdec0	equ	0xFED
   624                           preinc0	equ	0xFEC
   625                           plusw0	equ	0xFEB
   626                           fsr0h	equ	0xFEA
   627                           fsr0l	equ	0xFE9
   628                           wreg	equ	0xFE8
   629                           indf1	equ	0xFE7
   630                           postinc1	equ	0xFE6
   631                           postdec1	equ	0xFE5
   632                           preinc1	equ	0xFE4
   633                           plusw1	equ	0xFE3
   634                           fsr1h	equ	0xFE2
   635                           fsr1l	equ	0xFE1
   636                           bsr	equ	0xFE0
   637                           indf2	equ	0xFDF
   638                           postinc2	equ	0xFDE
   639                           postdec2	equ	0xFDD
   640                           preinc2	equ	0xFDC
   641                           plusw2	equ	0xFDB
   642                           fsr2h	equ	0xFDA
   643                           fsr2l	equ	0xFD9
   644                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    7
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      2       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      47
                                              0 BANK0      2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      2       3       4        1.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      14        0.0%
DATA                 0      0       3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 12:03:17 2021

                     l33 0618                       l43 0660                       l52 06E6  
                     l36 062C                       u70 0626                       u71 0622  
                     u80 063A                       u81 0636                       u90 0652  
                     u91 064E                      l900 0626                      l910 066E  
                    l902 062A                      l912 0688                      l904 063A  
                    l914 068E                      l906 063E                      l916 06B6  
                    l908 0652                      l870 06CC                      l880 06D6  
                    l872 06CE                      l890 06E0                      l882 06D8  
                    l874 06D0                      l892 06E2                      l884 06DA  
                    l876 06D2                      l868 06C4                      l894 06E4  
                    l886 06DC                      l878 06D4                      l888 06DE  
                    l896 060A                      l898 0614                      u100 066E  
                    u101 066A                      u110 06B6                      u111 06B2  
                    _msg 0601                     i2l66 0022         ??_initialisation 0060  
                   _main 060A                     btemp 0001                     start 0026  
           ___param_bank 000000                    ?_main 0060                    i2l920 0018  
                  i2l918 000A                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTD 000F83                    _TRISD 000F95                    _TXREG 000FAD  
                  main@i 0060                    tablat 000FF5                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    status 000FD8  
                  wtemp8 0002          __initialization 06E8             __end_of_main 06C4  
                 ??_main 0060            __activetblptr 000003         __end_of_high_isr 0026  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 06EC  
          ___rparam_used 000000               __pbssBANK0 0062                  i2u12_40 0018  
                i2u12_41 0014                ?_high_isr 0060                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 06E8  
                __ramtop 0600                  _g_rxCar 0062                  __ptext0 060A  
                __ptext1 06C4               ??_high_isr 0060     end_of_initialization 06EC  
              _RCSTAbits 000FAB  __size_of_initialisation 0024                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
    start_initialization 06E8              __end_of_msg 0608            __pcstackBANK0 0060  
      __size_of_high_isr 001E                __pintcode 0008           _initialisation 06C4  
            __smallconst 0600                 _PIE1bits 000F9D   __end_of_initialisation 06E8  
               _PIR1bits 000F9E                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060                 _high_isr 0008            __size_of_main 00BA  
               int$flags 0001               _INTCONbits 000FF2                 intlevel2 0000  
