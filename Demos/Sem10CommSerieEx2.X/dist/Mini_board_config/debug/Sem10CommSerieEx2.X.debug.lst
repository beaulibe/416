

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Apr 26 10:01:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	smallconst
    52  000600                     __psmallconst:
    53                           	opt callstack 0
    54  000600  00                 	db	0
    55  000601                     _msg:
    56                           	opt callstack 0
    57  000601  42                 	db	66
    58  000602  72                 	db	114
    59  000603  61                 	db	97
    60  000604  76                 	db	118
    61  000605  6F                 	db	111
    62  000606  21                 	db	33
    63  000607  00                 	db	0
    64  000608                     __end_of_msg:
    65                           	opt callstack 0
    66  0000                     _PORTD	set	3971
    67  0000                     _TRISCbits	set	3988
    68  0000                     _TRISD	set	3989
    69  0000                     _PORTDbits	set	3971
    70  0000                     _RCREG	set	4014
    71  0000                     _PIE1bits	set	3997
    72  0000                     _RCSTAbits	set	4011
    73  0000                     _BAUDCONbits	set	4024
    74  0000                     _TXSTAbits	set	4012
    75  0000                     _SPBRG	set	4015
    76  0000                     _TXREG	set	4013
    77  0000                     _PIR1bits	set	3998
    78  0000                     _INTCONbits	set	4082
    79                           
    80                           ; #config settings
    81  000608  00                 	db	0	; dummy byte at the end
    82  0000                     
    83                           	psect	cinit
    84  0006E4                     __pcinit:
    85                           	opt callstack 0
    86  0006E4                     start_initialization:
    87                           	opt callstack 0
    88  0006E4                     __initialization:
    89                           	opt callstack 0
    90                           
    91                           ; Clear objects allocated to BANK0 (1 bytes)
    92  0006E4  0100               	movlb	0
    93  0006E6  6B62               	clrf	__pbssBANK0& (0+255),b
    94  0006E8                     end_of_initialization:
    95                           	opt callstack 0
    96  0006E8                     __end_of__initialization:
    97                           	opt callstack 0
    98  0006E8  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    99  0006EA  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   100  0006EC  0100               	movlb	0
   101  0006EE  EF05  F003         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	bssBANK0
   104  000062                     __pbssBANK0:
   105                           	opt callstack 0
   106  000062                     _g_rxCar:
   107                           	opt callstack 0
   108  000062                     	ds	1
   109                           
   110                           	psect	cstackBANK0
   111  000060                     __pcstackBANK0:
   112                           	opt callstack 0
   113  000060                     main@i:
   114                           	opt callstack 0
   115                           
   116                           ; 2 bytes @ 0x0
   117  000060                     	ds	2
   118                           
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 27 in file "main.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;  i               2    0[BANK0 ] int 
   129 ;; Return value:  Size  Location     Type
   130 ;;                  1    wreg      void 
   131 ;; Registers used:
   132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   133 ;; Tracked objects:
   134 ;;		On entry : 0/0
   135 ;;		On exit  : 0/0
   136 ;;		Unchanged: 0/0
   137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   138 ;;      Params:         0       0       0       0       0       0       0
   139 ;;      Locals:         0       2       0       0       0       0       0
   140 ;;      Temps:          0       0       0       0       0       0       0
   141 ;;      Totals:         0       2       0       0       0       0       0
   142 ;;Total ram usage:        2 bytes
   143 ;; Hardware stack levels required when called:    2
   144 ;; This function calls:
   145 ;;		_initialisation
   146 ;; This function is called by:
   147 ;;		Startup code after reset
   148 ;; This function uses a non-reentrant model
   149 ;;
   150                           
   151                           	psect	text0
   152  00060A                     __ptext0:
   153                           	opt callstack 0
   154  00060A                     _main:
   155                           	opt callstack 29
   156  00060A                     
   157                           ;main.c: 29: int i = 0;
   158  00060A  0E00               	movlw	0
   159  00060C  0100               	movlb	0	; force () banked
   160  00060E  6F61               	movwf	(main@i+1)& (0+255),b
   161  000610  0E00               	movlw	0
   162  000612  6F60               	movwf	main@i& (0+255),b
   163  000614                     
   164                           ; BSR set to: 0
   165                           ;main.c: 30: initialisation();
   166  000614  EC62  F003         	call	_initialisation	;wreg free
   167  000618                     l33:
   168  000618  A89E               	btfss	158,4,c	;volatile
   169  00061A  EF11  F003         	goto	u71
   170  00061E  EF13  F003         	goto	u70
   171  000622                     u71:
   172  000622  EF0C  F003         	goto	l33
   173  000626                     u70:
   174  000626                     
   175                           ;main.c: 32: TXREG = 'G';
   176  000626  0E47               	movlw	71
   177  000628  6EAD               	movwf	173,c	;volatile
   178  00062A                     
   179                           ;main.c: 33: PORTDbits.RD0 ^= 1;
   180  00062A  7083               	btg	131,0,c	;volatile
   181  00062C                     l36:
   182  00062C  A89E               	btfss	158,4,c	;volatile
   183  00062E  EF1B  F003         	goto	u81
   184  000632  EF1D  F003         	goto	u80
   185  000636                     u81:
   186  000636  EF16  F003         	goto	l36
   187  00063A                     u80:
   188  00063A                     
   189                           ;main.c: 35: TXREG = 'O';
   190  00063A  0E4F               	movlw	79
   191  00063C  6EAD               	movwf	173,c	;volatile
   192  00063E                     l898:
   193                           
   194                           ;main.c: 37: {;main.c: 38: if (g_rxCar == 'A')
   195  00063E  0E41               	movlw	65
   196  000640  0100               	movlb	0	; force () banked
   197  000642  1962               	xorwf	_g_rxCar& (0+255),w,b
   198  000644  A4D8               	btfss	status,2,c
   199  000646  EF27  F003         	goto	u91
   200  00064A  EF29  F003         	goto	u90
   201  00064E                     u91:
   202  00064E  EF1F  F003         	goto	l898
   203  000652                     u90:
   204  000652                     
   205                           ; BSR set to: 0
   206                           ;main.c: 39: {;main.c: 40: i = 0;
   207  000652  0E00               	movlw	0
   208  000654  0100               	movlb	0	; force () banked
   209  000656  6F61               	movwf	(main@i+1)& (0+255),b
   210  000658  0E00               	movlw	0
   211  00065A  6F60               	movwf	main@i& (0+255),b
   212                           
   213                           ;main.c: 41: while (msg[i] != '\0')
   214  00065C  EF47  F003         	goto	l906
   215  000660                     l43:
   216  000660  A89E               	btfss	158,4,c	;volatile
   217  000662  EF35  F003         	goto	u101
   218  000666  EF37  F003         	goto	u100
   219  00066A                     u101:
   220  00066A  EF30  F003         	goto	l43
   221  00066E                     u100:
   222  00066E                     
   223                           ;main.c: 44: TXREG = msg[i];
   224  00066E  0E01               	movlw	low _msg
   225  000670  0100               	movlb	0	; force () banked
   226  000672  2560               	addwf	main@i& (0+255),w,b
   227  000674  6EF6               	movwf	tblptrl,c
   228  000676  0E06               	movlw	high _msg
   229  000678  2161               	addwfc	(main@i+1)& (0+255),w,b
   230  00067A  6EF7               	movwf	tblptrh,c
   231  00067C                     	if	1	;There are 3 active tblptr bytes
   232  00067C  6AF8               	clrf	tblptru,c
   233  00067E  0E00               	movlw	low (__mediumconst shr (0+16))
   234  000680  22F8               	addwfc	tblptru,f,c
   235  000682                     	endif
   236  000682  0008               	tblrd		*
   237  000684  CFF5 FFAD          	movff	tablat,4013	;volatile
   238  000688                     
   239                           ; BSR set to: 0
   240                           ;main.c: 45: i++;
   241  000688  0100               	movlb	0	; force () banked
   242  00068A  4B60               	infsnz	main@i& (0+255),f,b
   243  00068C  2B61               	incf	(main@i+1)& (0+255),f,b
   244  00068E                     l906:
   245                           
   246                           ; BSR set to: 0
   247  00068E  0E01               	movlw	low _msg
   248  000690  0100               	movlb	0	; force () banked
   249  000692  2560               	addwf	main@i& (0+255),w,b
   250  000694  6EF6               	movwf	tblptrl,c
   251  000696  0E06               	movlw	high _msg
   252  000698  2161               	addwfc	(main@i+1)& (0+255),w,b
   253  00069A  6EF7               	movwf	tblptrh,c
   254  00069C                     	if	1	;There are 3 active tblptr bytes
   255  00069C  6AF8               	clrf	tblptru,c
   256  00069E  0E00               	movlw	low (__mediumconst shr (0+16))
   257  0006A0  22F8               	addwfc	tblptru,f,c
   258  0006A2                     	endif
   259  0006A2  0008               	tblrd		*
   260  0006A4  50F5               	movf	tablat,w,c
   261  0006A6  0900               	iorlw	0
   262  0006A8  A4D8               	btfss	status,2,c
   263  0006AA  EF59  F003         	goto	u111
   264  0006AE  EF5B  F003         	goto	u110
   265  0006B2                     u111:
   266  0006B2  EF30  F003         	goto	l43
   267  0006B6                     u110:
   268  0006B6                     
   269                           ; BSR set to: 0
   270                           ;main.c: 47: };main.c: 48: g_rxCar = 0;
   271  0006B6  0E00               	movlw	0
   272  0006B8  0100               	movlb	0	; force () banked
   273  0006BA  6F62               	movwf	_g_rxCar& (0+255),b
   274  0006BC  EF1F  F003         	goto	l898
   275  0006C0  EF13  F000         	goto	start
   276  0006C4                     __end_of_main:
   277                           	opt callstack 0
   278                           
   279 ;; *************** function _initialisation *****************
   280 ;; Defined at:
   281 ;;		line 56 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   295 ;;      Params:         0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; Hardware stack levels required when called:    1
   302 ;; This function calls:
   303 ;;		Nothing
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text1
   310  0006C4                     __ptext1:
   311                           	opt callstack 0
   312  0006C4                     _initialisation:
   313                           	opt callstack 29
   314  0006C4                     
   315                           ;main.c: 59: TRISD = 0;
   316  0006C4  0E00               	movlw	0
   317  0006C6  6E95               	movwf	149,c	;volatile
   318                           
   319                           ;main.c: 63: SPBRG = 25;
   320  0006C8  0E19               	movlw	25
   321  0006CA  6EAF               	movwf	175,c	;volatile
   322  0006CC                     
   323                           ;main.c: 64: TXSTAbits.BRGH = 1;
   324  0006CC  84AC               	bsf	172,2,c	;volatile
   325  0006CE                     
   326                           ;main.c: 65: BAUDCONbits.BRG16 = 1;
   327  0006CE  86B8               	bsf	184,3,c	;volatile
   328  0006D0                     
   329                           ;main.c: 68: TRISCbits.RC6 = 1;
   330  0006D0  8C94               	bsf	148,6,c	;volatile
   331  0006D2                     
   332                           ;main.c: 69: TRISCbits.RC7 = 1;
   333  0006D2  8E94               	bsf	148,7,c	;volatile
   334  0006D4                     
   335                           ;main.c: 72: TXSTAbits.TXEN = 1;
   336  0006D4  8AAC               	bsf	172,5,c	;volatile
   337  0006D6                     
   338                           ;main.c: 75: RCSTAbits.SPEN = 1;
   339  0006D6  8EAB               	bsf	171,7,c	;volatile
   340  0006D8                     
   341                           ;main.c: 76: TXSTAbits.SYNC = 0;
   342  0006D8  98AC               	bcf	172,4,c	;volatile
   343  0006DA                     
   344                           ;main.c: 79: RCSTAbits.CREN = 1;
   345  0006DA  88AB               	bsf	171,4,c	;volatile
   346  0006DC                     
   347                           ;main.c: 82: PIE1bits.RC1IE = 1;
   348  0006DC  8A9D               	bsf	157,5,c	;volatile
   349  0006DE                     
   350                           ;main.c: 85: INTCONbits.PEIE = 1;
   351  0006DE  8CF2               	bsf	242,6,c	;volatile
   352  0006E0                     
   353                           ;main.c: 86: INTCONbits.GIE = 1;
   354  0006E0  8EF2               	bsf	242,7,c	;volatile
   355  0006E2  0012               	return		;funcret
   356  0006E4                     __end_of_initialisation:
   357                           	opt callstack 0
   358                           
   359 ;; *************** function _high_isr *****************
   360 ;; Defined at:
   361 ;;		line 17 in file "interrupts.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		None
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   375 ;;      Params:         0       0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		Interrupt level 2
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           	psect	intcode
   389  000008                     __pintcode:
   390                           	opt callstack 0
   391  000008                     _high_isr:
   392                           	opt callstack 29
   393                           
   394                           ;incstack = 0
   395  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   396  00000A                     
   397                           ;interrupts.c: 19: if (PIR1bits.RC1IF == 1)
   398  00000A  AA9E               	btfss	158,5,c	;volatile
   399  00000C  EF0A  F000         	goto	i2u12_41
   400  000010  EF0C  F000         	goto	i2u12_40
   401  000014                     i2u12_41:
   402  000014  EF11  F000         	goto	i2l66
   403  000018                     i2u12_40:
   404  000018                     
   405                           ;interrupts.c: 20: {;interrupts.c: 21: PIR1bits.RC1IF = 0;
   406  000018  9A9E               	bcf	158,5,c	;volatile
   407                           
   408                           ;interrupts.c: 22: g_rxCar = RCREG;
   409  00001A  CFAE F062          	movff	4014,_g_rxCar	;volatile
   410                           
   411                           ;interrupts.c: 23: PORTD = g_rxCar;
   412  00001E  C062  FF83         	movff	_g_rxCar,3971	;volatile
   413  000022                     i2l66:
   414  000022  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   415  000024  0011               	retfie		f
   416  000026                     __end_of_high_isr:
   417                           	opt callstack 0
   418                           
   419                           	psect	param0
   420  0000                     
   421                           	psect	temp
   422  000001                     btemp:
   423                           	opt callstack 0
   424  000001                     	ds	1
   425  0000                     int$flags	set	btemp
   426  0000                     wtemp8	set	btemp+1
   427  0000                     ttemp5	set	btemp+1
   428  0000                     ttemp6	set	btemp+4
   429  0000                     ttemp7	set	btemp+8
   430                           tosu	equ	0xFFF
   431                           tosh	equ	0xFFE
   432                           tosl	equ	0xFFD
   433                           stkptr	equ	0xFFC
   434                           pclatu	equ	0xFFB
   435                           pclath	equ	0xFFA
   436                           pcl	equ	0xFF9
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           prodh	equ	0xFF4
   442                           prodl	equ	0xFF3
   443                           indf0	equ	0xFEF
   444                           postinc0	equ	0xFEE
   445                           postdec0	equ	0xFED
   446                           preinc0	equ	0xFEC
   447                           plusw0	equ	0xFEB
   448                           fsr0h	equ	0xFEA
   449                           fsr0l	equ	0xFE9
   450                           wreg	equ	0xFE8
   451                           indf1	equ	0xFE7
   452                           postinc1	equ	0xFE6
   453                           postdec1	equ	0xFE5
   454                           preinc1	equ	0xFE4
   455                           plusw1	equ	0xFE3
   456                           fsr1h	equ	0xFE2
   457                           fsr1l	equ	0xFE1
   458                           bsr	equ	0xFE0
   459                           indf2	equ	0xFDF
   460                           postinc2	equ	0xFDE
   461                           postdec2	equ	0xFDD
   462                           preinc2	equ	0xFDC
   463                           plusw2	equ	0xFDB
   464                           fsr2h	equ	0xFDA
   465                           fsr2l	equ	0xFD9
   466                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    7
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      2       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      47
                                              0 BANK0      2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      2       3       4        1.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      14        0.0%
DATA                 0      0       3      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Apr 26 10:01:02 2020

                     l33 0618                       l43 0660                       l52 06E2  
                     l36 062C                       u70 0626                       u71 0622  
                     u80 063A                       u81 0636                       u90 0652  
                     u91 064E             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l900 0652  
                    l902 066E                      l904 0688                      l906 068E  
                    l908 06B6                      l870 06D0                      l880 06DA  
                    l872 06D2                      l864 06C4                      l882 06DC  
                    l874 06D4                      l866 06CC                      l890 0614  
                    l884 06DE                      l876 06D6                      l868 06CE  
                    l892 0626                      l886 06E0                      l878 06D8  
                    l894 062A                      l896 063A                      l888 060A  
                    l898 063E             __CFG_CPB$OFF 000000                      u100 066E  
                    u101 066A                      u110 06B6                      u111 06B2  
           __CFG_CPD$OFF 000000                      _msg 0601             __CFG_BORV$18 000000  
           __CFG_LVP$OFF 000000                     i2l66 0022         ??_initialisation 0060  
                   _main 060A                     btemp 0001                     start 0026  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0060                    i2l910 000A                    i2l912 0018  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@i 0060                    tablat 000FF5  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  status 000FD8                    wtemp8 0002           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000          __initialization 06E4             __end_of_main 06C4  
                 ??_main 0060            __activetblptr 000003           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 0026           __CFG_STVREN$ON 000000  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 06E8  
          ___rparam_used 000000               __pbssBANK0 0062                  i2u12_40 0018  
                i2u12_41 0014                ?_high_isr 0060                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 06E4  
                __ramtop 0600                  _g_rxCar 0062                  __ptext0 060A  
                __ptext1 06C4               ??_high_isr 0060     end_of_initialization 06E8  
              _RCSTAbits 000FAB  __size_of_initialisation 0020                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC              _BAUDCONbits 000FB8  
    start_initialization 06E4              __end_of_msg 0608         __CFG_LPT1OSC$OFF 000000  
          __pcstackBANK0 0060        __size_of_high_isr 001E        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008           _initialisation 06C4              __smallconst 0600  
               _PIE1bits 000F9D   __end_of_initialisation 06E4                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000                 _high_isr 0008  
          __size_of_main 00BA                 int$flags 0001               _INTCONbits 000FF2  
               intlevel2 0000        __CFG_FOSC$INTIO67 000000  
