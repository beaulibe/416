

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 04 09:56:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	smallconst
    52  000600                     __psmallconst:
    53                           	opt callstack 0
    54  000600  00                 	db	0
    55  000601                     _msg:
    56                           	opt callstack 0
    57  000601  42                 	db	66
    58  000602  72                 	db	114
    59  000603  61                 	db	97
    60  000604  76                 	db	118
    61  000605  6F                 	db	111
    62  000606  21                 	db	33
    63  000607  00                 	db	0
    64  000608                     __end_of_msg:
    65                           	opt callstack 0
    66  0000                     _PORTD	set	3971
    67  0000                     _RCREG	set	4014
    68  0000                     _PIR1bits	set	3998
    69  0000                     _INTCONbits	set	4082
    70  0000                     _PIE1bits	set	3997
    71  0000                     _RCSTAbits	set	4011
    72  0000                     _TXSTAbits	set	4012
    73  0000                     _TRISCbits	set	3988
    74  0000                     _SPBRG	set	4015
    75  0000                     _TRISD	set	3989
    76  0000                     _TXREG	set	4013
    77  0000                     _PORTDbits	set	3971
    78                           
    79                           ; #config settings
    80  000608  00                 	db	0	; dummy byte at the end
    81  0000                     
    82                           	psect	cinit
    83  000710                     __pcinit:
    84                           	opt callstack 0
    85  000710                     start_initialization:
    86                           	opt callstack 0
    87  000710                     __initialization:
    88                           	opt callstack 0
    89                           
    90                           ; Clear objects allocated to BANK0 (1 bytes)
    91  000710  0100               	movlb	0
    92  000712  6B65               	clrf	__pbssBANK0& (0+255),b
    93  000714                     end_of_initialization:
    94                           	opt callstack 0
    95  000714                     __end_of__initialization:
    96                           	opt callstack 0
    97  000714  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  000716  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  000718  0100               	movlb	0
   100  00071A  EF05  F003         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssBANK0
   103  000065                     __pbssBANK0:
   104                           	opt callstack 0
   105  000065                     _g_rxCar:
   106                           	opt callstack 0
   107  000065                     	ds	1
   108                           
   109                           	psect	cstackBANK0
   110  000060                     __pcstackBANK0:
   111                           	opt callstack 0
   112  000060                     ??_main:
   113  000060                     
   114                           ; 1 bytes @ 0x0
   115  000060                     	ds	1
   116  000061                     main@i_329:
   117                           	opt callstack 0
   118                           
   119                           ; 2 bytes @ 0x1
   120  000061                     	ds	2
   121  000063                     main@i:
   122                           	opt callstack 0
   123                           
   124                           ; 2 bytes @ 0x3
   125  000063                     	ds	2
   126                           
   127 ;;
   128 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   129 ;;
   130 ;; *************** function _main *****************
   131 ;; Defined at:
   132 ;;		line 23 in file "main.c"
   133 ;; Parameters:    Size  Location     Type
   134 ;;		None
   135 ;; Auto vars:     Size  Location     Type
   136 ;;  i               2    1[BANK0 ] int 
   137 ;;  i               2    3[BANK0 ] int 
   138 ;; Return value:  Size  Location     Type
   139 ;;                  1    wreg      void 
   140 ;; Registers used:
   141 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   142 ;; Tracked objects:
   143 ;;		On entry : 0/0
   144 ;;		On exit  : 0/0
   145 ;;		Unchanged: 0/0
   146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   147 ;;      Params:         0       0       0       0       0       0       0
   148 ;;      Locals:         0       4       0       0       0       0       0
   149 ;;      Temps:          0       1       0       0       0       0       0
   150 ;;      Totals:         0       5       0       0       0       0       0
   151 ;;Total ram usage:        5 bytes
   152 ;; Hardware stack levels required when called:    2
   153 ;; This function calls:
   154 ;;		_initialisation
   155 ;; This function is called by:
   156 ;;		Startup code after reset
   157 ;; This function uses a non-reentrant model
   158 ;;
   159                           
   160                           	psect	text0
   161  00060A                     __ptext0:
   162                           	opt callstack 0
   163  00060A                     _main:
   164                           	opt callstack 29
   165  00060A                     
   166                           ;main.c: 25: int i = 0;
   167  00060A  0E00               	movlw	0
   168  00060C  0100               	movlb	0	; force () banked
   169  00060E  6F64               	movwf	(main@i+1)& (0+255),b
   170  000610  0E00               	movlw	0
   171  000612  6F63               	movwf	main@i& (0+255),b
   172  000614                     
   173                           ; BSR set to: 0
   174                           ;main.c: 28: initialisation();
   175  000614  EC7A  F003         	call	_initialisation	;wreg free
   176  000618                     
   177                           ;main.c: 31: for (int i = 0; i < 6; i++)
   178  000618  0E00               	movlw	0
   179  00061A  0100               	movlb	0	; force () banked
   180  00061C  6F62               	movwf	(main@i_329+1)& (0+255),b
   181  00061E  0E00               	movlw	0
   182  000620  6F61               	movwf	main@i_329& (0+255),b
   183  000622                     
   184                           ; BSR set to: 0
   185  000622  0100               	movlb	0	; force () banked
   186  000624  BF62               	btfsc	(main@i_329+1)& (0+255),7,b
   187  000626  EF1E  F003         	goto	u61
   188  00062A  5162               	movf	(main@i_329+1)& (0+255),w,b
   189  00062C  E109               	bnz	u60
   190  00062E  0E06               	movlw	6
   191  000630  5D61               	subwf	main@i_329& (0+255),w,b
   192  000632  A0D8               	btfss	status,0,c
   193  000634  EF1E  F003         	goto	u61
   194  000638  EF20  F003         	goto	u60
   195  00063C                     u61:
   196  00063C  EF22  F003         	goto	l889
   197  000640                     u60:
   198  000640  EF3F  F003         	goto	l895
   199  000644                     l889:
   200                           
   201                           ; BSR set to: 0
   202                           ;main.c: 32: {;main.c: 33: PORTDbits.RD0 ^= 1;
   203  000644  7083               	btg	131,0,c	;volatile
   204  000646                     
   205                           ; BSR set to: 0
   206                           ;main.c: 34: _delay((unsigned long)((300)*(1000000/4000.0)));
   207  000646  0E62               	movlw	98
   208  000648  0100               	movlb	0	; force () banked
   209  00064A  6F60               	movwf	??_main& (0+255),b
   210  00064C  0E65               	movlw	101
   211  00064E                     u117:
   212  00064E  2EE8               	decfsz	wreg,f,c
   213  000650  D7FE               	bra	u117
   214  000652  2F60               	decfsz	??_main& (0+255),f,b
   215  000654  D7FC               	bra	u117
   216  000656  F000 F000          	nop2	
   217  00065A  0100               	movlb	0	; force () banked
   218  00065C  4B61               	infsnz	main@i_329& (0+255),f,b
   219  00065E  2B62               	incf	(main@i_329+1)& (0+255),f,b
   220  000660                     
   221                           ; BSR set to: 0
   222  000660  0100               	movlb	0	; force () banked
   223  000662  BF62               	btfsc	(main@i_329+1)& (0+255),7,b
   224  000664  EF3D  F003         	goto	u71
   225  000668  5162               	movf	(main@i_329+1)& (0+255),w,b
   226  00066A  E109               	bnz	u70
   227  00066C  0E06               	movlw	6
   228  00066E  5D61               	subwf	main@i_329& (0+255),w,b
   229  000670  A0D8               	btfss	status,0,c
   230  000672  EF3D  F003         	goto	u71
   231  000676  EF3F  F003         	goto	u70
   232  00067A                     u71:
   233  00067A  EF22  F003         	goto	l889
   234  00067E                     u70:
   235  00067E                     l895:
   236                           
   237                           ; BSR set to: 0
   238                           ;main.c: 35: };main.c: 36: TXREG = 'G';
   239  00067E  0E47               	movlw	71
   240  000680  6EAD               	movwf	173,c	;volatile
   241  000682                     l897:
   242                           
   243                           ; BSR set to: 0
   244                           ;main.c: 39: {;main.c: 40: if (g_rxCar == 'A')
   245  000682  0E41               	movlw	65
   246  000684  0100               	movlb	0	; force () banked
   247  000686  1965               	xorwf	_g_rxCar& (0+255),w,b
   248  000688  A4D8               	btfss	status,2,c
   249  00068A  EF49  F003         	goto	u81
   250  00068E  EF4B  F003         	goto	u80
   251  000692                     u81:
   252  000692  EF41  F003         	goto	l897
   253  000696                     u80:
   254  000696                     
   255                           ; BSR set to: 0
   256                           ;main.c: 41: {;main.c: 42: i = 0;
   257  000696  0E00               	movlw	0
   258  000698  0100               	movlb	0	; force () banked
   259  00069A  6F64               	movwf	(main@i+1)& (0+255),b
   260  00069C  0E00               	movlw	0
   261  00069E  6F63               	movwf	main@i& (0+255),b
   262                           
   263                           ;main.c: 43: while (msg[i] != '\0')
   264  0006A0  EF62  F003         	goto	l905
   265  0006A4                     l901:
   266                           
   267                           ; BSR set to: 0
   268                           ;main.c: 44: {;main.c: 45: TXREG = msg[i];
   269  0006A4  0E01               	movlw	low _msg
   270  0006A6  0100               	movlb	0	; force () banked
   271  0006A8  2563               	addwf	main@i& (0+255),w,b
   272  0006AA  6EF6               	movwf	tblptrl,c
   273  0006AC  0E06               	movlw	high _msg
   274  0006AE  2164               	addwfc	(main@i+1)& (0+255),w,b
   275  0006B0  6EF7               	movwf	tblptrh,c
   276  0006B2                     	if	1	;There are 3 active tblptr bytes
   277  0006B2  6AF8               	clrf	tblptru,c
   278  0006B4  0E00               	movlw	low (__mediumconst shr (0+16))
   279  0006B6  22F8               	addwfc	tblptru,f,c
   280  0006B8                     	endif
   281  0006B8  0008               	tblrd		*
   282  0006BA  CFF5 FFAD          	movff	tablat,4013	;volatile
   283  0006BE                     
   284                           ; BSR set to: 0
   285                           ;main.c: 46: i++;
   286  0006BE  0100               	movlb	0	; force () banked
   287  0006C0  4B63               	infsnz	main@i& (0+255),f,b
   288  0006C2  2B64               	incf	(main@i+1)& (0+255),f,b
   289  0006C4                     l905:
   290                           
   291                           ; BSR set to: 0
   292  0006C4  0E01               	movlw	low _msg
   293  0006C6  0100               	movlb	0	; force () banked
   294  0006C8  2563               	addwf	main@i& (0+255),w,b
   295  0006CA  6EF6               	movwf	tblptrl,c
   296  0006CC  0E06               	movlw	high _msg
   297  0006CE  2164               	addwfc	(main@i+1)& (0+255),w,b
   298  0006D0  6EF7               	movwf	tblptrh,c
   299  0006D2                     	if	1	;There are 3 active tblptr bytes
   300  0006D2  6AF8               	clrf	tblptru,c
   301  0006D4  0E00               	movlw	low (__mediumconst shr (0+16))
   302  0006D6  22F8               	addwfc	tblptru,f,c
   303  0006D8                     	endif
   304  0006D8  0008               	tblrd		*
   305  0006DA  50F5               	movf	tablat,w,c
   306  0006DC  0900               	iorlw	0
   307  0006DE  A4D8               	btfss	status,2,c
   308  0006E0  EF74  F003         	goto	u91
   309  0006E4  EF76  F003         	goto	u90
   310  0006E8                     u91:
   311  0006E8  EF52  F003         	goto	l901
   312  0006EC                     u90:
   313  0006EC  EF41  F003         	goto	l897
   314  0006F0  EF13  F000         	goto	start
   315  0006F4                     __end_of_main:
   316                           	opt callstack 0
   317                           
   318 ;; *************** function _initialisation *****************
   319 ;; Defined at:
   320 ;;		line 55 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  1    wreg      void 
   327 ;; Registers used:
   328 ;;		wreg, status,2
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:         0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels used:    1
   340 ;; Hardware stack levels required when called:    1
   341 ;; This function calls:
   342 ;;		Nothing
   343 ;; This function is called by:
   344 ;;		_main
   345 ;; This function uses a non-reentrant model
   346 ;;
   347                           
   348                           	psect	text1
   349  0006F4                     __ptext1:
   350                           	opt callstack 0
   351  0006F4                     _initialisation:
   352                           	opt callstack 29
   353  0006F4                     
   354                           ;main.c: 58: TRISD = 0;
   355  0006F4  0E00               	movlw	0
   356  0006F6  6E95               	movwf	149,c	;volatile
   357                           
   358                           ;main.c: 64: SPBRG = 25;
   359  0006F8  0E19               	movlw	25
   360  0006FA  6EAF               	movwf	175,c	;volatile
   361  0006FC                     
   362                           ;main.c: 68: TRISCbits.RC6 = 1;
   363  0006FC  8C94               	bsf	148,6,c	;volatile
   364  0006FE                     
   365                           ;main.c: 69: TRISCbits.RC7 = 1;
   366  0006FE  8E94               	bsf	148,7,c	;volatile
   367  000700                     
   368                           ;main.c: 73: TXSTAbits.TXEN = 1;
   369  000700  8AAC               	bsf	172,5,c	;volatile
   370  000702                     
   371                           ;main.c: 83: RCSTAbits.SPEN = 1;
   372  000702  8EAB               	bsf	171,7,c	;volatile
   373  000704                     
   374                           ;main.c: 84: TXSTAbits.SYNC = 0;
   375  000704  98AC               	bcf	172,4,c	;volatile
   376  000706                     
   377                           ;main.c: 87: RCSTAbits.CREN = 1;
   378  000706  88AB               	bsf	171,4,c	;volatile
   379  000708                     
   380                           ;main.c: 89: PIE1bits.RC1IE = 1;
   381  000708  8A9D               	bsf	157,5,c	;volatile
   382  00070A                     
   383                           ;main.c: 93: INTCONbits.PEIE = 1;
   384  00070A  8CF2               	bsf	242,6,c	;volatile
   385  00070C                     
   386                           ;main.c: 94: INTCONbits.GIE = 1;
   387  00070C  8EF2               	bsf	242,7,c	;volatile
   388  00070E  0012               	return		;funcret
   389  000710                     __end_of_initialisation:
   390                           	opt callstack 0
   391                           
   392 ;; *************** function _high_isr *****************
   393 ;; Defined at:
   394 ;;		line 17 in file "interrupts.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		None
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   408 ;;      Params:         0       0       0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0       0       0
   410 ;;      Temps:          0       0       0       0       0       0       0
   411 ;;      Totals:         0       0       0       0       0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels used:    1
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		Interrupt level 2
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	intcode
   422  000008                     __pintcode:
   423                           	opt callstack 0
   424  000008                     _high_isr:
   425                           	opt callstack 29
   426                           
   427                           ;incstack = 0
   428  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   429  00000A                     
   430                           ;interrupts.c: 19: if (PIR1bits.RC1IF == 1)
   431  00000A  AA9E               	btfss	158,5,c	;volatile
   432  00000C  EF0A  F000         	goto	i2u10_41
   433  000010  EF0C  F000         	goto	i2u10_40
   434  000014                     i2u10_41:
   435  000014  EF11  F000         	goto	i2l57
   436  000018                     i2u10_40:
   437  000018                     
   438                           ;interrupts.c: 20: {;interrupts.c: 21: PIR1bits.RC1IF = 0;
   439  000018  9A9E               	bcf	158,5,c	;volatile
   440                           
   441                           ;interrupts.c: 22: g_rxCar = RCREG;
   442  00001A  CFAE F065          	movff	4014,_g_rxCar	;volatile
   443                           
   444                           ;interrupts.c: 23: PORTD = g_rxCar;
   445  00001E  C065  FF83         	movff	_g_rxCar,3971	;volatile
   446  000022                     i2l57:
   447  000022  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   448  000024  0011               	retfie		f
   449  000026                     __end_of_high_isr:
   450                           	opt callstack 0
   451                           
   452                           	psect	param0
   453  0000                     
   454                           	psect	temp
   455  000001                     btemp:
   456                           	opt callstack 0
   457  000001                     	ds	1
   458  0000                     int$flags	set	btemp
   459  0000                     wtemp8	set	btemp+1
   460  0000                     ttemp5	set	btemp+1
   461  0000                     ttemp6	set	btemp+4
   462  0000                     ttemp7	set	btemp+8
   463                           tosu	equ	0xFFF
   464                           tosh	equ	0xFFE
   465                           tosl	equ	0xFFD
   466                           stkptr	equ	0xFFC
   467                           pclatu	equ	0xFFB
   468                           pclath	equ	0xFFA
   469                           pcl	equ	0xFF9
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           prodh	equ	0xFF4
   475                           prodl	equ	0xFF3
   476                           indf0	equ	0xFEF
   477                           postinc0	equ	0xFEE
   478                           postdec0	equ	0xFED
   479                           preinc0	equ	0xFEC
   480                           plusw0	equ	0xFEB
   481                           fsr0h	equ	0xFEA
   482                           fsr0l	equ	0xFE9
   483                           wreg	equ	0xFE8
   484                           indf1	equ	0xFE7
   485                           postinc1	equ	0xFE6
   486                           postdec1	equ	0xFE5
   487                           preinc1	equ	0xFE4
   488                           plusw1	equ	0xFE3
   489                           fsr1h	equ	0xFE2
   490                           fsr1l	equ	0xFE1
   491                           bsr	equ	0xFE0
   492                           indf2	equ	0xFDF
   493                           postinc2	equ	0xFDE
   494                           postdec2	equ	0xFDD
   495                           preinc2	equ	0xFDC
   496                           plusw2	equ	0xFDB
   497                           fsr2h	equ	0xFDA
   498                           fsr2l	equ	0xFD9
   499                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    7
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      5       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      93
                                              0 BANK0      5     5      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       6       5        3.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      15        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 04 09:56:26 2020

                     l43 070E                       u60 0640                       u61 063C  
                     u70 067E                       u71 067A                       u80 0696  
                     u81 0692                       u90 06EC                       u91 06E8  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l901 06A4                      l903 06BE  
                    l905 06C4                      l861 06FC                      l871 0706  
                    l863 06FE                      l873 0708                      l865 0700  
                    l881 0614                      l875 070A                      l867 0702  
                    l859 06F4                      l891 0646                      l883 0618  
                    l877 070C                      l869 0704                      l893 0660  
                    l885 0622                      l895 067E                      l879 060A  
                    l897 0682                      l889 0644                      l899 0696  
           __CFG_CPB$OFF 000000                      u117 064E             __CFG_CPD$OFF 000000  
                    _msg 0601             __CFG_BORV$18 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     i2l57 0022         ??_initialisation 0060  
                   _main 060A                     btemp 0001                     start 0026  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0060                    i2l907 000A                    i2l909 0018  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@i 0063                    tablat 000FF5  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  status 000FD8                    wtemp8 0002           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000          __initialization 0710             __end_of_main 06F4  
                 ??_main 0060            __activetblptr 000003           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 0026           __CFG_STVREN$ON 000000  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0714  
          ___rparam_used 000000               __pbssBANK0 0065                  i2u10_40 0018  
                i2u10_41 0014                ?_high_isr 0060                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0710  
                __ramtop 0600                  _g_rxCar 0065                  __ptext0 060A  
                __ptext1 06F4               ??_high_isr 0060     end_of_initialization 0714  
              _RCSTAbits 000FAB  __size_of_initialisation 001C                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC      start_initialization 0710  
            __end_of_msg 0608         __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0060  
      __size_of_high_isr 001E        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
         _initialisation 06F4              __smallconst 0600                 _PIE1bits 000F9D  
 __end_of_initialisation 0710                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              main@i_329 0061                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000                 _high_isr 0008  
          __size_of_main 00EA                 int$flags 0001               _INTCONbits 000FF2  
               intlevel2 0000        __CFG_FOSC$INTIO67 000000  
