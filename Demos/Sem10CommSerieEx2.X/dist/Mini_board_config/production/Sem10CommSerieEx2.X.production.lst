

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 08 22:33:13 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	smallconst
    52  000600                     __psmallconst:
    53                           	opt callstack 0
    54  000600  00                 	db	0
    55  000601                     _msg:
    56                           	opt callstack 0
    57  000601  42                 	db	66
    58  000602  72                 	db	114
    59  000603  61                 	db	97
    60  000604  76                 	db	118
    61  000605  6F                 	db	111
    62  000606  21                 	db	33
    63  000607  00                 	db	0
    64  000608                     __end_of_msg:
    65                           	opt callstack 0
    66  0000                     _PORTD	set	3971
    67  0000                     _RCREG	set	4014
    68  0000                     _INTCONbits	set	4082
    69  0000                     _PIE1bits	set	3997
    70  0000                     _RCSTAbits	set	4011
    71  0000                     _TRISCbits	set	3988
    72  0000                     _BAUDCONbits	set	4024
    73  0000                     _TXSTAbits	set	4012
    74  0000                     _SPBRG	set	4015
    75  0000                     _TRISD	set	3989
    76  0000                     _TXREG	set	4013
    77  0000                     _PIR1bits	set	3998
    78                           
    79                           ; #config settings
    80  000608  00                 	db	0	; dummy byte at the end
    81  0000                     
    82                           	psect	cinit
    83  0006E2                     __pcinit:
    84                           	opt callstack 0
    85  0006E2                     start_initialization:
    86                           	opt callstack 0
    87  0006E2                     __initialization:
    88                           	opt callstack 0
    89                           
    90                           ; Clear objects allocated to BANK0 (1 bytes)
    91  0006E2  0100               	movlb	0
    92  0006E4  6B62               	clrf	__pbssBANK0& (0+255),b
    93  0006E6                     end_of_initialization:
    94                           	opt callstack 0
    95  0006E6                     __end_of__initialization:
    96                           	opt callstack 0
    97  0006E6  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  0006E8  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  0006EA  0100               	movlb	0
   100  0006EC  EF05  F003         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssBANK0
   103  000062                     __pbssBANK0:
   104                           	opt callstack 0
   105  000062                     _g_rxCar:
   106                           	opt callstack 0
   107  000062                     	ds	1
   108                           
   109                           	psect	cstackBANK0
   110  000060                     __pcstackBANK0:
   111                           	opt callstack 0
   112  000060                     main@i:
   113                           	opt callstack 0
   114                           
   115                           ; 2 bytes @ 0x0
   116  000060                     	ds	2
   117                           
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   120 ;;
   121 ;; *************** function _main *****************
   122 ;; Defined at:
   123 ;;		line 27 in file "main.c"
   124 ;; Parameters:    Size  Location     Type
   125 ;;		None
   126 ;; Auto vars:     Size  Location     Type
   127 ;;  i               2    0[BANK0 ] int 
   128 ;; Return value:  Size  Location     Type
   129 ;;                  1    wreg      void 
   130 ;; Registers used:
   131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : 0/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   137 ;;      Params:         0       0       0       0       0       0       0
   138 ;;      Locals:         0       2       0       0       0       0       0
   139 ;;      Temps:          0       0       0       0       0       0       0
   140 ;;      Totals:         0       2       0       0       0       0       0
   141 ;;Total ram usage:        2 bytes
   142 ;; Hardware stack levels required when called:    2
   143 ;; This function calls:
   144 ;;		_initialisation
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151  00060A                     __ptext0:
   152                           	opt callstack 0
   153  00060A                     _main:
   154                           	opt callstack 29
   155  00060A                     
   156                           ;main.c: 29: int i = 0;
   157  00060A  0E00               	movlw	0
   158  00060C  0100               	movlb	0	; force () banked
   159  00060E  6F61               	movwf	(main@i+1)& (0+255),b
   160  000610  0E00               	movlw	0
   161  000612  6F60               	movwf	main@i& (0+255),b
   162  000614                     
   163                           ; BSR set to: 0
   164                           ;main.c: 30: initialisation();
   165  000614  EC61  F003         	call	_initialisation	;wreg free
   166  000618                     l31:
   167  000618  A89E               	btfss	158,4,c	;volatile
   168  00061A  EF11  F003         	goto	u71
   169  00061E  EF13  F003         	goto	u70
   170  000622                     u71:
   171  000622  EF0C  F003         	goto	l31
   172  000626                     u70:
   173  000626                     
   174                           ;main.c: 32: TXREG = 'G';
   175  000626  0E47               	movlw	71
   176  000628  6EAD               	movwf	173,c	;volatile
   177  00062A                     l34:
   178  00062A  A89E               	btfss	158,4,c	;volatile
   179  00062C  EF1A  F003         	goto	u81
   180  000630  EF1C  F003         	goto	u80
   181  000634                     u81:
   182  000634  EF15  F003         	goto	l34
   183  000638                     u80:
   184  000638                     
   185                           ;main.c: 34: TXREG = 'O';
   186  000638  0E4F               	movlw	79
   187  00063A  6EAD               	movwf	173,c	;volatile
   188  00063C                     l892:
   189                           
   190                           ;main.c: 37: {;main.c: 38: if (g_rxCar == 'A')
   191  00063C  0E41               	movlw	65
   192  00063E  0100               	movlb	0	; force () banked
   193  000640  1962               	xorwf	_g_rxCar& (0+255),w,b
   194  000642  A4D8               	btfss	status,2,c
   195  000644  EF26  F003         	goto	u91
   196  000648  EF28  F003         	goto	u90
   197  00064C                     u91:
   198  00064C  EF1E  F003         	goto	l892
   199  000650                     u90:
   200  000650                     
   201                           ; BSR set to: 0
   202                           ;main.c: 39: {;main.c: 40: i = 0;
   203  000650  0E00               	movlw	0
   204  000652  0100               	movlb	0	; force () banked
   205  000654  6F61               	movwf	(main@i+1)& (0+255),b
   206  000656  0E00               	movlw	0
   207  000658  6F60               	movwf	main@i& (0+255),b
   208                           
   209                           ;main.c: 41: while (msg[i] != '\0')
   210  00065A  EF46  F003         	goto	l900
   211  00065E                     l41:
   212  00065E  A89E               	btfss	158,4,c	;volatile
   213  000660  EF34  F003         	goto	u101
   214  000664  EF36  F003         	goto	u100
   215  000668                     u101:
   216  000668  EF2F  F003         	goto	l41
   217  00066C                     u100:
   218  00066C                     
   219                           ;main.c: 44: TXREG = msg[i];
   220  00066C  0E01               	movlw	low _msg
   221  00066E  0100               	movlb	0	; force () banked
   222  000670  2560               	addwf	main@i& (0+255),w,b
   223  000672  6EF6               	movwf	tblptrl,c
   224  000674  0E06               	movlw	high _msg
   225  000676  2161               	addwfc	(main@i+1)& (0+255),w,b
   226  000678  6EF7               	movwf	tblptrh,c
   227  00067A                     	if	1	;There are 3 active tblptr bytes
   228  00067A  6AF8               	clrf	tblptru,c
   229  00067C  0E00               	movlw	low (__mediumconst shr (0+16))
   230  00067E  22F8               	addwfc	tblptru,f,c
   231  000680                     	endif
   232  000680  0008               	tblrd		*
   233  000682  CFF5 FFAD          	movff	tablat,4013	;volatile
   234  000686                     
   235                           ; BSR set to: 0
   236                           ;main.c: 45: i++;
   237  000686  0100               	movlb	0	; force () banked
   238  000688  4B60               	infsnz	main@i& (0+255),f,b
   239  00068A  2B61               	incf	(main@i+1)& (0+255),f,b
   240  00068C                     l900:
   241                           
   242                           ; BSR set to: 0
   243  00068C  0E01               	movlw	low _msg
   244  00068E  0100               	movlb	0	; force () banked
   245  000690  2560               	addwf	main@i& (0+255),w,b
   246  000692  6EF6               	movwf	tblptrl,c
   247  000694  0E06               	movlw	high _msg
   248  000696  2161               	addwfc	(main@i+1)& (0+255),w,b
   249  000698  6EF7               	movwf	tblptrh,c
   250  00069A                     	if	1	;There are 3 active tblptr bytes
   251  00069A  6AF8               	clrf	tblptru,c
   252  00069C  0E00               	movlw	low (__mediumconst shr (0+16))
   253  00069E  22F8               	addwfc	tblptru,f,c
   254  0006A0                     	endif
   255  0006A0  0008               	tblrd		*
   256  0006A2  50F5               	movf	tablat,w,c
   257  0006A4  0900               	iorlw	0
   258  0006A6  A4D8               	btfss	status,2,c
   259  0006A8  EF58  F003         	goto	u111
   260  0006AC  EF5A  F003         	goto	u110
   261  0006B0                     u111:
   262  0006B0  EF2F  F003         	goto	l41
   263  0006B4                     u110:
   264  0006B4                     
   265                           ; BSR set to: 0
   266                           ;main.c: 47: };main.c: 48: g_rxCar = 0;
   267  0006B4  0E00               	movlw	0
   268  0006B6  0100               	movlb	0	; force () banked
   269  0006B8  6F62               	movwf	_g_rxCar& (0+255),b
   270  0006BA  EF1E  F003         	goto	l892
   271  0006BE  EF13  F000         	goto	start
   272  0006C2                     __end_of_main:
   273                           	opt callstack 0
   274                           
   275 ;; *************** function _initialisation *****************
   276 ;; Defined at:
   277 ;;		line 56 in file "main.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, status,2
   286 ;; Tracked objects:
   287 ;;		On entry : 0/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   291 ;;      Params:         0       0       0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0       0       0
   293 ;;      Temps:          0       0       0       0       0       0       0
   294 ;;      Totals:         0       0       0       0       0       0       0
   295 ;;Total ram usage:        0 bytes
   296 ;; Hardware stack levels used:    1
   297 ;; Hardware stack levels required when called:    1
   298 ;; This function calls:
   299 ;;		Nothing
   300 ;; This function is called by:
   301 ;;		_main
   302 ;; This function uses a non-reentrant model
   303 ;;
   304                           
   305                           	psect	text1
   306  0006C2                     __ptext1:
   307                           	opt callstack 0
   308  0006C2                     _initialisation:
   309                           	opt callstack 29
   310  0006C2                     
   311                           ;main.c: 59: TRISD = 0;
   312  0006C2  0E00               	movlw	0
   313  0006C4  6E95               	movwf	149,c	;volatile
   314                           
   315                           ;main.c: 63: SPBRG = 25;
   316  0006C6  0E19               	movlw	25
   317  0006C8  6EAF               	movwf	175,c	;volatile
   318  0006CA                     
   319                           ;main.c: 64: TXSTAbits.BRGH = 1;
   320  0006CA  84AC               	bsf	172,2,c	;volatile
   321  0006CC                     
   322                           ;main.c: 65: BAUDCONbits.BRG16 = 1;
   323  0006CC  86B8               	bsf	184,3,c	;volatile
   324  0006CE                     
   325                           ;main.c: 68: TRISCbits.RC6 = 1;
   326  0006CE  8C94               	bsf	148,6,c	;volatile
   327  0006D0                     
   328                           ;main.c: 69: TRISCbits.RC7 = 1;
   329  0006D0  8E94               	bsf	148,7,c	;volatile
   330  0006D2                     
   331                           ;main.c: 72: TXSTAbits.TXEN = 1;
   332  0006D2  8AAC               	bsf	172,5,c	;volatile
   333  0006D4                     
   334                           ;main.c: 75: RCSTAbits.SPEN = 1;
   335  0006D4  8EAB               	bsf	171,7,c	;volatile
   336  0006D6                     
   337                           ;main.c: 76: TXSTAbits.SYNC = 0;
   338  0006D6  98AC               	bcf	172,4,c	;volatile
   339  0006D8                     
   340                           ;main.c: 79: RCSTAbits.CREN = 1;
   341  0006D8  88AB               	bsf	171,4,c	;volatile
   342  0006DA                     
   343                           ;main.c: 82: PIE1bits.RC1IE = 1;
   344  0006DA  8A9D               	bsf	157,5,c	;volatile
   345  0006DC                     
   346                           ;main.c: 85: INTCONbits.PEIE = 1;
   347  0006DC  8CF2               	bsf	242,6,c	;volatile
   348  0006DE                     
   349                           ;main.c: 86: INTCONbits.GIE = 1;
   350  0006DE  8EF2               	bsf	242,7,c	;volatile
   351  0006E0  0012               	return		;funcret
   352  0006E2                     __end_of_initialisation:
   353                           	opt callstack 0
   354                           
   355 ;; *************** function _high_isr *****************
   356 ;; Defined at:
   357 ;;		line 17 in file "interrupts.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;		None
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		None
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   371 ;;      Params:         0       0       0       0       0       0       0
   372 ;;      Locals:         0       0       0       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0       0       0
   374 ;;      Totals:         0       0       0       0       0       0       0
   375 ;;Total ram usage:        0 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		Interrupt level 2
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	intcode
   385  000008                     __pintcode:
   386                           	opt callstack 0
   387  000008                     _high_isr:
   388                           	opt callstack 29
   389                           
   390                           ;incstack = 0
   391  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   392  00000A                     
   393                           ;interrupts.c: 19: if (PIR1bits.RC1IF == 1)
   394  00000A  AA9E               	btfss	158,5,c	;volatile
   395  00000C  EF0A  F000         	goto	i2u12_41
   396  000010  EF0C  F000         	goto	i2u12_40
   397  000014                     i2u12_41:
   398  000014  EF11  F000         	goto	i2l64
   399  000018                     i2u12_40:
   400  000018                     
   401                           ;interrupts.c: 20: {;interrupts.c: 21: PIR1bits.RC1IF = 0;
   402  000018  9A9E               	bcf	158,5,c	;volatile
   403                           
   404                           ;interrupts.c: 22: g_rxCar = RCREG;
   405  00001A  CFAE F062          	movff	4014,_g_rxCar	;volatile
   406                           
   407                           ;interrupts.c: 23: PORTD = g_rxCar;
   408  00001E  C062  FF83         	movff	_g_rxCar,3971	;volatile
   409  000022                     i2l64:
   410  000022  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   411  000024  0011               	retfie		f
   412  000026                     __end_of_high_isr:
   413                           	opt callstack 0
   414                           
   415                           	psect	param0
   416  0000                     
   417                           	psect	temp
   418  000001                     btemp:
   419                           	opt callstack 0
   420  000001                     	ds	1
   421  0000                     int$flags	set	btemp
   422  0000                     wtemp8	set	btemp+1
   423  0000                     ttemp5	set	btemp+1
   424  0000                     ttemp6	set	btemp+4
   425  0000                     ttemp7	set	btemp+8
   426                           tosu	equ	0xFFF
   427                           tosh	equ	0xFFE
   428                           tosl	equ	0xFFD
   429                           stkptr	equ	0xFFC
   430                           pclatu	equ	0xFFB
   431                           pclath	equ	0xFFA
   432                           pcl	equ	0xFF9
   433                           tblptru	equ	0xFF8
   434                           tblptrh	equ	0xFF7
   435                           tblptrl	equ	0xFF6
   436                           tablat	equ	0xFF5
   437                           prodh	equ	0xFF4
   438                           prodl	equ	0xFF3
   439                           indf0	equ	0xFEF
   440                           postinc0	equ	0xFEE
   441                           postdec0	equ	0xFED
   442                           preinc0	equ	0xFEC
   443                           plusw0	equ	0xFEB
   444                           fsr0h	equ	0xFEA
   445                           fsr0l	equ	0xFE9
   446                           wreg	equ	0xFE8
   447                           indf1	equ	0xFE7
   448                           postinc1	equ	0xFE6
   449                           postdec1	equ	0xFE5
   450                           preinc1	equ	0xFE4
   451                           plusw1	equ	0xFE3
   452                           fsr1h	equ	0xFE2
   453                           fsr1l	equ	0xFE1
   454                           bsr	equ	0xFE0
   455                           indf2	equ	0xFDF
   456                           postinc2	equ	0xFDE
   457                           postdec2	equ	0xFDD
   458                           preinc2	equ	0xFDC
   459                           plusw2	equ	0xFDB
   460                           fsr2h	equ	0xFDA
   461                           fsr2l	equ	0xFD9
   462                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    7
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      2       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      47
                                              0 BANK0      2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       3       5        1.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       3      15        0.0%
DATA                 0      0       3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 08 22:33:13 2020

                     l31 0618                       l41 065E                       l50 06E0  
                     l34 062A                       u70 0626                       u71 0622  
                     u80 0638                       u81 0634                       u90 0650  
                     u91 064C             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l900 068C  
                    l902 06B4                      l860 06C2                      l870 06D2  
                    l862 06CA                      l880 06DC                      l872 06D4  
                    l864 06CC                      l882 06DE                      l874 06D6  
                    l866 06CE                      l890 0638                      l876 06D8  
                    l868 06D0                      l892 063C                      l884 060A  
                    l878 06DA                      l894 0650                      l886 0614  
                    l896 066C                      l888 0626                      l898 0686  
           __CFG_CPB$OFF 000000                      u100 066C                      u101 0668  
                    u110 06B4                      u111 06B0             __CFG_CPD$OFF 000000  
                    _msg 0601             __CFG_BORV$18 000000             __CFG_LVP$OFF 000000  
                   i2l64 0022         ??_initialisation 0060                     _main 060A  
                   btemp 0001                     start 0026            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0060  
                  i2l904 000A                    i2l906 0018                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISD 000F95  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  main@i 0060                    tablat 000FF5                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    status 000FD8  
                  wtemp8 0002           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 06E2             __end_of_main 06C2                   ??_main 0060  
          __activetblptr 000003           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 0026           __CFG_STVREN$ON 000000             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 06E6            ___rparam_used 000000  
             __pbssBANK0 0062                  i2u12_40 0018                  i2u12_41 0014  
              ?_high_isr 0060                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 06E2                  __ramtop 0600  
                _g_rxCar 0062                  __ptext0 060A                  __ptext1 06C2  
             ??_high_isr 0060     end_of_initialization 06E6                _RCSTAbits 000FAB  
__size_of_initialisation 0020                _TRISCbits 000F94                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 06E2              __end_of_msg 0608  
       __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0060        __size_of_high_isr 001E  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           _initialisation 06C2  
            __smallconst 0600                 _PIE1bits 000F9D   __end_of_initialisation 06E2  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000  
               _high_isr 0008            __size_of_main 00B8                 int$flags 0001  
             _INTCONbits 000FF2                 intlevel2 0000        __CFG_FOSC$INTIO67 000000  
