

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 08 09:59:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 05/05/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K20 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ANSELbits	set	3966
    55  0000                     _TRISAbits	set	3986
    56  0000                     _TRISBbits	set	3987
    57  0000                     _ANSELH	set	3967
    58  0000                     _TRISD	set	3989
    59  0000                     _PORTD	set	3971
    60  0000                     _TMR1	set	4046
    61  0000                     _ADRESH	set	4036
    62  0000                     _T1CONbits	set	4045
    63  0000                     _PIE1bits	set	3997
    64  0000                     _PIR1bits	set	3998
    65  0000                     _ADCON2bits	set	4032
    66  0000                     _ADCON1bits	set	4033
    67  0000                     _ADCON0bits	set	4034
    68  0000                     _TMR0	set	4054
    69  0000                     _TMR0L	set	4054
    70  0000                     _TMR0H	set	4055
    71  0000                     _T0CONbits	set	4053
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _INTCON3bits	set	4080
    74  0000                     _INTCONbits	set	4082
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  000262                     __pcinit:
    80                           	callstack 0
    81  000262                     start_initialization:
    82                           	callstack 0
    83  000262                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to BANK0 (16 bytes)
    87  000262  EE00  F073         	lfsr	0,__pbssBANK0
    88  000266  0E10               	movlw	16
    89  000268                     clear_0:
    90  000268  6AEE               	clrf	postinc0,c
    91  00026A  06E8               	decf	wreg,f,c
    92  00026C  E1FD               	bnz	clear_0
    93  00026E                     end_of_initialization:
    94                           	callstack 0
    95  00026E                     __end_of__initialization:
    96                           	callstack 0
    97  00026E  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98  000270  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99  000272  0100               	movlb	0
   100  000274  EF24  F001         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	bssBANK0
   103  000073                     __pbssBANK0:
   104                           	callstack 0
   105  000073                     _resultatConversionAN_:
   106                           	callstack 0
   107  000073                     	ds	2
   108  000075                     _valeurPwm_:
   109                           	callstack 0
   110  000075                     	ds	2
   111  000077                     _chronoSecondes_:
   112                           	callstack 0
   113  000077                     	ds	2
   114  000079                     _etatFonctionnementCourant_:
   115                           	callstack 0
   116  000079                     	ds	2
   117  00007B                     high_isr@nbInt1:
   118                           	callstack 0
   119  00007B                     	ds	2
   120  00007D                     _g_resAN:
   121                           	callstack 0
   122  00007D                     	ds	2
   123  00007F                     _g_freq:
   124                           	callstack 0
   125  00007F                     	ds	2
   126  000081                     _g_delTmr0:
   127                           	callstack 0
   128  000081                     	ds	2
   129                           
   130                           	psect	cstackBANK0
   131  000060                     __pcstackBANK0:
   132                           	callstack 0
   133  000060                     ?___lldiv:
   134                           	callstack 0
   135  000060                     ___lldiv@dividend:
   136                           	callstack 0
   137                           
   138                           ; 4 bytes @ 0x0
   139  000060                     	ds	4
   140  000064                     ___lldiv@divisor:
   141                           	callstack 0
   142                           
   143                           ; 4 bytes @ 0x4
   144  000064                     	ds	4
   145  000068                     ___lldiv@quotient:
   146                           	callstack 0
   147                           
   148                           ; 4 bytes @ 0x8
   149  000068                     	ds	4
   150  00006C                     ___lldiv@counter:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0xC
   154  00006C                     	ds	1
   155  00006D                     ??_high_isr:
   156                           
   157                           ; 1 bytes @ 0xD
   158  00006D                     	ds	3
   159  000070                     high_isr@diviseurAN:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x10
   163  000070                     	ds	2
   164  000072                     ??_low_isr:
   165                           
   166                           ; 1 bytes @ 0x12
   167  000072                     	ds	1
   168  000073                     
   169                           ; 1 bytes @ 0x13
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 27 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2, status,0, cstack
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called:    4
   195 ;; This function calls:
   196 ;;		_initialisation
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	text0
   203  000248                     __ptext0:
   204                           	callstack 0
   205  000248                     _main:
   206                           	callstack 27
   207  000248                     
   208                           ;main.c: 29: initialisation();
   209  000248  ECF0  F000         	call	_initialisation	;wreg free
   210  00024C                     
   211                           ;main.c: 32: ADCON0bits.GO_DONE = 1;
   212  00024C  82C2               	bsf	194,1,c	;volatile
   213  00024E                     l1058:
   214                           
   215                           ;main.c: 35: {;main.c: 36: PORTD = (g_delTmr0 << 7) | g_freq;
   216  00024E  0100               	movlb	0	; force () banked
   217  000250  4181               	rrncf	_g_delTmr0& (0+255),w,b
   218  000252  0B80               	andlw	128
   219  000254  0100               	movlb	0	; force () banked
   220  000256  117F               	iorwf	_g_freq& (0+255),w,b
   221  000258  6E83               	movwf	131,c	;volatile
   222  00025A  EF27  F001         	goto	l1058
   223  00025E  EF13  F000         	goto	start
   224  000262                     __end_of_main:
   225                           	callstack 0
   226                           
   227 ;; *************** function _initialisation *****************
   228 ;; Defined at:
   229 ;;		line 45 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   243 ;;      Params:         0       0       0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0
   245 ;;      Temps:          0       0       0       0       0       0       0
   246 ;;      Totals:         0       0       0       0       0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels used:    1
   249 ;; Hardware stack levels required when called:    3
   250 ;; This function calls:
   251 ;;		Nothing
   252 ;; This function is called by:
   253 ;;		_main
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text1
   258  0001E0                     __ptext1:
   259                           	callstack 0
   260  0001E0                     _initialisation:
   261                           	callstack 27
   262  0001E0                     
   263                           ;main.c: 48: TRISD = 0;
   264  0001E0  0E00               	movlw	0
   265  0001E2  6E95               	movwf	149,c	;volatile
   266                           
   267                           ;main.c: 49: ANSELH = 0;
   268  0001E4  0E00               	movlw	0
   269  0001E6  6E7F               	movwf	127,c	;volatile
   270  0001E8                     
   271                           ;main.c: 50: TRISBbits.RB1 = 1;
   272  0001E8  8293               	bsf	147,1,c	;volatile
   273  0001EA                     
   274                           ;main.c: 55: TRISAbits.TRISA0 = 1;
   275  0001EA  8092               	bsf	146,0,c	;volatile
   276  0001EC                     
   277                           ;main.c: 56: ANSELbits.ANS0 = 0;
   278  0001EC  907E               	bcf	126,0,c	;volatile
   279  0001EE                     
   280                           ;main.c: 57: ADCON0bits.ADON = 1;
   281  0001EE  80C2               	bsf	194,0,c	;volatile
   282  0001F0                     
   283                           ;main.c: 58: ADCON1bits.VCFG1 = 0;
   284  0001F0  9AC1               	bcf	193,5,c	;volatile
   285  0001F2                     
   286                           ;main.c: 59: ADCON1bits.VCFG0 = 0;
   287  0001F2  98C1               	bcf	193,4,c	;volatile
   288  0001F4                     
   289                           ;main.c: 60: ADCON2bits.ADFM = 0;
   290  0001F4  9EC0               	bcf	192,7,c	;volatile
   291                           
   292                           ;main.c: 61: ADCON2bits.ACQT = 7;
   293  0001F6  0E38               	movlw	56
   294  0001F8  12C0               	iorwf	192,f,c	;volatile
   295                           
   296                           ;main.c: 62: ADCON2bits.ADCS = 6;
   297  0001FA  50C0               	movf	192,w,c	;volatile
   298  0001FC  0BF8               	andlw	-8
   299  0001FE  0906               	iorlw	6
   300  000200  6EC0               	movwf	192,c	;volatile
   301  000202                     
   302                           ;main.c: 64: PIR1bits.ADIF = 0;
   303  000202  9C9E               	bcf	158,6,c	;volatile
   304  000204                     
   305                           ;main.c: 65: PIE1bits.ADIE = 1;
   306  000204  8C9D               	bsf	157,6,c	;volatile
   307  000206                     
   308                           ;main.c: 66: ADCON0bits.GO_DONE = 1;
   309  000206  82C2               	bsf	194,1,c	;volatile
   310  000208                     
   311                           ;main.c: 71: T0CONbits.TMR0ON = 1;
   312  000208  8ED5               	bsf	213,7,c	;volatile
   313  00020A                     
   314                           ;main.c: 72: T0CONbits.T08BIT = 0;
   315  00020A  9CD5               	bcf	213,6,c	;volatile
   316  00020C                     
   317                           ;main.c: 73: T0CONbits.T0CS = 0;
   318  00020C  9AD5               	bcf	213,5,c	;volatile
   319  00020E                     
   320                           ;main.c: 74: T0CONbits.PSA = 0;
   321  00020E  96D5               	bcf	213,3,c	;volatile
   322                           
   323                           ;main.c: 75: T0CONbits.T0PS = 0b011;
   324  000210  50D5               	movf	213,w,c	;volatile
   325  000212  0BF8               	andlw	-8
   326  000214  0903               	iorlw	3
   327  000216  6ED5               	movwf	213,c	;volatile
   328                           
   329                           ;main.c: 91: TMR0H = 0xC2;
   330  000218  0EC2               	movlw	194
   331  00021A  6ED7               	movwf	215,c	;volatile
   332                           
   333                           ;main.c: 92: TMR0L = 0xF6;
   334  00021C  0EF6               	movlw	246
   335  00021E  6ED6               	movwf	214,c	;volatile
   336  000220                     
   337                           ;main.c: 95: INTCONbits.TMR0IE = 1;
   338  000220  8AF2               	bsf	242,5,c	;volatile
   339  000222                     
   340                           ;main.c: 96: INTCONbits.TMR0IF = 0;
   341  000222  94F2               	bcf	242,2,c	;volatile
   342  000224                     
   343                           ;main.c: 99: T1CONbits.TMR1ON = 0;
   344  000224  90CD               	bcf	205,0,c	;volatile
   345  000226                     
   346                           ;main.c: 100: T1CONbits.RD16 = 1;
   347  000226  8ECD               	bsf	205,7,c	;volatile
   348                           
   349                           ;main.c: 101: T1CONbits.T1CKPS = 3;
   350  000228  0E30               	movlw	48
   351  00022A  12CD               	iorwf	205,f,c	;volatile
   352  00022C                     
   353                           ;main.c: 102: T1CONbits.TMR1CS = 0;
   354  00022C  92CD               	bcf	205,1,c	;volatile
   355                           
   356                           ;main.c: 103: TMR1 = 0x85EE;
   357  00022E  0E85               	movlw	133
   358  000230  6ECF               	movwf	207,c	;volatile
   359  000232  0EEE               	movlw	238
   360  000234  6ECE               	movwf	206,c	;volatile
   361  000236                     
   362                           ;main.c: 104: T1CONbits.TMR1ON = 1;
   363  000236  80CD               	bsf	205,0,c	;volatile
   364  000238                     
   365                           ;main.c: 107: PIR1bits.TMR1IF = 0;
   366  000238  909E               	bcf	158,0,c	;volatile
   367  00023A                     
   368                           ;main.c: 108: PIE1bits.TMR1IE = 1;
   369  00023A  809D               	bsf	157,0,c	;volatile
   370  00023C                     
   371                           ;main.c: 115: INTCON3bits.INT1IF = 0;
   372  00023C  90F0               	bcf	240,0,c	;volatile
   373  00023E                     
   374                           ;main.c: 116: INTCON3bits.INT1E = 1;
   375  00023E  86F0               	bsf	240,3,c	;volatile
   376  000240                     
   377                           ;main.c: 117: INTCON2bits.INTEDG1 = 1;
   378  000240  8AF1               	bsf	241,5,c	;volatile
   379  000242                     
   380                           ;main.c: 120: INTCONbits.PEIE = 1;
   381  000242  8CF2               	bsf	242,6,c	;volatile
   382  000244                     
   383                           ;main.c: 121: INTCONbits.GIE = 1;
   384  000244  8EF2               	bsf	242,7,c	;volatile
   385  000246  0012               	return		;funcret
   386  000248                     __end_of_initialisation:
   387                           	callstack 0
   388                           
   389 ;; *************** function _low_isr *****************
   390 ;; Defined at:
   391 ;;		line 81 in file "interrupts.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		None
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   405 ;;      Params:         0       0       0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0
   407 ;;      Temps:          0       1       0       0       0       0       0
   408 ;;      Totals:         0       1       0       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; Hardware stack levels required when called:    2
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		Interrupt level 1
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	intcodelo
   420  000018                     __pintcodelo:
   421                           	callstack 0
   422  000018                     _low_isr:
   423                           	callstack 27
   424                           
   425                           ;incstack = 0
   426  000018  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   427  00001A  CFE0 F072          	movff	bsr,??_low_isr
   428  00001E  C072  FFE0         	movff	??_low_isr,bsr
   429  000022  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  000024  0010               	retfie	
   431  000026                     __end_of_low_isr:
   432                           	callstack 0
   433                           
   434 ;; *************** function _high_isr *****************
   435 ;; Defined at:
   436 ;;		line 27 in file "interrupts.c"
   437 ;; Parameters:    Size  Location     Type
   438 ;;		None
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  diviseurAN      2   16[BANK0 ] int 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, status,2, status,0, cstack
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   450 ;;      Params:         0       0       0       0       0       0       0
   451 ;;      Locals:         0       2       0       0       0       0       0
   452 ;;      Temps:          0       3       0       0       0       0       0
   453 ;;      Totals:         0       5       0       0       0       0       0
   454 ;;Total ram usage:        5 bytes
   455 ;; Hardware stack levels used:    1
   456 ;; Hardware stack levels required when called:    1
   457 ;; This function calls:
   458 ;;		___lldiv
   459 ;; This function is called by:
   460 ;;		Interrupt level 2
   461 ;; This function uses a non-reentrant model
   462 ;;
   463                           
   464                           	psect	intcode
   465  000008                     __pintcode:
   466                           	callstack 0
   467  000008                     _high_isr:
   468                           	callstack 27
   469                           
   470                           ;incstack = 0
   471  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   472  00000A  EF15  F000         	goto	int_func
   473                           
   474                           	psect	intcode_body
   475  00002A                     __pintcode_body:
   476                           	callstack 27
   477  00002A                     int_func:
   478                           	callstack 27
   479  00002A                     
   480                           ;interrupts.c: 29: static int nbInt1 = 0;;interrupts.c: 30: int diviseurAN = 1;
   481  00002A  0E00               	movlw	0
   482  00002C  0100               	movlb	0	; force () banked
   483  00002E  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   484  000030  0E01               	movlw	1
   485  000032  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   486  000034                     
   487                           ; BSR set to: 0
   488                           ;interrupts.c: 33: if (PIR1bits.ADIF)
   489  000034  AC9E               	btfss	158,6,c	;volatile
   490  000036  EF1F  F000         	goto	i2u16_41
   491  00003A  EF21  F000         	goto	i2u16_40
   492  00003E                     i2u16_41:
   493  00003E  EF27  F000         	goto	i2l82
   494  000042                     i2u16_40:
   495  000042                     
   496                           ; BSR set to: 0
   497                           ;interrupts.c: 34: {;interrupts.c: 35: g_resAN = ADRESH;
   498  000042  CFC4 F07D          	movff	4036,_g_resAN	;volatile
   499  000046  0100               	movlb	0	; force () banked
   500  000048  6B7E               	clrf	(_g_resAN+1)& (0+255),b
   501                           
   502                           ;interrupts.c: 37: PIR1bits.ADIF = 0;
   503  00004A  9C9E               	bcf	158,6,c	;volatile
   504                           
   505                           ;interrupts.c: 38: ADCON0bits.GO_DONE = 1;
   506  00004C  82C2               	bsf	194,1,c	;volatile
   507  00004E                     i2l82:
   508                           
   509                           ; BSR set to: 0
   510                           ;interrupts.c: 39: };interrupts.c: 42: if (INTCONbits.TMR0IF)
   511  00004E  A4F2               	btfss	242,2,c	;volatile
   512  000050  EF2C  F000         	goto	i2u17_41
   513  000054  EF2E  F000         	goto	i2u17_40
   514  000058                     i2u17_41:
   515  000058  EF7B  F000         	goto	i2l1076
   516  00005C                     i2u17_40:
   517  00005C                     
   518                           ; BSR set to: 0
   519                           ;interrupts.c: 43: {;interrupts.c: 44: INTCONbits.TMR0IF = 0;
   520  00005C  94F2               	bcf	242,2,c	;volatile
   521  00005E                     
   522                           ; BSR set to: 0
   523                           ;interrupts.c: 46: diviseurAN = g_resAN>>4;
   524  00005E  C07D  F06D         	movff	_g_resAN,??_high_isr
   525  000062  C07E  F06E         	movff	_g_resAN+1,??_high_isr+1
   526  000066  0E04               	movlw	4
   527  000068  0100               	movlb	0	; force () banked
   528  00006A  6F6F               	movwf	(??_high_isr+2)& (0+255),b
   529  00006C                     i2u18_45:
   530  00006C  356E               	rlcf	(??_high_isr+1)& (0+255),w,b
   531  00006E  336E               	rrcf	(??_high_isr+1)& (0+255),f,b
   532  000070  336D               	rrcf	??_high_isr& (0+255),f,b
   533  000072  2F6F               	decfsz	(??_high_isr+2)& (0+255),f,b
   534  000074  EF36  F000         	goto	i2u18_45
   535  000078  C06D  F070         	movff	??_high_isr,high_isr@diviseurAN
   536  00007C  C06E  F071         	movff	??_high_isr+1,high_isr@diviseurAN+1
   537                           
   538                           ;interrupts.c: 47: if (diviseurAN == 0)
   539  000080  0100               	movlb	0	; force () banked
   540  000082  5170               	movf	high_isr@diviseurAN& (0+255),w,b
   541  000084  1171               	iorwf	(high_isr@diviseurAN+1)& (0+255),w,b
   542  000086  A4D8               	btfss	status,2,c
   543  000088  EF48  F000         	goto	i2u19_41
   544  00008C  EF4A  F000         	goto	i2u19_40
   545  000090                     i2u19_41:
   546  000090  EF4F  F000         	goto	i2l1072
   547  000094                     i2u19_40:
   548  000094                     
   549                           ; BSR set to: 0
   550                           ;interrupts.c: 48: diviseurAN = 1;
   551  000094  0E00               	movlw	0
   552  000096  0100               	movlb	0	; force () banked
   553  000098  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   554  00009A  0E01               	movlw	1
   555  00009C  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   556  00009E                     i2l1072:
   557                           
   558                           ; BSR set to: 0
   559                           ;interrupts.c: 50: TMR0 = 65536 - (((unsigned long)1000000)/(4*(unsigned int)16))/divise
      +                          urAN;
   560  00009E  0E09               	movlw	9
   561  0000A0  0100               	movlb	0	; force () banked
   562  0000A2  6F60               	movwf	___lldiv@dividend& (0+255),b
   563  0000A4  0E3D               	movlw	61
   564  0000A6  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
   565  0000A8  0E00               	movlw	0
   566  0000AA  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
   567  0000AC  0E00               	movlw	0
   568  0000AE  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
   569  0000B0  C070  F064         	movff	high_isr@diviseurAN,___lldiv@divisor
   570  0000B4  C071  F065         	movff	high_isr@diviseurAN+1,___lldiv@divisor+1
   571  0000B8  0100               	movlb	0	; force () banked
   572  0000BA  0E00               	movlw	0
   573  0000BC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
   574  0000BE  0EFF               	movlw	-1
   575  0000C0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
   576  0000C2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
   577  0000C4  EC9D  F000         	call	___lldiv	;wreg free
   578  0000C8  0100               	movlb	0	; force () banked
   579  0000CA  5160               	movf	?___lldiv& (0+255),w,b
   580  0000CC  0800               	sublw	0
   581  0000CE  6ED6               	movwf	214,c	;volatile
   582  0000D0  5161               	movf	(?___lldiv+1)& (0+255),w,b
   583  0000D2  A0D8               	btfss	status,0,c
   584  0000D4  2AE8               	incf	wreg,f,c
   585  0000D6  0800               	sublw	0
   586  0000D8  6ED7               	movwf	215,c	;volatile
   587  0000DA                     
   588                           ; BSR set to: 0
   589                           ;interrupts.c: 53: g_delTmr0 = !g_delTmr0;
   590  0000DA  0100               	movlb	0	; force () banked
   591  0000DC  5181               	movf	_g_delTmr0& (0+255),w,b
   592  0000DE  1182               	iorwf	(_g_delTmr0+1)& (0+255),w,b
   593  0000E0  B4D8               	btfsc	status,2,c
   594  0000E2  EF75  F000         	goto	i2u20_41
   595  0000E6  EF78  F000         	goto	i2u20_40
   596  0000EA                     i2u20_41:
   597  0000EA  0E01               	movlw	1
   598  0000EC  EF79  F000         	goto	i2u21_40
   599  0000F0                     i2u20_40:
   600  0000F0  0E00               	movlw	0
   601  0000F2                     i2u21_40:
   602  0000F2  6F81               	movwf	_g_delTmr0& (0+255),b
   603  0000F4  6B82               	clrf	(_g_delTmr0+1)& (0+255),b
   604  0000F6                     i2l1076:
   605                           
   606                           ; BSR set to: 0
   607                           ;interrupts.c: 54: };interrupts.c: 57: if (PIR1bits.TMR1IF)
   608  0000F6  A09E               	btfss	158,0,c	;volatile
   609  0000F8  EF80  F000         	goto	i2u22_41
   610  0000FC  EF82  F000         	goto	i2u22_40
   611  000100                     i2u22_41:
   612  000100  EF90  F000         	goto	i2l1082
   613  000104                     i2u22_40:
   614  000104                     
   615                           ; BSR set to: 0
   616                           ;interrupts.c: 58: {;interrupts.c: 59: PIR1bits.TMR1IF = 0;
   617  000104  909E               	bcf	158,0,c	;volatile
   618                           
   619                           ;interrupts.c: 61: g_freq = nbInt1;
   620  000106  C07B  F07F         	movff	high_isr@nbInt1,_g_freq
   621  00010A  C07C  F080         	movff	high_isr@nbInt1+1,_g_freq+1
   622  00010E                     
   623                           ; BSR set to: 0
   624                           ;interrupts.c: 62: nbInt1 = 0;
   625  00010E  0E00               	movlw	0
   626  000110  0100               	movlb	0	; force () banked
   627  000112  6F7C               	movwf	(high_isr@nbInt1+1)& (0+255),b
   628  000114  0E00               	movlw	0
   629  000116  6F7B               	movwf	high_isr@nbInt1& (0+255),b
   630                           
   631                           ;interrupts.c: 64: TMR1 = 0x85EE;
   632  000118  0E85               	movlw	133
   633  00011A  6ECF               	movwf	207,c	;volatile
   634  00011C  0EEE               	movlw	238
   635  00011E  6ECE               	movwf	206,c	;volatile
   636  000120                     i2l1082:
   637                           
   638                           ; BSR set to: 0
   639                           ;interrupts.c: 65: };interrupts.c: 70: if(INTCON3bits.INT1IF)
   640  000120  A0F0               	btfss	240,0,c	;volatile
   641  000122  EF95  F000         	goto	i2u23_41
   642  000126  EF97  F000         	goto	i2u23_40
   643  00012A                     i2u23_41:
   644  00012A  EF9B  F000         	goto	i2l87
   645  00012E                     i2u23_40:
   646  00012E                     
   647                           ; BSR set to: 0
   648                           ;interrupts.c: 71: {;interrupts.c: 72: INTCON3bits.INT1IF = 0;
   649  00012E  90F0               	bcf	240,0,c	;volatile
   650  000130                     
   651                           ; BSR set to: 0
   652                           ;interrupts.c: 73: nbInt1++;
   653  000130  0100               	movlb	0	; force () banked
   654  000132  4B7B               	infsnz	high_isr@nbInt1& (0+255),f,b
   655  000134  2B7C               	incf	(high_isr@nbInt1+1)& (0+255),f,b
   656  000136                     i2l87:
   657                           
   658                           ; BSR set to: 0
   659  000136  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   660  000138  0011               	retfie		f
   661  00013A                     __end_of_high_isr:
   662                           	callstack 0
   663                           
   664 ;; *************** function ___lldiv *****************
   665 ;; Defined at:
   666 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  dividend        4    0[BANK0 ] unsigned long 
   669 ;;  divisor         4    4[BANK0 ] unsigned long 
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  quotient        4    8[BANK0 ] unsigned long 
   672 ;;  counter         1   12[BANK0 ] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  4    0[BANK0 ] unsigned long 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   682 ;;      Params:         0       8       0       0       0       0       0
   683 ;;      Locals:         0       5       0       0       0       0       0
   684 ;;      Temps:          0       0       0       0       0       0       0
   685 ;;      Totals:         0      13       0       0       0       0       0
   686 ;;Total ram usage:       13 bytes
   687 ;; Hardware stack levels used:    1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_high_isr
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text4
   696  00013A                     __ptext4:
   697                           	callstack 0
   698  00013A                     ___lldiv:
   699                           	callstack 27
   700  00013A  0E00               	movlw	0
   701  00013C  0100               	movlb	0	; () banked
   702  00013E  6F68               	movwf	___lldiv@quotient& (0+255),b
   703  000140  0E00               	movlw	0
   704  000142  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
   705  000144  0E00               	movlw	0
   706  000146  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
   707  000148  0E00               	movlw	0
   708  00014A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
   709  00014C                     
   710                           ; BSR set to: 0
   711  00014C  5164               	movf	___lldiv@divisor& (0+255),w,b
   712  00014E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
   713  000150  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
   714  000152  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
   715  000154  B4D8               	btfsc	status,2,c
   716  000156  EFAF  F000         	goto	i2u13_41
   717  00015A  EFB1  F000         	goto	i2u13_40
   718  00015E                     i2u13_41:
   719  00015E  EFE7  F000         	goto	i2l138
   720  000162                     i2u13_40:
   721  000162                     
   722                           ; BSR set to: 0
   723  000162  0E01               	movlw	1
   724  000164  6F6C               	movwf	___lldiv@counter& (0+255),b
   725  000166  EFBB  F000         	goto	i2l1040
   726  00016A                     i2l1038:
   727                           
   728                           ; BSR set to: 0
   729  00016A  90D8               	bcf	status,0,c
   730  00016C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
   731  00016E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
   732  000170  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
   733  000172  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
   734  000174  2B6C               	incf	___lldiv@counter& (0+255),f,b
   735  000176                     i2l1040:
   736                           
   737                           ; BSR set to: 0
   738  000176  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
   739  000178  EFC0  F000         	goto	i2u14_41
   740  00017C  EFC2  F000         	goto	i2u14_40
   741  000180                     i2u14_41:
   742  000180  EFB5  F000         	goto	i2l1038
   743  000184                     i2u14_40:
   744  000184                     i2l1042:
   745                           
   746                           ; BSR set to: 0
   747  000184  90D8               	bcf	status,0,c
   748  000186  3768               	rlcf	___lldiv@quotient& (0+255),f,b
   749  000188  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
   750  00018A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
   751  00018C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
   752  00018E                     
   753                           ; BSR set to: 0
   754  00018E  5164               	movf	___lldiv@divisor& (0+255),w,b
   755  000190  5D60               	subwf	___lldiv@dividend& (0+255),w,b
   756  000192  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   757  000194  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
   758  000196  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   759  000198  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
   760  00019A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   761  00019C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
   762  00019E  A0D8               	btfss	status,0,c
   763  0001A0  EFD4  F000         	goto	i2u15_41
   764  0001A4  EFD6  F000         	goto	i2u15_40
   765  0001A8                     i2u15_41:
   766  0001A8  EFDF  F000         	goto	i2l1050
   767  0001AC                     i2u15_40:
   768  0001AC                     
   769                           ; BSR set to: 0
   770  0001AC  5164               	movf	___lldiv@divisor& (0+255),w,b
   771  0001AE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
   772  0001B0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   773  0001B2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
   774  0001B4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   775  0001B6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
   776  0001B8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   777  0001BA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
   778  0001BC                     
   779                           ; BSR set to: 0
   780  0001BC  8168               	bsf	___lldiv@quotient& (0+255),0,b
   781  0001BE                     i2l1050:
   782                           
   783                           ; BSR set to: 0
   784  0001BE  90D8               	bcf	status,0,c
   785  0001C0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
   786  0001C2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
   787  0001C4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
   788  0001C6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
   789  0001C8                     
   790                           ; BSR set to: 0
   791  0001C8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
   792  0001CA  EFC2  F000         	goto	i2l1042
   793  0001CE                     i2l138:
   794                           
   795                           ; BSR set to: 0
   796  0001CE  C068  F060         	movff	___lldiv@quotient,?___lldiv
   797  0001D2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
   798  0001D6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
   799  0001DA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
   800  0001DE                     
   801                           ; BSR set to: 0
   802  0001DE  0012               	return		;funcret
   803  0001E0                     __end_of___lldiv:
   804                           	callstack 0
   805  0000                     
   806                           	psect	param0
   807  0000                     
   808                           	psect	temp
   809  000001                     btemp:
   810                           	callstack 0
   811  000001                     	ds	1
   812  0000                     int$flags	set	btemp
   813  0000                     wtemp8	set	btemp+1
   814  0000                     ttemp5	set	btemp+1
   815  0000                     ttemp6	set	btemp+4
   816  0000                     ttemp7	set	btemp+8
   817                           
   818                           	psect	idloc
   819                           
   820                           ;Config register IDLOC0 @ 0x200000
   821                           ;	unspecified, using default values
   822  200000                     	org	2097152
   823  200000  FF                 	db	255
   824                           
   825                           ;Config register IDLOC1 @ 0x200001
   826                           ;	unspecified, using default values
   827  200001                     	org	2097153
   828  200001  FF                 	db	255
   829                           
   830                           ;Config register IDLOC2 @ 0x200002
   831                           ;	unspecified, using default values
   832  200002                     	org	2097154
   833  200002  FF                 	db	255
   834                           
   835                           ;Config register IDLOC3 @ 0x200003
   836                           ;	unspecified, using default values
   837  200003                     	org	2097155
   838  200003  FF                 	db	255
   839                           
   840                           ;Config register IDLOC4 @ 0x200004
   841                           ;	unspecified, using default values
   842  200004                     	org	2097156
   843  200004  FF                 	db	255
   844                           
   845                           ;Config register IDLOC5 @ 0x200005
   846                           ;	unspecified, using default values
   847  200005                     	org	2097157
   848  200005  FF                 	db	255
   849                           
   850                           ;Config register IDLOC6 @ 0x200006
   851                           ;	unspecified, using default values
   852  200006                     	org	2097158
   853  200006  FF                 	db	255
   854                           
   855                           ;Config register IDLOC7 @ 0x200007
   856                           ;	unspecified, using default values
   857  200007                     	org	2097159
   858  200007  FF                 	db	255
   859                           
   860                           	psect	config
   861                           
   862                           ; Padding undefined space
   863  300000                     	org	3145728
   864  300000  FF                 	db	255
   865                           
   866                           ;Config register CONFIG1H @ 0x300001
   867                           ;	Oscillator Selection bits
   868                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   869                           ;	Fail-Safe Clock Monitor Enable bit
   870                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   871                           ;	Internal/External Oscillator Switchover bit
   872                           ;	IESO = OFF, Oscillator Switchover mode disabled
   873  300001                     	org	3145729
   874  300001  08                 	db	8
   875                           
   876                           ;Config register CONFIG2L @ 0x300002
   877                           ;	Power-up Timer Enable bit
   878                           ;	PWRT = OFF, PWRT disabled
   879                           ;	Brown-out Reset Enable bits
   880                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   881                           ;	Brown Out Reset Voltage bits
   882                           ;	BORV = 18, VBOR set to 1.8 V nominal
   883  300002                     	org	3145730
   884  300002  1F                 	db	31
   885                           
   886                           ;Config register CONFIG2H @ 0x300003
   887                           ;	Watchdog Timer Enable bit
   888                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   889                           ;	Watchdog Timer Postscale Select bits
   890                           ;	WDTPS = 32768, 1:32768
   891  300003                     	org	3145731
   892  300003  1E                 	db	30
   893                           
   894                           ; Padding undefined space
   895  300004                     	org	3145732
   896  300004  FF                 	db	255
   897                           
   898                           ;Config register CONFIG3H @ 0x300005
   899                           ;	CCP2 MUX bit
   900                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   901                           ;	PORTB A/D Enable bit
   902                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   903                           ;	Low-Power Timer1 Oscillator Enable bit
   904                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   905                           ;	HFINTOSC Fast Start-up
   906                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   907                           ;	MCLR Pin Enable bit
   908                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   909  300005                     	org	3145733
   910  300005  8B                 	db	139
   911                           
   912                           ;Config register CONFIG4L @ 0x300006
   913                           ;	Stack Full/Underflow Reset Enable bit
   914                           ;	STVREN = ON, Stack full/underflow will cause Reset
   915                           ;	Single-Supply ICSP Enable bit
   916                           ;	LVP = OFF, Single-Supply ICSP disabled
   917                           ;	Extended Instruction Set Enable bit
   918                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   919                           ;	Background Debugger Enable bit
   920                           ;	DEBUG = 0x1, unprogrammed default
   921  300006                     	org	3145734
   922  300006  81                 	db	129
   923                           
   924                           ; Padding undefined space
   925  300007                     	org	3145735
   926  300007  FF                 	db	255
   927                           
   928                           ;Config register CONFIG5L @ 0x300008
   929                           ;	Code Protection Block 0
   930                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   931                           ;	Code Protection Block 1
   932                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   933                           ;	Code Protection Block 2
   934                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   935                           ;	Code Protection Block 3
   936                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   937  300008                     	org	3145736
   938  300008  0F                 	db	15
   939                           
   940                           ;Config register CONFIG5H @ 0x300009
   941                           ;	Boot Block Code Protection bit
   942                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   943                           ;	Data EEPROM Code Protection bit
   944                           ;	CPD = OFF, Data EEPROM not code-protected
   945  300009                     	org	3145737
   946  300009  C0                 	db	192
   947                           
   948                           ;Config register CONFIG6L @ 0x30000A
   949                           ;	Write Protection Block 0
   950                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   951                           ;	Write Protection Block 1
   952                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   953                           ;	Write Protection Block 2
   954                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   955                           ;	Write Protection Block 3
   956                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   957  30000A                     	org	3145738
   958  30000A  0F                 	db	15
   959                           
   960                           ;Config register CONFIG6H @ 0x30000B
   961                           ;	Configuration Register Write Protection bit
   962                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   963                           ;	Boot Block Write Protection bit
   964                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   965                           ;	Data EEPROM Write Protection bit
   966                           ;	WRTD = OFF, Data EEPROM not write-protected
   967  30000B                     	org	3145739
   968  30000B  E0                 	db	224
   969                           
   970                           ;Config register CONFIG7L @ 0x30000C
   971                           ;	Table Read Protection Block 0
   972                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   973                           ;	Table Read Protection Block 1
   974                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   975                           ;	Table Read Protection Block 2
   976                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   977                           ;	Table Read Protection Block 3
   978                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   979  30000C                     	org	3145740
   980  30000C  0F                 	db	15
   981                           
   982                           ;Config register CONFIG7H @ 0x30000D
   983                           ;	Boot Block Table Read Protection bit
   984                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   985  30000D                     	org	3145741
   986  30000D  40                 	db	64
   987                           tosu	equ	0xFFF
   988                           tosh	equ	0xFFE
   989                           tosl	equ	0xFFD
   990                           stkptr	equ	0xFFC
   991                           pclatu	equ	0xFFB
   992                           pclath	equ	0xFFA
   993                           pcl	equ	0xFF9
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           indf0	equ	0xFEF
  1001                           postinc0	equ	0xFEE
  1002                           postdec0	equ	0xFED
  1003                           preinc0	equ	0xFEC
  1004                           plusw0	equ	0xFEB
  1005                           fsr0h	equ	0xFEA
  1006                           fsr0l	equ	0xFE9
  1007                           wreg	equ	0xFE8
  1008                           indf1	equ	0xFE7
  1009                           postinc1	equ	0xFE6
  1010                           postdec1	equ	0xFE5
  1011                           preinc1	equ	0xFE4
  1012                           plusw1	equ	0xFE3
  1013                           fsr1h	equ	0xFE2
  1014                           fsr1l	equ	0xFE1
  1015                           bsr	equ	0xFE0
  1016                           indf2	equ	0xFDF
  1017                           postinc2	equ	0xFDE
  1018                           postdec2	equ	0xFDD
  1019                           preinc2	equ	0xFDC
  1020                           plusw2	equ	0xFDB
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     19      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             5     5      0     361
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)
   ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      23       4       21.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      14        0.0%
DATA                 0      0      23      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 08 09:59:23 2021

                        l55 0246                          bsr 000FE0                         l980 01EA  
                       l990 01F4                         l982 01EC                         l992 0202  
                       l984 01EE                         l976 01E0                         l994 0204  
                       l986 01F0                         l978 01E8                         l996 0206  
                       l988 01F2                         l998 0208                         wreg 000FE8  
                      l1000 020A                        l1010 0224                        l1002 020C  
                      l1020 023A                        l1012 0226                        l1004 020E  
                      l1030 0244                        l1022 023C                        l1014 022C  
                      l1006 0220                        l1024 023E                        l1016 0236  
                      l1008 0222                        l1026 0240                        l1018 0238  
                      l1028 0242                        l1054 0248                        l1056 024C  
                      l1058 024E                        i1l92 001E                        i2l82 004E  
                      i2l87 0136                        _TMR0 000FD6                        _TMR1 000FCE  
          ??_initialisation 0073                        _main 0248                        btemp 0001  
                      start 0026                ___param_bank 000000                       ?_main 0060  
           __end_of___lldiv 01E0                       i2l145 01DE                       i2l138 01CE  
                     _TMR0H 000FD7                       _TMR0L 000FD6                       _PORTD 000F83  
                     _TRISD 000F95             __end_of_low_isr 0026                       ttemp5 0002  
                     ttemp6 0005                       ttemp7 0009                       status 000FD8  
                     wtemp8 0002             __initialization 0262                __end_of_main 0262  
                    ??_main 0073               __activetblptr 000003                      _ADRESH 000FC4  
                    _ANSELH 000F7F  _etatFonctionnementCourant_ 0079                      i2l1040 0176  
                    i2l1032 013A                      i2l1050 01BE                      i2l1042 0184  
                    i2l1034 014C                      i2l1052 01C8                      i2l1044 018E  
                    i2l1036 0162                      i2l1060 002A                      i2l1046 01AC  
                    i2l1038 016A                      i2l1070 0094                      i2l1062 0034  
                    i2l1048 01BC                      i2l1080 010E                      i2l1072 009E  
                    i2l1064 0042                      i2l1082 0120                      i2l1074 00DA  
                    i2l1066 005C                      i2l1084 012E                      i2l1068 005E  
                    i2l1076 00F6                      i2l1086 0130                      i2l1078 0104  
          __end_of_high_isr 013A                      _g_freq 007F                   ??___lldiv 0068  
                    clear_0 0268                   ??_low_isr 0072                  __accesstop 0060  
   __end_of__initialization 026E               ___rparam_used 000000              high_isr@nbInt1 007B  
                __pbssBANK0 0073                     i2u20_40 00F0                     i2u20_41 00EA  
                   i2u13_40 0162                     i2u21_40 00F2                     i2u13_41 015E  
                   i2u14_40 0184                     i2u22_40 0104                     i2u14_41 0180  
                   i2u22_41 0100                     i2u15_40 01AC                     i2u23_40 012E  
                   i2u15_41 01A8                     i2u23_41 012A                     i2u16_40 0042  
                   i2u16_41 003E                     i2u17_40 005C                     i2u17_41 0058  
                   i2u18_45 006C                     i2u19_40 0094                     i2u19_41 0090  
                 ?_high_isr 0060                     __Hparam 0000                     __Lparam 0000  
                   ___lldiv 013A                     __pcinit 0262                   _ANSELbits 000F7E  
                   _g_resAN 007D                     __ramtop 0600                     __ptext0 0248  
                   __ptext1 01E0                     __ptext4 013A             _chronoSecondes_ 0077  
                 _T0CONbits 000FD5                   _T1CONbits 000FCD                     _low_isr 0018  
                ??_high_isr 006D              __pintcode_body 002A        end_of_initialization 026E  
                   int_func 002A             ___lldiv@divisor 0064             ___lldiv@counter 006C  
                _valeurPwm_ 0075                     postinc0 000FEE     __size_of_initialisation 0068  
                 _TRISAbits 000F92                   _TRISBbits 000F93          high_isr@diviseurAN 0070  
       start_initialization 0262       _resultatConversionAN_ 0073               __pcstackBANK0 0060  
         __size_of_high_isr 0132                   _g_delTmr0 0081                   __pintcode 0008  
            _initialisation 01E0                    ?___lldiv 0060                 __pintcodelo 0018  
                  ?_low_isr 0060                    _PIE1bits 000F9D      __end_of_initialisation 0248  
                  _PIR1bits 000F9E                  _ADCON0bits 000FC2                  _ADCON1bits 000FC1  
                _ADCON2bits 000FC0                 _INTCON2bits 000FF1                 _INTCON3bits 000FF0  
                  __Hparam0 0000                    __Lparam0 0000             ?_initialisation 0060  
          __size_of___lldiv 00A6            __size_of_low_isr 000E                    _high_isr 0008  
             __size_of_main 001A                    int$flags 0001                  _INTCONbits 000FF2  
                  intlevel1 0000                    intlevel2 0000            ___lldiv@dividend 0060  
          ___lldiv@quotient 0068  
