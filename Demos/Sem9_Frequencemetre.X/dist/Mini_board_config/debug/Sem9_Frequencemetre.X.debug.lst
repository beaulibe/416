

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 20 09:12:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K20 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _ANSELbits	set	3966
    53  0000                     _TRISAbits	set	3986
    54  0000                     _TRISBbits	set	3987
    55  0000                     _ANSELH	set	3967
    56  0000                     _TRISD	set	3989
    57  0000                     _PORTD	set	3971
    58  0000                     _TMR1	set	4046
    59  0000                     _ADRESH	set	4036
    60  0000                     _T1CONbits	set	4045
    61  0000                     _PIE1bits	set	3997
    62  0000                     _PIR1bits	set	3998
    63  0000                     _ADCON2bits	set	4032
    64  0000                     _ADCON1bits	set	4033
    65  0000                     _ADCON0bits	set	4034
    66  0000                     _TMR0	set	4054
    67  0000                     _TMR0L	set	4054
    68  0000                     _TMR0H	set	4055
    69  0000                     _T0CONbits	set	4053
    70  0000                     _INTCON2bits	set	4081
    71  0000                     _INTCON3bits	set	4080
    72  0000                     _INTCONbits	set	4082
    73                           
    74                           ; #config settings
    75  0000                     
    76                           	psect	cinit
    77  000262                     __pcinit:
    78                           	opt callstack 0
    79  000262                     start_initialization:
    80                           	opt callstack 0
    81  000262                     __initialization:
    82                           	opt callstack 0
    83                           
    84                           ; Clear objects allocated to BANK0 (16 bytes)
    85  000262  EE00  F073         	lfsr	0,__pbssBANK0
    86  000266  0E10               	movlw	16
    87  000268                     clear_0:
    88  000268  6AEE               	clrf	postinc0,c
    89  00026A  06E8               	decf	wreg,f,c
    90  00026C  E1FD               	bnz	clear_0
    91  00026E                     end_of_initialization:
    92                           	opt callstack 0
    93  00026E                     __end_of__initialization:
    94                           	opt callstack 0
    95  00026E  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  000270  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  000272  0100               	movlb	0
    98  000274  EF24  F001         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssBANK0
   101  000073                     __pbssBANK0:
   102                           	opt callstack 0
   103  000073                     _resultatConversionAN_:
   104                           	opt callstack 0
   105  000073                     	ds	2
   106  000075                     _valeurPwm_:
   107                           	opt callstack 0
   108  000075                     	ds	2
   109  000077                     _chronoSecondes_:
   110                           	opt callstack 0
   111  000077                     	ds	2
   112  000079                     _etatFonctionnementCourant_:
   113                           	opt callstack 0
   114  000079                     	ds	2
   115  00007B                     high_isr@nbInt1:
   116                           	opt callstack 0
   117  00007B                     	ds	2
   118  00007D                     _g_resAN:
   119                           	opt callstack 0
   120  00007D                     	ds	2
   121  00007F                     _g_freq:
   122                           	opt callstack 0
   123  00007F                     	ds	2
   124  000081                     _g_delTmr0:
   125                           	opt callstack 0
   126  000081                     	ds	2
   127                           
   128                           	psect	cstackBANK0
   129  000060                     __pcstackBANK0:
   130                           	opt callstack 0
   131  000060                     ?___lldiv:
   132                           	opt callstack 0
   133  000060                     ___lldiv@dividend:
   134                           	opt callstack 0
   135                           
   136                           ; 4 bytes @ 0x0
   137  000060                     	ds	4
   138  000064                     ___lldiv@divisor:
   139                           	opt callstack 0
   140                           
   141                           ; 4 bytes @ 0x4
   142  000064                     	ds	4
   143  000068                     ___lldiv@quotient:
   144                           	opt callstack 0
   145                           
   146                           ; 4 bytes @ 0x8
   147  000068                     	ds	4
   148  00006C                     ___lldiv@counter:
   149                           	opt callstack 0
   150                           
   151                           ; 1 bytes @ 0xC
   152  00006C                     	ds	1
   153  00006D                     ??_high_isr:
   154                           
   155                           ; 1 bytes @ 0xD
   156  00006D                     	ds	3
   157  000070                     high_isr@diviseurAN:
   158                           	opt callstack 0
   159                           
   160                           ; 2 bytes @ 0x10
   161  000070                     	ds	2
   162  000072                     ??_low_isr:
   163                           
   164                           ; 1 bytes @ 0x12
   165  000072                     	ds	1
   166  000073                     
   167                           ; 1 bytes @ 0x13
   168 ;;
   169 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   170 ;;
   171 ;; *************** function _main *****************
   172 ;; Defined at:
   173 ;;		line 27 in file "main.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;		None
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      void 
   180 ;; Registers used:
   181 ;;		wreg, status,2, status,0, cstack
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   187 ;;      Params:         0       0       0       0       0       0       0
   188 ;;      Locals:         0       0       0       0       0       0       0
   189 ;;      Temps:          0       0       0       0       0       0       0
   190 ;;      Totals:         0       0       0       0       0       0       0
   191 ;;Total ram usage:        0 bytes
   192 ;; Hardware stack levels required when called:    4
   193 ;; This function calls:
   194 ;;		_initialisation
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           	psect	text0
   201  000248                     __ptext0:
   202                           	opt callstack 0
   203  000248                     _main:
   204                           	opt callstack 27
   205  000248                     
   206                           ;main.c: 29: initialisation();
   207  000248  ECF0  F000         	call	_initialisation	;wreg free
   208  00024C                     
   209                           ;main.c: 32: ADCON0bits.GO_DONE = 1;
   210  00024C  82C2               	bsf	194,1,c	;volatile
   211  00024E                     l1058:
   212                           
   213                           ;main.c: 35: {;main.c: 36: PORTD = (g_delTmr0 << 7) | g_freq;
   214  00024E  0100               	movlb	0	; force () banked
   215  000250  4181               	rrncf	_g_delTmr0& (0+255),w,b
   216  000252  0B80               	andlw	128
   217  000254  0100               	movlb	0	; force () banked
   218  000256  117F               	iorwf	_g_freq& (0+255),w,b
   219  000258  6E83               	movwf	131,c	;volatile
   220  00025A  EF27  F001         	goto	l1058
   221  00025E  EF13  F000         	goto	start
   222  000262                     __end_of_main:
   223                           	opt callstack 0
   224                           
   225 ;; *************** function _initialisation *****************
   226 ;; Defined at:
   227 ;;		line 45 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   241 ;;      Params:         0       0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0
   243 ;;      Temps:          0       0       0       0       0       0       0
   244 ;;      Totals:         0       0       0       0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels used:    1
   247 ;; Hardware stack levels required when called:    3
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256  0001E0                     __ptext1:
   257                           	opt callstack 0
   258  0001E0                     _initialisation:
   259                           	opt callstack 27
   260  0001E0                     
   261                           ;main.c: 48: TRISD = 0;
   262  0001E0  0E00               	movlw	0
   263  0001E2  6E95               	movwf	149,c	;volatile
   264                           
   265                           ;main.c: 49: ANSELH = 0;
   266  0001E4  0E00               	movlw	0
   267  0001E6  6E7F               	movwf	127,c	;volatile
   268  0001E8                     
   269                           ;main.c: 50: TRISBbits.RB1 = 1;
   270  0001E8  8293               	bsf	147,1,c	;volatile
   271  0001EA                     
   272                           ;main.c: 55: TRISAbits.TRISA0 = 1;
   273  0001EA  8092               	bsf	146,0,c	;volatile
   274  0001EC                     
   275                           ;main.c: 56: ANSELbits.ANS0 = 0;
   276  0001EC  907E               	bcf	126,0,c	;volatile
   277  0001EE                     
   278                           ;main.c: 57: ADCON0bits.ADON = 1;
   279  0001EE  80C2               	bsf	194,0,c	;volatile
   280  0001F0                     
   281                           ;main.c: 58: ADCON1bits.VCFG1 = 0;
   282  0001F0  9AC1               	bcf	193,5,c	;volatile
   283  0001F2                     
   284                           ;main.c: 59: ADCON1bits.VCFG0 = 0;
   285  0001F2  98C1               	bcf	193,4,c	;volatile
   286  0001F4                     
   287                           ;main.c: 60: ADCON2bits.ADFM = 0;
   288  0001F4  9EC0               	bcf	192,7,c	;volatile
   289                           
   290                           ;main.c: 61: ADCON2bits.ACQT = 7;
   291  0001F6  0E38               	movlw	56
   292  0001F8  12C0               	iorwf	192,f,c	;volatile
   293                           
   294                           ;main.c: 62: ADCON2bits.ADCS = 6;
   295  0001FA  50C0               	movf	192,w,c	;volatile
   296  0001FC  0BF8               	andlw	-8
   297  0001FE  0906               	iorlw	6
   298  000200  6EC0               	movwf	192,c	;volatile
   299  000202                     
   300                           ;main.c: 64: PIR1bits.ADIF = 0;
   301  000202  9C9E               	bcf	158,6,c	;volatile
   302  000204                     
   303                           ;main.c: 65: PIE1bits.ADIE = 1;
   304  000204  8C9D               	bsf	157,6,c	;volatile
   305  000206                     
   306                           ;main.c: 66: ADCON0bits.GO_DONE = 1;
   307  000206  82C2               	bsf	194,1,c	;volatile
   308  000208                     
   309                           ;main.c: 71: T0CONbits.TMR0ON = 1;
   310  000208  8ED5               	bsf	213,7,c	;volatile
   311  00020A                     
   312                           ;main.c: 72: T0CONbits.T08BIT = 0;
   313  00020A  9CD5               	bcf	213,6,c	;volatile
   314  00020C                     
   315                           ;main.c: 73: T0CONbits.T0CS = 0;
   316  00020C  9AD5               	bcf	213,5,c	;volatile
   317  00020E                     
   318                           ;main.c: 74: T0CONbits.PSA = 0;
   319  00020E  96D5               	bcf	213,3,c	;volatile
   320                           
   321                           ;main.c: 75: T0CONbits.T0PS = 0b011;
   322  000210  50D5               	movf	213,w,c	;volatile
   323  000212  0BF8               	andlw	-8
   324  000214  0903               	iorlw	3
   325  000216  6ED5               	movwf	213,c	;volatile
   326                           
   327                           ;main.c: 91: TMR0H = 0xC2;
   328  000218  0EC2               	movlw	194
   329  00021A  6ED7               	movwf	215,c	;volatile
   330                           
   331                           ;main.c: 92: TMR0L = 0xF6;
   332  00021C  0EF6               	movlw	246
   333  00021E  6ED6               	movwf	214,c	;volatile
   334  000220                     
   335                           ;main.c: 95: INTCONbits.TMR0IE = 1;
   336  000220  8AF2               	bsf	242,5,c	;volatile
   337  000222                     
   338                           ;main.c: 96: INTCONbits.TMR0IF = 0;
   339  000222  94F2               	bcf	242,2,c	;volatile
   340  000224                     
   341                           ;main.c: 99: T1CONbits.TMR1ON = 0;
   342  000224  90CD               	bcf	205,0,c	;volatile
   343  000226                     
   344                           ;main.c: 100: T1CONbits.RD16 = 1;
   345  000226  8ECD               	bsf	205,7,c	;volatile
   346                           
   347                           ;main.c: 101: T1CONbits.T1CKPS = 3;
   348  000228  0E30               	movlw	48
   349  00022A  12CD               	iorwf	205,f,c	;volatile
   350  00022C                     
   351                           ;main.c: 102: T1CONbits.TMR1CS = 0;
   352  00022C  92CD               	bcf	205,1,c	;volatile
   353                           
   354                           ;main.c: 103: TMR1 = 0x85EE;
   355  00022E  0E85               	movlw	133
   356  000230  6ECF               	movwf	207,c	;volatile
   357  000232  0EEE               	movlw	238
   358  000234  6ECE               	movwf	206,c	;volatile
   359  000236                     
   360                           ;main.c: 104: T1CONbits.TMR1ON = 1;
   361  000236  80CD               	bsf	205,0,c	;volatile
   362  000238                     
   363                           ;main.c: 107: PIR1bits.TMR1IF = 0;
   364  000238  909E               	bcf	158,0,c	;volatile
   365  00023A                     
   366                           ;main.c: 108: PIE1bits.TMR1IE = 1;
   367  00023A  809D               	bsf	157,0,c	;volatile
   368  00023C                     
   369                           ;main.c: 115: INTCON3bits.INT1IF = 0;
   370  00023C  90F0               	bcf	240,0,c	;volatile
   371  00023E                     
   372                           ;main.c: 116: INTCON3bits.INT1E = 1;
   373  00023E  86F0               	bsf	240,3,c	;volatile
   374  000240                     
   375                           ;main.c: 117: INTCON2bits.INTEDG1 = 1;
   376  000240  8AF1               	bsf	241,5,c	;volatile
   377  000242                     
   378                           ;main.c: 120: INTCONbits.PEIE = 1;
   379  000242  8CF2               	bsf	242,6,c	;volatile
   380  000244                     
   381                           ;main.c: 121: INTCONbits.GIE = 1;
   382  000244  8EF2               	bsf	242,7,c	;volatile
   383  000246  0012               	return		;funcret
   384  000248                     __end_of_initialisation:
   385                           	opt callstack 0
   386                           
   387 ;; *************** function _low_isr *****************
   388 ;; Defined at:
   389 ;;		line 81 in file "interrupts.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		None
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   403 ;;      Params:         0       0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0
   405 ;;      Temps:          0       1       0       0       0       0       0
   406 ;;      Totals:         0       1       0       0       0       0       0
   407 ;;Total ram usage:        1 bytes
   408 ;; Hardware stack levels used:    1
   409 ;; Hardware stack levels required when called:    2
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		Interrupt level 1
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	intcodelo
   418  000018                     __pintcodelo:
   419                           	opt callstack 0
   420  000018                     _low_isr:
   421                           	opt callstack 27
   422                           
   423                           ;incstack = 0
   424  000018  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   425  00001A  CFE0 F072          	movff	bsr,??_low_isr
   426  00001E  C072  FFE0         	movff	??_low_isr,bsr
   427  000022  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   428  000024  0010               	retfie	
   429  000026                     __end_of_low_isr:
   430                           	opt callstack 0
   431                           
   432 ;; *************** function _high_isr *****************
   433 ;; Defined at:
   434 ;;		line 27 in file "interrupts.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  diviseurAN      2   16[BANK0 ] int 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   448 ;;      Params:         0       0       0       0       0       0       0
   449 ;;      Locals:         0       2       0       0       0       0       0
   450 ;;      Temps:          0       3       0       0       0       0       0
   451 ;;      Totals:         0       5       0       0       0       0       0
   452 ;;Total ram usage:        5 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; Hardware stack levels required when called:    1
   455 ;; This function calls:
   456 ;;		___lldiv
   457 ;; This function is called by:
   458 ;;		Interrupt level 2
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	intcode
   463  000008                     __pintcode:
   464                           	opt callstack 0
   465  000008                     _high_isr:
   466                           	opt callstack 27
   467                           
   468                           ;incstack = 0
   469  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   470  00000A  EF15  F000         	goto	int_func
   471                           
   472                           	psect	intcode_body
   473  00002A                     __pintcode_body:
   474                           	opt callstack 27
   475  00002A                     int_func:
   476                           	opt callstack 27
   477  00002A                     
   478                           ;interrupts.c: 29: static int nbInt1 = 0;;interrupts.c: 30: int diviseurAN = 1;
   479  00002A  0E00               	movlw	0
   480  00002C  0100               	movlb	0	; force () banked
   481  00002E  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   482  000030  0E01               	movlw	1
   483  000032  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   484  000034                     
   485                           ; BSR set to: 0
   486                           ;interrupts.c: 33: if (PIR1bits.ADIF)
   487  000034  AC9E               	btfss	158,6,c	;volatile
   488  000036  EF1F  F000         	goto	i2u16_41
   489  00003A  EF21  F000         	goto	i2u16_40
   490  00003E                     i2u16_41:
   491  00003E  EF27  F000         	goto	i2l82
   492  000042                     i2u16_40:
   493  000042                     
   494                           ; BSR set to: 0
   495                           ;interrupts.c: 34: {;interrupts.c: 35: g_resAN = ADRESH;
   496  000042  CFC4 F07D          	movff	4036,_g_resAN	;volatile
   497  000046  0100               	movlb	0	; force () banked
   498  000048  6B7E               	clrf	(_g_resAN+1)& (0+255),b
   499                           
   500                           ;interrupts.c: 37: PIR1bits.ADIF = 0;
   501  00004A  9C9E               	bcf	158,6,c	;volatile
   502                           
   503                           ;interrupts.c: 38: ADCON0bits.GO_DONE = 1;
   504  00004C  82C2               	bsf	194,1,c	;volatile
   505  00004E                     i2l82:
   506                           
   507                           ; BSR set to: 0
   508                           ;interrupts.c: 39: };interrupts.c: 42: if (INTCONbits.TMR0IF)
   509  00004E  A4F2               	btfss	242,2,c	;volatile
   510  000050  EF2C  F000         	goto	i2u17_41
   511  000054  EF2E  F000         	goto	i2u17_40
   512  000058                     i2u17_41:
   513  000058  EF7B  F000         	goto	i2l1076
   514  00005C                     i2u17_40:
   515  00005C                     
   516                           ; BSR set to: 0
   517                           ;interrupts.c: 43: {;interrupts.c: 44: INTCONbits.TMR0IF = 0;
   518  00005C  94F2               	bcf	242,2,c	;volatile
   519  00005E                     
   520                           ; BSR set to: 0
   521                           ;interrupts.c: 46: diviseurAN = g_resAN>>4;
   522  00005E  C07D  F06D         	movff	_g_resAN,??_high_isr
   523  000062  C07E  F06E         	movff	_g_resAN+1,??_high_isr+1
   524  000066  0E04               	movlw	4
   525  000068  0100               	movlb	0	; force () banked
   526  00006A  6F6F               	movwf	(??_high_isr+2)& (0+255),b
   527  00006C                     i2u18_45:
   528  00006C  356E               	rlcf	(??_high_isr+1)& (0+255),w,b
   529  00006E  336E               	rrcf	(??_high_isr+1)& (0+255),f,b
   530  000070  336D               	rrcf	??_high_isr& (0+255),f,b
   531  000072  2F6F               	decfsz	(??_high_isr+2)& (0+255),f,b
   532  000074  EF36  F000         	goto	i2u18_45
   533  000078  C06D  F070         	movff	??_high_isr,high_isr@diviseurAN
   534  00007C  C06E  F071         	movff	??_high_isr+1,high_isr@diviseurAN+1
   535                           
   536                           ;interrupts.c: 47: if (diviseurAN == 0)
   537  000080  0100               	movlb	0	; force () banked
   538  000082  5170               	movf	high_isr@diviseurAN& (0+255),w,b
   539  000084  1171               	iorwf	(high_isr@diviseurAN+1)& (0+255),w,b
   540  000086  A4D8               	btfss	status,2,c
   541  000088  EF48  F000         	goto	i2u19_41
   542  00008C  EF4A  F000         	goto	i2u19_40
   543  000090                     i2u19_41:
   544  000090  EF4F  F000         	goto	i2l1072
   545  000094                     i2u19_40:
   546  000094                     
   547                           ; BSR set to: 0
   548                           ;interrupts.c: 48: diviseurAN = 1;
   549  000094  0E00               	movlw	0
   550  000096  0100               	movlb	0	; force () banked
   551  000098  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   552  00009A  0E01               	movlw	1
   553  00009C  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   554  00009E                     i2l1072:
   555                           
   556                           ; BSR set to: 0
   557                           ;interrupts.c: 50: TMR0 = 65536 - (((unsigned long)1000000)/(4*(unsigned int)16))/divise
      +                          urAN;
   558  00009E  0E09               	movlw	9
   559  0000A0  0100               	movlb	0	; force () banked
   560  0000A2  6F60               	movwf	___lldiv@dividend& (0+255),b
   561  0000A4  0E3D               	movlw	61
   562  0000A6  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
   563  0000A8  0E00               	movlw	0
   564  0000AA  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
   565  0000AC  0E00               	movlw	0
   566  0000AE  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
   567  0000B0  C070  F064         	movff	high_isr@diviseurAN,___lldiv@divisor
   568  0000B4  C071  F065         	movff	high_isr@diviseurAN+1,___lldiv@divisor+1
   569  0000B8  0100               	movlb	0	; force () banked
   570  0000BA  0E00               	movlw	0
   571  0000BC  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
   572  0000BE  0EFF               	movlw	-1
   573  0000C0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
   574  0000C2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
   575  0000C4  EC9D  F000         	call	___lldiv	;wreg free
   576  0000C8  0100               	movlb	0	; force () banked
   577  0000CA  5160               	movf	?___lldiv& (0+255),w,b
   578  0000CC  0800               	sublw	0
   579  0000CE  6ED6               	movwf	214,c	;volatile
   580  0000D0  5161               	movf	(?___lldiv+1)& (0+255),w,b
   581  0000D2  A0D8               	btfss	status,0,c
   582  0000D4  2AE8               	incf	wreg,f,c
   583  0000D6  0800               	sublw	0
   584  0000D8  6ED7               	movwf	215,c	;volatile
   585  0000DA                     
   586                           ; BSR set to: 0
   587                           ;interrupts.c: 53: g_delTmr0 = !g_delTmr0;
   588  0000DA  0100               	movlb	0	; force () banked
   589  0000DC  5181               	movf	_g_delTmr0& (0+255),w,b
   590  0000DE  1182               	iorwf	(_g_delTmr0+1)& (0+255),w,b
   591  0000E0  B4D8               	btfsc	status,2,c
   592  0000E2  EF75  F000         	goto	i2u20_41
   593  0000E6  EF78  F000         	goto	i2u20_40
   594  0000EA                     i2u20_41:
   595  0000EA  0E01               	movlw	1
   596  0000EC  EF79  F000         	goto	i2u21_40
   597  0000F0                     i2u20_40:
   598  0000F0  0E00               	movlw	0
   599  0000F2                     i2u21_40:
   600  0000F2  6F81               	movwf	_g_delTmr0& (0+255),b
   601  0000F4  6B82               	clrf	(_g_delTmr0+1)& (0+255),b
   602  0000F6                     i2l1076:
   603                           
   604                           ; BSR set to: 0
   605                           ;interrupts.c: 54: };interrupts.c: 57: if (PIR1bits.TMR1IF)
   606  0000F6  A09E               	btfss	158,0,c	;volatile
   607  0000F8  EF80  F000         	goto	i2u22_41
   608  0000FC  EF82  F000         	goto	i2u22_40
   609  000100                     i2u22_41:
   610  000100  EF90  F000         	goto	i2l1082
   611  000104                     i2u22_40:
   612  000104                     
   613                           ; BSR set to: 0
   614                           ;interrupts.c: 58: {;interrupts.c: 59: PIR1bits.TMR1IF = 0;
   615  000104  909E               	bcf	158,0,c	;volatile
   616                           
   617                           ;interrupts.c: 61: g_freq = nbInt1;
   618  000106  C07B  F07F         	movff	high_isr@nbInt1,_g_freq
   619  00010A  C07C  F080         	movff	high_isr@nbInt1+1,_g_freq+1
   620  00010E                     
   621                           ; BSR set to: 0
   622                           ;interrupts.c: 62: nbInt1 = 0;
   623  00010E  0E00               	movlw	0
   624  000110  0100               	movlb	0	; force () banked
   625  000112  6F7C               	movwf	(high_isr@nbInt1+1)& (0+255),b
   626  000114  0E00               	movlw	0
   627  000116  6F7B               	movwf	high_isr@nbInt1& (0+255),b
   628                           
   629                           ;interrupts.c: 64: TMR1 = 0x85EE;
   630  000118  0E85               	movlw	133
   631  00011A  6ECF               	movwf	207,c	;volatile
   632  00011C  0EEE               	movlw	238
   633  00011E  6ECE               	movwf	206,c	;volatile
   634  000120                     i2l1082:
   635                           
   636                           ; BSR set to: 0
   637                           ;interrupts.c: 65: };interrupts.c: 70: if(INTCON3bits.INT1IF)
   638  000120  A0F0               	btfss	240,0,c	;volatile
   639  000122  EF95  F000         	goto	i2u23_41
   640  000126  EF97  F000         	goto	i2u23_40
   641  00012A                     i2u23_41:
   642  00012A  EF9B  F000         	goto	i2l87
   643  00012E                     i2u23_40:
   644  00012E                     
   645                           ; BSR set to: 0
   646                           ;interrupts.c: 71: {;interrupts.c: 72: INTCON3bits.INT1IF = 0;
   647  00012E  90F0               	bcf	240,0,c	;volatile
   648  000130                     
   649                           ; BSR set to: 0
   650                           ;interrupts.c: 73: nbInt1++;
   651  000130  0100               	movlb	0	; force () banked
   652  000132  4B7B               	infsnz	high_isr@nbInt1& (0+255),f,b
   653  000134  2B7C               	incf	(high_isr@nbInt1+1)& (0+255),f,b
   654  000136                     i2l87:
   655                           
   656                           ; BSR set to: 0
   657  000136  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   658  000138  0011               	retfie		f
   659  00013A                     __end_of_high_isr:
   660                           	opt callstack 0
   661                           
   662 ;; *************** function ___lldiv *****************
   663 ;; Defined at:
   664 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;  dividend        4    0[BANK0 ] unsigned long 
   667 ;;  divisor         4    4[BANK0 ] unsigned long 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  quotient        4    8[BANK0 ] unsigned long 
   670 ;;  counter         1   12[BANK0 ] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  4    0[BANK0 ] unsigned long 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   680 ;;      Params:         0       8       0       0       0       0       0
   681 ;;      Locals:         0       5       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0
   683 ;;      Totals:         0      13       0       0       0       0       0
   684 ;;Total ram usage:       13 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_high_isr
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text4
   694  00013A                     __ptext4:
   695                           	opt callstack 0
   696  00013A                     ___lldiv:
   697                           	opt callstack 27
   698  00013A  0E00               	movlw	0
   699  00013C  0100               	movlb	0	; () banked
   700  00013E  6F68               	movwf	___lldiv@quotient& (0+255),b
   701  000140  0E00               	movlw	0
   702  000142  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
   703  000144  0E00               	movlw	0
   704  000146  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
   705  000148  0E00               	movlw	0
   706  00014A  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
   707  00014C                     
   708                           ; BSR set to: 0
   709  00014C  5164               	movf	___lldiv@divisor& (0+255),w,b
   710  00014E  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
   711  000150  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
   712  000152  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
   713  000154  B4D8               	btfsc	status,2,c
   714  000156  EFAF  F000         	goto	i2u13_41
   715  00015A  EFB1  F000         	goto	i2u13_40
   716  00015E                     i2u13_41:
   717  00015E  EFE7  F000         	goto	i2l138
   718  000162                     i2u13_40:
   719  000162                     
   720                           ; BSR set to: 0
   721  000162  0E01               	movlw	1
   722  000164  6F6C               	movwf	___lldiv@counter& (0+255),b
   723  000166  EFBB  F000         	goto	i2l1040
   724  00016A                     i2l1038:
   725                           
   726                           ; BSR set to: 0
   727  00016A  90D8               	bcf	status,0,c
   728  00016C  3764               	rlcf	___lldiv@divisor& (0+255),f,b
   729  00016E  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
   730  000170  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
   731  000172  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
   732  000174  2B6C               	incf	___lldiv@counter& (0+255),f,b
   733  000176                     i2l1040:
   734                           
   735                           ; BSR set to: 0
   736  000176  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
   737  000178  EFC0  F000         	goto	i2u14_41
   738  00017C  EFC2  F000         	goto	i2u14_40
   739  000180                     i2u14_41:
   740  000180  EFB5  F000         	goto	i2l1038
   741  000184                     i2u14_40:
   742  000184                     i2l1042:
   743                           
   744                           ; BSR set to: 0
   745  000184  90D8               	bcf	status,0,c
   746  000186  3768               	rlcf	___lldiv@quotient& (0+255),f,b
   747  000188  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
   748  00018A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
   749  00018C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
   750  00018E                     
   751                           ; BSR set to: 0
   752  00018E  5164               	movf	___lldiv@divisor& (0+255),w,b
   753  000190  5D60               	subwf	___lldiv@dividend& (0+255),w,b
   754  000192  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   755  000194  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
   756  000196  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   757  000198  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
   758  00019A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   759  00019C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
   760  00019E  A0D8               	btfss	status,0,c
   761  0001A0  EFD4  F000         	goto	i2u15_41
   762  0001A4  EFD6  F000         	goto	i2u15_40
   763  0001A8                     i2u15_41:
   764  0001A8  EFDF  F000         	goto	i2l1050
   765  0001AC                     i2u15_40:
   766  0001AC                     
   767                           ; BSR set to: 0
   768  0001AC  5164               	movf	___lldiv@divisor& (0+255),w,b
   769  0001AE  5F60               	subwf	___lldiv@dividend& (0+255),f,b
   770  0001B0  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   771  0001B2  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
   772  0001B4  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   773  0001B6  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
   774  0001B8  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   775  0001BA  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
   776  0001BC                     
   777                           ; BSR set to: 0
   778  0001BC  8168               	bsf	___lldiv@quotient& (0+255),0,b
   779  0001BE                     i2l1050:
   780                           
   781                           ; BSR set to: 0
   782  0001BE  90D8               	bcf	status,0,c
   783  0001C0  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
   784  0001C2  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
   785  0001C4  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
   786  0001C6  3364               	rrcf	___lldiv@divisor& (0+255),f,b
   787  0001C8                     
   788                           ; BSR set to: 0
   789  0001C8  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
   790  0001CA  EFC2  F000         	goto	i2l1042
   791  0001CE                     i2l138:
   792                           
   793                           ; BSR set to: 0
   794  0001CE  C068  F060         	movff	___lldiv@quotient,?___lldiv
   795  0001D2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
   796  0001D6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
   797  0001DA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
   798  0001DE                     
   799                           ; BSR set to: 0
   800  0001DE  0012               	return		;funcret
   801  0001E0                     __end_of___lldiv:
   802                           	opt callstack 0
   803  0000                     
   804                           	psect	param0
   805  0000                     
   806                           	psect	temp
   807  000001                     btemp:
   808                           	opt callstack 0
   809  000001                     	ds	1
   810  0000                     int$flags	set	btemp
   811  0000                     wtemp8	set	btemp+1
   812  0000                     ttemp5	set	btemp+1
   813  0000                     ttemp6	set	btemp+4
   814  0000                     ttemp7	set	btemp+8
   815                           tosu	equ	0xFFF
   816                           tosh	equ	0xFFE
   817                           tosl	equ	0xFFD
   818                           stkptr	equ	0xFFC
   819                           pclatu	equ	0xFFB
   820                           pclath	equ	0xFFA
   821                           pcl	equ	0xFF9
   822                           tblptru	equ	0xFF8
   823                           tblptrh	equ	0xFF7
   824                           tblptrl	equ	0xFF6
   825                           tablat	equ	0xFF5
   826                           prodh	equ	0xFF4
   827                           prodl	equ	0xFF3
   828                           indf0	equ	0xFEF
   829                           postinc0	equ	0xFEE
   830                           postdec0	equ	0xFED
   831                           preinc0	equ	0xFEC
   832                           plusw0	equ	0xFEB
   833                           fsr0h	equ	0xFEA
   834                           fsr0l	equ	0xFE9
   835                           wreg	equ	0xFE8
   836                           indf1	equ	0xFE7
   837                           postinc1	equ	0xFE6
   838                           postdec1	equ	0xFE5
   839                           preinc1	equ	0xFE4
   840                           plusw1	equ	0xFE3
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           bsr	equ	0xFE0
   844                           indf2	equ	0xFDF
   845                           postinc2	equ	0xFDE
   846                           postdec2	equ	0xFDD
   847                           preinc2	equ	0xFDC
   848                           plusw2	equ	0xFDB
   849                           fsr2h	equ	0xFDA
   850                           fsr2l	equ	0xFD9
   851                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     19      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             5     5      0     361
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)
   ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     13      23       4       21.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      14        0.0%
DATA                 0      0      23      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 20 09:12:38 2020

                        l55 0246                          bsr 000FE0                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
                       l980 01EA                         l990 01F4                         l982 01EC  
                       l992 0202                         l984 01EE                         l976 01E0  
                       l994 0204                         l986 01F0                         l978 01E8  
                       l996 0206                         l988 01F2                         l998 0208  
              __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000                __CFG_BORV$18 000000  
                       wreg 000FE8                __CFG_LVP$OFF 000000                        l1000 020A  
                      l1010 0224                        l1002 020C                        l1020 023A  
                      l1012 0226                        l1004 020E                        l1030 0244  
                      l1022 023C                        l1014 022C                        l1006 0220  
                      l1024 023E                        l1016 0236                        l1008 0222  
                      l1026 0240                        l1018 0238                        l1028 0242  
                      l1054 0248                        l1056 024C                        l1058 024E  
                      i1l92 001E                        i2l82 004E                        i2l87 0136  
                      _TMR0 000FD6                        _TMR1 000FCE            ??_initialisation 0073  
                      _main 0248                        btemp 0001                        start 0026  
             __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000                ___param_bank 000000  
                     ?_main 0060             __end_of___lldiv 01E0                       i2l145 01DE  
                     i2l138 01CE                       _TMR0H 000FD7                       _TMR0L 000FD6  
                     _PORTD 000F83                       _TRISD 000F95               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000             __end_of_low_isr 0026                       ttemp5 0002  
                     ttemp6 0005                       ttemp7 0009                       status 000FD8  
                     wtemp8 0002              __CFG_HFOFST$ON 000000              __CFG_PBADEN$ON 000000  
           __initialization 0262                __end_of_main 0262                      ??_main 0073  
             __activetblptr 000003                      _ADRESH 000FC4                      _ANSELH 000F7F  
_etatFonctionnementCourant_ 0079                      i2l1040 0176                      i2l1032 013A  
                    i2l1050 01BE                      i2l1042 0184                      i2l1034 014C  
                    i2l1052 01C8                      i2l1044 018E                      i2l1036 0162  
                    i2l1060 002A                      i2l1046 01AC                      i2l1038 016A  
                    i2l1070 0094                      i2l1062 0034                      i2l1048 01BC  
                    i2l1080 010E                      i2l1072 009E                      i2l1064 0042  
                    i2l1082 0120                      i2l1074 00DA                      i2l1066 005C  
                    i2l1084 012E                      i2l1068 005E                      i2l1076 00F6  
                    i2l1086 0130                      i2l1078 0104              __CFG_WDTEN$OFF 000000  
            __CFG_XINST$OFF 000000            __end_of_high_isr 013A              __CFG_STVREN$ON 000000  
                    _g_freq 007F                   ??___lldiv 0068                      clear_0 0268  
                 ??_low_isr 0072                  __accesstop 0060     __end_of__initialization 026E  
             ___rparam_used 000000              high_isr@nbInt1 007B                  __pbssBANK0 0073  
                   i2u20_40 00F0                     i2u20_41 00EA                     i2u13_40 0162  
                   i2u21_40 00F2                     i2u13_41 015E                     i2u14_40 0184  
                   i2u22_40 0104                     i2u14_41 0180                     i2u22_41 0100  
                   i2u15_40 01AC                     i2u23_40 012E                     i2u15_41 01A8  
                   i2u23_41 012A                     i2u16_40 0042                     i2u16_41 003E  
                   i2u17_40 005C                     i2u17_41 0058                     i2u18_45 006C  
                   i2u19_40 0094                     i2u19_41 0090                   ?_high_isr 0060  
                   __Hparam 0000                     __Lparam 0000                     ___lldiv 013A  
                   __pcinit 0262                   _ANSELbits 000F7E                     _g_resAN 007D  
                   __ramtop 0600                     __ptext0 0248                     __ptext1 01E0  
                   __ptext4 013A             _chronoSecondes_ 0077                   _T0CONbits 000FD5  
                 _T1CONbits 000FCD                     _low_isr 0018                  ??_high_isr 006D  
            __pintcode_body 002A        end_of_initialization 026E                     int_func 002A  
           ___lldiv@divisor 0064             ___lldiv@counter 006C                  _valeurPwm_ 0075  
                   postinc0 000FEE     __size_of_initialisation 0068                   _TRISAbits 000F92  
                 _TRISBbits 000F93          high_isr@diviseurAN 0070         start_initialization 0262  
     _resultatConversionAN_ 0073            __CFG_LPT1OSC$OFF 000000               __pcstackBANK0 0060  
         __size_of_high_isr 0132                   _g_delTmr0 0081           __CFG_CCP2MX$PORTC 000000  
                 __pintcode 0008              _initialisation 01E0                    ?___lldiv 0060  
               __pintcodelo 0018                    ?_low_isr 0060                    _PIE1bits 000F9D  
    __end_of_initialisation 0248                    _PIR1bits 000F9E            __CFG_WDTPS$32768 000000  
                _ADCON0bits 000FC2                  _ADCON1bits 000FC1                  _ADCON2bits 000FC0  
               _INTCON2bits 000FF1                 _INTCON3bits 000FF0                    __Hparam0 0000  
                  __Lparam0 0000             ?_initialisation 0060          __CFG_BOREN$SBORDIS 000000  
          __size_of___lldiv 00A6            __size_of_low_isr 000E                    _high_isr 0008  
             __size_of_main 001A                    int$flags 0001                  _INTCONbits 000FF2  
                  intlevel1 0000                    intlevel2 0000            ___lldiv@dividend 0060  
          ___lldiv@quotient 0068           __CFG_FOSC$INTIO67 000000  
