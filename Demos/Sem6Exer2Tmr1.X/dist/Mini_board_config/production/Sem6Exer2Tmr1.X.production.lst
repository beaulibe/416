

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 23 09:53:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _TMR1	set	4046
    52  0000                     _TMR0	set	4054
    53  0000                     _PORTDbits	set	3971
    54  0000                     _INTCONbits	set	4082
    55  0000                     _PIE1bits	set	3997
    56  0000                     _PIR1bits	set	3998
    57  0000                     _T1CONbits	set	4045
    58  0000                     _T0CONbits	set	4053
    59  0000                     _TRISBbits	set	3987
    60  0000                     _ANSELH	set	3967
    61  0000                     _TRISD	set	3989
    62  0000                     _PORTD	set	3971
    63                           
    64                           ; #config settings
    65  0000                     
    66                           	psect	cinit
    67  0000BC                     __pcinit:
    68                           	opt callstack 0
    69  0000BC                     start_initialization:
    70                           	opt callstack 0
    71  0000BC                     __initialization:
    72                           	opt callstack 0
    73                           
    74                           ; Clear objects allocated to BANK0 (11 bytes)
    75  0000BC  EE00  F060         	lfsr	0,__pbssBANK0
    76  0000C0  0E0B               	movlw	11
    77  0000C2                     clear_0:
    78  0000C2  6AEE               	clrf	postinc0,c
    79  0000C4  06E8               	decf	wreg,f,c
    80  0000C6  E1FD               	bnz	clear_0
    81  0000C8                     end_of_initialization:
    82                           	opt callstack 0
    83  0000C8                     __end_of__initialization:
    84                           	opt callstack 0
    85  0000C8  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    86  0000CA  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    87  0000CC  0100               	movlb	0
    88  0000CE  EF69  F000         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	bssBANK0
    91  000060                     __pbssBANK0:
    92                           	opt callstack 0
    93  000060                     _resultatConversionAN_:
    94                           	opt callstack 0
    95  000060                     	ds	2
    96  000062                     _valeurPwm_:
    97                           	opt callstack 0
    98  000062                     	ds	2
    99  000064                     _chronoSecondes_:
   100                           	opt callstack 0
   101  000064                     	ds	2
   102  000066                     _etatFonctionnementCourant_:
   103                           	opt callstack 0
   104  000066                     	ds	2
   105  000068                     _lectureAN_:
   106                           	opt callstack 0
   107  000068                     	ds	2
   108  00006A                     high_isr@compteur4bits:
   109                           	opt callstack 0
   110  00006A                     	ds	1
   111                           
   112                           	psect	cstackBANK0
   113  00006B                     __pcstackBANK0:
   114                           	opt callstack 0
   115  00006B                     ??_high_isr:
   116  00006B                     
   117                           ; 1 bytes @ 0x0
   118  00006B                     	ds	1
   119  00006C                     ??_low_isr:
   120                           
   121                           ; 1 bytes @ 0x1
   122  00006C                     	ds	1
   123  00006D                     
   124                           ; 1 bytes @ 0x2
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 19 in file "main.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;  i               2    0        int 
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   144 ;;      Params:         0       0       0       0       0       0       0
   145 ;;      Locals:         0       0       0       0       0       0       0
   146 ;;      Temps:          0       0       0       0       0       0       0
   147 ;;      Totals:         0       0       0       0       0       0       0
   148 ;;Total ram usage:        0 bytes
   149 ;; Hardware stack levels required when called:    3
   150 ;; This function calls:
   151 ;;		_initialisation
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  0000D2                     __ptext0:
   159                           	opt callstack 0
   160  0000D2                     _main:
   161                           	opt callstack 28
   162  0000D2                     
   163                           ;main.c: 21: int i;;main.c: 23: initialisation();
   164  0000D2  EC3D  F000         	call	_initialisation	;wreg free
   165  0000D6                     
   166                           ;main.c: 24: PORTD = 0xC1;
   167  0000D6  0EC1               	movlw	193
   168  0000D8  6E83               	movwf	131,c	;volatile
   169  0000DA                     l31:
   170  0000DA  EF6D  F000         	goto	l31
   171  0000DE  EF13  F000         	goto	start
   172  0000E2                     __end_of_main:
   173                           	opt callstack 0
   174                           
   175 ;; *************** function _initialisation *****************
   176 ;; Defined at:
   177 ;;		line 35 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   191 ;;      Params:         0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels used:    1
   197 ;; Hardware stack levels required when called:    2
   198 ;; This function calls:
   199 ;;		Nothing
   200 ;; This function is called by:
   201 ;;		_main
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text1
   206  00007A                     __ptext1:
   207                           	opt callstack 0
   208  00007A                     _initialisation:
   209                           	opt callstack 28
   210  00007A                     
   211                           ;main.c: 38: TRISD = 0;
   212  00007A  0E00               	movlw	0
   213  00007C  6E95               	movwf	149,c	;volatile
   214                           
   215                           ;main.c: 40: ANSELH = 0;
   216  00007E  0E00               	movlw	0
   217  000080  6E7F               	movwf	127,c	;volatile
   218  000082                     
   219                           ;main.c: 41: TRISBbits.RB0 = 1;
   220  000082  8093               	bsf	147,0,c	;volatile
   221  000084                     
   222                           ;main.c: 45: T0CONbits.TMR0ON = 1;
   223  000084  8ED5               	bsf	213,7,c	;volatile
   224  000086                     
   225                           ;main.c: 46: T0CONbits.T08BIT = 0;
   226  000086  9CD5               	bcf	213,6,c	;volatile
   227  000088                     
   228                           ;main.c: 47: T0CONbits.T0CS = 0;
   229  000088  9AD5               	bcf	213,5,c	;volatile
   230  00008A                     
   231                           ;main.c: 48: T0CONbits.PSA = 0;
   232  00008A  96D5               	bcf	213,3,c	;volatile
   233                           
   234                           ;main.c: 49: T0CONbits.T0PS = 0b011;
   235  00008C  50D5               	movf	213,w,c	;volatile
   236  00008E  0BF8               	andlw	-8
   237  000090  0903               	iorlw	3
   238  000092  6ED5               	movwf	213,c	;volatile
   239                           
   240                           ;main.c: 68: TMR0 = 0xC2F6;
   241  000094  0EC2               	movlw	194
   242  000096  6ED7               	movwf	215,c	;volatile
   243  000098  0EF6               	movlw	246
   244  00009A  6ED6               	movwf	214,c	;volatile
   245  00009C                     
   246                           ;main.c: 76: T1CONbits.RD16 = 1;
   247  00009C  8ECD               	bsf	205,7,c	;volatile
   248                           
   249                           ;main.c: 78: T1CONbits.T1CKPS = 0;
   250  00009E  0ECF               	movlw	-49
   251  0000A0  16CD               	andwf	205,f,c	;volatile
   252  0000A2                     
   253                           ;main.c: 79: T1CONbits.TMR1CS = 0;
   254  0000A2  92CD               	bcf	205,1,c	;volatile
   255  0000A4                     
   256                           ;main.c: 80: T1CONbits.TMR1ON = 1;
   257  0000A4  80CD               	bsf	205,0,c	;volatile
   258                           
   259                           ;main.c: 83: TMR1 = 0x3CB0;
   260  0000A6  0E3C               	movlw	60
   261  0000A8  6ECF               	movwf	207,c	;volatile
   262  0000AA  0EB0               	movlw	176
   263  0000AC  6ECE               	movwf	206,c	;volatile
   264  0000AE                     
   265                           ;main.c: 85: PIR1bits.TMR1IF = 0;
   266  0000AE  909E               	bcf	158,0,c	;volatile
   267  0000B0                     
   268                           ;main.c: 86: PIE1bits.TMR1IE = 1;
   269  0000B0  809D               	bsf	157,0,c	;volatile
   270  0000B2                     
   271                           ;main.c: 89: INTCONbits.TMR0IE = 1;
   272  0000B2  8AF2               	bsf	242,5,c	;volatile
   273  0000B4                     
   274                           ;main.c: 90: INTCONbits.TMR0IF = 0;
   275  0000B4  94F2               	bcf	242,2,c	;volatile
   276  0000B6                     
   277                           ;main.c: 92: INTCONbits.PEIE = 1;
   278  0000B6  8CF2               	bsf	242,6,c	;volatile
   279  0000B8                     
   280                           ;main.c: 93: INTCONbits.GIE = 1;
   281  0000B8  8EF2               	bsf	242,7,c	;volatile
   282  0000BA  0012               	return		;funcret
   283  0000BC                     __end_of_initialisation:
   284                           	opt callstack 0
   285                           
   286 ;; *************** function _low_isr *****************
   287 ;; Defined at:
   288 ;;		line 53 in file "interrupts.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		None
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   302 ;;      Params:         0       0       0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0       0       0
   304 ;;      Temps:          0       1       0       0       0       0       0
   305 ;;      Totals:         0       1       0       0       0       0       0
   306 ;;Total ram usage:        1 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; Hardware stack levels required when called:    1
   309 ;; This function calls:
   310 ;;		Nothing
   311 ;; This function is called by:
   312 ;;		Interrupt level 1
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	intcodelo
   317  000018                     __pintcodelo:
   318                           	opt callstack 0
   319  000018                     _low_isr:
   320                           	opt callstack 28
   321                           
   322                           ;incstack = 0
   323  000018  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   324  00001A  CFE0 F06C          	movff	bsr,??_low_isr
   325  00001E  C06C  FFE0         	movff	??_low_isr,bsr
   326  000022  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   327  000024  0010               	retfie	
   328  000026                     __end_of_low_isr:
   329                           	opt callstack 0
   330                           
   331 ;; *************** function _high_isr *****************
   332 ;; Defined at:
   333 ;;		line 20 in file "interrupts.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   347 ;;      Params:         0       0       0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0
   349 ;;      Temps:          0       1       0       0       0       0       0
   350 ;;      Totals:         0       1       0       0       0       0       0
   351 ;;Total ram usage:        1 bytes
   352 ;; Hardware stack levels used:    1
   353 ;; This function calls:
   354 ;;		Nothing
   355 ;; This function is called by:
   356 ;;		Interrupt level 2
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	intcode
   361  000008                     __pintcode:
   362                           	opt callstack 0
   363  000008                     _high_isr:
   364                           	opt callstack 28
   365                           
   366                           ;incstack = 0
   367  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   368  00000A  EF15  F000         	goto	int_func
   369                           
   370                           	psect	intcode_body
   371  00002A                     __pintcode_body:
   372                           	opt callstack 28
   373  00002A                     int_func:
   374                           	opt callstack 28
   375  00002A                     
   376                           ;interrupts.c: 23: static unsigned char compteur4bits = 0;;interrupts.c: 26: if (INTCONb
      +                          its.TMR0IF)
   377  00002A  A4F2               	btfss	242,2,c	;volatile
   378  00002C  EF1A  F000         	goto	i2u1_41
   379  000030  EF1C  F000         	goto	i2u1_40
   380  000034                     i2u1_41:
   381  000034  EF22  F000         	goto	i2l869
   382  000038                     i2u1_40:
   383  000038                     
   384                           ;interrupts.c: 27: {;interrupts.c: 28: INTCONbits.TMR0IF = 0;
   385  000038  94F2               	bcf	242,2,c	;volatile
   386  00003A                     
   387                           ;interrupts.c: 32: TMR0 = 0xC2F6;
   388  00003A  0EC2               	movlw	194
   389  00003C  6ED7               	movwf	215,c	;volatile
   390  00003E  0EF6               	movlw	246
   391  000040  6ED6               	movwf	214,c	;volatile
   392  000042                     
   393                           ;interrupts.c: 34: PORTDbits.RD0 ^= 1;
   394  000042  7083               	btg	131,0,c	;volatile
   395  000044                     i2l869:
   396                           
   397                           ;interrupts.c: 35: };interrupts.c: 37: if (PIR1bits.TMR1IF)
   398  000044  A09E               	btfss	158,0,c	;volatile
   399  000046  EF27  F000         	goto	i2u2_41
   400  00004A  EF29  F000         	goto	i2u2_40
   401  00004E                     i2u2_41:
   402  00004E  EF3B  F000         	goto	i2l58
   403  000052                     i2u2_40:
   404  000052                     
   405                           ;interrupts.c: 38: {;interrupts.c: 39: compteur4bits++;
   406  000052  0100               	movlb	0	; force () banked
   407  000054  2B6A               	incf	high_isr@compteur4bits& (0+255),f,b
   408  000056                     
   409                           ; BSR set to: 0
   410                           ;interrupts.c: 40: PORTD = (compteur4bits << 4) | (0b00001111 & PORTD );
   411  000056  CF83 F06B          	movff	3971,??_high_isr	;volatile
   412  00005A  0E0F               	movlw	15
   413  00005C  0100               	movlb	0	; force () banked
   414  00005E  176B               	andwf	??_high_isr& (0+255),f,b
   415  000060  0100               	movlb	0	; force () banked
   416  000062  396A               	swapf	high_isr@compteur4bits& (0+255),w,b
   417  000064  0BF0               	andlw	240
   418  000066  0100               	movlb	0	; force () banked
   419  000068  116B               	iorwf	??_high_isr& (0+255),w,b
   420  00006A  6E83               	movwf	131,c	;volatile
   421  00006C                     
   422                           ; BSR set to: 0
   423                           ;interrupts.c: 42: PIR1bits.TMR1IF = 0;
   424  00006C  909E               	bcf	158,0,c	;volatile
   425  00006E                     
   426                           ; BSR set to: 0
   427                           ;interrupts.c: 43: TMR1 = 0x3CB0;
   428  00006E  0E3C               	movlw	60
   429  000070  6ECF               	movwf	207,c	;volatile
   430  000072  0EB0               	movlw	176
   431  000074  6ECE               	movwf	206,c	;volatile
   432  000076                     i2l58:
   433  000076  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   434  000078  0011               	retfie		f
   435  00007A                     __end_of_high_isr:
   436                           	opt callstack 0
   437  0000                     
   438                           	psect	param0
   439  0000                     
   440                           	psect	temp
   441  000001                     btemp:
   442                           	opt callstack 0
   443  000001                     	ds	1
   444  0000                     int$flags	set	btemp
   445  0000                     wtemp8	set	btemp+1
   446  0000                     ttemp5	set	btemp+1
   447  0000                     ttemp6	set	btemp+4
   448  0000                     ttemp7	set	btemp+8
   449                           tosu	equ	0xFFF
   450                           tosh	equ	0xFFE
   451                           tosl	equ	0xFFD
   452                           stkptr	equ	0xFFC
   453                           pclatu	equ	0xFFB
   454                           pclath	equ	0xFFA
   455                           pcl	equ	0xFF9
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           prodh	equ	0xFF4
   461                           prodl	equ	0xFF3
   462                           indf0	equ	0xFEF
   463                           postinc0	equ	0xFEE
   464                           postdec0	equ	0xFED
   465                           preinc0	equ	0xFEC
   466                           plusw0	equ	0xFEB
   467                           fsr0h	equ	0xFEA
   468                           fsr0l	equ	0xFE9
   469                           wreg	equ	0xFE8
   470                           indf1	equ	0xFE7
   471                           postinc1	equ	0xFE6
   472                           postdec1	equ	0xFE5
   473                           preinc1	equ	0xFE4
   474                           plusw1	equ	0xFE3
   475                           fsr1h	equ	0xFE2
   476                           fsr1l	equ	0xFE1
   477                           bsr	equ	0xFE0
   478                           indf2	equ	0xFDF
   479                           postinc2	equ	0xFDE
   480                           postdec2	equ	0xFDD
   481                           preinc2	equ	0xFDC
   482                           plusw2	equ	0xFDB
   483                           fsr2h	equ	0xFDA
   484                           fsr2l	equ	0xFD9
   485                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      2      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              1 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       D       5        8.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      15        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 23 09:53:43 2020

                        l31 00DA                          l32 00DA                          l37 00BA  
                        bsr 000FE0                __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000  
              __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000                         l831 0084  
                       l841 00A2                         l833 0086                         l851 00B4  
                       l843 00A4                         l835 0088                         l827 007A  
                       l853 00B6                         l845 00AE                         l837 008A  
                       l829 0082                         l855 00B8                         l847 00B0  
                       l839 009C                         l849 00B2                         l857 00D2  
                       l859 00D6                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
              __CFG_BORV$18 000000                         wreg 000FE8                __CFG_LVP$OFF 000000  
                      i1l63 001E                        i2l58 0076                        _TMR0 000FD6  
                      _TMR1 000FCE            ??_initialisation 006D                        _main 00D2  
                      btemp 0001                        start 0026               __CFG_IESO$OFF 000000  
             __CFG_MCLRE$ON 000000                ___param_bank 000000                       ?_main 006B  
                     i2l861 002A                       i2l871 0052                       i2l863 0038  
                     i2l873 0056                       i2l865 003A                       i2l875 006C  
                     i2l867 0042                       i2l877 006E                       i2l869 0044  
                     _PORTD 000F83                       _TRISD 000F95               __CFG_PWRT$OFF 000000  
             __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000               __CFG_WRT2$OFF 000000  
             __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000              __CFG_EBTR3$OFF 000000  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000             __end_of_low_isr 0026                       ttemp5 0002  
                     ttemp6 0005                       ttemp7 0009                       wtemp8 0002  
            __CFG_HFOFST$ON 000000              __CFG_PBADEN$ON 000000             __initialization 00BC  
              __end_of_main 00E2                      ??_main 006D               __activetblptr 000003  
                    _ANSELH 000F7F  _etatFonctionnementCourant_ 0066              __CFG_WDTEN$OFF 000000  
                    i2u1_40 0038                      i2u1_41 0034                      i2u2_40 0052  
                    i2u2_41 004E              __CFG_XINST$OFF 000000            __end_of_high_isr 007A  
            __CFG_STVREN$ON 000000                      clear_0 00C2                   ??_low_isr 006C  
                __accesstop 0060     __end_of__initialization 00C8               ___rparam_used 000000  
                __pbssBANK0 0060                   ?_high_isr 006B                     __Hparam 0000  
                _lectureAN_ 0068                     __Lparam 0000                     __pcinit 00BC  
                   __ramtop 0600                     __ptext0 00D2                     __ptext1 007A  
           _chronoSecondes_ 0064                   _T0CONbits 000FD5                   _T1CONbits 000FCD  
                   _low_isr 0018                  ??_high_isr 006B              __pintcode_body 002A  
      end_of_initialization 00C8                     int_func 002A                  _valeurPwm_ 0062  
                   postinc0 000FEE     __size_of_initialisation 0042       high_isr@compteur4bits 006A  
                 _PORTDbits 000F83                   _TRISBbits 000F93         start_initialization 00BC  
     _resultatConversionAN_ 0060            __CFG_LPT1OSC$OFF 000000               __pcstackBANK0 006B  
         __size_of_high_isr 0072           __CFG_CCP2MX$PORTC 000000                   __pintcode 0008  
            _initialisation 007A                 __pintcodelo 0018                    ?_low_isr 006B  
                  _PIE1bits 000F9D      __end_of_initialisation 00BC                    _PIR1bits 000F9E  
          __CFG_WDTPS$32768 000000                    __Hparam0 0000                    __Lparam0 0000  
           ?_initialisation 006B          __CFG_BOREN$SBORDIS 000000            __size_of_low_isr 000E  
                  _high_isr 0008               __size_of_main 0010                    int$flags 0001  
                _INTCONbits 000FF2                    intlevel1 0000                    intlevel2 0000  
         __CFG_FOSC$INTIO67 000000  
