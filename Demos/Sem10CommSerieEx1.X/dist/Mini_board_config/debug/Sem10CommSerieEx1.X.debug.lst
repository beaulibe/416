

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Apr 06 08:32:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F45K20 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TRISCbits	set	3988
    49  0000                     _TRISD	set	3989
    50  0000                     _PORTD	set	3971
    51  0000                     _PORTDbits	set	3971
    52  0000                     _RCSTAbits	set	4011
    53  0000                     _BAUDCONbits	set	4024
    54  0000                     _TXSTAbits	set	4012
    55  0000                     _SPBRG	set	4015
    56  0000                     _RCREG	set	4014
    57  0000                     _PIR1bits	set	3998
    58  0000                     _TXREG	set	4013
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  0000D8                     __pcinit:
    64                           	opt callstack 0
    65  0000D8                     start_initialization:
    66                           	opt callstack 0
    67  0000D8                     __initialization:
    68                           	opt callstack 0
    69  0000D8                     end_of_initialization:
    70                           	opt callstack 0
    71  0000D8                     __end_of__initialization:
    72                           	opt callstack 0
    73  0000D8  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  0000DA  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  0000DC  0100               	movlb	0
    76  0000DE  EF09  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackBANK0
    79  000060                     __pcstackBANK0:
    80                           	opt callstack 0
    81  000060                     ??_main:
    82  000060                     
    83                           ; 1 bytes @ 0x0
    84  000060                     	ds	1
    85  000061                     main@carTx:
    86                           	opt callstack 0
    87                           
    88                           ; 1 bytes @ 0x1
    89  000061                     	ds	1
    90  000062                     main@carRx:
    91                           	opt callstack 0
    92                           
    93                           ; 1 bytes @ 0x2
    94  000062                     	ds	1
    95  000063                     main@i:
    96                           	opt callstack 0
    97                           
    98                           ; 2 bytes @ 0x3
    99  000063                     	ds	2
   100                           
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 17 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;  i               2    3[BANK0 ] int 
   111 ;;  carRx           1    2[BANK0 ] unsigned char 
   112 ;;  carTx           1    1[BANK0 ] unsigned char 
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       4       0       0       0       0       0
   124 ;;      Temps:          0       1       0       0       0       0       0
   125 ;;      Totals:         0       5       0       0       0       0       0
   126 ;;Total ram usage:        5 bytes
   127 ;; Hardware stack levels required when called:    2
   128 ;; This function calls:
   129 ;;		_initialisation
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  000012                     __ptext0:
   137                           	opt callstack 0
   138  000012                     _main:
   139                           	opt callstack 29
   140  000012                     
   141                           ;main.c: 19: unsigned char carTx = 1;
   142  000012  0E01               	movlw	1
   143  000014  0100               	movlb	0	; force () banked
   144  000016  6F61               	movwf	main@carTx& (0+255),b
   145                           
   146                           ;main.c: 20: unsigned char carRx = 0;
   147  000018  0E00               	movlw	0
   148  00001A  0100               	movlb	0	; force () banked
   149  00001C  6F62               	movwf	main@carRx& (0+255),b
   150  00001E                     
   151                           ; BSR set to: 0
   152                           ;main.c: 22: initialisation();
   153  00001E  EC5F  F000         	call	_initialisation	;wreg free
   154  000022                     
   155                           ;main.c: 25: for (int i = 0; i < 6; i++)
   156  000022  0E00               	movlw	0
   157  000024  0100               	movlb	0	; force () banked
   158  000026  6F64               	movwf	(main@i+1)& (0+255),b
   159  000028  0E00               	movlw	0
   160  00002A  6F63               	movwf	main@i& (0+255),b
   161  00002C                     
   162                           ; BSR set to: 0
   163  00002C  0100               	movlb	0	; force () banked
   164  00002E  BF64               	btfsc	(main@i+1)& (0+255),7,b
   165  000030  EF23  F000         	goto	u11
   166  000034  5164               	movf	(main@i+1)& (0+255),w,b
   167  000036  E109               	bnz	u10
   168  000038  0E06               	movlw	6
   169  00003A  5D63               	subwf	main@i& (0+255),w,b
   170  00003C  A0D8               	btfss	status,0,c
   171  00003E  EF23  F000         	goto	u11
   172  000042  EF25  F000         	goto	u10
   173  000046                     u11:
   174  000046  EF27  F000         	goto	l821
   175  00004A                     u10:
   176  00004A  EF44  F000         	goto	l33
   177  00004E                     l821:
   178                           
   179                           ; BSR set to: 0
   180                           ;main.c: 26: {;main.c: 27: PORTDbits.RD0 ^= 1;
   181  00004E  7083               	btg	131,0,c	;volatile
   182  000050                     
   183                           ; BSR set to: 0
   184                           ;main.c: 28: _delay((unsigned long)((300)*(1000000/4000.0)));
   185  000050  0E62               	movlw	98
   186  000052  0100               	movlb	0	; force () banked
   187  000054  6F60               	movwf	??_main& (0+255),b
   188  000056  0E65               	movlw	101
   189  000058                     u47:
   190  000058  2EE8               	decfsz	wreg,f,c
   191  00005A  D7FE               	bra	u47
   192  00005C  2F60               	decfsz	??_main& (0+255),f,b
   193  00005E  D7FC               	bra	u47
   194  000060  F000 F000          	nop2	
   195  000064  0100               	movlb	0	; force () banked
   196  000066  4B63               	infsnz	main@i& (0+255),f,b
   197  000068  2B64               	incf	(main@i+1)& (0+255),f,b
   198  00006A                     
   199                           ; BSR set to: 0
   200  00006A  0100               	movlb	0	; force () banked
   201  00006C  BF64               	btfsc	(main@i+1)& (0+255),7,b
   202  00006E  EF42  F000         	goto	u21
   203  000072  5164               	movf	(main@i+1)& (0+255),w,b
   204  000074  E109               	bnz	u20
   205  000076  0E06               	movlw	6
   206  000078  5D63               	subwf	main@i& (0+255),w,b
   207  00007A  A0D8               	btfss	status,0,c
   208  00007C  EF42  F000         	goto	u21
   209  000080  EF44  F000         	goto	u20
   210  000084                     u21:
   211  000084  EF27  F000         	goto	l821
   212  000088                     u20:
   213  000088                     l33:
   214                           
   215                           ;main.c: 32: {;main.c: 33: TXREG = carTx++;
   216  000088  C061  FFAD         	movff	main@carTx,4013	;volatile
   217  00008C  0100               	movlb	0	; force () banked
   218  00008E  2B61               	incf	main@carTx& (0+255),f,b
   219  000090                     
   220                           ; BSR set to: 0
   221                           ;main.c: 34: _delay((unsigned long)((500)*(1000000/4000.0)));
   222  000090  0EA3               	movlw	163
   223  000092  0100               	movlb	0	; force () banked
   224  000094  6F60               	movwf	??_main& (0+255),b
   225  000096  0E55               	movlw	85
   226  000098                     u57:
   227  000098  2EE8               	decfsz	wreg,f,c
   228  00009A  D7FE               	bra	u57
   229  00009C  2F60               	decfsz	??_main& (0+255),f,b
   230  00009E  D7FC               	bra	u57
   231  0000A0                     
   232                           ;main.c: 37: if (PIR1bits.RC1IF == 1)
   233  0000A0  AA9E               	btfss	158,5,c	;volatile
   234  0000A2  EF55  F000         	goto	u31
   235  0000A6  EF57  F000         	goto	u30
   236  0000AA                     u31:
   237  0000AA  EF44  F000         	goto	l33
   238  0000AE                     u30:
   239  0000AE                     
   240                           ;main.c: 38: {;main.c: 39: carRx = RCREG;
   241  0000AE  CFAE F062          	movff	4014,main@carRx	;volatile
   242                           
   243                           ;main.c: 40: PORTD = carRx;
   244  0000B2  C062  FF83         	movff	main@carRx,3971	;volatile
   245  0000B6  EF44  F000         	goto	l33
   246  0000BA  EF07  F000         	goto	start
   247  0000BE                     __end_of_main:
   248                           	opt callstack 0
   249                           
   250 ;; *************** function _initialisation *****************
   251 ;; Defined at:
   252 ;;		line 50 in file "main.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0
   268 ;;      Temps:          0       0       0       0       0       0       0
   269 ;;      Totals:         0       0       0       0       0       0       0
   270 ;;Total ram usage:        0 bytes
   271 ;; Hardware stack levels used:    1
   272 ;; Hardware stack levels required when called:    1
   273 ;; This function calls:
   274 ;;		Nothing
   275 ;; This function is called by:
   276 ;;		_main
   277 ;; This function uses a non-reentrant model
   278 ;;
   279                           
   280                           	psect	text1
   281  0000BE                     __ptext1:
   282                           	opt callstack 0
   283  0000BE                     _initialisation:
   284                           	opt callstack 29
   285  0000BE                     
   286                           ;main.c: 53: TRISD = 0;
   287  0000BE  0E00               	movlw	0
   288  0000C0  6E95               	movwf	149,c	;volatile
   289                           
   290                           ;main.c: 58: SPBRG = 25;
   291  0000C2  0E19               	movlw	25
   292  0000C4  6EAF               	movwf	175,c	;volatile
   293  0000C6                     
   294                           ;main.c: 59: TXSTAbits.BRGH = 1;
   295  0000C6  84AC               	bsf	172,2,c	;volatile
   296  0000C8                     
   297                           ;main.c: 60: BAUDCONbits.BRG16 = 1;
   298  0000C8  86B8               	bsf	184,3,c	;volatile
   299  0000CA                     
   300                           ;main.c: 63: TRISCbits.RC6 = 1;
   301  0000CA  8C94               	bsf	148,6,c	;volatile
   302  0000CC                     
   303                           ;main.c: 64: TRISCbits.RC7 = 1;
   304  0000CC  8E94               	bsf	148,7,c	;volatile
   305  0000CE                     
   306                           ;main.c: 67: TXSTAbits.TXEN = 1;
   307  0000CE  8AAC               	bsf	172,5,c	;volatile
   308  0000D0                     
   309                           ;main.c: 70: RCSTAbits.SPEN = 1;
   310  0000D0  8EAB               	bsf	171,7,c	;volatile
   311  0000D2                     
   312                           ;main.c: 71: TXSTAbits.SYNC = 0;
   313  0000D2  98AC               	bcf	172,4,c	;volatile
   314  0000D4                     
   315                           ;main.c: 74: RCSTAbits.CREN = 1;
   316  0000D4  88AB               	bsf	171,4,c	;volatile
   317  0000D6  0012               	return		;funcret
   318  0000D8                     __end_of_initialisation:
   319                           	opt callstack 0
   320                           
   321 ;; *************** function _high_isr *****************
   322 ;; Defined at:
   323 ;;		line 16 in file "interrupts.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		None
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   337 ;;      Params:         0       0       0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		Interrupt level 2
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	intcode
   351  000008                     __pintcode:
   352                           	opt callstack 0
   353  000008                     _high_isr:
   354                           	opt callstack 29
   355                           
   356                           ;incstack = 0
   357  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   358  00000A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   359  00000C  0011               	retfie		f
   360  00000E                     __end_of_high_isr:
   361                           	opt callstack 0
   362  0000                     
   363                           	psect	param0
   364  0000                     
   365                           	psect	temp
   366  000001                     btemp:
   367                           	opt callstack 0
   368  000001                     	ds	1
   369  0000                     int$flags	set	btemp
   370  0000                     wtemp8	set	btemp+1
   371  0000                     ttemp5	set	btemp+1
   372  0000                     ttemp6	set	btemp+4
   373  0000                     ttemp7	set	btemp+8
   374                           tosu	equ	0xFFF
   375                           tosh	equ	0xFFE
   376                           tosl	equ	0xFFD
   377                           stkptr	equ	0xFFC
   378                           pclatu	equ	0xFFB
   379                           pclath	equ	0xFFA
   380                           pcl	equ	0xFF9
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           prodh	equ	0xFF4
   386                           prodl	equ	0xFF3
   387                           indf0	equ	0xFEF
   388                           postinc0	equ	0xFEE
   389                           postdec0	equ	0xFED
   390                           preinc0	equ	0xFEC
   391                           plusw0	equ	0xFEB
   392                           fsr0h	equ	0xFEA
   393                           fsr0l	equ	0xFE9
   394                           wreg	equ	0xFE8
   395                           indf1	equ	0xFE7
   396                           postinc1	equ	0xFE6
   397                           postdec1	equ	0xFE5
   398                           preinc1	equ	0xFE4
   399                           plusw1	equ	0xFE3
   400                           fsr1h	equ	0xFE2
   401                           fsr1l	equ	0xFE1
   402                           bsr	equ	0xFE0
   403                           indf2	equ	0xFDF
   404                           postinc2	equ	0xFDE
   405                           postdec2	equ	0xFDD
   406                           preinc2	equ	0xFDC
   407                           plusw2	equ	0xFDB
   408                           fsr2h	equ	0xFDA
   409                           fsr2l	equ	0xFD9
   410                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      60
                                              0 BANK0      5     5      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5       5       4        3.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BANK5               F4      0       0      13        0.0%
ABS                  0      0       0      14        0.0%
BITBANK5            F4      0       0      15        0.0%
BIGRAM             5F3      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Apr 06 08:32:49 2020

                     l40 00D6                       l33 0088                       u10 004A  
                     u11 0046                       u20 0088                       u21 0084  
                     u30 00AE                       u31 00AA                       u47 0058  
                     u57 0098             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l801 00CC  
                    l803 00CE                      l811 0012                      l805 00D0  
                    l821 004E                      l813 001E                      l807 00D2  
                    l831 00A0                      l823 0050                      l815 0022  
                    l809 00D4                      l833 00AE                      l825 006A  
                    l817 002C                      l827 008C                      l829 0090  
                    l793 00BE                      l795 00C6                      l797 00C8  
                    l799 00CA             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BORV$18 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   i2l45 000A         ??_initialisation 0060                     _main 0012  
                   btemp 0001                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0060  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTD 000F83  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    main@i 0063                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    status 000FD8  
                  wtemp8 0002           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 00D8             __end_of_main 00BE                   ??_main 0060  
          __activetblptr 000003           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 000E           __CFG_STVREN$ON 000000               __accesstop 0060  
__end_of__initialization 00D8            ___rparam_used 000000                ?_high_isr 0060  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00D8  
                __ramtop 0600                  __ptext0 0012                  __ptext1 00BE  
             ??_high_isr 0060     end_of_initialization 00D8                _RCSTAbits 000FAB  
__size_of_initialisation 001A                _PORTDbits 000F83                _TRISCbits 000F94  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8      start_initialization 00D8  
       __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0060        __size_of_high_isr 0006  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           _initialisation 00BE  
 __end_of_initialisation 00D8                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              main@carRx 0062                main@carTx 0061                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000  
               _high_isr 0008            __size_of_main 00AC                 int$flags 0001  
               intlevel2 0000        __CFG_FOSC$INTIO67 000000  
