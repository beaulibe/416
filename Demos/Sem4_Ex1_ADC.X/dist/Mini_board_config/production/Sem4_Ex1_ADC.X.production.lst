

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 13:51:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _ADCON2bits	set	4032
    52  0000                     _ADCON1	set	4033
    53  0000                     _ANSELbits	set	3966
    54  0000                     _TRISBbits	set	3987
    55  0000                     _ANSELH	set	3967
    56  0000                     _TRISD	set	3989
    57  0000                     _PORTD	set	3971
    58  0000                     _ADRESH	set	4036
    59  0000                     _ADCON0bits	set	4034
    60                           
    61                           ; #config settings
    62  0000                     
    63                           	psect	cinit
    64  00008C                     __pcinit:
    65                           	opt callstack 0
    66  00008C                     start_initialization:
    67                           	opt callstack 0
    68  00008C                     __initialization:
    69                           	opt callstack 0
    70                           
    71                           ; Clear objects allocated to BANK0 (5 bytes)
    72  00008C  0100               	movlb	0
    73  00008E  6B64               	clrf	(__pbssBANK0+4)& (0+255),b
    74  000090  6B63               	clrf	(__pbssBANK0+3)& (0+255),b
    75  000092  6B62               	clrf	(__pbssBANK0+2)& (0+255),b
    76  000094  6B61               	clrf	(__pbssBANK0+1)& (0+255),b
    77  000096  6B60               	clrf	__pbssBANK0& (0+255),b
    78  000098                     end_of_initialization:
    79                           	opt callstack 0
    80  000098                     __end_of__initialization:
    81                           	opt callstack 0
    82  000098  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  00009A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  00009C  0100               	movlb	0
    85  00009E  EF15  F000         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssBANK0
    88  000060                     __pbssBANK0:
    89                           	opt callstack 0
    90  000060                     _stMotMoulin:
    91                           	opt callstack 0
    92  000060                     	ds	5
    93                           
    94                           	psect	cstackBANK0
    95  000065                     __pcstackBANK0:
    96                           	opt callstack 0
    97  000065                     ??_low_isr:
    98                           
    99                           ; 1 bytes @ 0x0
   100  000065                     	ds	1
   101  000066                     
   102                           ; 1 bytes @ 0x1
   103 ;;
   104 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   105 ;;
   106 ;; *************** function _main *****************
   107 ;; Defined at:
   108 ;;		line 17 in file "main.c"
   109 ;; Parameters:    Size  Location     Type
   110 ;;		None
   111 ;; Auto vars:     Size  Location     Type
   112 ;;		None
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0
   124 ;;      Temps:          0       0       0       0       0       0       0
   125 ;;      Totals:         0       0       0       0       0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called:    3
   128 ;; This function calls:
   129 ;;		_initialisation
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  00002A                     __ptext0:
   137                           	opt callstack 0
   138  00002A                     _main:
   139                           	opt callstack 28
   140  00002A                     
   141                           ;main.c: 20: stMotMoulin.vitesse = 100;
   142  00002A  0E00               	movlw	0
   143  00002C  0100               	movlb	0	; force () banked
   144  00002E  6F61               	movwf	(_stMotMoulin+1)& (0+255),b
   145  000030  0E64               	movlw	100
   146  000032  6F60               	movwf	_stMotMoulin& (0+255),b
   147                           
   148                           ;main.c: 21: stMotMoulin.temperature = 33;
   149  000034  0E00               	movlw	0
   150  000036  6F63               	movwf	(_stMotMoulin+3)& (0+255),b
   151  000038  0E21               	movlw	33
   152  00003A  6F62               	movwf	(_stMotMoulin+2)& (0+255),b
   153                           
   154                           ;main.c: 22: stMotMoulin.courant = 12;
   155  00003C  0E0C               	movlw	12
   156  00003E  6F64               	movwf	(_stMotMoulin+4)& (0+255),b
   157  000040                     
   158                           ; BSR set to: 0
   159                           ;main.c: 24: initialisation();
   160  000040  EC32  F000         	call	_initialisation	;wreg free
   161  000044                     l834:
   162                           
   163                           ;main.c: 28: {;main.c: 30: ADCON0bits.GODONE = 1;
   164  000044  82C2               	bsf	194,1,c	;volatile
   165  000046                     l28:
   166  000046  B2C2               	btfsc	194,1,c	;volatile
   167  000048  EF28  F000         	goto	u21
   168  00004C  EF2A  F000         	goto	u20
   169  000050                     u21:
   170  000050  EF23  F000         	goto	l28
   171  000054                     u20:
   172  000054                     
   173                           ;main.c: 32: stMotMoulin.courant = ADRESH;
   174  000054  CFC4 F064          	movff	4036,_stMotMoulin+4	;volatile
   175                           
   176                           ;main.c: 33: PORTD = stMotMoulin.courant;
   177  000058  C064  FF83         	movff	_stMotMoulin+4,3971	;volatile
   178  00005C  EF22  F000         	goto	l834
   179  000060  EF13  F000         	goto	start
   180  000064                     __end_of_main:
   181                           	opt callstack 0
   182                           
   183 ;; *************** function _initialisation *****************
   184 ;; Defined at:
   185 ;;		line 42 in file "main.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;		None
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, status,2
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   199 ;;      Params:         0       0       0       0       0       0       0
   200 ;;      Locals:         0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0
   202 ;;      Totals:         0       0       0       0       0       0       0
   203 ;;Total ram usage:        0 bytes
   204 ;; Hardware stack levels used:    1
   205 ;; Hardware stack levels required when called:    2
   206 ;; This function calls:
   207 ;;		Nothing
   208 ;; This function is called by:
   209 ;;		_main
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text1
   214  000064                     __ptext1:
   215                           	opt callstack 0
   216  000064                     _initialisation:
   217                           	opt callstack 28
   218  000064                     
   219                           ;main.c: 45: TRISD = 0;
   220  000064  0E00               	movlw	0
   221  000066  6E95               	movwf	149,c	;volatile
   222                           
   223                           ;main.c: 47: ANSELH = 0;
   224  000068  0E00               	movlw	0
   225  00006A  6E7F               	movwf	127,c	;volatile
   226  00006C                     
   227                           ;main.c: 48: TRISBbits.RB0 = 1;
   228  00006C  8093               	bsf	147,0,c	;volatile
   229  00006E                     
   230                           ;main.c: 63: ADCON0bits.ADON = 0;
   231  00006E  90C2               	bcf	194,0,c	;volatile
   232  000070                     
   233                           ;main.c: 64: ANSELbits.ANS0 = 1;
   234  000070  807E               	bsf	126,0,c	;volatile
   235                           
   236                           ;main.c: 65: ADCON0bits.CHS = 0b0000;
   237  000072  0EC3               	movlw	-61
   238  000074  16C2               	andwf	194,f,c	;volatile
   239                           
   240                           ;main.c: 66: ADCON1 = 0;
   241  000076  0E00               	movlw	0
   242  000078  6EC1               	movwf	193,c	;volatile
   243  00007A                     
   244                           ;main.c: 67: ADCON2bits.ADFM = 0;
   245  00007A  9EC0               	bcf	192,7,c	;volatile
   246                           
   247                           ;main.c: 68: ADCON2bits.ACQT = 0b111;
   248  00007C  0E38               	movlw	56
   249  00007E  12C0               	iorwf	192,f,c	;volatile
   250                           
   251                           ;main.c: 69: ADCON2bits.ADCS = 0b110;
   252  000080  50C0               	movf	192,w,c	;volatile
   253  000082  0BF8               	andlw	-8
   254  000084  0906               	iorlw	6
   255  000086  6EC0               	movwf	192,c	;volatile
   256  000088                     
   257                           ;main.c: 70: ADCON0bits.ADON = 1;
   258  000088  80C2               	bsf	194,0,c	;volatile
   259  00008A  0012               	return		;funcret
   260  00008C                     __end_of_initialisation:
   261                           	opt callstack 0
   262                           
   263 ;; *************** function _low_isr *****************
   264 ;; Defined at:
   265 ;;		line 36 in file "interrupts.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;		None
   270 ;; Return value:  Size  Location     Type
   271 ;;                  1    wreg      void 
   272 ;; Registers used:
   273 ;;		None
   274 ;; Tracked objects:
   275 ;;		On entry : 0/0
   276 ;;		On exit  : 0/0
   277 ;;		Unchanged: 0/0
   278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   279 ;;      Params:         0       0       0       0       0       0       0
   280 ;;      Locals:         0       0       0       0       0       0       0
   281 ;;      Temps:          0       1       0       0       0       0       0
   282 ;;      Totals:         0       1       0       0       0       0       0
   283 ;;Total ram usage:        1 bytes
   284 ;; Hardware stack levels used:    1
   285 ;; Hardware stack levels required when called:    1
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Interrupt level 1
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	intcodelo
   294  000018                     __pintcodelo:
   295                           	opt callstack 0
   296  000018                     _low_isr:
   297                           	opt callstack 28
   298                           
   299                           ;incstack = 0
   300  000018  8001               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   301  00001A  CFE0 F065          	movff	bsr,??_low_isr
   302  00001E  C065  FFE0         	movff	??_low_isr,bsr
   303  000022  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   304  000024  0010               	retfie	
   305  000026                     __end_of_low_isr:
   306                           	opt callstack 0
   307                           
   308 ;; *************** function _high_isr *****************
   309 ;; Defined at:
   310 ;;		line 18 in file "interrupts.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		None
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         0       0       0       0       0       0       0
   325 ;;      Locals:         0       0       0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0
   327 ;;      Totals:         0       0       0       0       0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; This function calls:
   331 ;;		Nothing
   332 ;; This function is called by:
   333 ;;		Interrupt level 2
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           	psect	intcode
   338  000008                     __pintcode:
   339                           	opt callstack 0
   340  000008                     _high_isr:
   341                           	opt callstack 28
   342                           
   343                           ;incstack = 0
   344  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   345  00000A  EF51  F000         	goto	int_func
   346                           
   347                           	psect	intcode_body
   348  0000A2                     __pintcode_body:
   349                           	opt callstack 28
   350  0000A2                     int_func:
   351                           	opt callstack 28
   352  0000A2  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   353  0000A4  0011               	retfie		f
   354  0000A6                     __end_of_high_isr:
   355                           	opt callstack 0
   356  0000                     
   357                           	psect	param0
   358  0000                     
   359                           	psect	temp
   360  000001                     btemp:
   361                           	opt callstack 0
   362  000001                     	ds	1
   363  0000                     int$flags	set	btemp
   364  0000                     wtemp8	set	btemp+1
   365  0000                     ttemp5	set	btemp+1
   366  0000                     ttemp6	set	btemp+4
   367  0000                     ttemp7	set	btemp+8
   368                           tosu	equ	0xFFF
   369                           tosh	equ	0xFFE
   370                           tosl	equ	0xFFD
   371                           stkptr	equ	0xFFC
   372                           pclatu	equ	0xFFB
   373                           pclath	equ	0xFFA
   374                           pcl	equ	0xFF9
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           prodh	equ	0xFF4
   380                           prodl	equ	0xFF3
   381                           indf0	equ	0xFEF
   382                           postinc0	equ	0xFEE
   383                           postdec0	equ	0xFED
   384                           preinc0	equ	0xFEC
   385                           plusw0	equ	0xFEB
   386                           fsr0h	equ	0xFEA
   387                           fsr0l	equ	0xFE9
   388                           wreg	equ	0xFE8
   389                           indf1	equ	0xFE7
   390                           postinc1	equ	0xFE6
   391                           postdec1	equ	0xFE5
   392                           preinc1	equ	0xFE4
   393                           plusw1	equ	0xFE3
   394                           fsr1h	equ	0xFE2
   395                           fsr1l	equ	0xFE1
   396                           bsr	equ	0xFE0
   397                           indf2	equ	0xFDF
   398                           postinc2	equ	0xFDE
   399                           postdec2	equ	0xFDD
   400                           preinc2	equ	0xFDC
   401                           plusw2	equ	0xFDB
   402                           fsr2h	equ	0xFDA
   403                           fsr2l	equ	0xFD9
   404                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      1       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1       6       5        3.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      15        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 13:51:46 2020

                     l30 0054                       l36 008A                       l28 0046  
                     u20 0054                       u21 0050                       bsr 000FE0  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l820 006C                      l822 006E  
                    l830 002A                      l824 0070                      l832 0040  
                    l826 007A                      l818 0064                      l834 0044  
                    l828 0088             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BORV$18 000000             __CFG_LVP$OFF 000000                     i1l48 001E  
                   i2l43 00A2         ??_initialisation 0066                     _main 002A  
                   btemp 0001                     start 0026            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0065  
                  _PORTD 000F83                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000          __end_of_low_isr 0026                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    wtemp8 0002  
         __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000          __initialization 008C  
           __end_of_main 0064                   ??_main 0066            __activetblptr 000003  
                 _ADCON1 000FC1                   _ADRESH 000FC4                   _ANSELH 000F7F  
         __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000         __end_of_high_isr 00A6  
         __CFG_STVREN$ON 000000                ??_low_isr 0065               __accesstop 0060  
__end_of__initialization 0098            ___rparam_used 000000               __pbssBANK0 0060  
              ?_high_isr 0065                  __Hparam 0000                  __Lparam 0000  
                __pcinit 008C                _ANSELbits 000F7E                  __ramtop 0600  
                __ptext0 002A                  __ptext1 0064                  _low_isr 0018  
             ??_high_isr 0065           __pintcode_body 00A2     end_of_initialization 0098  
                int_func 00A2  __size_of_initialisation 0028                _TRISBbits 000F93  
    start_initialization 008C         __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0065  
      __size_of_high_isr 009E        __CFG_CCP2MX$PORTC 000000                __pintcode 0008  
         _initialisation 0064              __pintcodelo 0018                 ?_low_isr 0065  
 __end_of_initialisation 008C         __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2  
             _ADCON2bits 000FC0                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0065       __CFG_BOREN$SBORDIS 000000         __size_of_low_isr 000E  
               _high_isr 0008            __size_of_main 003A                 int$flags 0001  
               intlevel1 0000                 intlevel2 0000              _stMotMoulin 0060  
      __CFG_FOSC$INTIO67 000000  
