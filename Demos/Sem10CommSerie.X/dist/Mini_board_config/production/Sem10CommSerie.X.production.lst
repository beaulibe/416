

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Apr 01 12:33:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F45K20 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RCSTAbits	set	4011
    49  0000                     _TXSTAbits	set	4012
    50  0000                     _TRISCbits	set	3988
    51  0000                     _SPBRG	set	4015
    52  0000                     _TRISD	set	3989
    53  0000                     _RCREG	set	4014
    54  0000                     _PIR1bits	set	3998
    55  0000                     _TXREG	set	4013
    56  0000                     _PORTDbits	set	3971
    57                           
    58                           ; #config settings
    59  0000                     
    60                           	psect	cinit
    61  000068                     __pcinit:
    62                           	opt callstack 0
    63  000068                     start_initialization:
    64                           	opt callstack 0
    65  000068                     __initialization:
    66                           	opt callstack 0
    67  000068                     end_of_initialization:
    68                           	opt callstack 0
    69  000068                     __end_of__initialization:
    70                           	opt callstack 0
    71  000068  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    72  00006A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    73  00006C  0100               	movlb	0
    74  00006E  EF09  F000         	goto	_main	;jump to C main() function
    75                           
    76                           	psect	cstackBANK0
    77  000060                     __pcstackBANK0:
    78                           	opt callstack 0
    79  000060                     ??_main:
    80  000060                     
    81                           ; 1 bytes @ 0x0
    82  000060                     	ds	1
    83  000061                     main@car:
    84                           	opt callstack 0
    85                           
    86                           ; 1 bytes @ 0x1
    87  000061                     	ds	1
    88                           
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 18 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;  car             1    1[BANK0 ] unsigned char 
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, status,2, status,0, cstack
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   108 ;;      Params:         0       0       0       0       0       0       0
   109 ;;      Locals:         0       1       0       0       0       0       0
   110 ;;      Temps:          0       1       0       0       0       0       0
   111 ;;      Totals:         0       2       0       0       0       0       0
   112 ;;Total ram usage:        2 bytes
   113 ;; Hardware stack levels required when called:    2
   114 ;; This function calls:
   115 ;;		_initialisation
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  000012                     __ptext0:
   123                           	opt callstack 0
   124  000012                     _main:
   125                           	opt callstack 29
   126  000012                     
   127                           ;main.c: 20: unsigned char car = 0x30;
   128  000012  0E30               	movlw	48
   129  000014  0100               	movlb	0	; force () banked
   130  000016  6F61               	movwf	main@car& (0+255),b
   131  000018                     
   132                           ; BSR set to: 0
   133                           ;main.c: 22: initialisation();
   134  000018  EC2A  F000         	call	_initialisation	;wreg free
   135  00001C                     l803:
   136                           
   137                           ;main.c: 26: {;main.c: 27: PORTDbits.RD0 ^= 1;
   138  00001C  7083               	btg	131,0,c	;volatile
   139  00001E                     
   140                           ;main.c: 28: TXREG = car++;
   141  00001E  C061  FFAD         	movff	main@car,4013	;volatile
   142  000022  0100               	movlb	0	; force () banked
   143  000024  2B61               	incf	main@car& (0+255),f,b
   144  000026                     
   145                           ; BSR set to: 0
   146                           ;main.c: 29: _delay((unsigned long)((300)*(1000000/4000.0)));
   147  000026  0E62               	movlw	98
   148  000028  0100               	movlb	0	; force () banked
   149  00002A  6F60               	movwf	??_main& (0+255),b
   150  00002C  0E65               	movlw	101
   151  00002E                     u27:
   152  00002E  2EE8               	decfsz	wreg,f,c
   153  000030  D7FE               	bra	u27
   154  000032  2F60               	decfsz	??_main& (0+255),f,b
   155  000034  D7FC               	bra	u27
   156  000036  F000 F000          	nop2	
   157  00003A                     
   158                           ;main.c: 31: if (PIR1bits.RC1IF == 1)
   159  00003A  AA9E               	btfss	158,5,c	;volatile
   160  00003C  EF22  F000         	goto	u11
   161  000040  EF24  F000         	goto	u10
   162  000044                     u11:
   163  000044  EF0E  F000         	goto	l803
   164  000048                     u10:
   165  000048                     
   166                           ;main.c: 32: {;main.c: 33: car = RCREG;
   167  000048  CFAE F061          	movff	4014,main@car	;volatile
   168  00004C  EF0E  F000         	goto	l803
   169  000050  EF07  F000         	goto	start
   170  000054                     __end_of_main:
   171                           	opt callstack 0
   172                           
   173 ;; *************** function _initialisation *****************
   174 ;; Defined at:
   175 ;;		line 43 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels used:    1
   195 ;; Hardware stack levels required when called:    1
   196 ;; This function calls:
   197 ;;		Nothing
   198 ;; This function is called by:
   199 ;;		_main
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           	psect	text1
   204  000054                     __ptext1:
   205                           	opt callstack 0
   206  000054                     _initialisation:
   207                           	opt callstack 29
   208  000054                     
   209                           ;main.c: 46: TRISD = 0;
   210  000054  0E00               	movlw	0
   211  000056  6E95               	movwf	149,c	;volatile
   212                           
   213                           ;main.c: 52: SPBRG = 64;
   214  000058  0E40               	movlw	64
   215  00005A  6EAF               	movwf	175,c	;volatile
   216  00005C                     
   217                           ;main.c: 55: TRISCbits.RC6 = 1;
   218  00005C  8C94               	bsf	148,6,c	;volatile
   219  00005E                     
   220                           ;main.c: 56: TRISCbits.RC7 = 1;
   221  00005E  8E94               	bsf	148,7,c	;volatile
   222  000060                     
   223                           ;main.c: 60: TXSTAbits.TXEN = 1;
   224  000060  8AAC               	bsf	172,5,c	;volatile
   225  000062                     
   226                           ;main.c: 70: RCSTAbits.SPEN = 1;
   227  000062  8EAB               	bsf	171,7,c	;volatile
   228  000064                     
   229                           ;main.c: 71: TXSTAbits.SYNC = 0;
   230  000064  98AC               	bcf	172,4,c	;volatile
   231  000066  0012               	return		;funcret
   232  000068                     __end_of_initialisation:
   233                           	opt callstack 0
   234                           
   235 ;; *************** function _high_isr *****************
   236 ;; Defined at:
   237 ;;		line 16 in file "interrupts.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		None
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   251 ;;      Params:         0       0       0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels used:    1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		Interrupt level 2
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	intcode
   265  000008                     __pintcode:
   266                           	opt callstack 0
   267  000008                     _high_isr:
   268                           	opt callstack 29
   269                           
   270                           ;incstack = 0
   271  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   272  00000A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273  00000C  0011               	retfie		f
   274  00000E                     __end_of_high_isr:
   275                           	opt callstack 0
   276  0000                     
   277                           	psect	param0
   278  0000                     
   279                           	psect	temp
   280  000001                     btemp:
   281                           	opt callstack 0
   282  000001                     	ds	1
   283  0000                     int$flags	set	btemp
   284  0000                     wtemp8	set	btemp+1
   285  0000                     ttemp5	set	btemp+1
   286  0000                     ttemp6	set	btemp+4
   287  0000                     ttemp7	set	btemp+8
   288                           tosu	equ	0xFFF
   289                           tosh	equ	0xFFE
   290                           tosl	equ	0xFFD
   291                           stkptr	equ	0xFFC
   292                           pclatu	equ	0xFFB
   293                           pclath	equ	0xFFA
   294                           pcl	equ	0xFF9
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           prodh	equ	0xFF4
   300                           prodl	equ	0xFF3
   301                           indf0	equ	0xFEF
   302                           postinc0	equ	0xFEE
   303                           postdec0	equ	0xFED
   304                           preinc0	equ	0xFEC
   305                           plusw0	equ	0xFEB
   306                           fsr0h	equ	0xFEA
   307                           fsr0l	equ	0xFE9
   308                           wreg	equ	0xFE8
   309                           indf1	equ	0xFE7
   310                           postinc1	equ	0xFE6
   311                           postdec1	equ	0xFE5
   312                           preinc1	equ	0xFE4
   313                           plusw1	equ	0xFE3
   314                           fsr1h	equ	0xFE2
   315                           fsr1l	equ	0xFE1
   316                           bsr	equ	0xFE0
   317                           indf2	equ	0xFDF
   318                           postinc2	equ	0xFDE
   319                           postdec2	equ	0xFDD
   320                           preinc2	equ	0xFDC
   321                           plusw2	equ	0xFDB
   322                           fsr2h	equ	0xFDA
   323                           fsr2l	equ	0xFD9
   324                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      2       2
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      15
                                              0 BANK0      2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2       2       5        1.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Apr 01 12:33:36 2020

                     l34 0066                       u10 0048                       u11 0044  
                     u27 002E             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l801 0018  
                    l811 003A                      l803 001C                      l813 0048  
                    l805 001E                      l807 0022                      l809 0026  
                    l791 005E                      l793 0060                      l795 0062  
                    l787 0054                      l797 0064                      l789 005C  
                    l799 0012             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BORV$18 000000                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   i2l39 000A         ??_initialisation 0060                     _main 0012  
                   btemp 0001                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0060  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _TRISD 000F95  
                  _TXREG 000FAD            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  wtemp8 0002           __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000  
        __initialization 0068             __end_of_main 0054                   ??_main 0060  
          __activetblptr 000003           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 000E           __CFG_STVREN$ON 000000               __accesstop 0060  
__end_of__initialization 0068            ___rparam_used 000000                ?_high_isr 0060  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0068  
                __ramtop 0600                  __ptext0 0012                  __ptext1 0054  
                main@car 0061               ??_high_isr 0060     end_of_initialization 0068  
              _RCSTAbits 000FAB  __size_of_initialisation 0014                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC      start_initialization 0068  
       __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0060        __size_of_high_isr 0006  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           _initialisation 0054  
 __end_of_initialisation 0068                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
               __Hparam0 0000                 __Lparam0 0000          ?_initialisation 0060  
     __CFG_BOREN$SBORDIS 000000                 _high_isr 0008            __size_of_main 0042  
               int$flags 0001                 intlevel2 0000        __CFG_FOSC$INTIO67 000000  
