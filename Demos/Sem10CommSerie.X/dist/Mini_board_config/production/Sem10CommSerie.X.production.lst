

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 03 18:29:33 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F45K20 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RCSTAbits	set	4011
    49  0000                     _TXSTAbits	set	4012
    50  0000                     _TRISCbits	set	3988
    51  0000                     _SPBRG	set	4015
    52  0000                     _TRISD	set	3989
    53  0000                     _PORTD	set	3971
    54  0000                     _RCREG	set	4014
    55  0000                     _PIR1bits	set	3998
    56  0000                     _TXREG	set	4013
    57  0000                     _PORTDbits	set	3971
    58                           
    59                           ; #config settings
    60  0000                     
    61                           	psect	cinit
    62  0000D4                     __pcinit:
    63                           	opt callstack 0
    64  0000D4                     start_initialization:
    65                           	opt callstack 0
    66  0000D4                     __initialization:
    67                           	opt callstack 0
    68  0000D4                     end_of_initialization:
    69                           	opt callstack 0
    70  0000D4                     __end_of__initialization:
    71                           	opt callstack 0
    72  0000D4  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    73  0000D6  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    74  0000D8  0100               	movlb	0
    75  0000DA  EF09  F000         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackBANK0
    78  000060                     __pcstackBANK0:
    79                           	opt callstack 0
    80  000060                     ??_main:
    81  000060                     
    82                           ; 1 bytes @ 0x0
    83  000060                     	ds	1
    84  000061                     main@carTx:
    85                           	opt callstack 0
    86                           
    87                           ; 1 bytes @ 0x1
    88  000061                     	ds	1
    89  000062                     main@carRx:
    90                           	opt callstack 0
    91                           
    92                           ; 1 bytes @ 0x2
    93  000062                     	ds	1
    94  000063                     main@i:
    95                           	opt callstack 0
    96                           
    97                           ; 2 bytes @ 0x3
    98  000063                     	ds	2
    99                           
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 17 in file "main.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;  i               2    3[BANK0 ] int 
   110 ;;  carRx           1    2[BANK0 ] unsigned char 
   111 ;;  carTx           1    1[BANK0 ] unsigned char 
   112 ;; Return value:  Size  Location     Type
   113 ;;                  1    wreg      void 
   114 ;; Registers used:
   115 ;;		wreg, status,2, status,0, cstack
   116 ;; Tracked objects:
   117 ;;		On entry : 0/0
   118 ;;		On exit  : 0/0
   119 ;;		Unchanged: 0/0
   120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   121 ;;      Params:         0       0       0       0       0       0       0
   122 ;;      Locals:         0       4       0       0       0       0       0
   123 ;;      Temps:          0       1       0       0       0       0       0
   124 ;;      Totals:         0       5       0       0       0       0       0
   125 ;;Total ram usage:        5 bytes
   126 ;; Hardware stack levels required when called:    2
   127 ;; This function calls:
   128 ;;		_initialisation
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  000012                     __ptext0:
   136                           	opt callstack 0
   137  000012                     _main:
   138                           	opt callstack 29
   139  000012                     
   140                           ;main.c: 19: unsigned char carTx = 1;
   141  000012  0E01               	movlw	1
   142  000014  0100               	movlb	0	; force () banked
   143  000016  6F61               	movwf	main@carTx& (0+255),b
   144                           
   145                           ;main.c: 20: unsigned char carRx = 0;
   146  000018  0E00               	movlw	0
   147  00001A  0100               	movlb	0	; force () banked
   148  00001C  6F62               	movwf	main@carRx& (0+255),b
   149  00001E                     
   150                           ; BSR set to: 0
   151                           ;main.c: 22: initialisation();
   152  00001E  EC5F  F000         	call	_initialisation	;wreg free
   153  000022                     
   154                           ;main.c: 25: for (int i = 0; i < 6; i++)
   155  000022  0E00               	movlw	0
   156  000024  0100               	movlb	0	; force () banked
   157  000026  6F64               	movwf	(main@i+1)& (0+255),b
   158  000028  0E00               	movlw	0
   159  00002A  6F63               	movwf	main@i& (0+255),b
   160  00002C                     
   161                           ; BSR set to: 0
   162  00002C  0100               	movlb	0	; force () banked
   163  00002E  BF64               	btfsc	(main@i+1)& (0+255),7,b
   164  000030  EF23  F000         	goto	u11
   165  000034  5164               	movf	(main@i+1)& (0+255),w,b
   166  000036  E109               	bnz	u10
   167  000038  0E06               	movlw	6
   168  00003A  5D63               	subwf	main@i& (0+255),w,b
   169  00003C  A0D8               	btfss	status,0,c
   170  00003E  EF23  F000         	goto	u11
   171  000042  EF25  F000         	goto	u10
   172  000046                     u11:
   173  000046  EF27  F000         	goto	l815
   174  00004A                     u10:
   175  00004A  EF44  F000         	goto	l31
   176  00004E                     l815:
   177                           
   178                           ; BSR set to: 0
   179                           ;main.c: 26: {;main.c: 27: PORTDbits.RD0 ^= 1;
   180  00004E  7083               	btg	131,0,c	;volatile
   181  000050                     
   182                           ; BSR set to: 0
   183                           ;main.c: 28: _delay((unsigned long)((300)*(1000000/4000.0)));
   184  000050  0E62               	movlw	98
   185  000052  0100               	movlb	0	; force () banked
   186  000054  6F60               	movwf	??_main& (0+255),b
   187  000056  0E65               	movlw	101
   188  000058                     u47:
   189  000058  2EE8               	decfsz	wreg,f,c
   190  00005A  D7FE               	bra	u47
   191  00005C  2F60               	decfsz	??_main& (0+255),f,b
   192  00005E  D7FC               	bra	u47
   193  000060  F000 F000          	nop2	
   194  000064  0100               	movlb	0	; force () banked
   195  000066  4B63               	infsnz	main@i& (0+255),f,b
   196  000068  2B64               	incf	(main@i+1)& (0+255),f,b
   197  00006A                     
   198                           ; BSR set to: 0
   199  00006A  0100               	movlb	0	; force () banked
   200  00006C  BF64               	btfsc	(main@i+1)& (0+255),7,b
   201  00006E  EF42  F000         	goto	u21
   202  000072  5164               	movf	(main@i+1)& (0+255),w,b
   203  000074  E109               	bnz	u20
   204  000076  0E06               	movlw	6
   205  000078  5D63               	subwf	main@i& (0+255),w,b
   206  00007A  A0D8               	btfss	status,0,c
   207  00007C  EF42  F000         	goto	u21
   208  000080  EF44  F000         	goto	u20
   209  000084                     u21:
   210  000084  EF27  F000         	goto	l815
   211  000088                     u20:
   212  000088                     l31:
   213                           
   214                           ;main.c: 32: {;main.c: 33: TXREG = carTx++;
   215  000088  C061  FFAD         	movff	main@carTx,4013	;volatile
   216  00008C  0100               	movlb	0	; force () banked
   217  00008E  2B61               	incf	main@carTx& (0+255),f,b
   218  000090                     
   219                           ; BSR set to: 0
   220                           ;main.c: 34: _delay((unsigned long)((500)*(1000000/4000.0)));
   221  000090  0EA3               	movlw	163
   222  000092  0100               	movlb	0	; force () banked
   223  000094  6F60               	movwf	??_main& (0+255),b
   224  000096  0E55               	movlw	85
   225  000098                     u57:
   226  000098  2EE8               	decfsz	wreg,f,c
   227  00009A  D7FE               	bra	u57
   228  00009C  2F60               	decfsz	??_main& (0+255),f,b
   229  00009E  D7FC               	bra	u57
   230  0000A0                     
   231                           ;main.c: 37: if (PIR1bits.RC1IF == 1)
   232  0000A0  AA9E               	btfss	158,5,c	;volatile
   233  0000A2  EF55  F000         	goto	u31
   234  0000A6  EF57  F000         	goto	u30
   235  0000AA                     u31:
   236  0000AA  EF44  F000         	goto	l31
   237  0000AE                     u30:
   238  0000AE                     
   239                           ;main.c: 38: {;main.c: 39: carRx = RCREG;
   240  0000AE  CFAE F062          	movff	4014,main@carRx	;volatile
   241                           
   242                           ;main.c: 40: PORTD = carRx;
   243  0000B2  C062  FF83         	movff	main@carRx,3971	;volatile
   244  0000B6  EF44  F000         	goto	l31
   245  0000BA  EF07  F000         	goto	start
   246  0000BE                     __end_of_main:
   247                           	opt callstack 0
   248                           
   249 ;; *************** function _initialisation *****************
   250 ;; Defined at:
   251 ;;		line 50 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels used:    1
   271 ;; Hardware stack levels required when called:    1
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		_main
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text1
   280  0000BE                     __ptext1:
   281                           	opt callstack 0
   282  0000BE                     _initialisation:
   283                           	opt callstack 29
   284  0000BE                     
   285                           ;main.c: 53: TRISD = 0;
   286  0000BE  0E00               	movlw	0
   287  0000C0  6E95               	movwf	149,c	;volatile
   288                           
   289                           ;main.c: 59: SPBRG = 25;
   290  0000C2  0E19               	movlw	25
   291  0000C4  6EAF               	movwf	175,c	;volatile
   292  0000C6                     
   293                           ;main.c: 63: TRISCbits.RC6 = 1;
   294  0000C6  8C94               	bsf	148,6,c	;volatile
   295  0000C8                     
   296                           ;main.c: 64: TRISCbits.RC7 = 1;
   297  0000C8  8E94               	bsf	148,7,c	;volatile
   298  0000CA                     
   299                           ;main.c: 68: TXSTAbits.TXEN = 1;
   300  0000CA  8AAC               	bsf	172,5,c	;volatile
   301  0000CC                     
   302                           ;main.c: 78: RCSTAbits.SPEN = 1;
   303  0000CC  8EAB               	bsf	171,7,c	;volatile
   304  0000CE                     
   305                           ;main.c: 79: TXSTAbits.SYNC = 0;
   306  0000CE  98AC               	bcf	172,4,c	;volatile
   307  0000D0                     
   308                           ;main.c: 82: RCSTAbits.CREN = 1;
   309  0000D0  88AB               	bsf	171,4,c	;volatile
   310  0000D2  0012               	return		;funcret
   311  0000D4                     __end_of_initialisation:
   312                           	opt callstack 0
   313                           
   314 ;; *************** function _high_isr *****************
   315 ;; Defined at:
   316 ;;		line 16 in file "interrupts.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		None
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   330 ;;      Params:         0       0       0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0       0       0
   332 ;;      Temps:          0       0       0       0       0       0       0
   333 ;;      Totals:         0       0       0       0       0       0       0
   334 ;;Total ram usage:        0 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		Interrupt level 2
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	intcode
   344  000008                     __pintcode:
   345                           	opt callstack 0
   346  000008                     _high_isr:
   347                           	opt callstack 29
   348                           
   349                           ;incstack = 0
   350  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   351  00000A  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   352  00000C  0011               	retfie		f
   353  00000E                     __end_of_high_isr:
   354                           	opt callstack 0
   355  0000                     
   356                           	psect	param0
   357  0000                     
   358                           	psect	temp
   359  000001                     btemp:
   360                           	opt callstack 0
   361  000001                     	ds	1
   362  0000                     int$flags	set	btemp
   363  0000                     wtemp8	set	btemp+1
   364  0000                     ttemp5	set	btemp+1
   365  0000                     ttemp6	set	btemp+4
   366  0000                     ttemp7	set	btemp+8
   367                           tosu	equ	0xFFF
   368                           tosh	equ	0xFFE
   369                           tosl	equ	0xFFD
   370                           stkptr	equ	0xFFC
   371                           pclatu	equ	0xFFB
   372                           pclath	equ	0xFFA
   373                           pcl	equ	0xFF9
   374                           tblptru	equ	0xFF8
   375                           tblptrh	equ	0xFF7
   376                           tblptrl	equ	0xFF6
   377                           tablat	equ	0xFF5
   378                           prodh	equ	0xFF4
   379                           prodl	equ	0xFF3
   380                           indf0	equ	0xFEF
   381                           postinc0	equ	0xFEE
   382                           postdec0	equ	0xFED
   383                           preinc0	equ	0xFEC
   384                           plusw0	equ	0xFEB
   385                           fsr0h	equ	0xFEA
   386                           fsr0l	equ	0xFE9
   387                           wreg	equ	0xFE8
   388                           indf1	equ	0xFE7
   389                           postinc1	equ	0xFE6
   390                           postdec1	equ	0xFE5
   391                           preinc1	equ	0xFE4
   392                           plusw1	equ	0xFE3
   393                           fsr1h	equ	0xFE2
   394                           fsr1l	equ	0xFE1
   395                           bsr	equ	0xFE0
   396                           indf2	equ	0xFDF
   397                           postinc2	equ	0xFDE
   398                           postdec2	equ	0xFDD
   399                           preinc2	equ	0xFDC
   400                           plusw2	equ	0xFDB
   401                           fsr2h	equ	0xFDA
   402                           fsr2l	equ	0xFD9
   403                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      60
                                              0 BANK0      5     5      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 03 18:29:33 2020

                     l31 0088                       l38 00D2                       u10 004A  
                     u11 0046                       u20 0088                       u21 0084  
                     u30 00AE                       u31 00AA                       u47 0058  
                     u57 0098             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l801 00CE  
                    l803 00D0                      l811 002C                      l821 008C  
                    l805 0012                      l823 0090                      l815 004E  
                    l807 001E                      l825 00A0                      l817 0050  
                    l809 0022                      l827 00AE                      l819 006A  
                    l791 00BE                      l793 00C6                      l795 00C8  
                    l797 00CA                      l799 00CC             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             __CFG_BORV$18 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     i2l43 000A         ??_initialisation 0060  
                   _main 0012                     btemp 0001                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0060                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _PORTD 000F83                    _TRISD 000F95                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    main@i 0063  
                  ttemp5 0002                    ttemp6 0005                    ttemp7 0009  
                  status 000FD8                    wtemp8 0002           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000          __initialization 00D4             __end_of_main 00BE  
                 ??_main 0060            __activetblptr 000003           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000         __end_of_high_isr 000E           __CFG_STVREN$ON 000000  
             __accesstop 0060  __end_of__initialization 00D4            ___rparam_used 000000  
              ?_high_isr 0060                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00D4                  __ramtop 0600                  __ptext0 0012  
                __ptext1 00BE               ??_high_isr 0060     end_of_initialization 00D4  
              _RCSTAbits 000FAB  __size_of_initialisation 0016                _PORTDbits 000F83  
              _TRISCbits 000F94                _TXSTAbits 000FAC      start_initialization 00D4  
       __CFG_LPT1OSC$OFF 000000            __pcstackBANK0 0060        __size_of_high_isr 0006  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           _initialisation 00BE  
 __end_of_initialisation 00D4                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
              main@carRx 0062                main@carTx 0061                 __Hparam0 0000  
               __Lparam0 0000          ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000  
               _high_isr 0008            __size_of_main 00AC                 int$flags 0001  
               intlevel2 0000        __CFG_FOSC$INTIO67 000000  
