

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 13 17:28:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 05/05/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F45K20 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _PORTD	set	3971
    48  0000                     _TRISD	set	3989
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53  007EE0                     __pcinit:
    54                           	callstack 0
    55  007EE0                     start_initialization:
    56                           	callstack 0
    57  007EE0                     __initialization:
    58                           	callstack 0
    59  007EE0                     end_of_initialization:
    60                           	callstack 0
    61  007EE0                     __end_of__initialization:
    62                           	callstack 0
    63  007EE0  0100               	movlb	0
    64  007EE2  EF73  F03F         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackBANK0
    67  000060                     __pcstackBANK0:
    68                           	callstack 0
    69  000060                     ??_main:
    70                           
    71                           ; 1 bytes @ 0x0
    72  000060                     	ds	8
    73  000068                     main@v3:
    74                           	callstack 0
    75                           
    76                           ; 1 bytes @ 0x8
    77  000068                     	ds	1
    78  000069                     main@vt:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x9
    82  000069                     	ds	2
    83  00006B                     main@v1:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0xB
    87  00006B                     	ds	1
    88  00006C                     main@v2:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0xC
    92  00006C                     	ds	1
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 9 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;  vt              2    9[BANK0 ] unsigned int 
   104 ;;  v2              1   12[BANK0 ] unsigned char 
   105 ;;  v1              1   11[BANK0 ] unsigned char 
   106 ;;  v3              1    8[BANK0 ] unsigned char 
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   116 ;;      Params:         0       0       0       0       0       0       0
   117 ;;      Locals:         0       5       0       0       0       0       0
   118 ;;      Temps:          0       8       0       0       0       0       0
   119 ;;      Totals:         0      13       0       0       0       0       0
   120 ;;Total ram usage:       13 bytes
   121 ;; This function calls:
   122 ;;		Nothing
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  007EE6                     __ptext0:
   130                           	callstack 0
   131  007EE6                     _main:
   132                           	callstack 31
   133  007EE6                     
   134                           ;main.c: 11:     unsigned char v1 = 0x12;
   135  007EE6  0E12               	movlw	18
   136  007EE8  0100               	movlb	0	; force () banked
   137  007EEA  6F6B               	movwf	main@v1& (0+255),b
   138                           
   139                           ;main.c: 12:     unsigned char v2 = 0x34;
   140  007EEC  0E34               	movlw	52
   141  007EEE  0100               	movlb	0	; force () banked
   142  007EF0  6F6C               	movwf	main@v2& (0+255),b
   143                           
   144                           ;main.c: 13:     unsigned char v3 = 0;
   145  007EF2  0E00               	movlw	0
   146  007EF4  0100               	movlb	0	; force () banked
   147  007EF6  6F68               	movwf	main@v3& (0+255),b
   148                           
   149                           ;main.c: 14:     unsigned int vt = 0xABCD;
   150  007EF8  0EAB               	movlw	171
   151  007EFA  0100               	movlb	0	; force () banked
   152  007EFC  6F6A               	movwf	(main@vt+1)& (0+255),b
   153  007EFE  0ECD               	movlw	205
   154  007F00  6F69               	movwf	main@vt& (0+255),b
   155                           
   156                           ;main.c: 16:     TRISD = 0;
   157  007F02  0E00               	movlw	0
   158  007F04  6E95               	movwf	149,c	;volatile
   159                           
   160                           ;main.c: 17:     PORTD = 0xA5;
   161  007F06  0EA5               	movlw	165
   162  007F08  6E83               	movwf	131,c	;volatile
   163  007F0A                     
   164                           ; BSR set to: 0
   165                           ;main.c: 19:     PORTD = PORTD | 0b10000001;
   166  007F0A  5083               	movf	131,w,c	;volatile
   167  007F0C  0981               	iorlw	129
   168  007F0E  6E83               	movwf	131,c	;volatile
   169  007F10                     
   170                           ; BSR set to: 0
   171                           ;main.c: 21:     PORTD = 0xFF;
   172  007F10  6883               	setf	131,c	;volatile
   173  007F12                     
   174                           ; BSR set to: 0
   175                           ;main.c: 23:     PORTD = PORTD & 0b11100111;
   176  007F12  5083               	movf	131,w,c	;volatile
   177  007F14  0BE7               	andlw	231
   178  007F16  6E83               	movwf	131,c	;volatile
   179                           
   180                           ;main.c: 27:     PORTD = 0xA5;
   181  007F18  0EA5               	movlw	165
   182  007F1A  6E83               	movwf	131,c	;volatile
   183  007F1C                     
   184                           ; BSR set to: 0
   185                           ;main.c: 29:     PORTD = (PORTD >> 4) | (unsigned char)(PORTD << 4);
   186  007F1C  CF83 F060          	movff	3971,??_main	;volatile
   187  007F20  0100               	movlb	0	; force () banked
   188  007F22  3B60               	swapf	??_main& (0+255),f,b
   189  007F24  0EF0               	movlw	240
   190  007F26  1760               	andwf	??_main& (0+255),f,b
   191  007F28  3883               	swapf	131,w,c	;volatile
   192  007F2A  0B0F               	andlw	15
   193  007F2C  1160               	iorwf	??_main& (0+255),w,b
   194  007F2E  6E83               	movwf	131,c	;volatile
   195  007F30                     
   196                           ; BSR set to: 0
   197                           ;main.c: 33:     v3 = (v1&0xF0) | (v2&0x0F);
   198  007F30  C06C  F060         	movff	main@v2,??_main
   199  007F34  0E0F               	movlw	15
   200  007F36  0100               	movlb	0	; force () banked
   201  007F38  1760               	andwf	??_main& (0+255),f,b
   202  007F3A  0100               	movlb	0	; force () banked
   203  007F3C  516B               	movf	main@v1& (0+255),w,b
   204  007F3E  0BF0               	andlw	240
   205  007F40  0100               	movlb	0	; force () banked
   206  007F42  1160               	iorwf	??_main& (0+255),w,b
   207  007F44  0100               	movlb	0	; force () banked
   208  007F46  6F68               	movwf	main@v3& (0+255),b
   209  007F48                     
   210                           ; BSR set to: 0
   211                           ;main.c: 36:     v3 = (unsigned char)(v1<<4) | (v2&0x0F);
   212  007F48  C06C  F060         	movff	main@v2,??_main
   213  007F4C  0E0F               	movlw	15
   214  007F4E  0100               	movlb	0	; force () banked
   215  007F50  1760               	andwf	??_main& (0+255),f,b
   216  007F52  0100               	movlb	0	; force () banked
   217  007F54  396B               	swapf	main@v1& (0+255),w,b
   218  007F56  0BF0               	andlw	240
   219  007F58  0100               	movlb	0	; force () banked
   220  007F5A  1160               	iorwf	??_main& (0+255),w,b
   221  007F5C  0100               	movlb	0	; force () banked
   222  007F5E  6F68               	movwf	main@v3& (0+255),b
   223  007F60                     
   224                           ; BSR set to: 0
   225                           ;main.c: 39:     v3 = (v1>>4) | (unsigned char)(v2<<4);
   226  007F60  C06C  F060         	movff	main@v2,??_main
   227  007F64  0100               	movlb	0	; force () banked
   228  007F66  3B60               	swapf	??_main& (0+255),f,b
   229  007F68  0EF0               	movlw	240
   230  007F6A  1760               	andwf	??_main& (0+255),f,b
   231  007F6C  0100               	movlb	0	; force () banked
   232  007F6E  396B               	swapf	main@v1& (0+255),w,b
   233  007F70  0B0F               	andlw	15
   234  007F72  0100               	movlb	0	; force () banked
   235  007F74  1160               	iorwf	??_main& (0+255),w,b
   236  007F76  0100               	movlb	0	; force () banked
   237  007F78  6F68               	movwf	main@v3& (0+255),b
   238  007F7A                     
   239                           ; BSR set to: 0
   240                           ;main.c: 42:     v3 = ((vt&0x0F00)>>8) | (vt & 0x00F0) ;
   241  007F7A  C069  F060         	movff	main@vt,??_main
   242  007F7E  0EF0               	movlw	240
   243  007F80  0100               	movlb	0	; force () banked
   244  007F82  1760               	andwf	??_main& (0+255),f,b
   245  007F84  0100               	movlb	0	; force () banked
   246  007F86  516A               	movf	(main@vt+1)& (0+255),w,b
   247  007F88  0B0F               	andlw	15
   248  007F8A  0100               	movlb	0	; force () banked
   249  007F8C  1160               	iorwf	??_main& (0+255),w,b
   250  007F8E  0100               	movlb	0	; force () banked
   251  007F90  6F68               	movwf	main@v3& (0+255),b
   252  007F92                     
   253                           ; BSR set to: 0
   254                           ;main.c: 52:     vt = (unsigned int)(v2<<12) |
   255  007F92  0E00               	movlw	0
   256  007F94  0100               	movlb	0	; force () banked
   257  007F96  6F60               	movwf	??_main& (0+255),b
   258  007F98  0E0F               	movlw	15
   259  007F9A  6F61               	movwf	(??_main+1)& (0+255),b
   260  007F9C  0100               	movlb	0	; force () banked
   261  007F9E  516B               	movf	main@v1& (0+255),w,b
   262  007FA0  0100               	movlb	0	; force () banked
   263  007FA2  6F63               	movwf	(??_main+3)& (0+255),b
   264  007FA4  6B62               	clrf	(??_main+2)& (0+255),b
   265  007FA6  5160               	movf	??_main& (0+255),w,b
   266  007FA8  1762               	andwf	(??_main+2)& (0+255),f,b
   267  007FAA  5161               	movf	(??_main+1)& (0+255),w,b
   268  007FAC  1763               	andwf	(??_main+3)& (0+255),f,b
   269  007FAE  0100               	movlb	0	; force () banked
   270  007FB0  516C               	movf	main@v2& (0+255),w,b
   271  007FB2  0100               	movlb	0	; force () banked
   272  007FB4  6F64               	movwf	(??_main+4)& (0+255),b
   273  007FB6  6B65               	clrf	(??_main+5)& (0+255),b
   274  007FB8  0E0C               	movlw	12
   275  007FBA                     u15:
   276  007FBA  90D8               	bcf	status,0,c
   277  007FBC  3764               	rlcf	(??_main+4)& (0+255),f,b
   278  007FBE  3765               	rlcf	(??_main+5)& (0+255),f,b
   279  007FC0  2EE8               	decfsz	wreg,f,c
   280  007FC2  EFDD  F03F         	goto	u15
   281  007FC6  5162               	movf	(??_main+2)& (0+255),w,b
   282  007FC8  1364               	iorwf	(??_main+4)& (0+255),f,b
   283  007FCA  5163               	movf	(??_main+3)& (0+255),w,b
   284  007FCC  1365               	iorwf	(??_main+5)& (0+255),f,b
   285  007FCE  C06C  F066         	movff	main@v2,??_main+6
   286  007FD2  0EF0               	movlw	240
   287  007FD4  1766               	andwf	(??_main+6)& (0+255),f,b
   288  007FD6  5166               	movf	(??_main+6)& (0+255),w,b
   289  007FD8  1364               	iorwf	(??_main+4)& (0+255),f,b
   290  007FDA  0E00               	movlw	0
   291  007FDC  1365               	iorwf	(??_main+5)& (0+255),f,b
   292  007FDE  C06B  F067         	movff	main@v1,??_main+7
   293  007FE2  3B67               	swapf	(??_main+7)& (0+255),f,b
   294  007FE4  0E0F               	movlw	15
   295  007FE6  1767               	andwf	(??_main+7)& (0+255),f,b
   296  007FE8  5167               	movf	(??_main+7)& (0+255),w,b
   297  007FEA  1164               	iorwf	(??_main+4)& (0+255),w,b
   298  007FEC  0100               	movlb	0	; force () banked
   299  007FEE  6F69               	movwf	main@vt& (0+255),b
   300  007FF0  0100               	movlb	0	; force () banked
   301  007FF2  5165               	movf	(??_main+5)& (0+255),w,b
   302  007FF4  0100               	movlb	0	; force () banked
   303  007FF6  6F6A               	movwf	(main@vt+1)& (0+255),b
   304  007FF8                     l9:
   305  007FF8  EFFC  F03F         	goto	l9
   306  007FFC  EF00  F000         	goto	start
   307  008000                     __end_of_main:
   308                           	callstack 0
   309  0000                     
   310                           	psect	param0
   311  0000                     
   312                           	psect	idloc
   313                           
   314                           ;Config register IDLOC0 @ 0x200000
   315                           ;	unspecified, using default values
   316  200000                     	org	2097152
   317  200000  FF                 	db	255
   318                           
   319                           ;Config register IDLOC1 @ 0x200001
   320                           ;	unspecified, using default values
   321  200001                     	org	2097153
   322  200001  FF                 	db	255
   323                           
   324                           ;Config register IDLOC2 @ 0x200002
   325                           ;	unspecified, using default values
   326  200002                     	org	2097154
   327  200002  FF                 	db	255
   328                           
   329                           ;Config register IDLOC3 @ 0x200003
   330                           ;	unspecified, using default values
   331  200003                     	org	2097155
   332  200003  FF                 	db	255
   333                           
   334                           ;Config register IDLOC4 @ 0x200004
   335                           ;	unspecified, using default values
   336  200004                     	org	2097156
   337  200004  FF                 	db	255
   338                           
   339                           ;Config register IDLOC5 @ 0x200005
   340                           ;	unspecified, using default values
   341  200005                     	org	2097157
   342  200005  FF                 	db	255
   343                           
   344                           ;Config register IDLOC6 @ 0x200006
   345                           ;	unspecified, using default values
   346  200006                     	org	2097158
   347  200006  FF                 	db	255
   348                           
   349                           ;Config register IDLOC7 @ 0x200007
   350                           ;	unspecified, using default values
   351  200007                     	org	2097159
   352  200007  FF                 	db	255
   353                           
   354                           	psect	config
   355                           
   356                           ; Padding undefined space
   357  300000                     	org	3145728
   358  300000  FF                 	db	255
   359                           
   360                           ;Config register CONFIG1H @ 0x300001
   361                           ;	Oscillator Selection bits
   362                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   363                           ;	Fail-Safe Clock Monitor Enable bit
   364                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   365                           ;	Internal/External Oscillator Switchover bit
   366                           ;	IESO = OFF, Oscillator Switchover mode disabled
   367  300001                     	org	3145729
   368  300001  08                 	db	8
   369                           
   370                           ;Config register CONFIG2L @ 0x300002
   371                           ;	Power-up Timer Enable bit
   372                           ;	PWRT = OFF, PWRT disabled
   373                           ;	Brown-out Reset Enable bits
   374                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   375                           ;	Brown Out Reset Voltage bits
   376                           ;	BORV = 18, VBOR set to 1.8 V nominal
   377  300002                     	org	3145730
   378  300002  1F                 	db	31
   379                           
   380                           ;Config register CONFIG2H @ 0x300003
   381                           ;	Watchdog Timer Enable bit
   382                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   383                           ;	Watchdog Timer Postscale Select bits
   384                           ;	WDTPS = 32768, 1:32768
   385  300003                     	org	3145731
   386  300003  1E                 	db	30
   387                           
   388                           ; Padding undefined space
   389  300004                     	org	3145732
   390  300004  FF                 	db	255
   391                           
   392                           ;Config register CONFIG3H @ 0x300005
   393                           ;	CCP2 MUX bit
   394                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   395                           ;	PORTB A/D Enable bit
   396                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   397                           ;	Low-Power Timer1 Oscillator Enable bit
   398                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   399                           ;	HFINTOSC Fast Start-up
   400                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   401                           ;	MCLR Pin Enable bit
   402                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   403  300005                     	org	3145733
   404  300005  8B                 	db	139
   405                           
   406                           ;Config register CONFIG4L @ 0x300006
   407                           ;	Stack Full/Underflow Reset Enable bit
   408                           ;	STVREN = ON, Stack full/underflow will cause Reset
   409                           ;	Single-Supply ICSP Enable bit
   410                           ;	LVP = OFF, Single-Supply ICSP disabled
   411                           ;	Extended Instruction Set Enable bit
   412                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   413                           ;	Background Debugger Enable bit
   414                           ;	DEBUG = 0x1, unprogrammed default
   415  300006                     	org	3145734
   416  300006  81                 	db	129
   417                           
   418                           ; Padding undefined space
   419  300007                     	org	3145735
   420  300007  FF                 	db	255
   421                           
   422                           ;Config register CONFIG5L @ 0x300008
   423                           ;	Code Protection Block 0
   424                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   425                           ;	Code Protection Block 1
   426                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   427                           ;	Code Protection Block 2
   428                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   429                           ;	Code Protection Block 3
   430                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   431  300008                     	org	3145736
   432  300008  0F                 	db	15
   433                           
   434                           ;Config register CONFIG5H @ 0x300009
   435                           ;	Boot Block Code Protection bit
   436                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   437                           ;	Data EEPROM Code Protection bit
   438                           ;	CPD = OFF, Data EEPROM not code-protected
   439  300009                     	org	3145737
   440  300009  C0                 	db	192
   441                           
   442                           ;Config register CONFIG6L @ 0x30000A
   443                           ;	Write Protection Block 0
   444                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   445                           ;	Write Protection Block 1
   446                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   447                           ;	Write Protection Block 2
   448                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   449                           ;	Write Protection Block 3
   450                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   451  30000A                     	org	3145738
   452  30000A  0F                 	db	15
   453                           
   454                           ;Config register CONFIG6H @ 0x30000B
   455                           ;	Configuration Register Write Protection bit
   456                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   457                           ;	Boot Block Write Protection bit
   458                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   459                           ;	Data EEPROM Write Protection bit
   460                           ;	WRTD = OFF, Data EEPROM not write-protected
   461  30000B                     	org	3145739
   462  30000B  E0                 	db	224
   463                           
   464                           ;Config register CONFIG7L @ 0x30000C
   465                           ;	Table Read Protection Block 0
   466                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   467                           ;	Table Read Protection Block 1
   468                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   469                           ;	Table Read Protection Block 2
   470                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   471                           ;	Table Read Protection Block 3
   472                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   473  30000C                     	org	3145740
   474  30000C  0F                 	db	15
   475                           
   476                           ;Config register CONFIG7H @ 0x30000D
   477                           ;	Boot Block Table Read Protection bit
   478                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   479  30000D                     	org	3145741
   480  30000D  40                 	db	64
   481                           tosu	equ	0xFFF
   482                           tosh	equ	0xFFE
   483                           tosl	equ	0xFFD
   484                           stkptr	equ	0xFFC
   485                           pclatu	equ	0xFFB
   486                           pclath	equ	0xFFA
   487                           pcl	equ	0xFF9
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           prodh	equ	0xFF4
   493                           prodl	equ	0xFF3
   494                           indf0	equ	0xFEF
   495                           postinc0	equ	0xFEE
   496                           postdec0	equ	0xFED
   497                           preinc0	equ	0xFEC
   498                           plusw0	equ	0xFEB
   499                           fsr0h	equ	0xFEA
   500                           fsr0l	equ	0xFE9
   501                           wreg	equ	0xFE8
   502                           indf1	equ	0xFE7
   503                           postinc1	equ	0xFE6
   504                           postdec1	equ	0xFE5
   505                           preinc1	equ	0xFE4
   506                           plusw1	equ	0xFE3
   507                           fsr1h	equ	0xFE2
   508                           fsr1l	equ	0xFE1
   509                           bsr	equ	0xFE0
   510                           indf2	equ	0xFDF
   511                           postinc2	equ	0xFDE
   512                           postdec2	equ	0xFDD
   513                           preinc2	equ	0xFDC
   514                           plusw2	equ	0xFDB
   515                           fsr2h	equ	0xFDA
   516                           fsr2l	equ	0xFD9
   517                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     180
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D       D       5        8.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 13 17:28:27 2021

                      l9 7FF8                       l10 7FF8                       u15 7FBA  
                    l700 7F48                      l702 7F60                      l704 7F7A  
                    l706 7F92                      l690 7F0A                      l692 7F10  
                    l694 7F12                      l696 7F1C                      l688 7EE6  
                    l698 7F30                      wreg 000FE8                     _main 7EE6  
                   start 0000             ___param_bank 000000                    ?_main 0060  
                  _PORTD 000F83                    _TRISD 000F95                    status 000FD8  
        __initialization 7EE0             __end_of_main 8000                   ??_main 0060  
          __activetblptr 000003                   main@v1 006B                   main@v2 006C  
                 main@v3 0068                   main@vt 0069               __accesstop 0060  
__end_of__initialization 7EE0            ___rparam_used 000000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7EE0                  __ramtop 0600  
                __ptext0 7EE6     end_of_initialization 7EE0      start_initialization 7EE0  
          __pcstackBANK0 0060                 __Hparam0 0000                 __Lparam0 0000  
          __size_of_main 011A  
