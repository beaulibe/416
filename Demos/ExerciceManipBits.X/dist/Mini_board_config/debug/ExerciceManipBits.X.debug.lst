

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 15 10:57:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 05/05/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F45K20 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _PORTD	set	3971
    48  0000                     _TRISD	set	3989
    49                           
    50                           ; #config settings
    51                           
    52                           	psect	cinit
    53  007DF4                     __pcinit:
    54                           	callstack 0
    55  007DF4                     start_initialization:
    56                           	callstack 0
    57  007DF4                     __initialization:
    58                           	callstack 0
    59  007DF4                     end_of_initialization:
    60                           	callstack 0
    61  007DF4                     __end_of__initialization:
    62                           	callstack 0
    63  007DF4  0100               	movlb	0
    64  007DF6  EFFD  F03E         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackBANK0
    67  000060                     __pcstackBANK0:
    68                           	callstack 0
    69  000060                     ??_main:
    70                           
    71                           ; 1 bytes @ 0x0
    72  000060                     	ds	8
    73  000068                     main@v3:
    74                           	callstack 0
    75                           
    76                           ; 1 bytes @ 0x8
    77  000068                     	ds	1
    78  000069                     main@vt:
    79                           	callstack 0
    80                           
    81                           ; 2 bytes @ 0x9
    82  000069                     	ds	2
    83  00006B                     main@v1:
    84                           	callstack 0
    85                           
    86                           ; 1 bytes @ 0xB
    87  00006B                     	ds	1
    88  00006C                     main@v2:
    89                           	callstack 0
    90                           
    91                           ; 1 bytes @ 0xC
    92  00006C                     	ds	1
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 10 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;  vt              2    9[BANK0 ] unsigned int 
   104 ;;  v2              1   12[BANK0 ] unsigned char 
   105 ;;  v1              1   11[BANK0 ] unsigned char 
   106 ;;  v3              1    8[BANK0 ] unsigned char 
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, status,0
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   116 ;;      Params:         0       0       0       0       0       0       0
   117 ;;      Locals:         0       5       0       0       0       0       0
   118 ;;      Temps:          0       8       0       0       0       0       0
   119 ;;      Totals:         0      13       0       0       0       0       0
   120 ;;Total ram usage:       13 bytes
   121 ;; This function calls:
   122 ;;		Nothing
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  007DFA                     __ptext0:
   130                           	callstack 0
   131  007DFA                     _main:
   132                           	callstack 31
   133  007DFA                     
   134                           ;main.c: 12:     unsigned char v1 = 0x12;
   135  007DFA  0E12               	movlw	18
   136  007DFC  0100               	movlb	0	; force () banked
   137  007DFE  6F6B               	movwf	main@v1& (0+255),b
   138                           
   139                           ;main.c: 13:     unsigned char v2 = 0x34;
   140  007E00  0E34               	movlw	52
   141  007E02  0100               	movlb	0	; force () banked
   142  007E04  6F6C               	movwf	main@v2& (0+255),b
   143                           
   144                           ;main.c: 14:     unsigned char v3 = 0;
   145  007E06  0E00               	movlw	0
   146  007E08  0100               	movlb	0	; force () banked
   147  007E0A  6F68               	movwf	main@v3& (0+255),b
   148                           
   149                           ;main.c: 15:     unsigned int vt = 0xABCD;
   150  007E0C  0EAB               	movlw	171
   151  007E0E  0100               	movlb	0	; force () banked
   152  007E10  6F6A               	movwf	(main@vt+1)& (0+255),b
   153  007E12  0ECD               	movlw	205
   154  007E14  6F69               	movwf	main@vt& (0+255),b
   155                           
   156                           ;main.c: 17:     TRISD = 0;
   157  007E16  0E00               	movlw	0
   158  007E18  6E95               	movwf	149,c	;volatile
   159                           
   160                           ;main.c: 18:     PORTD = 0xA5;
   161  007E1A  0EA5               	movlw	165
   162  007E1C  6E83               	movwf	131,c	;volatile
   163  007E1E                     
   164                           ; BSR set to: 0
   165                           ;main.c: 21:     PORTD = PORTD | 0b10000001;
   166  007E1E  5083               	movf	131,w,c	;volatile
   167  007E20  0981               	iorlw	129
   168  007E22  6E83               	movwf	131,c	;volatile
   169  007E24                     
   170                           ; BSR set to: 0
   171                           ;main.c: 23:     PORTD = 0xF0;
   172  007E24  0EF0               	movlw	240
   173  007E26  6E83               	movwf	131,c	;volatile
   174                           
   175                           ;main.c: 25:     PORTD = PORTD & 0b11100111;
   176  007E28  5083               	movf	131,w,c	;volatile
   177  007E2A  0BE7               	andlw	231
   178  007E2C  6E83               	movwf	131,c	;volatile
   179  007E2E                     
   180                           ; BSR set to: 0
   181                           ;main.c: 28:     PORTD = 0xA5;
   182  007E2E  0EA5               	movlw	165
   183  007E30  6E83               	movwf	131,c	;volatile
   184  007E32                     
   185                           ; BSR set to: 0
   186                           ;main.c: 30:     PORTD = (PORTD >> 4) | (unsigned char)(PORTD << 4);
   187  007E32  CF83 F060          	movff	3971,??_main	;volatile
   188  007E36  0100               	movlb	0	; force () banked
   189  007E38  3B60               	swapf	??_main& (0+255),f,b
   190  007E3A  0EF0               	movlw	240
   191  007E3C  1760               	andwf	??_main& (0+255),f,b
   192  007E3E  3883               	swapf	131,w,c	;volatile
   193  007E40  0B0F               	andlw	15
   194  007E42  1160               	iorwf	??_main& (0+255),w,b
   195  007E44  6E83               	movwf	131,c	;volatile
   196                           
   197                           ;main.c: 32:     v1 = 0x12;
   198  007E46  0E12               	movlw	18
   199  007E48  0100               	movlb	0	; force () banked
   200  007E4A  6F6B               	movwf	main@v1& (0+255),b
   201                           
   202                           ;main.c: 33:     v2 = 0x34;
   203  007E4C  0E34               	movlw	52
   204  007E4E  0100               	movlb	0	; force () banked
   205  007E50  6F6C               	movwf	main@v2& (0+255),b
   206  007E52                     
   207                           ; BSR set to: 0
   208                           ;main.c: 36:     v3 = (v1&0xF0) | (v2&0x0F);
   209  007E52  C06C  F060         	movff	main@v2,??_main
   210  007E56  0E0F               	movlw	15
   211  007E58  0100               	movlb	0	; force () banked
   212  007E5A  1760               	andwf	??_main& (0+255),f,b
   213  007E5C  0100               	movlb	0	; force () banked
   214  007E5E  516B               	movf	main@v1& (0+255),w,b
   215  007E60  0BF0               	andlw	240
   216  007E62  0100               	movlb	0	; force () banked
   217  007E64  1160               	iorwf	??_main& (0+255),w,b
   218  007E66  0100               	movlb	0	; force () banked
   219  007E68  6F68               	movwf	main@v3& (0+255),b
   220  007E6A                     
   221                           ; BSR set to: 0
   222                           ;main.c: 39:     v3 = (unsigned char)(v1<<4) | (v2&0x0F);
   223  007E6A  C06C  F060         	movff	main@v2,??_main
   224  007E6E  0E0F               	movlw	15
   225  007E70  0100               	movlb	0	; force () banked
   226  007E72  1760               	andwf	??_main& (0+255),f,b
   227  007E74  0100               	movlb	0	; force () banked
   228  007E76  396B               	swapf	main@v1& (0+255),w,b
   229  007E78  0BF0               	andlw	240
   230  007E7A  0100               	movlb	0	; force () banked
   231  007E7C  1160               	iorwf	??_main& (0+255),w,b
   232  007E7E  0100               	movlb	0	; force () banked
   233  007E80  6F68               	movwf	main@v3& (0+255),b
   234  007E82                     
   235                           ; BSR set to: 0
   236                           ;main.c: 42:     v3 = (v1>>4) | (unsigned char)(v2<<4);
   237  007E82  C06C  F060         	movff	main@v2,??_main
   238  007E86  0100               	movlb	0	; force () banked
   239  007E88  3B60               	swapf	??_main& (0+255),f,b
   240  007E8A  0EF0               	movlw	240
   241  007E8C  1760               	andwf	??_main& (0+255),f,b
   242  007E8E  0100               	movlb	0	; force () banked
   243  007E90  396B               	swapf	main@v1& (0+255),w,b
   244  007E92  0B0F               	andlw	15
   245  007E94  0100               	movlb	0	; force () banked
   246  007E96  1160               	iorwf	??_main& (0+255),w,b
   247  007E98  0100               	movlb	0	; force () banked
   248  007E9A  6F68               	movwf	main@v3& (0+255),b
   249  007E9C                     
   250                           ; BSR set to: 0
   251                           ;main.c: 44:     vt = 0xABCD;
   252  007E9C  0EAB               	movlw	171
   253  007E9E  0100               	movlb	0	; force () banked
   254  007EA0  6F6A               	movwf	(main@vt+1)& (0+255),b
   255  007EA2  0ECD               	movlw	205
   256  007EA4  6F69               	movwf	main@vt& (0+255),b
   257                           
   258                           ;main.c: 46:     v3 = ((vt&0x0F00)>>8) | (vt & 0x00F0) ;
   259  007EA6  C069  F060         	movff	main@vt,??_main
   260  007EAA  0EF0               	movlw	240
   261  007EAC  0100               	movlb	0	; force () banked
   262  007EAE  1760               	andwf	??_main& (0+255),f,b
   263  007EB0  0100               	movlb	0	; force () banked
   264  007EB2  516A               	movf	(main@vt+1)& (0+255),w,b
   265  007EB4  0B0F               	andlw	15
   266  007EB6  0100               	movlb	0	; force () banked
   267  007EB8  1160               	iorwf	??_main& (0+255),w,b
   268  007EBA  0100               	movlb	0	; force () banked
   269  007EBC  6F68               	movwf	main@v3& (0+255),b
   270                           
   271                           ;main.c: 51:     vt = (unsigned int)(v2<<12);
   272  007EBE  0100               	movlb	0	; force () banked
   273  007EC0  516C               	movf	main@v2& (0+255),w,b
   274  007EC2  0100               	movlb	0	; force () banked
   275  007EC4  6F60               	movwf	??_main& (0+255),b
   276  007EC6  6B61               	clrf	(??_main+1)& (0+255),b
   277  007EC8  0E0C               	movlw	12
   278  007ECA                     u15:
   279  007ECA  90D8               	bcf	status,0,c
   280  007ECC  3760               	rlcf	??_main& (0+255),f,b
   281  007ECE  3761               	rlcf	(??_main+1)& (0+255),f,b
   282  007ED0  2EE8               	decfsz	wreg,f,c
   283  007ED2  EF65  F03F         	goto	u15
   284  007ED6  C060  F069         	movff	??_main,main@vt
   285  007EDA  C061  F06A         	movff	??_main+1,main@vt+1
   286                           
   287                           ;main.c: 52:     vt = (vt & 0xF0FF) | ((unsigned int)(v1 << 8) & 0x0F00);
   288  007EDE  0E00               	movlw	0
   289  007EE0  6F60               	movwf	??_main& (0+255),b
   290  007EE2  0E0F               	movlw	15
   291  007EE4  6F61               	movwf	(??_main+1)& (0+255),b
   292  007EE6  0100               	movlb	0	; force () banked
   293  007EE8  516B               	movf	main@v1& (0+255),w,b
   294  007EEA  0100               	movlb	0	; force () banked
   295  007EEC  6F63               	movwf	(??_main+3)& (0+255),b
   296  007EEE  6B62               	clrf	(??_main+2)& (0+255),b
   297  007EF0  5160               	movf	??_main& (0+255),w,b
   298  007EF2  1762               	andwf	(??_main+2)& (0+255),f,b
   299  007EF4  5161               	movf	(??_main+1)& (0+255),w,b
   300  007EF6  1763               	andwf	(??_main+3)& (0+255),f,b
   301  007EF8  0EFF               	movlw	255
   302  007EFA  6F64               	movwf	(??_main+4)& (0+255),b
   303  007EFC  0EF0               	movlw	240
   304  007EFE  6F65               	movwf	(??_main+5)& (0+255),b
   305  007F00  C069  F066         	movff	main@vt,??_main+6
   306  007F04  C06A  F067         	movff	main@vt+1,??_main+7
   307  007F08  5164               	movf	(??_main+4)& (0+255),w,b
   308  007F0A  1766               	andwf	(??_main+6)& (0+255),f,b
   309  007F0C  5165               	movf	(??_main+5)& (0+255),w,b
   310  007F0E  1767               	andwf	(??_main+7)& (0+255),f,b
   311  007F10  5162               	movf	(??_main+2)& (0+255),w,b
   312  007F12  1166               	iorwf	(??_main+6)& (0+255),w,b
   313  007F14  0100               	movlb	0	; force () banked
   314  007F16  6F69               	movwf	main@vt& (0+255),b
   315  007F18  0100               	movlb	0	; force () banked
   316  007F1A  5163               	movf	(??_main+3)& (0+255),w,b
   317  007F1C  1167               	iorwf	(??_main+7)& (0+255),w,b
   318  007F1E  0100               	movlb	0	; force () banked
   319  007F20  6F6A               	movwf	(main@vt+1)& (0+255),b
   320                           
   321                           ;main.c: 53:     vt = (vt & 0xFF0F) | (v2 & 0xF0);
   322  007F22  0E0F               	movlw	15
   323  007F24  0100               	movlb	0	; force () banked
   324  007F26  6F60               	movwf	??_main& (0+255),b
   325  007F28  0EFF               	movlw	255
   326  007F2A  6F61               	movwf	(??_main+1)& (0+255),b
   327  007F2C  C069  F062         	movff	main@vt,??_main+2
   328  007F30  C06A  F063         	movff	main@vt+1,??_main+3
   329  007F34  5160               	movf	??_main& (0+255),w,b
   330  007F36  1762               	andwf	(??_main+2)& (0+255),f,b
   331  007F38  5161               	movf	(??_main+1)& (0+255),w,b
   332  007F3A  1763               	andwf	(??_main+3)& (0+255),f,b
   333  007F3C  C06C  F064         	movff	main@v2,??_main+4
   334  007F40  0EF0               	movlw	240
   335  007F42  1764               	andwf	(??_main+4)& (0+255),f,b
   336  007F44  5164               	movf	(??_main+4)& (0+255),w,b
   337  007F46  1162               	iorwf	(??_main+2)& (0+255),w,b
   338  007F48  0100               	movlb	0	; force () banked
   339  007F4A  6F69               	movwf	main@vt& (0+255),b
   340  007F4C  0100               	movlb	0	; force () banked
   341  007F4E  5163               	movf	(??_main+3)& (0+255),w,b
   342  007F50  0100               	movlb	0	; force () banked
   343  007F52  6F6A               	movwf	(main@vt+1)& (0+255),b
   344                           
   345                           ;main.c: 54:     vt = (vt & 0xFFF0) | (v1 >> 4);
   346  007F54  0EF0               	movlw	240
   347  007F56  0100               	movlb	0	; force () banked
   348  007F58  6F60               	movwf	??_main& (0+255),b
   349  007F5A  0EFF               	movlw	255
   350  007F5C  6F61               	movwf	(??_main+1)& (0+255),b
   351  007F5E  C069  F062         	movff	main@vt,??_main+2
   352  007F62  C06A  F063         	movff	main@vt+1,??_main+3
   353  007F66  5160               	movf	??_main& (0+255),w,b
   354  007F68  1762               	andwf	(??_main+2)& (0+255),f,b
   355  007F6A  5161               	movf	(??_main+1)& (0+255),w,b
   356  007F6C  1763               	andwf	(??_main+3)& (0+255),f,b
   357  007F6E  C06B  F064         	movff	main@v1,??_main+4
   358  007F72  3B64               	swapf	(??_main+4)& (0+255),f,b
   359  007F74  0E0F               	movlw	15
   360  007F76  1764               	andwf	(??_main+4)& (0+255),f,b
   361  007F78  5164               	movf	(??_main+4)& (0+255),w,b
   362  007F7A  1162               	iorwf	(??_main+2)& (0+255),w,b
   363  007F7C  0100               	movlb	0	; force () banked
   364  007F7E  6F69               	movwf	main@vt& (0+255),b
   365  007F80  0100               	movlb	0	; force () banked
   366  007F82  5163               	movf	(??_main+3)& (0+255),w,b
   367  007F84  0100               	movlb	0	; force () banked
   368  007F86  6F6A               	movwf	(main@vt+1)& (0+255),b
   369  007F88                     
   370                           ; BSR set to: 0
   371                           ;main.c: 56:     vt = 0;
   372  007F88  0E00               	movlw	0
   373  007F8A  0100               	movlb	0	; force () banked
   374  007F8C  6F6A               	movwf	(main@vt+1)& (0+255),b
   375  007F8E  0E00               	movlw	0
   376  007F90  6F69               	movwf	main@vt& (0+255),b
   377  007F92                     
   378                           ; BSR set to: 0
   379                           ;main.c: 60:     vt = (unsigned int)(v2<<12) |
   380  007F92  0E00               	movlw	0
   381  007F94  0100               	movlb	0	; force () banked
   382  007F96  6F60               	movwf	??_main& (0+255),b
   383  007F98  0E0F               	movlw	15
   384  007F9A  6F61               	movwf	(??_main+1)& (0+255),b
   385  007F9C  0100               	movlb	0	; force () banked
   386  007F9E  516B               	movf	main@v1& (0+255),w,b
   387  007FA0  0100               	movlb	0	; force () banked
   388  007FA2  6F63               	movwf	(??_main+3)& (0+255),b
   389  007FA4  6B62               	clrf	(??_main+2)& (0+255),b
   390  007FA6  5160               	movf	??_main& (0+255),w,b
   391  007FA8  1762               	andwf	(??_main+2)& (0+255),f,b
   392  007FAA  5161               	movf	(??_main+1)& (0+255),w,b
   393  007FAC  1763               	andwf	(??_main+3)& (0+255),f,b
   394  007FAE  0100               	movlb	0	; force () banked
   395  007FB0  516C               	movf	main@v2& (0+255),w,b
   396  007FB2  0100               	movlb	0	; force () banked
   397  007FB4  6F64               	movwf	(??_main+4)& (0+255),b
   398  007FB6  6B65               	clrf	(??_main+5)& (0+255),b
   399  007FB8  0E0C               	movlw	12
   400  007FBA                     u25:
   401  007FBA  90D8               	bcf	status,0,c
   402  007FBC  3764               	rlcf	(??_main+4)& (0+255),f,b
   403  007FBE  3765               	rlcf	(??_main+5)& (0+255),f,b
   404  007FC0  2EE8               	decfsz	wreg,f,c
   405  007FC2  EFDD  F03F         	goto	u25
   406  007FC6  5162               	movf	(??_main+2)& (0+255),w,b
   407  007FC8  1364               	iorwf	(??_main+4)& (0+255),f,b
   408  007FCA  5163               	movf	(??_main+3)& (0+255),w,b
   409  007FCC  1365               	iorwf	(??_main+5)& (0+255),f,b
   410  007FCE  C06C  F066         	movff	main@v2,??_main+6
   411  007FD2  0EF0               	movlw	240
   412  007FD4  1766               	andwf	(??_main+6)& (0+255),f,b
   413  007FD6  5166               	movf	(??_main+6)& (0+255),w,b
   414  007FD8  1364               	iorwf	(??_main+4)& (0+255),f,b
   415  007FDA  0E00               	movlw	0
   416  007FDC  1365               	iorwf	(??_main+5)& (0+255),f,b
   417  007FDE  C06B  F067         	movff	main@v1,??_main+7
   418  007FE2  3B67               	swapf	(??_main+7)& (0+255),f,b
   419  007FE4  0E0F               	movlw	15
   420  007FE6  1767               	andwf	(??_main+7)& (0+255),f,b
   421  007FE8  5167               	movf	(??_main+7)& (0+255),w,b
   422  007FEA  1164               	iorwf	(??_main+4)& (0+255),w,b
   423  007FEC  0100               	movlb	0	; force () banked
   424  007FEE  6F69               	movwf	main@vt& (0+255),b
   425  007FF0  0100               	movlb	0	; force () banked
   426  007FF2  5165               	movf	(??_main+5)& (0+255),w,b
   427  007FF4  0100               	movlb	0	; force () banked
   428  007FF6  6F6A               	movwf	(main@vt+1)& (0+255),b
   429  007FF8                     l9:
   430  007FF8  EFFC  F03F         	goto	l9
   431  007FFC  EF00  F000         	goto	start
   432  008000                     __end_of_main:
   433                           	callstack 0
   434  0000                     
   435                           	psect	param0
   436  0000                     
   437                           	psect	idloc
   438                           
   439                           ;Config register IDLOC0 @ 0x200000
   440                           ;	unspecified, using default values
   441  200000                     	org	2097152
   442  200000  FF                 	db	255
   443                           
   444                           ;Config register IDLOC1 @ 0x200001
   445                           ;	unspecified, using default values
   446  200001                     	org	2097153
   447  200001  FF                 	db	255
   448                           
   449                           ;Config register IDLOC2 @ 0x200002
   450                           ;	unspecified, using default values
   451  200002                     	org	2097154
   452  200002  FF                 	db	255
   453                           
   454                           ;Config register IDLOC3 @ 0x200003
   455                           ;	unspecified, using default values
   456  200003                     	org	2097155
   457  200003  FF                 	db	255
   458                           
   459                           ;Config register IDLOC4 @ 0x200004
   460                           ;	unspecified, using default values
   461  200004                     	org	2097156
   462  200004  FF                 	db	255
   463                           
   464                           ;Config register IDLOC5 @ 0x200005
   465                           ;	unspecified, using default values
   466  200005                     	org	2097157
   467  200005  FF                 	db	255
   468                           
   469                           ;Config register IDLOC6 @ 0x200006
   470                           ;	unspecified, using default values
   471  200006                     	org	2097158
   472  200006  FF                 	db	255
   473                           
   474                           ;Config register IDLOC7 @ 0x200007
   475                           ;	unspecified, using default values
   476  200007                     	org	2097159
   477  200007  FF                 	db	255
   478                           
   479                           	psect	config
   480                           
   481                           ; Padding undefined space
   482  300000                     	org	3145728
   483  300000  FF                 	db	255
   484                           
   485                           ;Config register CONFIG1H @ 0x300001
   486                           ;	Oscillator Selection bits
   487                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   488                           ;	Fail-Safe Clock Monitor Enable bit
   489                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   490                           ;	Internal/External Oscillator Switchover bit
   491                           ;	IESO = OFF, Oscillator Switchover mode disabled
   492  300001                     	org	3145729
   493  300001  08                 	db	8
   494                           
   495                           ;Config register CONFIG2L @ 0x300002
   496                           ;	Power-up Timer Enable bit
   497                           ;	PWRT = OFF, PWRT disabled
   498                           ;	Brown-out Reset Enable bits
   499                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   500                           ;	Brown Out Reset Voltage bits
   501                           ;	BORV = 18, VBOR set to 1.8 V nominal
   502  300002                     	org	3145730
   503  300002  1F                 	db	31
   504                           
   505                           ;Config register CONFIG2H @ 0x300003
   506                           ;	Watchdog Timer Enable bit
   507                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
   508                           ;	Watchdog Timer Postscale Select bits
   509                           ;	WDTPS = 32768, 1:32768
   510  300003                     	org	3145731
   511  300003  1E                 	db	30
   512                           
   513                           ; Padding undefined space
   514  300004                     	org	3145732
   515  300004  FF                 	db	255
   516                           
   517                           ;Config register CONFIG3H @ 0x300005
   518                           ;	CCP2 MUX bit
   519                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   520                           ;	PORTB A/D Enable bit
   521                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   522                           ;	Low-Power Timer1 Oscillator Enable bit
   523                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   524                           ;	HFINTOSC Fast Start-up
   525                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
   526                           ;	MCLR Pin Enable bit
   527                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   528  300005                     	org	3145733
   529  300005  8B                 	db	139
   530                           
   531                           ;Config register CONFIG4L @ 0x300006
   532                           ;	Stack Full/Underflow Reset Enable bit
   533                           ;	STVREN = ON, Stack full/underflow will cause Reset
   534                           ;	Single-Supply ICSP Enable bit
   535                           ;	LVP = OFF, Single-Supply ICSP disabled
   536                           ;	Extended Instruction Set Enable bit
   537                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   538                           ;	Background Debugger Enable bit
   539                           ;	DEBUG = 0x1, unprogrammed default
   540  300006                     	org	3145734
   541  300006  81                 	db	129
   542                           
   543                           ; Padding undefined space
   544  300007                     	org	3145735
   545  300007  FF                 	db	255
   546                           
   547                           ;Config register CONFIG5L @ 0x300008
   548                           ;	Code Protection Block 0
   549                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   550                           ;	Code Protection Block 1
   551                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   552                           ;	Code Protection Block 2
   553                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   554                           ;	Code Protection Block 3
   555                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   556  300008                     	org	3145736
   557  300008  0F                 	db	15
   558                           
   559                           ;Config register CONFIG5H @ 0x300009
   560                           ;	Boot Block Code Protection bit
   561                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   562                           ;	Data EEPROM Code Protection bit
   563                           ;	CPD = OFF, Data EEPROM not code-protected
   564  300009                     	org	3145737
   565  300009  C0                 	db	192
   566                           
   567                           ;Config register CONFIG6L @ 0x30000A
   568                           ;	Write Protection Block 0
   569                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   570                           ;	Write Protection Block 1
   571                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   572                           ;	Write Protection Block 2
   573                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   574                           ;	Write Protection Block 3
   575                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   576  30000A                     	org	3145738
   577  30000A  0F                 	db	15
   578                           
   579                           ;Config register CONFIG6H @ 0x30000B
   580                           ;	Configuration Register Write Protection bit
   581                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   582                           ;	Boot Block Write Protection bit
   583                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   584                           ;	Data EEPROM Write Protection bit
   585                           ;	WRTD = OFF, Data EEPROM not write-protected
   586  30000B                     	org	3145739
   587  30000B  E0                 	db	224
   588                           
   589                           ;Config register CONFIG7L @ 0x30000C
   590                           ;	Table Read Protection Block 0
   591                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   592                           ;	Table Read Protection Block 1
   593                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   594                           ;	Table Read Protection Block 2
   595                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   596                           ;	Table Read Protection Block 3
   597                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   598  30000C                     	org	3145740
   599  30000C  0F                 	db	15
   600                           
   601                           ;Config register CONFIG7H @ 0x30000D
   602                           ;	Boot Block Table Read Protection bit
   603                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   604  30000D                     	org	3145741
   605  30000D  40                 	db	64
   606                           tosu	equ	0xFFF
   607                           tosh	equ	0xFFE
   608                           tosl	equ	0xFFD
   609                           stkptr	equ	0xFFC
   610                           pclatu	equ	0xFFB
   611                           pclath	equ	0xFFA
   612                           pcl	equ	0xFF9
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           prodh	equ	0xFF4
   618                           prodl	equ	0xFF3
   619                           indf0	equ	0xFEF
   620                           postinc0	equ	0xFEE
   621                           postdec0	equ	0xFED
   622                           preinc0	equ	0xFEC
   623                           plusw0	equ	0xFEB
   624                           fsr0h	equ	0xFEA
   625                           fsr0l	equ	0xFE9
   626                           wreg	equ	0xFE8
   627                           indf1	equ	0xFE7
   628                           postinc1	equ	0xFE6
   629                           postdec1	equ	0xFE5
   630                           preinc1	equ	0xFE4
   631                           plusw1	equ	0xFE3
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           bsr	equ	0xFE0
   635                           indf2	equ	0xFDF
   636                           postinc2	equ	0xFDE
   637                           postdec2	equ	0xFDD
   638                           preinc2	equ	0xFDC
   639                           plusw2	equ	0xFDB
   640                           fsr2h	equ	0xFDA
   641                           fsr2l	equ	0xFD9
   642                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     13      13
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     285
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      D       D       5        8.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 15 10:57:05 2021

                      l9 7FF8                       l10 7FF8                       u15 7ECA  
                     u25 7FBA                      l700 7E6A                      l702 7E82  
                    l704 7E9C                      l706 7F88                      l708 7F92  
                    l690 7E1E                      l692 7E24                      l694 7E2E  
                    l696 7E32                      l688 7DFA                      l698 7E52  
                    wreg 000FE8                     _main 7DFA                     start 0000  
           ___param_bank 000000                    ?_main 0060                    _PORTD 000F83  
                  _TRISD 000F95                    status 000FD8          __initialization 7DF4  
           __end_of_main 8000                   ??_main 0060            __activetblptr 000003  
                 main@v1 006B                   main@v2 006C                   main@v3 0068  
                 main@vt 0069               __accesstop 0060  __end_of__initialization 7DF4  
          ___rparam_used 000000                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7DF4                  __ramtop 0600                  __ptext0 7DFA  
   end_of_initialization 7DF4      start_initialization 7DF4            __pcstackBANK0 0060  
               __Hparam0 0000                 __Lparam0 0000            __size_of_main 0206  
