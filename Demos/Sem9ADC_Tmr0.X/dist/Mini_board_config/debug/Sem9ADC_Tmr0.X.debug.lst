

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Apr 24 07:48:23 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1,minocg
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K20 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTDbits	set	3971
    51  0000                     _ANSELbits	set	3966
    52  0000                     _TRISAbits	set	3986
    53  0000                     _TRISD	set	3989
    54  0000                     _PORTD	set	3971
    55  0000                     _ADRESH	set	4036
    56  0000                     _PIE1bits	set	3997
    57  0000                     _PIR1bits	set	3998
    58  0000                     _ADCON2bits	set	4032
    59  0000                     _ADCON1bits	set	4033
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _TMR0	set	4054
    62  0000                     _TMR0L	set	4054
    63  0000                     _TMR0H	set	4055
    64  0000                     _T0CONbits	set	4053
    65  0000                     _INTCONbits	set	4082
    66                           
    67                           ; #config settings
    68  0000                     
    69                           	psect	cinit
    70  0001E8                     __pcinit:
    71                           	opt callstack 0
    72  0001E8                     start_initialization:
    73                           	opt callstack 0
    74  0001E8                     __initialization:
    75                           	opt callstack 0
    76                           
    77                           ; Clear objects allocated to BANK0 (2 bytes)
    78  0001E8  0100               	movlb	0
    79  0001EA  6B76               	clrf	(__pbssBANK0+1)& (0+255),b
    80  0001EC  6B75               	clrf	__pbssBANK0& (0+255),b
    81  0001EE                     end_of_initialization:
    82                           	opt callstack 0
    83  0001EE                     __end_of__initialization:
    84                           	opt callstack 0
    85  0001EE  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    86  0001F0  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    87  0001F2  0100               	movlb	0
    88  0001F4  EFD7  F000         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	bssBANK0
    91  000075                     __pbssBANK0:
    92                           	opt callstack 0
    93  000075                     _g_resAN:
    94                           	opt callstack 0
    95  000075                     	ds	2
    96                           
    97                           	psect	cstackBANK0
    98  000060                     __pcstackBANK0:
    99                           	opt callstack 0
   100  000060                     ?___lldiv:
   101                           	opt callstack 0
   102  000060                     ___lldiv@dividend:
   103                           	opt callstack 0
   104                           
   105                           ; 4 bytes @ 0x0
   106  000060                     	ds	4
   107  000064                     ___lldiv@divisor:
   108                           	opt callstack 0
   109                           
   110                           ; 4 bytes @ 0x4
   111  000064                     	ds	4
   112  000068                     ___lldiv@quotient:
   113                           	opt callstack 0
   114                           
   115                           ; 4 bytes @ 0x8
   116  000068                     	ds	4
   117  00006C                     ___lldiv@counter:
   118                           	opt callstack 0
   119                           
   120                           ; 1 bytes @ 0xC
   121  00006C                     	ds	1
   122  00006D                     ??_high_isr:
   123                           
   124                           ; 1 bytes @ 0xD
   125  00006D                     	ds	3
   126  000070                     high_isr@diviseurAN:
   127                           	opt callstack 0
   128                           
   129                           ; 2 bytes @ 0x10
   130  000070                     	ds	2
   131  000072                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x12
   134  000072                     	ds	3
   135                           
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 33 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   155 ;;      Params:         0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0
   157 ;;      Temps:          0       3       0       0       0       0       0
   158 ;;      Totals:         0       3       0       0       0       0       0
   159 ;;Total ram usage:        3 bytes
   160 ;; Hardware stack levels required when called:    3
   161 ;; This function calls:
   162 ;;		_initialisation
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           	psect	text0
   169  0001AE                     __ptext0:
   170                           	opt callstack 0
   171  0001AE                     _main:
   172                           	opt callstack 28
   173  0001AE                     
   174                           ;main.c: 35: initialisation();
   175  0001AE  ECB5  F000         	call	_initialisation	;wreg free
   176  0001B2                     
   177                           ;main.c: 38: ADCON0bits.GO_DONE = 1;
   178  0001B2  82C2               	bsf	194,1,c	;volatile
   179  0001B4                     l965:
   180                           
   181                           ;main.c: 41: {;main.c: 43: _delay((unsigned long)((5)*(1000000/4000.0)));
   182  0001B4  0EFA               	movlw	250
   183  0001B6                     u177:
   184  0001B6  F000 F000          	nop2	
   185  0001BA  2EE8               	decfsz	wreg,f,c
   186  0001BC  D7FC               	bra	u177
   187  0001BE                     
   188                           ;main.c: 45: PORTD = (PORTD & 0xF0) | (g_resAN >> 4);
   189  0001BE  C075  F072         	movff	_g_resAN,??_main
   190  0001C2  C076  F073         	movff	_g_resAN+1,??_main+1
   191  0001C6  0E04               	movlw	4
   192  0001C8  0100               	movlb	0	; force () banked
   193  0001CA  6F74               	movwf	(??_main+2)& (0+255),b
   194  0001CC                     u125:
   195  0001CC  3573               	rlcf	(??_main+1)& (0+255),w,b
   196  0001CE  3373               	rrcf	(??_main+1)& (0+255),f,b
   197  0001D0  3372               	rrcf	??_main& (0+255),f,b
   198  0001D2  2F74               	decfsz	(??_main+2)& (0+255),f,b
   199  0001D4  EFE6  F000         	goto	u125
   200  0001D8  5083               	movf	131,w,c	;volatile
   201  0001DA  0BF0               	andlw	240
   202  0001DC  1172               	iorwf	??_main& (0+255),w,b
   203  0001DE  6E83               	movwf	131,c	;volatile
   204  0001E0  EFDA  F000         	goto	l965
   205  0001E4  EF60  F000         	goto	start
   206  0001E8                     __end_of_main:
   207                           	opt callstack 0
   208                           
   209 ;; *************** function _initialisation *****************
   210 ;; Defined at:
   211 ;;		line 53 in file "main.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2
   220 ;; Tracked objects:
   221 ;;		On entry : 0/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   225 ;;      Params:         0       0       0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels used:    1
   231 ;; Hardware stack levels required when called:    2
   232 ;; This function calls:
   233 ;;		Nothing
   234 ;; This function is called by:
   235 ;;		_main
   236 ;; This function uses a non-reentrant model
   237 ;;
   238                           
   239                           	psect	text1
   240  00016A                     __ptext1:
   241                           	opt callstack 0
   242  00016A                     _initialisation:
   243                           	opt callstack 28
   244  00016A                     
   245                           ;main.c: 56: TRISD = 0;
   246  00016A  0E00               	movlw	0
   247  00016C  6E95               	movwf	149,c	;volatile
   248  00016E                     
   249                           ;main.c: 60: TRISAbits.TRISA0 = 1;
   250  00016E  8092               	bsf	146,0,c	;volatile
   251  000170                     
   252                           ;main.c: 61: ANSELbits.ANS0 = 0;
   253  000170  907E               	bcf	126,0,c	;volatile
   254  000172                     
   255                           ;main.c: 62: ADCON0bits.ADON = 1;
   256  000172  80C2               	bsf	194,0,c	;volatile
   257  000174                     
   258                           ;main.c: 63: ADCON1bits.VCFG1 = 0;
   259  000174  9AC1               	bcf	193,5,c	;volatile
   260  000176                     
   261                           ;main.c: 64: ADCON1bits.VCFG0 = 0;
   262  000176  98C1               	bcf	193,4,c	;volatile
   263  000178                     
   264                           ;main.c: 65: ADCON2bits.ADFM = 0;
   265  000178  9EC0               	bcf	192,7,c	;volatile
   266                           
   267                           ;main.c: 66: ADCON2bits.ACQT = 7;
   268  00017A  0E38               	movlw	56
   269  00017C  12C0               	iorwf	192,f,c	;volatile
   270                           
   271                           ;main.c: 67: ADCON2bits.ADCS = 6;
   272  00017E  50C0               	movf	192,w,c	;volatile
   273  000180  0BF8               	andlw	-8
   274  000182  0906               	iorlw	6
   275  000184  6EC0               	movwf	192,c	;volatile
   276  000186                     
   277                           ;main.c: 69: PIR1bits.ADIF = 0;
   278  000186  9C9E               	bcf	158,6,c	;volatile
   279  000188                     
   280                           ;main.c: 70: PIE1bits.ADIE = 1;
   281  000188  8C9D               	bsf	157,6,c	;volatile
   282  00018A                     
   283                           ;main.c: 71: ADCON0bits.GO_DONE = 1;
   284  00018A  82C2               	bsf	194,1,c	;volatile
   285  00018C                     
   286                           ;main.c: 76: T0CONbits.TMR0ON = 1;
   287  00018C  8ED5               	bsf	213,7,c	;volatile
   288  00018E                     
   289                           ;main.c: 77: T0CONbits.T08BIT = 0;
   290  00018E  9CD5               	bcf	213,6,c	;volatile
   291  000190                     
   292                           ;main.c: 78: T0CONbits.T0CS = 0;
   293  000190  9AD5               	bcf	213,5,c	;volatile
   294  000192                     
   295                           ;main.c: 79: T0CONbits.PSA = 0;
   296  000192  96D5               	bcf	213,3,c	;volatile
   297                           
   298                           ;main.c: 80: T0CONbits.T0PS = 0b011;
   299  000194  50D5               	movf	213,w,c	;volatile
   300  000196  0BF8               	andlw	-8
   301  000198  0903               	iorlw	3
   302  00019A  6ED5               	movwf	213,c	;volatile
   303                           
   304                           ;main.c: 96: TMR0H = 0xC2;
   305  00019C  0EC2               	movlw	194
   306  00019E  6ED7               	movwf	215,c	;volatile
   307                           
   308                           ;main.c: 97: TMR0L = 0xF6;
   309  0001A0  0EF6               	movlw	246
   310  0001A2  6ED6               	movwf	214,c	;volatile
   311  0001A4                     
   312                           ;main.c: 100: INTCONbits.TMR0IE = 1;
   313  0001A4  8AF2               	bsf	242,5,c	;volatile
   314  0001A6                     
   315                           ;main.c: 101: INTCONbits.TMR0IF = 0;
   316  0001A6  94F2               	bcf	242,2,c	;volatile
   317  0001A8                     
   318                           ;main.c: 106: INTCONbits.PEIE = 1;
   319  0001A8  8CF2               	bsf	242,6,c	;volatile
   320  0001AA                     
   321                           ;main.c: 107: INTCONbits.GIE = 1;
   322  0001AA  8EF2               	bsf	242,7,c	;volatile
   323  0001AC  0012               	return		;funcret
   324  0001AE                     __end_of_initialisation:
   325                           	opt callstack 0
   326                           
   327 ;; *************** function _high_isr *****************
   328 ;; Defined at:
   329 ;;		line 23 in file "interrupts.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;  diviseurAN      2   16[BANK0 ] int 
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   343 ;;      Params:         0       0       0       0       0       0       0
   344 ;;      Locals:         0       2       0       0       0       0       0
   345 ;;      Temps:          0       3       0       0       0       0       0
   346 ;;      Totals:         0       5       0       0       0       0       0
   347 ;;Total ram usage:        5 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    1
   350 ;; This function calls:
   351 ;;		___lldiv
   352 ;; This function is called by:
   353 ;;		Interrupt level 2
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	intcode
   358  000008                     __pintcode:
   359                           	opt callstack 0
   360  000008                     _high_isr:
   361                           	opt callstack 28
   362                           
   363                           ;incstack = 0
   364  000008  8201               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   365  00000A                     
   366                           ;interrupts.c: 25: int diviseurAN = 1;
   367  00000A  0E00               	movlw	0
   368  00000C  0100               	movlb	0	; force () banked
   369  00000E  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   370  000010  0E01               	movlw	1
   371  000012  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   372  000014                     
   373                           ; BSR set to: 0
   374                           ;interrupts.c: 27: if (PIR1bits.ADIF)
   375  000014  AC9E               	btfss	158,6,c	;volatile
   376  000016  EF0F  F000         	goto	i2u13_41
   377  00001A  EF11  F000         	goto	i2u13_40
   378  00001E                     i2u13_41:
   379  00001E  EF17  F000         	goto	i2l62
   380  000022                     i2u13_40:
   381  000022                     
   382                           ; BSR set to: 0
   383                           ;interrupts.c: 28: {;interrupts.c: 29: g_resAN = ADRESH;
   384  000022  CFC4 F075          	movff	4036,_g_resAN	;volatile
   385  000026  0100               	movlb	0	; force () banked
   386  000028  6B76               	clrf	(_g_resAN+1)& (0+255),b
   387                           
   388                           ;interrupts.c: 31: PIR1bits.ADIF = 0;
   389  00002A  9C9E               	bcf	158,6,c	;volatile
   390                           
   391                           ;interrupts.c: 32: ADCON0bits.GO_DONE = 1;
   392  00002C  82C2               	bsf	194,1,c	;volatile
   393  00002E                     i2l62:
   394                           
   395                           ; BSR set to: 0
   396                           ;interrupts.c: 33: };interrupts.c: 36: if (INTCONbits.TMR0IF)
   397  00002E  A4F2               	btfss	242,2,c	;volatile
   398  000030  EF1C  F000         	goto	i2u14_41
   399  000034  EF1E  F000         	goto	i2u14_40
   400  000038                     i2u14_41:
   401  000038  EF5E  F000         	goto	i2l65
   402  00003C                     i2u14_40:
   403  00003C                     
   404                           ; BSR set to: 0
   405                           ;interrupts.c: 37: {;interrupts.c: 38: INTCONbits.TMR0IF = 0;
   406  00003C  94F2               	bcf	242,2,c	;volatile
   407  00003E                     
   408                           ; BSR set to: 0
   409                           ;interrupts.c: 40: diviseurAN = g_resAN>>4;
   410  00003E  C075  F06D         	movff	_g_resAN,??_high_isr
   411  000042  C076  F06E         	movff	_g_resAN+1,??_high_isr+1
   412  000046  0E04               	movlw	4
   413  000048  0100               	movlb	0	; force () banked
   414  00004A  6F6F               	movwf	(??_high_isr+2)& (0+255),b
   415  00004C                     i2u15_45:
   416  00004C  356E               	rlcf	(??_high_isr+1)& (0+255),w,b
   417  00004E  336E               	rrcf	(??_high_isr+1)& (0+255),f,b
   418  000050  336D               	rrcf	??_high_isr& (0+255),f,b
   419  000052  2F6F               	decfsz	(??_high_isr+2)& (0+255),f,b
   420  000054  EF26  F000         	goto	i2u15_45
   421  000058  C06D  F070         	movff	??_high_isr,high_isr@diviseurAN
   422  00005C  C06E  F071         	movff	??_high_isr+1,high_isr@diviseurAN+1
   423                           
   424                           ;interrupts.c: 41: if (diviseurAN == 0)
   425  000060  0100               	movlb	0	; force () banked
   426  000062  5170               	movf	high_isr@diviseurAN& (0+255),w,b
   427  000064  1171               	iorwf	(high_isr@diviseurAN+1)& (0+255),w,b
   428  000066  A4D8               	btfss	status,2,c
   429  000068  EF38  F000         	goto	i2u16_41
   430  00006C  EF3A  F000         	goto	i2u16_40
   431  000070                     i2u16_41:
   432  000070  EF3F  F000         	goto	i2l981
   433  000074                     i2u16_40:
   434  000074                     
   435                           ; BSR set to: 0
   436                           ;interrupts.c: 42: diviseurAN = 1;
   437  000074  0E00               	movlw	0
   438  000076  0100               	movlb	0	; force () banked
   439  000078  6F71               	movwf	(high_isr@diviseurAN+1)& (0+255),b
   440  00007A  0E01               	movlw	1
   441  00007C  6F70               	movwf	high_isr@diviseurAN& (0+255),b
   442  00007E                     i2l981:
   443                           
   444                           ; BSR set to: 0
   445                           ;interrupts.c: 44: TMR0 = 65536 - (((unsigned long)1000000)/(4*(unsigned int)16))/divise
      +                          urAN;
   446  00007E  0E09               	movlw	9
   447  000080  0100               	movlb	0	; force () banked
   448  000082  6F60               	movwf	___lldiv@dividend& (0+255),b
   449  000084  0E3D               	movlw	61
   450  000086  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
   451  000088  0E00               	movlw	0
   452  00008A  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
   453  00008C  0E00               	movlw	0
   454  00008E  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
   455  000090  C070  F064         	movff	high_isr@diviseurAN,___lldiv@divisor
   456  000094  C071  F065         	movff	high_isr@diviseurAN+1,___lldiv@divisor+1
   457  000098  0100               	movlb	0	; force () banked
   458  00009A  0E00               	movlw	0
   459  00009C  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
   460  00009E  0EFF               	movlw	-1
   461  0000A0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
   462  0000A2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
   463  0000A4  EC62  F000         	call	___lldiv	;wreg free
   464  0000A8  0100               	movlb	0	; force () banked
   465  0000AA  5160               	movf	?___lldiv& (0+255),w,b
   466  0000AC  0800               	sublw	0
   467  0000AE  6ED6               	movwf	214,c	;volatile
   468  0000B0  5161               	movf	(?___lldiv+1)& (0+255),w,b
   469  0000B2  A0D8               	btfss	status,0,c
   470  0000B4  2AE8               	incf	wreg,f,c
   471  0000B6  0800               	sublw	0
   472  0000B8  6ED7               	movwf	215,c	;volatile
   473  0000BA                     
   474                           ; BSR set to: 0
   475                           ;interrupts.c: 47: PORTDbits.RD7 ^= 1;
   476  0000BA  7E83               	btg	131,7,c	;volatile
   477  0000BC                     i2l65:
   478                           
   479                           ; BSR set to: 0
   480  0000BC  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   481  0000BE  0011               	retfie		f
   482  0000C0                     __end_of_high_isr:
   483                           	opt callstack 0
   484                           
   485 ;; *************** function ___lldiv *****************
   486 ;; Defined at:
   487 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;  dividend        4    0[BANK0 ] unsigned long 
   490 ;;  divisor         4    4[BANK0 ] unsigned long 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  quotient        4    8[BANK0 ] unsigned long 
   493 ;;  counter         1   12[BANK0 ] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  4    0[BANK0 ] unsigned long 
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   503 ;;      Params:         0       8       0       0       0       0       0
   504 ;;      Locals:         0       5       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0
   506 ;;      Totals:         0      13       0       0       0       0       0
   507 ;;Total ram usage:       13 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_high_isr
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text3
   517  0000C4                     __ptext3:
   518                           	opt callstack 0
   519  0000C4                     ___lldiv:
   520                           	opt callstack 28
   521  0000C4  0E00               	movlw	0
   522  0000C6  0100               	movlb	0	; () banked
   523  0000C8  6F68               	movwf	___lldiv@quotient& (0+255),b
   524  0000CA  0E00               	movlw	0
   525  0000CC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
   526  0000CE  0E00               	movlw	0
   527  0000D0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
   528  0000D2  0E00               	movlw	0
   529  0000D4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
   530  0000D6                     
   531                           ; BSR set to: 0
   532  0000D6  5164               	movf	___lldiv@divisor& (0+255),w,b
   533  0000D8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
   534  0000DA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
   535  0000DC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
   536  0000DE  B4D8               	btfsc	status,2,c
   537  0000E0  EF74  F000         	goto	i2u9_41
   538  0000E4  EF76  F000         	goto	i2u9_40
   539  0000E8                     i2u9_41:
   540  0000E8  EFAC  F000         	goto	i2l95
   541  0000EC                     i2u9_40:
   542  0000EC                     
   543                           ; BSR set to: 0
   544  0000EC  0E01               	movlw	1
   545  0000EE  6F6C               	movwf	___lldiv@counter& (0+255),b
   546  0000F0  EF80  F000         	goto	i2l947
   547  0000F4                     i2l945:
   548                           
   549                           ; BSR set to: 0
   550  0000F4  90D8               	bcf	status,0,c
   551  0000F6  3764               	rlcf	___lldiv@divisor& (0+255),f,b
   552  0000F8  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
   553  0000FA  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
   554  0000FC  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
   555  0000FE  2B6C               	incf	___lldiv@counter& (0+255),f,b
   556  000100                     i2l947:
   557                           
   558                           ; BSR set to: 0
   559  000100  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
   560  000102  EF85  F000         	goto	i2u10_41
   561  000106  EF87  F000         	goto	i2u10_40
   562  00010A                     i2u10_41:
   563  00010A  EF7A  F000         	goto	i2l945
   564  00010E                     i2u10_40:
   565  00010E                     i2l949:
   566                           
   567                           ; BSR set to: 0
   568  00010E  90D8               	bcf	status,0,c
   569  000110  3768               	rlcf	___lldiv@quotient& (0+255),f,b
   570  000112  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
   571  000114  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
   572  000116  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
   573  000118                     
   574                           ; BSR set to: 0
   575  000118  5164               	movf	___lldiv@divisor& (0+255),w,b
   576  00011A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
   577  00011C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   578  00011E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
   579  000120  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   580  000122  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
   581  000124  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   582  000126  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
   583  000128  A0D8               	btfss	status,0,c
   584  00012A  EF99  F000         	goto	i2u11_41
   585  00012E  EF9B  F000         	goto	i2u11_40
   586  000132                     i2u11_41:
   587  000132  EFA4  F000         	goto	i2l957
   588  000136                     i2u11_40:
   589  000136                     
   590                           ; BSR set to: 0
   591  000136  5164               	movf	___lldiv@divisor& (0+255),w,b
   592  000138  5F60               	subwf	___lldiv@dividend& (0+255),f,b
   593  00013A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
   594  00013C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
   595  00013E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
   596  000140  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
   597  000142  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
   598  000144  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
   599  000146                     
   600                           ; BSR set to: 0
   601  000146  8168               	bsf	___lldiv@quotient& (0+255),0,b
   602  000148                     i2l957:
   603                           
   604                           ; BSR set to: 0
   605  000148  90D8               	bcf	status,0,c
   606  00014A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
   607  00014C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
   608  00014E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
   609  000150  3364               	rrcf	___lldiv@divisor& (0+255),f,b
   610  000152                     
   611                           ; BSR set to: 0
   612  000152  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
   613  000154  EF87  F000         	goto	i2l949
   614  000158                     i2l95:
   615                           
   616                           ; BSR set to: 0
   617  000158  C068  F060         	movff	___lldiv@quotient,?___lldiv
   618  00015C  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
   619  000160  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
   620  000164  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
   621  000168                     
   622                           ; BSR set to: 0
   623  000168  0012               	return		;funcret
   624  00016A                     __end_of___lldiv:
   625                           	opt callstack 0
   626  0000                     
   627                           	psect	param0
   628  0000                     
   629                           	psect	temp
   630  000001                     btemp:
   631                           	opt callstack 0
   632  000001                     	ds	1
   633  0000                     int$flags	set	btemp
   634  0000                     wtemp8	set	btemp+1
   635  0000                     ttemp5	set	btemp+1
   636  0000                     ttemp6	set	btemp+4
   637  0000                     ttemp7	set	btemp+8
   638                           tosu	equ	0xFFF
   639                           tosh	equ	0xFFE
   640                           tosl	equ	0xFFD
   641                           stkptr	equ	0xFFC
   642                           pclatu	equ	0xFFB
   643                           pclath	equ	0xFFA
   644                           pcl	equ	0xFF9
   645                           tblptru	equ	0xFF8
   646                           tblptrh	equ	0xFF7
   647                           tblptrl	equ	0xFF6
   648                           tablat	equ	0xFF5
   649                           prodh	equ	0xFF4
   650                           prodl	equ	0xFF3
   651                           indf0	equ	0xFEF
   652                           postinc0	equ	0xFEE
   653                           postdec0	equ	0xFED
   654                           preinc0	equ	0xFEC
   655                           plusw0	equ	0xFEB
   656                           fsr0h	equ	0xFEA
   657                           fsr0l	equ	0xFE9
   658                           wreg	equ	0xFE8
   659                           indf1	equ	0xFE7
   660                           postinc1	equ	0xFE6
   661                           postdec1	equ	0xFE5
   662                           preinc1	equ	0xFE4
   663                           plusw1	equ	0xFE3
   664                           fsr1h	equ	0xFE2
   665                           fsr1l	equ	0xFE1
   666                           bsr	equ	0xFE0
   667                           indf2	equ	0xFDF
   668                           postinc2	equ	0xFDE
   669                           postdec2	equ	0xFDD
   670                           preinc2	equ	0xFDC
   671                           plusw2	equ	0xFDB
   672                           fsr2h	equ	0xFDA
   673                           fsr2l	equ	0xFD9
   674                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160     21      23
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    _high_isr->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                             18 BANK0      3     3      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _high_isr                                             5     5      0     361
                                             13 BANK0      5     5      0
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     314
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _high_isr (ROOT)
   ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     15      17       4       14.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      14        0.0%
DATA                 0      0      17      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Apr 24 07:48:23 2020

                     l43 01AC             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l911 0174  
                    l903 016A                      l921 018A                      l913 0176  
                    l905 016E                      l931 01A4                      l923 018C  
                    l915 0178                      l907 0170                      l933 01A6  
                    l925 018E                      l917 0186                      l909 0172  
                    l935 01A8                      l927 0190                      l919 0188  
                    l937 01AA                      l929 0192                      l961 01AE  
                    l963 01B2                      l965 01B4                      l967 01BE  
           __CFG_CPB$OFF 000000                      u125 01CC                      u177 01B6  
           __CFG_CPD$OFF 000000             __CFG_BORV$18 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     i2l62 002E                     i2l65 00BC  
                   i2l95 0158                     _TMR0 000FD6         ??_initialisation 0072  
                   _main 01AE                     btemp 0001                     start 00C0  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0060          __end_of___lldiv 016A                    i2l102 0168  
                  i2l941 00D6                    i2l951 0118                    i2l943 00EC  
                  i2l953 0136                    i2l945 00F4                    i2l955 0146  
                  i2l947 0100                    i2l939 00C4                    i2l971 0014  
                  i2l957 0148                    i2l949 010E                    i2l981 007E  
                  i2l973 0022                    i2l959 0152                    i2l983 00BA  
                  i2l975 003C                    i2l977 003E                    i2l969 000A  
                  i2l979 0074                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTD 000F83                    _TRISD 000F95            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    ttemp5 0002                    ttemp6 0005  
                  ttemp7 0009                    status 000FD8                    wtemp8 0002  
         __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000          __initialization 01E8  
           __end_of_main 01E8                   ??_main 0072            __activetblptr 000003  
                 _ADRESH 000FC4           __CFG_WDTEN$OFF 000000                   i2u9_40 00EC  
                 i2u9_41 00E8           __CFG_XINST$OFF 000000         __end_of_high_isr 00C0  
         __CFG_STVREN$ON 000000                ??___lldiv 0068               __accesstop 0060  
__end_of__initialization 01EE            ___rparam_used 000000               __pbssBANK0 0075  
                i2u10_40 010E                  i2u10_41 010A                  i2u11_40 0136  
                i2u11_41 0132                  i2u13_40 0022                  i2u13_41 001E  
                i2u14_40 003C                  i2u14_41 0038                  i2u15_45 004C  
                i2u16_40 0074                  i2u16_41 0070                ?_high_isr 0060  
                __Hparam 0000                  __Lparam 0000                  ___lldiv 00C4  
                __pcinit 01E8                _ANSELbits 000F7E                  _g_resAN 0075  
                __ramtop 0600                  __ptext0 01AE                  __ptext1 016A  
                __ptext3 00C4                _T0CONbits 000FD5               ??_high_isr 006D  
   end_of_initialization 01EE          ___lldiv@divisor 0064          ___lldiv@counter 006C  
__size_of_initialisation 0044                _PORTDbits 000F83                _TRISAbits 000F92  
     high_isr@diviseurAN 0070      start_initialization 01E8         __CFG_LPT1OSC$OFF 000000  
          __pcstackBANK0 0060        __size_of_high_isr 00B8        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008           _initialisation 016A                 ?___lldiv 0060  
               _PIE1bits 000F9D   __end_of_initialisation 01AE                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0                 __Hparam0 0000                 __Lparam0 0000  
        ?_initialisation 0060       __CFG_BOREN$SBORDIS 000000         __size_of___lldiv 00A6  
               _high_isr 0008            __size_of_main 003A                 int$flags 0001  
             _INTCONbits 000FF2                 intlevel2 0000         ___lldiv@dividend 0060  
       ___lldiv@quotient 0068        __CFG_FOSC$INTIO67 000000  
