

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 19 10:22:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F45K20 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTBbits	set	3969
    52  0000                     _ANSELbits	set	3966
    53  0000                     _TRISD	set	3989
    54  0000                     _ANSELH	set	3967
    55  0000                     _TRISBbits	set	3987
    56  0000                     _PORTDbits	set	3971
    57  0000                     _PORTD	set	3971
    58  0000                     _ADCON2bits	set	4032
    59  0000                     _ADCON1bits	set	4033
    60  0000                     _ADRESL	set	4035
    61  0000                     _ADCON0bits	set	4034
    62  0000                     _INTCONbits	set	4082
    63  0000                     _INTCON2bits	set	4081
    64                           
    65                           ; #config settings
    66  0000                     
    67                           	psect	cinit
    68  00024E                     __pcinit:
    69                           	opt stack 0
    70  00024E                     start_initialization:
    71                           	opt stack 0
    72  00024E                     __initialization:
    73                           	opt stack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (2 bytes)
    76  00024E  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    77  000250  6A2A               	clrf	__pbssCOMRAM& (0+255),c
    78  000252                     end_of_initialization:
    79                           	opt stack 0
    80  000252                     __end_of__initialization:
    81                           	opt stack 0
    82  000252  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  000254  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  000256  0E00               	movlw	low (__Lmediumconst shr (0+16))
    85  000258  6EF8               	movwf	tblptru,c
    86  00025A  0100               	movlb	0
    87  00025C  EFBC  F000         	goto	_main	;jump to C main() function
    88                           tblptru	equ	0xFF8
    89                           
    90                           	psect	bssCOMRAM
    91  00002A                     __pbssCOMRAM:
    92                           	opt stack 0
    93  00002A                     _g_etat:
    94                           	opt stack 0
    95  00002A                     	ds	2
    96                           tblptru	equ	0xFF8
    97                           
    98                           	psect	cstackCOMRAM
    99  000001                     __pcstackCOMRAM:
   100                           	opt stack 0
   101  000001                     ??_high_isr:
   102  000001                     
   103                           ; 1 bytes @ 0x0
   104  000001                     	ds	18
   105  000013                     ??_low_isr:
   106                           
   107                           ; 1 bytes @ 0x12
   108  000013                     	ds	21
   109  000028                     ??_main:
   110                           
   111                           ; 1 bytes @ 0x27
   112  000028                     	ds	2
   113                           tblptru	equ	0xFF8
   114                           
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 25 in file "main.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;		None
   125 ;; Return value:  Size  Location     Type
   126 ;;                  1    wreg      void 
   127 ;; Registers used:
   128 ;;		wreg, status,2, status,0, cstack
   129 ;; Tracked objects:
   130 ;;		On entry : 0/0
   131 ;;		On exit  : 0/0
   132 ;;		Unchanged: 0/0
   133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   134 ;;      Params:         0       0       0       0       0       0       0
   135 ;;      Locals:         0       0       0       0       0       0       0
   136 ;;      Temps:          2       0       0       0       0       0       0
   137 ;;      Totals:         2       0       0       0       0       0       0
   138 ;;Total ram usage:        2 bytes
   139 ;; Hardware stack levels required when called:    3
   140 ;; This function calls:
   141 ;;		_initialisation
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  000178                     __ptext0:
   149                           	opt stack 0
   150  000178                     _main:
   151                           	opt stack 28
   152                           
   153                           ;main.c: 29: initialisation();
   154                           
   155                           ;incstack = 0
   156  000178  EC11  F001         	call	_initialisation	;wreg free
   157                           
   158                           ;main.c: 31: PORTD = 0;
   159  00017C  0E00               	movlw	0
   160  00017E  6E83               	movwf	3971,c	;volatile
   161                           
   162                           ;main.c: 35: {
   163                           ;main.c: 37: switch(g_etat)
   164                           
   165                           ;main.c: 34: while(1)
   166  000180  D02B               	goto	l36
   167  000182                     
   168                           ;main.c: 40: PORTD++;
   169  000182  2A83               	incf	3971,f,c	;volatile
   170                           
   171                           ;main.c: 41: break;
   172  000184  D03E               	goto	l38
   173  000186                     
   174                           ;main.c: 45: if (PORTD == 0 )
   175  000186  5083               	movf	3971,w,c	;volatile
   176  000188  A4D8               	btfss	status,2,c
   177  00018A  D002               	goto	l40
   178                           
   179                           ;main.c: 46: PORTD = 3;
   180  00018C  0E03               	movlw	3
   181  00018E  6E83               	movwf	3971,c	;volatile
   182  000190                     l40:
   183                           
   184                           ;main.c: 48: PORTD = PORTD << 1;
   185  000190  5083               	movf	3971,w,c	;volatile
   186  000192  2483               	addwf	3971,w,c	;volatile
   187  000194  6E83               	movwf	3971,c	;volatile
   188                           
   189                           ;main.c: 50: if (PORTD == 0b10000000)
   190  000196  0E80               	movlw	128
   191  000198  1883               	xorwf	3971,w,c	;volatile
   192  00019A  A4D8               	btfss	status,2,c
   193  00019C  D002               	goto	l41
   194                           
   195                           ;main.c: 51: PORTD = 0b10000001;
   196  00019E  0E81               	movlw	129
   197  0001A0  6E83               	movwf	3971,c	;volatile
   198  0001A2                     l41:
   199                           
   200                           ;main.c: 53: if (PORTD == 0b00000010)
   201  0001A2  0E02               	movlw	2
   202  0001A4  1883               	xorwf	3971,w,c	;volatile
   203  0001A6  A4D8               	btfss	status,2,c
   204  0001A8  D02C               	goto	l38
   205                           
   206                           ;main.c: 54: PORTD = 0b00000011;
   207  0001AA  0E03               	movlw	3
   208  0001AC  6E83               	movwf	3971,c	;volatile
   209                           
   210                           ;main.c: 55: break;
   211  0001AE  D029               	goto	l38
   212  0001B0                     
   213                           ;main.c: 59: if (PORTD == 0 )
   214  0001B0  5083               	movf	3971,w,c	;volatile
   215  0001B2  A4D8               	btfss	status,2,c
   216  0001B4  D002               	goto	l44
   217                           
   218                           ;main.c: 60: PORTD = 0x7F;
   219  0001B6  0E7F               	movlw	127
   220  0001B8  6E83               	movwf	3971,c	;volatile
   221  0001BA                     l44:
   222                           
   223                           ;main.c: 62: PORTD = PORTD >> 1;
   224  0001BA  90D8               	bcf	status,0,c
   225  0001BC  3083               	rrcf	3971,w,c	;volatile
   226  0001BE  6E83               	movwf	3971,c	;volatile
   227                           
   228                           ;main.c: 63: if (PORTD != 0x7F)
   229  0001C0  0E7F               	movlw	127
   230  0001C2  1883               	xorwf	3971,w,c	;volatile
   231  0001C4  B4D8               	btfsc	status,2,c
   232  0001C6  D01D               	goto	l38
   233                           
   234                           ;main.c: 64: PORTDbits.RD7 = 1;
   235  0001C8  8E83               	bsf	3971,7,c	;volatile
   236                           
   237                           ;main.c: 65: break;
   238  0001CA  D01B               	goto	l38
   239  0001CC                     l46:
   240                           
   241                           ;main.c: 68: ADCON0bits.GO_DONE = 1;
   242  0001CC  82C2               	bsf	4034,1,c	;volatile
   243  0001CE  B2C2               	btfsc	4034,1,c	;volatile
   244  0001D0  D7FE               	goto	l48
   245                           
   246                           ;main.c: 70: PORTD = ADRESL;
   247  0001D2  CFC3 FF83          	movff	4035,3971	;volatile
   248                           
   249                           ;main.c: 76: }
   250                           
   251                           ;main.c: 75: break;
   252                           
   253                           ;main.c: 74: default:
   254                           
   255                           ;main.c: 72: break;
   256  0001D6  D015               	goto	l38
   257  0001D8                     l36:
   258  0001D8                     l749:
   259  0001D8  C02A  F028         	movff	_g_etat,??_main
   260  0001DC  C02B  F029         	movff	_g_etat+1,??_main+1
   261                           
   262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   263                           ; Switch size 1, requested type "space"
   264                           ; Number of cases is 1, Range of values is 0 to 0
   265                           ; switch strategies available:
   266                           ; Name         Instructions Cycles
   267                           ; simple_byte            4     3 (average)
   268                           ;	Chosen strategy is simple_byte
   269  0001E0  5029               	movf	??_main+1,w,c
   270  0001E2  0A00               	xorlw	0	; case 0
   271  0001E4  A4D8               	btfss	status,2,c
   272  0001E6  D00D               	goto	l38
   273                           
   274                           ; Switch size 1, requested type "space"
   275                           ; Number of cases is 4, Range of values is 0 to 3
   276                           ; switch strategies available:
   277                           ; Name         Instructions Cycles
   278                           ; simple_byte           13     7 (average)
   279                           ;	Chosen strategy is simple_byte
   280  0001E8  5028               	movf	??_main,w,c
   281  0001EA  0A00               	xorlw	0	; case 0
   282  0001EC  B4D8               	btfsc	status,2,c
   283  0001EE  D7C9               	goto	l37
   284  0001F0  0A01               	xorlw	1	; case 1
   285  0001F2  B4D8               	btfsc	status,2,c
   286  0001F4  D7C8               	goto	l39
   287  0001F6  0A03               	xorlw	3	; case 2
   288  0001F8  B4D8               	btfsc	status,2,c
   289  0001FA  D7DA               	goto	l43
   290  0001FC  0A01               	xorlw	1	; case 3
   291  0001FE  B4D8               	btfsc	status,2,c
   292  000200  D7E5               	goto	l46
   293  000202                     l38:
   294                           
   295                           ;main.c: 79: if (g_etat < enumEtat3)
   296  000202  BE2B               	btfsc	_g_etat+1,7,c
   297  000204  D006               	goto	u70
   298  000206  502B               	movf	_g_etat+1,w,c
   299  000208  E1E7               	bnz	l749
   300  00020A  0E03               	movlw	3
   301  00020C  5C2A               	subwf	_g_etat,w,c
   302  00020E  B0D8               	btfsc	status,0,c
   303  000210  D7E3               	goto	l36
   304  000212                     u70:
   305                           
   306                           ;main.c: 80: _delay((unsigned long)((250)*(1000000/4000.0)));
   307  000212  0E52               	movlw	82
   308  000214  6E28               	movwf	??_main& (0+255),c
   309  000216  0E2A               	movlw	42
   310  000218                     u107:
   311  000218  2EE8               	decfsz	wreg,f,c
   312  00021A  D7FE               	bra	u107
   313  00021C  2E28               	decfsz	??_main& (0+255),f,c
   314  00021E  D7FC               	bra	u107
   315  000220  D7DB               	goto	l36
   316  000222                     __end_of_main:
   317                           	opt stack 0
   318                           tblptru	equ	0xFF8
   319                           wreg	equ	0xFE8
   320                           status	equ	0xFD8
   321                           
   322 ;; *************** function _initialisation *****************
   323 ;; Defined at:
   324 ;;		line 89 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   338 ;;      Params:         0       0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0
   340 ;;      Temps:          0       0       0       0       0       0       0
   341 ;;      Totals:         0       0       0       0       0       0       0
   342 ;;Total ram usage:        0 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; Hardware stack levels required when called:    2
   345 ;; This function calls:
   346 ;;		Nothing
   347 ;; This function is called by:
   348 ;;		_main
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text1
   353  000222                     __ptext1:
   354                           	opt stack 0
   355  000222                     _initialisation:
   356                           	opt stack 28
   357                           
   358                           ;main.c: 92: INTCON2bits.INTEDG0 = 0;
   359                           
   360                           ;incstack = 0
   361  000222  9CF1               	bcf	intcon2,6,c	;volatile
   362                           
   363                           ;main.c: 93: INTCONbits.INT0IF = 0;
   364  000224  92F2               	bcf	intcon,1,c	;volatile
   365                           
   366                           ;main.c: 94: INTCONbits.INT0E = 1;
   367  000226  88F2               	bsf	intcon,4,c	;volatile
   368                           
   369                           ;main.c: 96: INTCONbits.GIE = 1;
   370  000228  8EF2               	bsf	intcon,7,c	;volatile
   371                           
   372                           ;main.c: 98: TRISBbits.TRISB0 = 1;
   373  00022A  8093               	bsf	3987,0,c	;volatile
   374                           
   375                           ;main.c: 99: ANSELH = 0;
   376  00022C  0E00               	movlw	0
   377  00022E  6E7F               	movwf	3967,c	;volatile
   378                           
   379                           ;main.c: 101: TRISD = 0;
   380  000230  0E00               	movlw	0
   381  000232  6E95               	movwf	3989,c	;volatile
   382                           
   383                           ;main.c: 104: ANSELbits.ANS0 = 1;
   384  000234  807E               	bsf	3966,0,c	;volatile
   385                           
   386                           ;main.c: 105: ADCON0bits.ADON = 1;
   387  000236  80C2               	bsf	4034,0,c	;volatile
   388                           
   389                           ;main.c: 106: ADCON1bits.VCFG1 = 0;
   390  000238  9AC1               	bcf	4033,5,c	;volatile
   391                           
   392                           ;main.c: 107: ADCON1bits.VCFG0 = 0;
   393  00023A  98C1               	bcf	4033,4,c	;volatile
   394                           
   395                           ;main.c: 108: ADCON2bits.ADFM = 1;
   396  00023C  8EC0               	bsf	4032,7,c	;volatile
   397                           
   398                           ;main.c: 109: ADCON2bits.ACQT = 7;
   399  00023E  86C0               	bsf	4032,3,c	;volatile
   400  000240  88C0               	bsf	4032,4,c	;volatile
   401  000242  8AC0               	bsf	4032,5,c	;volatile
   402                           
   403                           ;main.c: 110: ADCON2bits.ADCS = 6;
   404  000244  50C0               	movf	4032,w,c	;volatile
   405  000246  0BF8               	andlw	-8
   406  000248  0906               	iorlw	6
   407  00024A  6EC0               	movwf	4032,c	;volatile
   408  00024C  0012               	return		;funcret
   409  00024E                     __end_of_initialisation:
   410                           	opt stack 0
   411                           tblptru	equ	0xFF8
   412                           intcon	equ	0xFF2
   413                           intcon2	equ	0xFF1
   414                           wreg	equ	0xFE8
   415                           status	equ	0xFD8
   416                           
   417 ;; *************** function _low_isr *****************
   418 ;; Defined at:
   419 ;;		line 37 in file "interrupts.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		None
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   433 ;;      Params:         0       0       0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0       0       0
   435 ;;      Temps:         21       0       0       0       0       0       0
   436 ;;      Totals:        21       0       0       0       0       0       0
   437 ;;Total ram usage:       21 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; Hardware stack levels required when called:    1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		Interrupt level 1
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	intcodelo
   448  000018                     __pintcodelo:
   449                           	opt stack 0
   450  000018                     _low_isr:
   451                           	opt stack 28
   452                           
   453                           ;incstack = 0
   454  000018  802C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   455  00001A  CFD8 F013          	movff	status,??_low_isr
   456  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
   457  000022  CFE0 F015          	movff	bsr,??_low_isr+2
   458  000026  CFFA F016          	movff	pclath,??_low_isr+3
   459  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
   460  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
   461  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
   462  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
   463  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
   464  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
   465  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
   466  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
   467  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
   468  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
   469  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
   470  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
   471  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
   472  00005E  C02C  F024         	movff	btemp,??_low_isr+17
   473  000062  C02D  F025         	movff	btemp+1,??_low_isr+18
   474  000066  C02E  F026         	movff	btemp+2,??_low_isr+19
   475  00006A  C02F  F027         	movff	btemp+3,??_low_isr+20
   476  00006E  C027  F02F         	movff	??_low_isr+20,btemp+3
   477  000072  C026  F02E         	movff	??_low_isr+19,btemp+2
   478  000076  C025  F02D         	movff	??_low_isr+18,btemp+1
   479  00007A  C024  F02C         	movff	??_low_isr+17,btemp
   480  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
   481  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
   482  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
   483  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
   484  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
   485  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
   486  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
   487  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
   488  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
   489  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
   490  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
   491  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
   492  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
   493  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
   494  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
   495  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
   496  0000BE  C013  FFD8         	movff	??_low_isr,status
   497  0000C2  902C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   498  0000C4  0010               	retfie	
   499  0000C6                     __end_of_low_isr:
   500                           	opt stack 0
   501                           pclatu	equ	0xFFB
   502                           pclath	equ	0xFFA
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           prodh	equ	0xFF4
   508                           prodl	equ	0xFF3
   509                           intcon	equ	0xFF2
   510                           intcon2	equ	0xFF1
   511                           fsr0h	equ	0xFEA
   512                           fsr0l	equ	0xFE9
   513                           wreg	equ	0xFE8
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           bsr	equ	0xFE0
   517                           fsr2h	equ	0xFDA
   518                           fsr2l	equ	0xFD9
   519                           status	equ	0xFD8
   520                           
   521 ;; *************** function _high_isr *****************
   522 ;; Defined at:
   523 ;;		line 21 in file "interrupts.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   537 ;;      Params:         0       0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0
   539 ;;      Temps:         18       0       0       0       0       0       0
   540 ;;      Totals:        18       0       0       0       0       0       0
   541 ;;Total ram usage:       18 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		Interrupt level 2
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	intcode
   551  000008                     __pintcode:
   552                           	opt stack 0
   553  000008                     _high_isr:
   554                           	opt stack 28
   555                           
   556                           ;incstack = 0
   557  000008  822C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   558  00000A  EF65  F000         	goto	int_func
   559                           pclatu	equ	0xFFB
   560                           pclath	equ	0xFFA
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           prodh	equ	0xFF4
   566                           prodl	equ	0xFF3
   567                           intcon	equ	0xFF2
   568                           intcon2	equ	0xFF1
   569                           fsr0h	equ	0xFEA
   570                           fsr0l	equ	0xFE9
   571                           wreg	equ	0xFE8
   572                           fsr1h	equ	0xFE2
   573                           fsr1l	equ	0xFE1
   574                           bsr	equ	0xFE0
   575                           fsr2h	equ	0xFDA
   576                           fsr2l	equ	0xFD9
   577                           status	equ	0xFD8
   578                           
   579                           	psect	intcode_body
   580  0000CA                     __pintcode_body:
   581                           	opt stack 28
   582  0000CA                     int_func:
   583                           	opt stack 28
   584  0000CA  CFFA F001          	movff	pclath,??_high_isr
   585  0000CE  CFFB F002          	movff	pclatu,??_high_isr+1
   586  0000D2  CFE9 F003          	movff	fsr0l,??_high_isr+2
   587  0000D6  CFEA F004          	movff	fsr0h,??_high_isr+3
   588  0000DA  CFE1 F005          	movff	fsr1l,??_high_isr+4
   589  0000DE  CFE2 F006          	movff	fsr1h,??_high_isr+5
   590  0000E2  CFD9 F007          	movff	fsr2l,??_high_isr+6
   591  0000E6  CFDA F008          	movff	fsr2h,??_high_isr+7
   592  0000EA  CFF3 F009          	movff	prodl,??_high_isr+8
   593  0000EE  CFF4 F00A          	movff	prodh,??_high_isr+9
   594  0000F2  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   595  0000F6  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   596  0000FA  CFF8 F00D          	movff	tblptru,??_high_isr+12
   597  0000FE  CFF5 F00E          	movff	tablat,??_high_isr+13
   598  000102  C02C  F00F         	movff	btemp,??_high_isr+14
   599  000106  C02D  F010         	movff	btemp+1,??_high_isr+15
   600  00010A  C02E  F011         	movff	btemp+2,??_high_isr+16
   601  00010E  C02F  F012         	movff	btemp+3,??_high_isr+17
   602                           
   603                           ;interrupts.c: 25: if(INTCONbits.INT0IF)
   604  000112  A2F2               	btfss	intcon,1,c	;volatile
   605  000114  D00B               	goto	i2l70
   606                           
   607                           ;interrupts.c: 26: {
   608                           ;interrupts.c: 27: g_etat++;
   609  000116  4A2A               	infsnz	_g_etat,f,c
   610  000118  2A2B               	incf	_g_etat+1,f,c
   611                           
   612                           ;interrupts.c: 28: g_etat = g_etat % enumEtatMax;
   613  00011A  0E03               	movlw	3
   614  00011C  142A               	andwf	_g_etat,w,c
   615  00011E  6E2A               	movwf	_g_etat,c
   616  000120  6A2B               	clrf	_g_etat+1,c
   617                           
   618                           ;interrupts.c: 29: PORTD = 0;
   619  000122  0E00               	movlw	0
   620  000124  6E83               	movwf	3971,c	;volatile
   621  000126  A081               	btfss	3969,0,c	;volatile
   622  000128  D7FE               	goto	i2l72
   623                           
   624                           ;interrupts.c: 31: INTCONbits.INT0IF=0;
   625  00012A  92F2               	bcf	intcon,1,c	;volatile
   626  00012C                     i2l70:
   627  00012C  C012  F02F         	movff	??_high_isr+17,btemp+3
   628  000130  C011  F02E         	movff	??_high_isr+16,btemp+2
   629  000134  C010  F02D         	movff	??_high_isr+15,btemp+1
   630  000138  C00F  F02C         	movff	??_high_isr+14,btemp
   631  00013C  C00E  FFF5         	movff	??_high_isr+13,tablat
   632  000140  C00D  FFF8         	movff	??_high_isr+12,tblptru
   633  000144  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   634  000148  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   635  00014C  C00A  FFF4         	movff	??_high_isr+9,prodh
   636  000150  C009  FFF3         	movff	??_high_isr+8,prodl
   637  000154  C008  FFDA         	movff	??_high_isr+7,fsr2h
   638  000158  C007  FFD9         	movff	??_high_isr+6,fsr2l
   639  00015C  C006  FFE2         	movff	??_high_isr+5,fsr1h
   640  000160  C005  FFE1         	movff	??_high_isr+4,fsr1l
   641  000164  C004  FFEA         	movff	??_high_isr+3,fsr0h
   642  000168  C003  FFE9         	movff	??_high_isr+2,fsr0l
   643  00016C  C002  FFFB         	movff	??_high_isr+1,pclatu
   644  000170  C001  FFFA         	movff	??_high_isr,pclath
   645  000174  922C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   646  000176  0011               	retfie		f
   647  000178                     __end_of_high_isr:
   648                           	opt stack 0
   649  0000                     pclatu	equ	0xFFB
   650                           pclath	equ	0xFFA
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           prodh	equ	0xFF4
   656                           prodl	equ	0xFF3
   657                           intcon	equ	0xFF2
   658                           intcon2	equ	0xFF1
   659                           fsr0h	equ	0xFEA
   660                           fsr0l	equ	0xFE9
   661                           wreg	equ	0xFE8
   662                           fsr1h	equ	0xFE2
   663                           fsr1l	equ	0xFE1
   664                           bsr	equ	0xFE0
   665                           fsr2h	equ	0xFDA
   666                           fsr2l	equ	0xFD9
   667                           status	equ	0xFD8
   668                           pclatu	equ	0xFFB
   669                           pclath	equ	0xFFA
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           prodh	equ	0xFF4
   675                           prodl	equ	0xFF3
   676                           intcon	equ	0xFF2
   677                           intcon2	equ	0xFF1
   678                           fsr0h	equ	0xFEA
   679                           fsr0l	equ	0xFE9
   680                           wreg	equ	0xFE8
   681                           fsr1h	equ	0xFE2
   682                           fsr1l	equ	0xFE1
   683                           bsr	equ	0xFE0
   684                           fsr2h	equ	0xFDA
   685                           fsr2l	equ	0xFD9
   686                           status	equ	0xFD8
   687                           
   688                           	psect	rparam
   689  0000                     pclatu	equ	0xFFB
   690                           pclath	equ	0xFFA
   691                           tblptru	equ	0xFF8
   692                           tblptrh	equ	0xFF7
   693                           tblptrl	equ	0xFF6
   694                           tablat	equ	0xFF5
   695                           prodh	equ	0xFF4
   696                           prodl	equ	0xFF3
   697                           intcon	equ	0xFF2
   698                           intcon2	equ	0xFF1
   699                           fsr0h	equ	0xFEA
   700                           fsr0l	equ	0xFE9
   701                           wreg	equ	0xFE8
   702                           fsr1h	equ	0xFE2
   703                           fsr1l	equ	0xFE1
   704                           bsr	equ	0xFE0
   705                           fsr2h	equ	0xFDA
   706                           fsr2l	equ	0xFD9
   707                           status	equ	0xFD8
   708                           
   709                           	psect	temp
   710  00002C                     btemp:
   711                           	opt stack 0
   712  00002C                     	ds	1
   713  0000                     int$flags	set	btemp
   714  0000                     wtemp6	set	btemp+1
   715                           pclatu	equ	0xFFB
   716                           pclath	equ	0xFFA
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           tblptrl	equ	0xFF6
   720                           tablat	equ	0xFF5
   721                           prodh	equ	0xFF4
   722                           prodl	equ	0xFF3
   723                           intcon	equ	0xFF2
   724                           intcon2	equ	0xFF1
   725                           fsr0h	equ	0xFEA
   726                           fsr0l	equ	0xFE9
   727                           wreg	equ	0xFE8
   728                           fsr1h	equ	0xFE2
   729                           fsr1l	equ	0xFE1
   730                           bsr	equ	0xFE0
   731                           fsr2h	equ	0xFDA
   732                           fsr2l	equ	0xFD9
   733                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      43
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             39 COMRAM     2     2      0
                     _initialisation
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialisation

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      2B       1       45.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2B      14        0.0%
DATA                 0      0      2B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 19 10:22:56 2018

                     l40 0190                       l41 01A2                       l43 01B0  
                     l36 01D8                       l44 01BA                       l37 0182  
                     l38 0202                       l46 01CC                       l39 0186  
                     l48 01CE                       u70 0212                       bsr 000FE0  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l749 01D8             __CFG_CPB$OFF 000000  
                    u107 0218             __CFG_CPD$OFF 000000             __CFG_BORV$18 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000                     i2l70 012C  
                   i2l72 0126         ??_initialisation 0028                     _main 0178  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 002C                     prodh 000FF4                     prodl 000FF3  
                   start 00C6            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
        __end_of_low_isr 00C6                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8                    wtemp6 002D           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000          __initialization 024E             __end_of_main 0222  
                 ??_main 0028            __activetblptr 000002                   _ADRESL 000FC3  
                 _ANSELH 000F7F           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
       __end_of_high_isr 0178           __CFG_STVREN$ON 000000                   _g_etat 002A  
              ??_low_isr 0013                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0252  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_high_isr 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 024E  
              _ANSELbits 000F7E                  __ramtop 0600                  __ptext0 0178  
                __ptext1 0222                  _low_isr 0018               ??_high_isr 0001  
         __pintcode_body 00CA     end_of_initialization 0252            __Lmediumconst 0000  
                int_func 00CA  __size_of_initialisation 002C                _PORTBbits 000F81  
              _PORTDbits 000F83                _TRISBbits 000F93      start_initialization 024E  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 002A        __size_of_high_isr 0170  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008           _initialisation 0222  
            __pintcodelo 0018                 ?_low_isr 0001   __end_of_initialisation 024E  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2               _ADCON1bits 000FC1  
             _ADCON2bits 000FC0              _INTCON2bits 000FF1                 __Hrparam 0000  
        ?_initialisation 0001                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of_low_isr 00AE                 _high_isr 0008            __size_of_main 00AA  
               int$flags 002C               _INTCONbits 000FF2                 intlevel1 0000  
               intlevel2 0000        __CFG_FOSC$INTIO67 000000  
